{"ast":null,"code":"import axios from 'axios';\nimport config from '../config/config';\nimport { userSignOut } from \"../actions/Auth\";\nimport configureStore from \"../store\";\nimport { getError } from \"../Error/Error\";\nexport const gradeService = {\n  get,\n  post,\n  put\n};\nconst store = configureStore();\n\nfunction get(apiEndpoint) {\n  return axios.get(config.baseUrl + apiEndpoint).then(response => {\n    return response;\n  }).catch(err => {\n    if (err.response.status === 401) {\n      store.dispatch(userSignOut());\n    } // else {\n    //   let errorMessage = getError(err.response.status);\n    //   alert(errorMessage);\n    // }\n\n  });\n}\n\nfunction post(apiEndpoint, payload) {\n  return axios.post(config.baseUrl + apiEndpoint, payload).then(response => {\n    return response;\n  }).catch(err => {\n    if (err.response.status === 401) {\n      store.dispatch(userSignOut());\n    } // else {\n    //   let errorMessage = getError(err.response.status);\n    //   alert(errorMessage);\n    // }\n\n  });\n}\n\nfunction put(apiEndpoint, payload) {\n  return axios.put(config.baseUrl + apiEndpoint, payload).then(response => {\n    return response;\n  }).catch(err => {\n    if (err.response.status === 401) {\n      store.dispatch(userSignOut());\n    } // else {\n    //   let errorMessage = getError(err.response.status);\n    //   alert(errorMessage);\n    // }\n\n  });\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/_services/grade.service.js"],"names":["axios","config","userSignOut","configureStore","getError","gradeService","get","post","put","store","apiEndpoint","baseUrl","then","response","catch","err","status","dispatch","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,cAAP,MAA2B,UAA3B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,GADwB;AAExBC,EAAAA,IAFwB;AAGxBC,EAAAA;AAHwB,CAArB;AAMP,MAAMC,KAAK,GAAGN,cAAc,EAA5B;;AAEA,SAASG,GAAT,CAAaI,WAAb,EAAyB;AACrB,SAAOV,KAAK,CAACM,GAAN,CAAUL,MAAM,CAACU,OAAP,GAAeD,WAAzB,EAAsCE,IAAtC,CAA4CC,QAAD,IAAY;AAC3D,WAAOA,QAAP;AACF,GAFM,EAEJC,KAFI,CAEEC,GAAG,IAAI;AACZ,QAAIA,GAAG,CAACF,QAAJ,CAAaG,MAAb,KAAwB,GAA5B,EAAiC;AAC/BP,MAAAA,KAAK,CAACQ,QAAN,CAAef,WAAW,EAA1B;AACD,KAHW,CAIZ;AACA;AACA;AACA;;AACD,GAVI,CAAP;AAWH;;AAGD,SAASK,IAAT,CAAcG,WAAd,EAA2BQ,OAA3B,EAAmC;AAC/B,SAAOlB,KAAK,CAACO,IAAN,CAAWN,MAAM,CAACU,OAAP,GAAeD,WAA1B,EAAuCQ,OAAvC,EAAgDN,IAAhD,CAAsDC,QAAD,IAAY;AACpE,WAAOA,QAAP;AACH,GAFM,EAEJC,KAFI,CAEEC,GAAG,IAAI;AACZ,QAAIA,GAAG,CAACF,QAAJ,CAAaG,MAAb,KAAwB,GAA5B,EAAiC;AAC/BP,MAAAA,KAAK,CAACQ,QAAN,CAAef,WAAW,EAA1B;AACD,KAHW,CAIZ;AACA;AACA;AACA;;AACD,GAVI,CAAP;AAWH;;AAED,SAASM,GAAT,CAAaE,WAAb,EAA0BQ,OAA1B,EAAkC;AAC9B,SAAOlB,KAAK,CAACQ,GAAN,CAAUP,MAAM,CAACU,OAAP,GAAeD,WAAzB,EAAsCQ,OAAtC,EAA+CN,IAA/C,CAAqDC,QAAD,IAAY;AACnE,WAAOA,QAAP;AACH,GAFM,EAEJC,KAFI,CAEEC,GAAG,IAAI;AACZ,QAAIA,GAAG,CAACF,QAAJ,CAAaG,MAAb,KAAwB,GAA5B,EAAiC;AAC/BP,MAAAA,KAAK,CAACQ,QAAN,CAAef,WAAW,EAA1B;AACD,KAHW,CAIZ;AACA;AACA;AACA;;AACD,GAVI,CAAP;AAWH","sourcesContent":["import axios from 'axios';\nimport config from '../config/config';\nimport { userSignOut } from \"../actions/Auth\";\nimport configureStore from \"../store\";\nimport { getError } from \"../Error/Error\";\n\nexport const gradeService = {\n    get,\n    post,\n    put\n};\n\nconst store = configureStore();\n\nfunction get(apiEndpoint){\n    return axios.get(config.baseUrl+apiEndpoint).then((response)=>{\n       return response;\n    }).catch(err => {\n        if (err.response.status === 401) {\n          store.dispatch(userSignOut());\n        } \n        // else {\n        //   let errorMessage = getError(err.response.status);\n        //   alert(errorMessage);\n        // }\n      });\n}\n\n\nfunction post(apiEndpoint, payload){\n    return axios.post(config.baseUrl+apiEndpoint, payload).then((response)=>{\n        return response;\n    }).catch(err => {\n        if (err.response.status === 401) {\n          store.dispatch(userSignOut());\n        } \n        // else {\n        //   let errorMessage = getError(err.response.status);\n        //   alert(errorMessage);\n        // }\n      });\n}\n\nfunction put(apiEndpoint, payload){\n    return axios.put(config.baseUrl+apiEndpoint, payload).then((response)=>{\n        return response;\n    }).catch(err => {\n        if (err.response.status === 401) {\n          store.dispatch(userSignOut());\n        } \n        // else {\n        //   let errorMessage = getError(err.response.status);\n        //   alert(errorMessage);\n        // }\n      });\n}\n\n"]},"metadata":{},"sourceType":"module"}