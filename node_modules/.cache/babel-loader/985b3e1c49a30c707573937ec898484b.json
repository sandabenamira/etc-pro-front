{"ast":null,"code":"import baseUrl from \"../config/config\";\nimport axios from \"axios\";\nimport { FETCH_ALL_ROLE, ADD_USER, GET_ALL_USERS_FOR_ADMIN, GET_ALL_USERS_FOR_SUPER_ADMIN, EDIT_USER, DELETE_USER, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE, HIDE_WARNING_MESSAGE, SHOW_WARNING_MESSAGE, SHOW_LOADER, HIDE_LOADER } from \"../constants/ActionTypes\";\nimport _ from \"lodash\";\nimport { getError } from \"../Error/Error\";\nimport { classService } from \"../_services/class.service\";\nimport { roleIdStudent } from \"../config/config\";\nexport function importUsersFromFile(ListUsers) {\n  return function (dispatch) {\n    ListUsers.map(data => {\n      let dataUser = {\n        name: data.name,\n        surname: data.surname,\n        gender: data.gender,\n        dateOfBirth: data.dateOfBirth,\n        address: data.address,\n        phone: data.phone,\n        cin: data.cin,\n        zipCode: data.zipCode,\n        country: data.userCountry,\n        photo: null,\n        name_ar: data.name_ar,\n        surname_ar: data.surname_ar,\n        creation_date: new Date(),\n        nationality: data.nationality,\n        placeOfBirth: data.placeOfBirth,\n        email: data.email,\n        roleId: data.roleId,\n        establishmentId: data.establishmentId,\n        assignClassSubject: null,\n        classId: data.classID,\n        schoolYearId: data.schoolYearId,\n        paperFiles: null,\n        creation_date: new Date(),\n        functionName: null,\n        password: 123456,\n        login: \"john walls\",\n        levelId: null,\n        sectionId: null,\n        usefulInformation: data.usefulInformation,\n        parentId: null,\n        studentId: null,\n        groupId: data.groupeID // userIdentifier:data.userIdentifier\n\n      };\n      console.log(dataUser, \"dataUser apres action\");\n      let apiEndpoint = `/users/createByRole?access_token=${localStorage.token}`;\n      classService.post(apiEndpoint, dataUser).then(response => {\n        console.log(\"EEEEEEEEEEEEEEEEE \", response);\n      }).catch(err => {\n        console.log(\"EEEEEEEEEEEEEEEEE \", err.message);\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 1000);\n      });\n    });\n  };\n}\nexport function getAllRole() {\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/roles?access_token=${localStorage.token}`).then(res => {\n      dispatch({\n        type: FETCH_ALL_ROLE,\n        payload: res.data\n      });\n    });\n  };\n}\nexport function getAllUsersForAdmin(establishmentId, schoolYearId) {\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/users/${establishmentId}/${schoolYearId}?access_token=${localStorage.token}`).then(res => {\n      dispatch({\n        type: GET_ALL_USERS_FOR_ADMIN,\n        payload: res.data.users\n      });\n    });\n  };\n}\nexport function getAllUsersForSuperAdministrator() {\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/users?access_token=${localStorage.token}`).then(res => {\n      dispatch({\n        type: GET_ALL_USERS_FOR_SUPER_ADMIN,\n        payload: res.data\n      });\n    });\n  };\n}\nexport const addUsers = data => {\n  console.log(\"data avant\", data);\n  return dispatch => {\n    let dataUser = {\n      name: data.name,\n      surname: data.surname,\n      gender: data.gender,\n      dateOfBirth: data.dateOfBirth,\n      address: data.address,\n      phone: data.phone,\n      cin: data.cin,\n      zipCode: data.zipCode,\n      country: data.userCountry,\n      photo: data.photo,\n      name_ar: data.name_ar,\n      surname_ar: data.surname_ar,\n      creation_date: new Date(),\n      nationality: data.nationality,\n      placeOfBirth: data.placeOfBirth,\n      email: data.email,\n      roleId: data.roleId,\n      establishmentId: data.establishmentId,\n      assignClassSubject: data.assignClassSubject,\n      classId: data.studentClass,\n      schoolYearId: data.schoolyearId,\n      paperFiles: null,\n      creation_date: Date(),\n      functionName: data.functionName,\n      password: data.password,\n      login: data.login,\n      levelId: data.levelId,\n      sectionId: data.sectionId,\n      usefulInformation: data.usefulInformation,\n      parentId: data.parentId,\n      studentId: data.studentId,\n      groupId: data.groupId // userIdentifier:data.userIdentifier\n\n    };\n    console.log(dataUser, \"dataUser apres action\");\n    let apiEndpoint = `/users/createByRole?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, dataUser).then(response => {\n      console.log(\"fffffffffffffffffffffffffffff\", response);\n\n      if (!response) {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création d'utilisateur est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n        let userId = response.data.existe.userData.id;\n\n        if (data.userPhoto.name != undefined) {\n          let photoUser = data.userPhoto;\n          var object = {};\n          object.file = photoUser;\n          object.fileName = \"user\" + userId;\n          const myNewFile = new File([object.file], photoUser.name, {\n            type: object.file.type\n          });\n          let formadata = new FormData();\n          formadata.append(\"file\", myNewFile);\n          dispatch({\n            type: SHOW_LOADER,\n            payload: true\n          });\n          const photoUrl = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n          axios({\n            url: photoUrl,\n            method: \"POST\",\n            data: formadata\n          }).then(response => {\n            let urlPhotoUser = `${baseUrl.baseUrl}/users/` + userId + `?access_token=${localStorage.token}`;\n            axios.patch(urlPhotoUser, {\n              id: userId,\n              photo: response.data.result.files.file[0].providerResponse.location\n            }).then(response => {\n              if (response) {\n                dispatch({\n                  type: HIDE_LOADER,\n                  payload: false\n                });\n                dispatch(getAllUsersForAdmin(dataUser.establishmentId, dataUser.schoolYearId));\n              } else {\n                console.log(response.data, \"photo not upload\");\n              }\n            });\n          });\n        } else {\n          dispatch(getAllUsersForAdmin(dataUser.establishmentId, dataUser.schoolYearId));\n        }\n\n        if (response && data.userPapiersFiles.length > 0) {\n          let formadata = new FormData();\n          data.userPapiersFiles.map((element, index) => {\n            let userPapiersFile = element;\n            const fileExtension = userPapiersFile.name.replace(/^.*\\./, \"\");\n            const fileName = \"userPapiersfile\" + userId + index + String(Date.now()).slice(-2) + \".\" + fileExtension;\n            var object = {};\n            object.file = userPapiersFile;\n            object.fileName = fileName;\n            const myNewFile = new File([object.file], fileName, {\n              type: object.file.type\n            });\n            formadata.append(\"file\", myNewFile);\n          });\n          let filesURL = [];\n          dispatch({\n            type: SHOW_LOADER,\n            payload: true\n          });\n          const URLUserPapiersFiles = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n          axios({\n            url: URLUserPapiersFiles,\n            method: \"POST\",\n            data: formadata\n          }).then(response => {\n            if (response) {\n              filesURL = response.data.result.files.file.map((urlFile, index) => {\n                return urlFile.providerResponse.location;\n              });\n              let urlPhotoUser = `${baseUrl.baseUrl}/users/` + userId + `?access_token=${localStorage.token}`;\n              axios.patch(urlPhotoUser, {\n                id: userId,\n                paper_files: filesURL\n              }).then(response => {\n                if (response) {\n                  dispatch({\n                    type: HIDE_LOADER,\n                    payload: false\n                  });\n                  console.log(\"response photo\", response);\n                } else {\n                  console.log(response.data, \"photo not upload\");\n                }\n              });\n            }\n          }).catch(err => {});\n        } // else if (!response) {\n        //   console.log(\"erreur\", response);\n        //   dispatch({\n        //     type: SHOW_ERROR_MESSAGE,\n        //     payload:\n        //       \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        //   });\n        //   setTimeout(() => {\n        //     dispatch({ type: HIDE_ERROR_MESSAGE });\n        //   }, 4000);\n        // }\n\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/usersAction.js"],"names":["baseUrl","axios","FETCH_ALL_ROLE","ADD_USER","GET_ALL_USERS_FOR_ADMIN","GET_ALL_USERS_FOR_SUPER_ADMIN","EDIT_USER","DELETE_USER","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","HIDE_WARNING_MESSAGE","SHOW_WARNING_MESSAGE","SHOW_LOADER","HIDE_LOADER","_","getError","classService","roleIdStudent","importUsersFromFile","ListUsers","dispatch","map","data","dataUser","name","surname","gender","dateOfBirth","address","phone","cin","zipCode","country","userCountry","photo","name_ar","surname_ar","creation_date","Date","nationality","placeOfBirth","email","roleId","establishmentId","assignClassSubject","classId","classID","schoolYearId","paperFiles","functionName","password","login","levelId","sectionId","usefulInformation","parentId","studentId","groupId","groupeID","console","log","apiEndpoint","localStorage","token","post","then","response","catch","err","message","type","payload","setTimeout","getAllRole","get","res","getAllUsersForAdmin","users","getAllUsersForSuperAdministrator","addUsers","studentClass","schoolyearId","userId","existe","userData","id","userPhoto","undefined","photoUser","object","file","fileName","myNewFile","File","formadata","FormData","append","photoUrl","url","method","urlPhotoUser","patch","result","files","providerResponse","location","userPapiersFiles","length","element","index","userPapiersFile","fileExtension","replace","String","now","slice","filesURL","URLUserPapiersFiles","urlFile","paper_files"],"mappings":"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","sourcesContent":["import baseUrl from \"../config/config\";\nimport axios from \"axios\";\nimport {\n  FETCH_ALL_ROLE,\n  ADD_USER,\n  GET_ALL_USERS_FOR_ADMIN,\n  GET_ALL_USERS_FOR_SUPER_ADMIN,\n  EDIT_USER,\n  DELETE_USER,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n  HIDE_WARNING_MESSAGE,\n  SHOW_WARNING_MESSAGE,\n  SHOW_LOADER,\n  HIDE_LOADER,\n} from \"../constants/ActionTypes\";\nimport _ from \"lodash\";\nimport { getError } from \"../Error/Error\";\nimport { classService } from \"../_services/class.service\";\nimport { roleIdStudent } from \"../config/config\";\n\nexport function importUsersFromFile(ListUsers) {\n  return function(dispatch) {\n    ListUsers.map((data) => {\n      let dataUser = {\n        name: data.name,\n        surname: data.surname,\n        gender: data.gender,\n        dateOfBirth: data.dateOfBirth,\n        address: data.address,\n        phone: data.phone,\n        cin: data.cin,\n        zipCode: data.zipCode,\n        country: data.userCountry,\n        photo: null,\n        name_ar: data.name_ar,\n        surname_ar: data.surname_ar,\n        creation_date: new Date(),\n        nationality: data.nationality,\n        placeOfBirth: data.placeOfBirth,\n        email: data.email,\n        roleId: data.roleId,\n        establishmentId: data.establishmentId,\n        assignClassSubject: null,\n        classId: data.classID,\n        schoolYearId: data.schoolYearId,\n        paperFiles: null,\n        creation_date: new Date(),\n        functionName: null,\n        password: 123456,\n        login: \"john walls\",\n        levelId: null,\n        sectionId: null,\n        usefulInformation: data.usefulInformation,\n        parentId: null,\n        studentId: null,\n        groupId: data.groupeID,\n        // userIdentifier:data.userIdentifier\n      };\n      console.log(dataUser, \"dataUser apres action\");\n      let apiEndpoint = `/users/createByRole?access_token=${localStorage.token}`;\n      classService\n        .post(apiEndpoint, dataUser)\n\n        .then((response) => {\n          console.log(\"EEEEEEEEEEEEEEEEE \", response);\n        })\n\n        .catch((err) => {\n          console.log(\"EEEEEEEEEEEEEEEEE \", err.message);\n          dispatch({\n            type: SHOW_ERROR_MESSAGE,\n            payload:\n            \"Une erreur est survenue lors de la création\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_ERROR_MESSAGE });\n          }, 1000);\n        });\n    });\n  };\n}\n\nexport function getAllRole() {\n  return function(dispatch) {\n    axios\n      .get(`${baseUrl.baseUrl}/roles?access_token=${localStorage.token}`)\n      .then((res) => {\n        dispatch({ type: FETCH_ALL_ROLE, payload: res.data });\n      });\n  };\n}\nexport function getAllUsersForAdmin(establishmentId, schoolYearId) {\n  return function(dispatch) {\n    axios\n      .get(\n        `${baseUrl.baseUrl}/users/${establishmentId}/${schoolYearId}?access_token=${localStorage.token}`\n      )\n      .then((res) => {\n        dispatch({ type: GET_ALL_USERS_FOR_ADMIN, payload: res.data.users });\n      });\n  };\n}\nexport function getAllUsersForSuperAdministrator() {\n  return function(dispatch) {\n    axios\n      .get(`${baseUrl.baseUrl}/users?access_token=${localStorage.token}`)\n      .then((res) => {\n        dispatch({ type: GET_ALL_USERS_FOR_SUPER_ADMIN, payload: res.data });\n      });\n  };\n}\nexport const addUsers = (data) => {\n  console.log(\"data avant\",data)\n  return (dispatch) => {\n    let dataUser = {\n      name: data.name,\n      surname: data.surname,\n      gender: data.gender,\n      dateOfBirth: data.dateOfBirth,\n      address: data.address,\n      phone: data.phone,\n      cin: data.cin,\n      zipCode: data.zipCode,\n      country: data.userCountry,\n      photo: data.photo,\n      name_ar: data.name_ar,\n      surname_ar: data.surname_ar,\n      creation_date: new Date(),\n      nationality: data.nationality,\n      placeOfBirth: data.placeOfBirth,\n      email: data.email,\n      roleId: data.roleId,\n      establishmentId: data.establishmentId,\n      assignClassSubject: data.assignClassSubject,\n      classId: data.studentClass,\n      schoolYearId: data.schoolyearId,\n      paperFiles: null,\n      creation_date: Date(),\n      functionName: data.functionName,\n      password: data.password,\n      login: data.login,\n      levelId: data.levelId,\n      sectionId: data.sectionId,\n      usefulInformation: data.usefulInformation,\n      parentId: data.parentId,\n      studentId: data.studentId,\n      groupId: data.groupId,\n      // userIdentifier:data.userIdentifier\n    };\n    console.log(dataUser, \"dataUser apres action\");\n    let apiEndpoint = `/users/createByRole?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, dataUser).then((response) => {\n      console.log(\"fffffffffffffffffffffffffffff\", response);\n      if (!response) {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création d'utilisateur est effectuée avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n        let userId = response.data.existe.userData.id;\n        if (data.userPhoto.name != undefined) {\n          let photoUser = data.userPhoto;\n          var object = {};\n          object.file = photoUser;\n          object.fileName = \"user\" + userId;\n          const myNewFile = new File([object.file], photoUser.name, {\n            type: object.file.type,\n          });\n          let formadata = new FormData();\n          formadata.append(\"file\", myNewFile);\n          dispatch({\n            type: SHOW_LOADER,\n            payload: true,\n          });\n          const photoUrl = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n          axios({\n            url: photoUrl,\n            method: \"POST\",\n            data: formadata,\n          }).then((response) => {\n            let urlPhotoUser =\n              `${baseUrl.baseUrl}/users/` +\n              userId +\n              `?access_token=${localStorage.token}`;\n\n            axios\n              .patch(urlPhotoUser, {\n                id: userId,\n                photo:\n                  response.data.result.files.file[0].providerResponse.location,\n              })\n              .then((response) => {\n                if (response) {\n                  dispatch({\n                    type: HIDE_LOADER,\n                    payload: false,\n                  });\n                  dispatch(\n                    getAllUsersForAdmin(\n                      dataUser.establishmentId,\n                      dataUser.schoolYearId\n                    )\n                  );\n                } else {\n                  console.log(response.data, \"photo not upload\");\n                }\n              });\n          });\n        } else {\n          dispatch(\n            getAllUsersForAdmin(dataUser.establishmentId, dataUser.schoolYearId)\n          );\n        }\n        if (response && data.userPapiersFiles.length > 0) {\n          let formadata = new FormData();\n          data.userPapiersFiles.map((element, index) => {\n            let userPapiersFile = element;\n            const fileExtension = userPapiersFile.name.replace(/^.*\\./, \"\");\n            const fileName =\n              \"userPapiersfile\" +\n              userId +\n              index +\n              String(Date.now()).slice(-2) +\n              \".\" +\n              fileExtension;\n            var object = {};\n            object.file = userPapiersFile;\n            object.fileName = fileName;\n            const myNewFile = new File([object.file], fileName, {\n              type: object.file.type,\n            });\n            formadata.append(\"file\", myNewFile);\n          });\n\n          let filesURL = [];\n          dispatch({\n            type: SHOW_LOADER,\n            payload: true,\n          });\n          const URLUserPapiersFiles = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n          axios({\n            url: URLUserPapiersFiles,\n            method: \"POST\",\n            data: formadata,\n          })\n            .then((response) => {\n              if (response) {\n                filesURL = response.data.result.files.file.map(\n                  (urlFile, index) => {\n                    return urlFile.providerResponse.location;\n                  }\n                );\n                let urlPhotoUser =\n                  `${baseUrl.baseUrl}/users/` +\n                  userId +\n                  `?access_token=${localStorage.token}`;\n\n                axios\n                  .patch(urlPhotoUser, {\n                    id: userId,\n                    paper_files: filesURL,\n                  })\n                  .then((response) => {\n                    if (response) {\n                      dispatch({\n                        type: HIDE_LOADER,\n                        payload: false,\n                      });\n                      console.log(\"response photo\", response);\n                    } else {\n                      console.log(response.data, \"photo not upload\");\n                    }\n                  });\n              }\n            })\n            .catch((err) => {});\n        }\n        // else if (!response) {\n        //   console.log(\"erreur\", response);\n        //   dispatch({\n        //     type: SHOW_ERROR_MESSAGE,\n        //     payload:\n        //       \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        //   });\n        //   setTimeout(() => {\n        //     dispatch({ type: HIDE_ERROR_MESSAGE });\n        //   }, 4000);\n        // }\n      }\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}