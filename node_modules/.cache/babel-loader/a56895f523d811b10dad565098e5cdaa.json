{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/actions/Setting.js\";\nimport { CHANGE_DIRECTION, CHANGE_NAVIGATION_STYLE, DARK_THEME, DRAWER_TYPE, HORIZONTAL_MENU_POSITION, SWITCH_LANGUAGE, THEME_COLOR, TOGGLE_COLLAPSED_NAV, WINDOW_WIDTH, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from '../constants/ActionTypes';\nimport baseUrl from \"../config/config\";\nimport axios from \"axios\";\nimport languageData from '../components/LanguageSwitcher/data';\nimport IntlMessages from \"../util/IntlMessages\";\nimport React from 'react';\nexport function toggleCollapsedNav(isNavCollapsed) {\n  return {\n    type: TOGGLE_COLLAPSED_NAV,\n    isNavCollapsed\n  };\n}\nexport function setDrawerType(drawerType) {\n  return {\n    type: DRAWER_TYPE,\n    drawerType\n  };\n}\nexport function updateWindowWidth(width) {\n  return {\n    type: WINDOW_WIDTH,\n    width\n  };\n}\nexport function getThemeColor(color) {\n  return {\n    type: THEME_COLOR,\n    color\n  };\n}\nexport function setThemeColor(color) {\n  return (dispatch, getState) => {\n    const state = getState();\n    let settingId = state.auth.userProfile.setting_id;\n    let data = {\n      theme_color: color,\n      id: settingId\n    };\n    axios.patch(`${baseUrl.baseUrl}/settings/` + settingId + `?access_token=${localStorage.token}`, data).then(response => {\n      dispatch({\n        type: THEME_COLOR,\n        payload: color\n      });\n    });\n  };\n}\nexport function setDarkTheme() {\n  return {\n    type: DARK_THEME\n  };\n}\nexport function changeDirection() {\n  return {\n    type: CHANGE_DIRECTION\n  };\n}\nexport function changeNavigationStyle(layoutType) {\n  return {\n    type: CHANGE_NAVIGATION_STYLE,\n    payload: layoutType\n  };\n}\nexport function setHorizontalMenuPosition(navigationPosition) {\n  return {\n    type: HORIZONTAL_MENU_POSITION,\n    payload: navigationPosition\n  };\n}\nexport function switchLanguage(language) {\n  return (dispatch, getState) => {\n    localStorage.setItem('appLang', language.languageId);\n    const state = getState();\n    let settingId = state.auth.userProfile.setting_id;\n    let data = {\n      app_lang: language.languageId,\n      id: settingId\n    };\n    axios.patch(`${baseUrl.baseUrl}/settings/` + settingId + `?access_token=${localStorage.token}`, data).then(response => {\n      dispatch({\n        type: SWITCH_LANGUAGE,\n        payload: language\n      });\n    });\n  };\n}\nexport function getAppLanguage(app_lang) {\n  if (app_lang) {\n    let dataLanguage = languageData.filter(element => element.languageId === app_lang);\n    let obj = dataLanguage[0];\n    let data = {\n      languageId: obj.languageId,\n      locale: obj.locale,\n      name: obj.languageId,\n      icon: obj.icon\n    };\n    return dispatch => {\n      dispatch({\n        type: SWITCH_LANGUAGE,\n        payload: data\n      });\n    };\n  }\n}\nexport function getNameLanguage(appLang) {\n  switch (appLang) {\n    case 'french':\n      return /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"languageData.french\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      });\n\n    case 'english':\n      return /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"languageData.english\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      });\n\n    case 'tunisia':\n      return /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"languageData.arabic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      });\n\n    default:\n      return /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"languageData.french\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      });\n  }\n}\nexport function initCalendar(startTime, endTime) {\n  let data = {\n    \"startTime\": startTime,\n    \"endTime\": endTime\n  };\n  return dispatch => {\n    dispatch({\n      type: 'INIT_CALENDAR',\n      payload: data\n    });\n  };\n}\nexport function alertSuccess() {\n  return dispatch => {\n    dispatch({\n      type: SHOW_SUCCESS_MESSAGE,\n      payload: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"alert.success.init.data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 57\n        }\n      })\n    });\n    setTimeout(() => {\n      dispatch({\n        type: HIDE_SUCCESS_MESSAGE\n      });\n    }, 4000);\n  };\n}\nexport function alertfailed() {\n  return dispatch => {\n    dispatch({\n      type: SHOW_ERROR_MESSAGE,\n      payload: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"alert.failed.init.data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 55\n        }\n      })\n    });\n    setTimeout(() => {\n      dispatch({\n        type: HIDE_ERROR_MESSAGE\n      });\n    }, 4000);\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/Setting.js"],"names":["CHANGE_DIRECTION","CHANGE_NAVIGATION_STYLE","DARK_THEME","DRAWER_TYPE","HORIZONTAL_MENU_POSITION","SWITCH_LANGUAGE","THEME_COLOR","TOGGLE_COLLAPSED_NAV","WINDOW_WIDTH","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","baseUrl","axios","languageData","IntlMessages","React","toggleCollapsedNav","isNavCollapsed","type","setDrawerType","drawerType","updateWindowWidth","width","getThemeColor","color","setThemeColor","dispatch","getState","state","settingId","auth","userProfile","setting_id","data","theme_color","id","patch","localStorage","token","then","response","payload","setDarkTheme","changeDirection","changeNavigationStyle","layoutType","setHorizontalMenuPosition","navigationPosition","switchLanguage","language","setItem","languageId","app_lang","getAppLanguage","dataLanguage","filter","element","obj","locale","name","icon","getNameLanguage","appLang","initCalendar","startTime","endTime","alertSuccess","setTimeout","alertfailed"],"mappings":"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","sourcesContent":["import {\r\n    CHANGE_DIRECTION,\r\n    CHANGE_NAVIGATION_STYLE,\r\n    DARK_THEME,\r\n    DRAWER_TYPE,\r\n    HORIZONTAL_MENU_POSITION,\r\n    SWITCH_LANGUAGE,\r\n    THEME_COLOR,\r\n    TOGGLE_COLLAPSED_NAV,\r\n    WINDOW_WIDTH,\r\n    SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE\r\n} from '../constants/ActionTypes';\r\nimport baseUrl from \"../config/config\";\r\nimport axios from \"axios\";\r\nimport languageData from '../components/LanguageSwitcher/data';\r\nimport IntlMessages from \"../util/IntlMessages\";\r\nimport React from 'react';\r\n\r\nexport function toggleCollapsedNav(isNavCollapsed) {\r\n    return { type: TOGGLE_COLLAPSED_NAV, isNavCollapsed };\r\n}\r\n\r\nexport function setDrawerType(drawerType) {\r\n    return { type: DRAWER_TYPE, drawerType };\r\n}\r\n\r\nexport function updateWindowWidth(width) {\r\n    return { type: WINDOW_WIDTH, width };\r\n}\r\n\r\nexport function getThemeColor(color) {\r\n    return { type: THEME_COLOR, color };\r\n}\r\n\r\nexport function setThemeColor(color) {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        let settingId = state.auth.userProfile.setting_id;\r\n        let data = {\r\n            theme_color: color,\r\n            id: settingId\r\n        }\r\n        axios.patch(`${baseUrl.baseUrl}/settings/` + settingId + `?access_token=${localStorage.token}`, data)\r\n            .then(response => {\r\n                dispatch({ type: THEME_COLOR, payload: color })\r\n            })\r\n    }\r\n}\r\n\r\nexport function setDarkTheme() {\r\n    return { type: DARK_THEME };\r\n}\r\n\r\nexport function changeDirection() {\r\n    return { type: CHANGE_DIRECTION };\r\n}\r\n\r\nexport function changeNavigationStyle(layoutType) {\r\n    return {\r\n        type: CHANGE_NAVIGATION_STYLE,\r\n        payload: layoutType\r\n    };\r\n}\r\n\r\nexport function setHorizontalMenuPosition(navigationPosition) {\r\n    return {\r\n        type: HORIZONTAL_MENU_POSITION,\r\n        payload: navigationPosition\r\n    };\r\n}\r\n\r\nexport function switchLanguage(language) {\r\n    return (dispatch, getState) => {\r\n        localStorage.setItem('appLang', language.languageId);\r\n        const state = getState();\r\n        let settingId = state.auth.userProfile.setting_id;\r\n        let data = {\r\n            app_lang: language.languageId,\r\n            id: settingId\r\n        }\r\n        axios.patch(`${baseUrl.baseUrl}/settings/` + settingId + `?access_token=${localStorage.token}`, data)\r\n            .then(response => {\r\n                dispatch({ type: SWITCH_LANGUAGE, payload: language });\r\n            })\r\n    }\r\n}\r\n\r\nexport function getAppLanguage(app_lang) {\r\n    if (app_lang) {\r\n        let dataLanguage = languageData.filter(element => element.languageId === app_lang)\r\n        let obj = dataLanguage[0]\r\n        let data = {\r\n            languageId: obj.languageId,\r\n            locale: obj.locale,\r\n            name: obj.languageId,\r\n            icon: obj.icon\r\n        }\r\n        return dispatch => {\r\n            dispatch({ type: SWITCH_LANGUAGE, payload: data });\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function getNameLanguage(appLang) {\r\n    switch (appLang) {\r\n        case 'french':\r\n            return (<IntlMessages id=\"languageData.french\" />)\r\n        case 'english':\r\n            return (<IntlMessages id=\"languageData.english\" />)\r\n        case 'tunisia':\r\n            return (<IntlMessages id=\"languageData.arabic\" />)\r\n        default:\r\n            return (<IntlMessages id=\"languageData.french\" />)\r\n\r\n    }\r\n}\r\n\r\nexport function initCalendar(startTime, endTime) {\r\n    let data = {\r\n        \"startTime\": startTime,\r\n        \"endTime\": endTime\r\n    }\r\n    return dispatch => {\r\n        dispatch({ type: 'INIT_CALENDAR', payload: data });\r\n\r\n    }\r\n}\r\n\r\nexport function alertSuccess() {\r\n\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_SUCCESS_MESSAGE, payload: <IntlMessages id=\"alert.success.init.data\" /> })\r\n        setTimeout(() => {\r\n            dispatch({ type: HIDE_SUCCESS_MESSAGE });\r\n        }, 4000);\r\n\r\n    }\r\n}\r\n\r\nexport function alertfailed() {\r\n\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_ERROR_MESSAGE, payload: <IntlMessages id=\"alert.failed.init.data\" /> });\r\n        setTimeout(() => {\r\n            dispatch({ type: HIDE_ERROR_MESSAGE });\r\n        }, 4000);\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}