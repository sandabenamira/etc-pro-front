{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/Assiduity/routes/Planning/Planning.js\";\nimport React from 'react';\nimport '../../../../../styles/app.scss';\nimport './Calendar.css';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport AddEvent from './AddEvent';\nimport PlanningCalendar from './PlanningCalendar';\nimport { getRoomsByEstablshment } from '../../../../../actions/roomAction';\nimport { connect } from 'react-redux';\nimport { getData as getProfessors, getProfesseurByEstablishmentId } from '../../../../../actions/professorAction';\nimport { addEvent, handleEventRequestClose, getEventsByEstabAndSchoolYear, editEvent, deleteEvent } from '../../../../../actions/planningActions';\nimport { getAssignementCourse } from '../../../../../actions/AssignementAction';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { classService } from '../../../../../_services/class.service';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { removeEventList } from '../../../../../actions/planningActions';\nimport EditEvent from './EditEvent';\nimport { roleIdSuperAdmin } from '../../../../../config/config';\nimport EventDetails from './EventDetails';\nimport ConfirmationEditEvent from './ConfirmationEditEvent';\nimport ConfirmationNotifMail from './ConfirmationNotifMail';\nimport ConfirmationDeleteEvent from './ConfirmationDeleteEvent';\nimport { UncontrolledAlert } from 'reactstrap';\nimport AlerteDelete from './AlerteDelete';\n\nclass Planning extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteConfirmation = event => {\n      this.setState({\n        isOpen: false,\n        deleteItem: event,\n        isOpenModalDelete: true\n      });\n    };\n\n    this.handleSubmitDelete = () => {\n      let startTimeDate = moment(this.state.deleteItem.start).format('YYYY-MM-DD') + 'T' + moment(this.state.deleteItem.start).format('HH:mm:ssZ');\n      let endTimeDate = moment(this.state.deleteItem.end).format('YYYY-MM-DD') + 'T' + moment(this.state.deleteItem.end).format('HH:mm:ssZ');\n      let data = {};\n      data.id = this.state.deleteItem.id;\n      data.start = startTimeDate;\n      data.end = endTimeDate;\n\n      if (this.state.typeDeleteChecked == 'future') {\n        let newRepetition = this.state.deleteItem.repetition.filter(element => element < this.state.deleteItem.idRepetition);\n        data.repetition = newRepetition;\n        data.status = true;\n        this.props.dispatch(deleteEvent(this.state.typeDeleteChecked, data, this.props.userProfile.establishment_id, this.props.userProfile.school_year_id, this.state.classe.id));\n      } else if (this.state.typeDeleteChecked == 'uniq') {\n        let newRepetition = this.state.deleteItem.repetition.filter(element => element != this.state.deleteItem.idRepetition);\n        data.repetition = newRepetition;\n        data.status = true;\n        this.props.dispatch(deleteEvent(this.state.typeDeleteChecked, data, this.props.userProfile.establishment_id, this.props.userProfile.school_year_id, this.state.classe.id));\n      } else if (this.state.typeDeleteChecked == 'all') {\n        data.status = false;\n        let classId = this.state.classe.id == undefined ? 0 : this.state.classe.id;\n        this.props.dispatch(deleteEvent(this.state.typeDeleteChecked, data, this.props.userProfile.establishment_id, this.props.userProfile.school_year_id, classId));\n      }\n\n      this.setState({\n        deleteItem: {},\n        isOpenModalDelete: false,\n        typeDeleteChecked: 'all'\n      });\n    };\n\n    this.handleSubmitNotif = () => {\n      let obj = {};\n      obj.subjectName = this.state.detailsMailNotif.subjectName;\n      obj.eventType = this.state.detailsMailNotif.eventType;\n      obj.profName = this.state.detailsMailNotif.profName;\n      obj.profSurname = this.state.detailsMailNotif.profSurname;\n      obj.roomName = this.state.detailsMailNotif.roomName;\n      obj.end = moment(this.state.detailsMailNotif.end).format('LT');\n      obj.start = moment(this.state.detailsMailNotif.start).format('LLLL');\n      obj.classId = this.state.detailsMailNotif.classId;\n      obj.classeName = this.state.detailsMailNotif.classeName;\n      let apiEndpoint = `/planning_events/absent-prof-notif?access_token=${localStorage.token}`;\n      classService.post(apiEndpoint, obj).then(response => {\n        if (response.data.notificationData.length > 0) {\n          this.setState({\n            messageAlerte: response.data.notificationData.length + ' Parents sont notifiés avec succées',\n            alerteNotif: true,\n            colorNotif: 'bg-success'\n          });\n          setTimeout(() => {\n            this.setState({\n              messageAlerte: '',\n              alerteNotif: false\n            });\n          }, 4000);\n        } else {\n          this.setState({\n            messageAlerte: ' Aucun Parent est notifié',\n            alerteNotif: true,\n            colorNotif: 'bg-danger'\n          });\n          setTimeout(() => {\n            this.setState({\n              messageAlerte: '',\n              alerteNotif: false\n            });\n          }, 4000);\n        }\n      });\n      this.setState({\n        detailsMailNotif: {},\n        isOpenModalConfimationNotif: false\n      });\n    };\n\n    this.handleCancelNotif = () => {\n      this.setState({\n        detailsMailNotif: {},\n        isOpenModalConfimationNotif: false,\n        deleteItem: {},\n        isOpenModalDelete: false,\n        typeDeleteChecked: 'all'\n      });\n    };\n\n    this.handleNotifMailConfirmation = event => {\n      this.setState({\n        isOpen: false,\n        detailsMailNotif: event,\n        isOpenModalConfimationNotif: true\n      });\n    };\n\n    this.handleDateStartChange = date => {\n      let startHourEventError = moment(date._d).isBefore(this.state.endHours);\n      this.setState({\n        startHours: date,\n        startHourEventError: startHourEventError\n      });\n    };\n\n    this.handleDateEndChange = date => {\n      let endHourEventError = moment(date._d).isAfter(this.state.startHours);\n      this.setState({\n        endHours: date,\n        endHourEventError: endHourEventError\n      });\n    };\n\n    this.handleDateChange = date => {\n      let startHours = moment({\n        y: moment(date).year(),\n        M: moment(date).month(),\n        d: moment(date).format('DD'),\n        h: moment(this.state.startHours).hour(),\n        m: moment(this.state.startHours).minutes()\n      });\n      let endHours = moment({\n        y: moment(date).year(),\n        M: moment(date).month(),\n        d: moment(date).format('DD'),\n        h: moment(this.state.endHours).hour(),\n        m: moment(this.state.endHours).minutes()\n      });\n      this.setState({\n        startHours: moment(startHours).format(),\n        endHours: moment(endHours).format(),\n        dateEvent: moment(date).format()\n      });\n    };\n\n    this.handleChangeEvent = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeTypeDelete = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleEditConfirmation = event => {\n      event.preventDefault();\n      this.setState({\n        isOpenModalConfirm: true\n      });\n    };\n\n    this.handleCancelEditEvent = () => {\n      this.setState({\n        isOpenModalConfirm: false\n      });\n    };\n\n    this.handleEdit = event => {\n      const course = this.state.courses.filter(element => element.fk_id_subject_v4 === event.subjectId);\n\n      if (event.eventType === 'exam') {\n        const frequency = this.state.examFrequency;\n        this.setState({\n          frequency: frequency,\n          professor: this.props.professors,\n          EventGategorie: 1\n        });\n\n        if (!_.isEmpty(course[0].course)) {\n          this.setState({\n            subjectName: course[0].subject.name,\n            subjectColor: course[0].subject.color,\n            endHours: event.end\n          });\n        }\n      } else if (event.eventType === 'lesson') {\n        const frequency = this.state.allFrequency;\n        this.setState({\n          frequency: frequency\n        });\n\n        if (!_.isEmpty(course[0].course)) {\n          const profId = course[0].course[0].fk_id_professor;\n          var professor = this.props.professors.filter(element => {\n            if (!_.isEmpty(element.profile.professors)) {\n              var x = element.profile.professors[0].id;\n              if (x == profId) return element;\n            }\n          });\n          this.setState({\n            subjectName: course[0].subject.name,\n            subjectColor: course[0].subject.color,\n            professor: professor,\n            EventGategorie: 1,\n            endHours: event.end\n          });\n        }\n      } else if (event.eventType === 'event') {\n        this.setState({\n          professor: this.props.professors,\n          EventGategorie: 1,\n          endHours: event.end\n        });\n      } else {\n        this.setState({\n          EventGategorie: 0,\n          endHours: moment(event.end).subtract(1, 'days')\n        });\n      }\n\n      this.setState({\n        isOpen: false,\n        startHours: event.start,\n        eventName: event.title,\n        frequencyID: event.frequency,\n        eventType: event.eventType,\n        room: event.roomId,\n        professorId: event.profId,\n        assignClassSubjectId: event.assignClassSubjectId,\n        subject: event.subjectId,\n        idEvent: event.id,\n        subjectId: event.subjectId,\n        profName: event.profName,\n        profSurname: event.profSurname,\n        className: event.classeName,\n        roomName: event.roomName,\n        isEditAction: true,\n        isOpenEdit: true\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.displayEventDetails = event => {\n      this.setState({\n        isOpen: true,\n        details: event\n      });\n    };\n\n    this.handleChangeStartDate = date => {\n      let startTimeEventError = moment(date._d).isBefore(this.state.endHours);\n      this.setState({\n        startHours: date._d,\n        startTimeEventError: startTimeEventError\n      });\n    };\n\n    this.handleChangeEndDate = date => {\n      let endTimeEventError = moment(date._d).isAfter(this.state.startHours);\n      this.setState({\n        endHours: date._d,\n        endTimeEventError: endTimeEventError\n      });\n    };\n\n    this.toggle = tab => {\n      if (this.state.eventType !== tab) {\n        this.setState({\n          eventType: tab\n        });\n      }\n\n      if (tab === 'exam') {\n        const frequency = this.state.examFrequency;\n        this.setState({\n          frequency: frequency\n        });\n      } else {\n        const frequency = this.state.allFrequency;\n        this.setState({\n          frequency: frequency\n        });\n      }\n    };\n\n    this.handleChangeEventType = () => {\n      if (this.state.EventGategorie == 1) {\n        this.setState({\n          eventType: 'lesson'\n        });\n      } else {\n        this.setState({\n          eventType: 'holidays'\n        });\n      }\n    };\n\n    this.handleChangeFields = name => event => {\n      if (this.state.eventType === 'event') {\n        this.setState({\n          professor: this.props.professors\n        });\n      }\n\n      this.setState({\n        [name]: event.target.value\n      });\n\n      if (name === 'frequencyID') {\n        let disponibleRooms = [];\n        const startHours = this.state.startHours;\n        const endHours = this.state.endHours;\n        let establishementId = this.props.userProfile.establishment_id;\n        let schoolYearId = this.props.userProfile.school_year_id;\n        let frequency = event.target.value;\n        let apiEndpoint = `/planning_events/check-planning/${establishementId}/${schoolYearId}/${startHours}/${endHours}/${frequency}?access_token=${localStorage.token}`;\n        classService.get(apiEndpoint).then(response => {\n          let data = response.data.checkData;\n          disponibleRooms = this.props.rooms.filter(element => data.indisponibleRooms.indexOf(element.id) < 0);\n          this.setState({\n            disponibleRooms,\n            indisponibleprofessors: data.indisponibleprofessors,\n            professor: [],\n            subject: '',\n            professorId: '',\n            room: ''\n          });\n        }).catch(err => {});\n      }\n    };\n\n    this.handleChangeFieldsProfessor = name => event => {\n      if (event.target.value !== undefined) {\n        var Professor = this.state.professor.filter(element => element.profile.professors[0].id == event.target.value);\n        this.setState({\n          [name]: event.target.value,\n          profName: Professor[0].profile.user.name,\n          profSurname: Professor[0].profile.user.surname\n        });\n      }\n    };\n\n    this.handleChangeFieldsRoom = name => event => {\n      var Room = this.props.rooms.filter(element => element.id == event.target.value);\n      this.setState({\n        [name]: event.target.value,\n        roomName: Room[0].name\n      });\n    };\n\n    this.handleChangeSubject = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      const course = this.state.courses.filter(element => element.fk_id_subject_v4 === event.target.value);\n\n      if (!_.isEmpty(course[0].course)) {\n        this.setState({\n          subjectName: course[0].subject.name,\n          subjectColor: course[0].subject.color\n        });\n        const assignClassSubjectId = course[0].id;\n        const profId = course[0].course[0].fk_id_professor;\n        let professor = this.props.professors.filter(element => {\n          if (!_.isEmpty(element.profile.professors)) {\n            let professorId = element.profile.professors[0].id;\n            if (professorId == profId && this.state.indisponibleprofessors.indexOf(professorId) < 0) return element;\n          }\n        });\n        this.setState({\n          assignClassSubjectId: assignClassSubjectId,\n          professor: professor,\n          subjectId: event.target.value\n        });\n      }\n\n      if (this.state.eventType === 'exam') {\n        this.setState({\n          professor: this.props.professors\n        });\n      }\n    };\n\n    this.handleChangeClasse = name => event => {\n      this.props.dispatch(getEventsByEstabAndSchoolYear(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id, event.target.value.id));\n      this.setState({\n        EventGategorie: event.target.value.id === 0 ? 0 : 1\n      });\n\n      if (event.target.value.id && event.target.value.id !== 0) {\n        let courseAssignment = this.props.courseAssignment.filter(element => element.fk_id_class_v4 === event.target.value.id);\n\n        let subjects = _.map(courseAssignment, 'subject');\n\n        let classe = this.state.establishmentClass.find(({\n          id\n        }) => id === event.target.value.id);\n        this.setState({\n          courses: courseAssignment,\n          subjects: subjects,\n          classe: classe,\n          courseAssignmentClass: courseAssignment\n        });\n      } else {\n        this.setState({\n          classe: {\n            id: 0\n          }\n        });\n      }\n    };\n\n    this.handleChange = name => event => {\n      let classrooms = this.props.rooms.filter(({\n        establishment_id\n      }) => establishment_id === event.target.value);\n      let establishmentClass = this.props.classes.filter(classe => classe.establishment_id === event.target.value);\n      this.setState({\n        [name]: event.target.value,\n        establishmentClass: establishmentClass,\n        events: [],\n        classe: '',\n        classrooms: classrooms\n      });\n    };\n\n    this.onConfirm = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      var data = {};\n      const expr = this.state.eventType;\n\n      switch (expr) {\n        case 'lesson':\n          data.start_time = moment(this.state.startHours).format();\n          data.end_time = moment(this.state.endHours).format();\n          data.title = this.state.eventName;\n          data.frequency = this.state.frequencyID;\n          data.event_type = this.state.eventType;\n          data.status = true;\n          data.fk_id_room = this.state.room;\n          data.fk_id_prof = this.state.professorId;\n          data.fk_id_assign_class_subject = this.state.assignClassSubjectId;\n          data.fk_id_profile_creator = this.props.userProfile.id;\n          data.repetition = this.state.frequencyID == 'weekly' ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28] : this.state.frequencyID == 'fortnightly' ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] : [0];\n          break;\n\n        case 'exam':\n          data.start_time = moment(this.state.startHours).format();\n          data.end_time = moment(this.state.endHours).format();\n          data.title = this.state.eventName;\n          data.frequency = this.state.frequencyID;\n          data.event_type = this.state.eventType;\n          data.status = true;\n          data.fk_id_room = this.state.room;\n          data.fk_id_prof = this.state.professorId;\n          data.fk_id_assign_class_subject = this.state.assignClassSubjectId;\n          data.fk_id_profile_creator = this.props.userProfile.id;\n          data.repetition = [0];\n          break;\n\n        case 'event':\n          data.start_time = moment(this.state.startHours).format();\n          data.end_time = moment(this.state.endHours).format();\n          data.title = this.state.eventName;\n          data.frequency = this.state.frequencyID;\n          data.event_type = this.state.eventType;\n          data.status = true;\n          data.fk_id_room = this.state.room;\n          data.fk_id_prof = this.state.professorId;\n          data.fk_id_assign_class_subject = this.state.courseAssignmentClass[0].id;\n          data.fk_id_profile_creator = this.props.userProfile.id;\n          data.repetition = this.state.frequencyID == 'weekly' ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28] : this.state.frequencyID == 'fortnightly' ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] : [0];\n          break;\n\n        case 'holidays':\n          data.start_time = moment(this.state.startHours).format();\n          data.end_time = moment(this.state.startHours).format();\n          data.title = this.state.eventName;\n          data.frequency = 'unique';\n          data.event_type = this.state.eventType;\n          data.status = true;\n          data.fk_id_room = null;\n          data.fk_id_prof = null;\n          data.fk_id_assign_class_subject = this.props.courseAssignment[0].id;\n          data.fk_id_profile_creator = this.props.userProfile.id;\n          data.repetition = [0];\n          break;\n\n        case 'schoolVacation':\n          data.start_time = moment(this.state.startHours).format();\n          data.end_time = moment(this.state.endHours).format();\n          data.title = this.state.eventName;\n          data.frequency = 'unique';\n          data.event_type = this.state.eventType;\n          data.status = true;\n          data.fk_id_room = null;\n          data.fk_id_prof = null;\n          data.fk_id_assign_class_subject = this.props.courseAssignment[0].id;\n          data.fk_id_profile_creator = this.props.userProfile.id;\n          data.repetition = [0];\n          break;\n\n        default:\n          console.log(`Sorry, we are out of ${expr}.`);\n      }\n\n      var dataSup = {};\n      dataSup.className = this.state.className;\n      dataSup.classId = this.state.classe.id;\n      dataSup.creatorName = this.props.userProfile.user.name;\n      dataSup.creatorSurname = this.props.userProfile.user.surname;\n      dataSup.roomName = this.state.roomName;\n      dataSup.subjectName = this.state.subjectName;\n      dataSup.subjectColor = this.state.subjectColor;\n      dataSup.profName = this.state.profName;\n      dataSup.profSurname = this.state.profSurname;\n      dataSup.subjectId = this.state.subjectId;\n      dataSup.establishmentId = this.props.userProfile.establishment_id;\n      dataSup.schoolYearId = this.props.userProfile.school_year_id;\n\n      if (this.state.isEditAction === true) {\n        //edit action\n        data.id = this.state.idEvent;\n        dataSup.eventsEdited = this.state.eventChecked;\n        this.props.dispatch(editEvent(data, dataSup));\n        this.setState({\n          isEditAction: false\n        });\n      } else {\n        //add action\n        this.props.dispatch(addEvent(data, dataSup));\n      }\n\n      this.setState({\n        modal: false,\n        professorId: '',\n        frequencyID: '',\n        room: '',\n        subjectId: 0,\n        className: '',\n        startHours: '',\n        endHours: '',\n        dateEvent: '',\n        frequencyOption: false,\n        eventType: 'lesson',\n        loader: false,\n        eventName: '',\n        subject: '',\n        assignClassSubjectId: '',\n        professor: [],\n        roomName: '',\n        subjectName: '',\n        subjectColor: '',\n        profName: '',\n        profSurname: '',\n        isOpenEdit: false,\n        isOpenModalConfirm: false\n      });\n    };\n\n    this.handleRequestClose = () => {\n      this.props.dispatch(handleEventRequestClose());\n    };\n\n    this.state = {\n      modal: false,\n      slotInfo: '',\n      eventList: [],\n      classrooms: [],\n      classe: {},\n      establishment: '',\n      establishmentClass: [],\n      establishmentProfessor: [],\n      subjectListByLevel: [],\n      show: false,\n      isOpenEdit: false,\n      courses: [],\n      subjects: [],\n      nameError: false,\n      professorId: '',\n      frequencyID: '',\n      room: '',\n      // event_type: \"lesson\",\n      subjectId: 0,\n      className: '',\n      startHours: '',\n      endHours: '',\n      dateEvent: '',\n      frequencyOption: false,\n      eventType: 'lesson',\n      loader: false,\n      eventName: '',\n      subject: '',\n      assignClassSubjectId: '',\n      professor: [],\n      roomName: '',\n      subjectName: '',\n      subjectColor: '',\n      profName: '',\n      profSurname: '',\n      idEvent: null,\n      isEditAction: false,\n      isOpenModalConfirm: false,\n      AllObject: {// fk_id_establishment: 0,\n        // fk_id_level_v4: 0,\n        // fk_id_school_year: 0,\n        // fk_id_section_v4: 0,\n        // id: 0,\n        // name: 'All',\n      },\n      EventGategorie: '',\n      isOpen: false,\n      details: {},\n      eventChecked: 'thisEvent',\n      frequency: [],\n      allFrequency: [{\n        value: 'weekly',\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"data.weekly\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 18\n          }\n        })\n      }, {\n        value: 'fortnightly',\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"data.fortnightly\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 18\n          }\n        })\n      }, {\n        value: 'annual',\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"mode_payment.establishment.annual\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 18\n          }\n        })\n      }],\n      examFrequency: [{\n        value: 'annual',\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"mode_payment.establishment.annual\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 18\n          }\n        })\n      }],\n      options: {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      },\n      courseAssignmentClass: [],\n      endTimeEventError: true,\n      startTimeEventError: true,\n      endHourEventError: true,\n      startHourEventError: true,\n      detailsMailNotif: {},\n      isOpenModalConfimationNotif: false,\n      alerteNotif: false,\n      messageAlerte: '',\n      colorNotif: ' ',\n      disponibleRooms: [],\n      indisponibleprofessors: [],\n      isOpenModalDelete: false,\n      deleteItem: {},\n      typeDeleteChecked: 'all'\n    };\n    this.addLesson = this.addLesson.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeClasse = this.handleChangeClasse.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeFields = this.handleChangeFields.bind(this);\n    this.handleChangeFieldsProfessor = this.handleChangeFieldsProfessor.bind(this);\n    this.handleChangeFieldsRoom = this.handleChangeFieldsRoom.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeEventType = this.handleChangeEventType.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleChangeStartDate = this.handleChangeStartDate.bind(this);\n    this.handleChangeEndDate = this.handleChangeEndDate.bind(this);\n    this.displayEventDetails = this.displayEventDetails.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleEditConfirmation = this.handleEditConfirmation.bind(this);\n    this.handleCancelEditEvent = this.handleCancelEditEvent.bind(this);\n    this.handleChangeEvent = this.handleChangeEvent.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleDateEndChange = this.handleDateEndChange.bind(this);\n    this.handleDateStartChange = this.handleDateStartChange.bind(this);\n    this.handleNotifMailConfirmation = this.handleNotifMailConfirmation.bind(this);\n    this.handleCancelNotif = this.handleCancelNotif.bind(this);\n    this.handleSubmitNotif = this.handleSubmitNotif.bind(this);\n    this.handleDeleteConfirmation = this.handleDeleteConfirmation.bind(this);\n    this.handleSubmitDelete = this.handleSubmitDelete.bind(this);\n    this.handleChangeTypeDelete = this.handleChangeTypeDelete.bind(this);\n  }\n\n  handleToggle() {\n    this.setState({\n      professorId: '',\n      frequencyID: '',\n      room: '',\n      eventType: 'lesson',\n      subjectId: '',\n      profObject: {},\n      isEditAction: false,\n      modal: false,\n      isOpenEdit: false,\n      disponibleRooms: [],\n      indisponibleprofessors: [],\n      subject: '',\n      professor: []\n    });\n  }\n\n  addLesson(slotInfo) {\n    if (_.isEmpty(this.state.classe)) {\n      this.setState({\n        show: true\n      });\n    } else {\n      const startHours = moment(slotInfo.start);\n      const endHours = moment(slotInfo.end);\n      this.setState({\n        modal: true,\n        startHours: startHours,\n        endHours: endHours,\n        slotInfo: slotInfo,\n        eventList: [],\n        isOpen: false\n      });\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    const frequency = this.state.allFrequency;\n    this.setState({\n      frequency: frequency\n    });\n    this.props.dispatch(getAssignementCourse(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id));\n    this.props.dispatch(getProfesseurByEstablishmentId(this.props.userProfile.establishment_id));\n    this.props.dispatch(getRoomsByEstablshment(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id));\n\n    if (this.props.userProfile.role_id !== roleIdSuperAdmin) {\n      let apiEndpoint = `/class_v4?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=` + this.props.userProfile.establishment_id + `&filter[where][and][1][fk_id_school_year]=` + this.props.userProfile.school_year_id;\n      classService.get(apiEndpoint).then(response => {\n        if (response) {\n          let activeClass = response.data.filter(classInfo => classInfo.status); // activeClass.unshift(this.state.AllObject);\n\n          this.setState({\n            establishmentClass: activeClass\n          });\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(removeEventList());\n  } // edit(event) {\n  //   let params = {\n  //     startHours: moment(event.start).format(\"YYYY-MM-DD HH:mm:ss\"),\n  //     endHours: moment(event.end).format(\"YYYY-MM-DD HH:mm:ss\"),\n  //     establishmentId: this.props.userProfile.establishment_id,\n  //     classe: this.state.classe.id,\n  //   };\n  //   let apiEndpoint = `/rooms/get-disposable-rooms/${JSON.stringify(\n  //     params\n  //   )}?access_token=${localStorage.token}`;\n  //   classService\n  //     .get(apiEndpoint)\n  //     .then((response) => {\n  //       this.setState({\n  //         classrooms: response.data.rooms,\n  //         establishment: this.props.userProfile.establishment_id,\n  //       });\n  //     })\n  //     .catch((err) => {});\n  //   this.setState({\n  //     modalEdit: true,\n  //     event: event,\n  //   });\n  // }\n  // closeEdit() {\n  //   this.setState({\n  //     modalEdit: false,\n  //   });\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated slideInUpTiny animation-duration-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 7\n      }\n    }, this.state.alerteNotif ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: `alert-addon-card ${this.state.colorNotif} text-white shadow-lg`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 13\n      }\n    }, \" \", this.state.messageAlerte, \" \")) : '', this.props.successStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 13\n      }\n    }, \" \", this.props.message, \" \")) : '', /*#__PURE__*/React.createElement(PlanningCalendar, {\n      events: this.props.events,\n      displayEventDetails: this.displayEventDetails,\n      subjects: this.props.subjects,\n      match: this.props.match,\n      userProfile: this.props.userProfile,\n      addLesson: this.addLesson,\n      classes: this.props.classes,\n      establishments: this.props.establishments,\n      establishment: this.state.establishment,\n      handleChangeClasse: this.handleChangeClasse,\n      handleChange: this.handleChange,\n      establishmentClass: this.state.establishmentClass,\n      establishmentProfessor: this.state.establishmentProfessor,\n      startTime: this.props.startTime,\n      endTime: this.props.endTime,\n      appLang: this.props.settings,\n      edit: this.edit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 9\n      }\n    }), this.state.modal ? /*#__PURE__*/React.createElement(AddEvent, {\n      handleChangeStartDate: this.handleChangeStartDate,\n      handleChangeEndDate: this.handleChangeEndDate,\n      modal: this.state.modal,\n      startDateLesson: this.state.startHours,\n      endDateLesson: this.state.endHours,\n      handleSubmit: this.handleSubmit,\n      handleChangeFields: this.handleChangeFields,\n      handleChangeSubject: this.handleChangeSubject,\n      handleChangeEventType: this.handleChangeEventType,\n      toggle: this.toggle,\n      handleToggle: this.handleToggle,\n      values: this.state,\n      rooms: this.state.disponibleRooms,\n      language: this.props.settings.languageId,\n      handleChangeFieldsProfessor: this.handleChangeFieldsProfessor,\n      handleChangeFieldsRoom: this.handleChangeFieldsRoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 11\n      }\n    }) : '', this.state.isOpen ? /*#__PURE__*/React.createElement(EventDetails, {\n      values: this.state,\n      handleCancel: this.handleCancel,\n      language: this.props.settings.languageId,\n      handleEdit: this.handleEdit,\n      handleNotifMailConfirmation: this.handleNotifMailConfirmation,\n      handleDeleteConfirmation: this.handleDeleteConfirmation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 11\n      }\n    }) : '', this.state.isOpenEdit ? /*#__PURE__*/React.createElement(EditEvent, {\n      handleChangeStartDate: this.handleChangeStartDate,\n      handleChangeEndDate: this.handleChangeEndDate,\n      modal: this.state.isOpenEdit,\n      handleEditConfirmation: this.handleEditConfirmation,\n      handleChangeFields: this.handleChangeFields,\n      handleChangeSubject: this.handleChangeSubject,\n      toggle: this.toggle,\n      handleToggle: this.handleToggle,\n      values: this.state,\n      rooms: this.props.rooms,\n      language: this.props.settings.languageId,\n      handleChangeFieldsProfessor: this.handleChangeFieldsProfessor,\n      handleChangeFieldsRoom: this.handleChangeFieldsRoom,\n      handleDateChange: this.handleDateChange,\n      handleDateEndChange: this.handleDateEndChange,\n      handleDateStartChange: this.handleDateStartChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 11\n      }\n    }) : null, this.state.isOpenModalConfirm ? /*#__PURE__*/React.createElement(ConfirmationEditEvent, {\n      modal: this.state.isOpenModalConfirm,\n      handleCancelEditEvent: this.handleCancelEditEvent,\n      handleChangeEvent: this.handleChangeEvent,\n      eventChecked: this.state.eventChecked,\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 11\n      }\n    }) : '', this.state.isOpenModalDelete ? /*#__PURE__*/React.createElement(ConfirmationDeleteEvent, {\n      item: this.state.deleteItem,\n      modal: this.state.isOpenModalDelete,\n      handleCancelNotif: this.handleCancelNotif,\n      handleSubmitDelete: this.handleSubmitDelete,\n      typeDeleteChecked: this.state.typeDeleteChecked,\n      handleChangeTypeDelete: this.handleChangeTypeDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 11\n      }\n    }) : '', this.state.isOpenModalConfimationNotif ? /*#__PURE__*/React.createElement(ConfirmationNotifMail, {\n      modal: this.state.isOpenModalConfimationNotif,\n      handleCancelNotif: this.handleCancelNotif,\n      handleSubmitNotif: this.handleSubmitNotif,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 11\n      }\n    }) : '', this.props.errorStatus ? /*#__PURE__*/React.createElement(AlerteDelete, {\n      modal: this.props.errorStatus,\n      message: this.props.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1052,\n        columnNumber: 11\n      }\n    }) : '', /*#__PURE__*/React.createElement(SweetAlert, {\n      show: this.state.show,\n      title: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.planning.alert.message.add.event\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1058,\n          columnNumber: 18\n        }\n      }),\n      onConfirm: this.onConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: this.props.showMessageEvent,\n      autoHideDuration: 3000,\n      onClose: this.handleRequestClose,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: /*#__PURE__*/React.createElement(\"span\", {\n        id: \"message-id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1069,\n          columnNumber: 20\n        }\n      }, this.props.alertMessage),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    classes: state.classes,\n    establishments: state.establishment.remoteEstablishments,\n    userProfile: state.auth.userProfile,\n    rooms: state.rooms.rooms,\n    events: state.planning.events,\n    alertMessage: state.planning.alertMessage,\n    showMessageEvent: state.planning.showMessageEvent,\n    startTime: state.settings.startTime,\n    endTime: state.settings.endTime,\n    settings: state.settings.locale.languageId,\n    courseAssignment: state.AssignementReducer.courseAssignment,\n    professors: state.professor.professors,\n    settings: state.settings.locale,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message\n  };\n};\n\nexport default connect(mapStateToProps)(Planning);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/Assiduity/routes/Planning/Planning.js"],"names":["React","_","moment","AddEvent","PlanningCalendar","getRoomsByEstablshment","connect","getData","getProfessors","getProfesseurByEstablishmentId","addEvent","handleEventRequestClose","getEventsByEstabAndSchoolYear","editEvent","deleteEvent","getAssignementCourse","Snackbar","classService","SweetAlert","IntlMessages","removeEventList","EditEvent","roleIdSuperAdmin","EventDetails","ConfirmationEditEvent","ConfirmationNotifMail","ConfirmationDeleteEvent","UncontrolledAlert","AlerteDelete","Planning","Component","constructor","props","handleDeleteConfirmation","event","setState","isOpen","deleteItem","isOpenModalDelete","handleSubmitDelete","startTimeDate","state","start","format","endTimeDate","end","data","id","typeDeleteChecked","newRepetition","repetition","filter","element","idRepetition","status","dispatch","userProfile","establishment_id","school_year_id","classe","classId","undefined","handleSubmitNotif","obj","subjectName","detailsMailNotif","eventType","profName","profSurname","roomName","classeName","apiEndpoint","localStorage","token","post","then","response","notificationData","length","messageAlerte","alerteNotif","colorNotif","setTimeout","isOpenModalConfimationNotif","handleCancelNotif","handleNotifMailConfirmation","handleDateStartChange","date","startHourEventError","_d","isBefore","endHours","startHours","handleDateEndChange","endHourEventError","isAfter","handleDateChange","y","year","M","month","d","h","hour","m","minutes","dateEvent","handleChangeEvent","name","target","value","handleChangeTypeDelete","handleEditConfirmation","preventDefault","isOpenModalConfirm","handleCancelEditEvent","handleEdit","course","courses","fk_id_subject_v4","subjectId","frequency","examFrequency","professor","professors","EventGategorie","isEmpty","subject","subjectColor","color","allFrequency","profId","fk_id_professor","profile","x","subtract","eventName","title","frequencyID","room","roomId","professorId","assignClassSubjectId","idEvent","className","isEditAction","isOpenEdit","handleCancel","displayEventDetails","details","handleChangeStartDate","startTimeEventError","handleChangeEndDate","endTimeEventError","toggle","tab","handleChangeEventType","handleChangeFields","disponibleRooms","establishementId","schoolYearId","get","checkData","rooms","indisponibleRooms","indexOf","indisponibleprofessors","catch","err","handleChangeFieldsProfessor","Professor","user","surname","handleChangeFieldsRoom","Room","handleChangeSubject","handleChangeClasse","courseAssignment","fk_id_class_v4","subjects","map","establishmentClass","find","courseAssignmentClass","handleChange","classrooms","classes","events","onConfirm","show","handleSubmit","e","expr","start_time","end_time","event_type","fk_id_room","fk_id_prof","fk_id_assign_class_subject","fk_id_profile_creator","console","log","dataSup","creatorName","creatorSurname","establishmentId","eventsEdited","eventChecked","modal","frequencyOption","loader","handleRequestClose","slotInfo","eventList","establishment","establishmentProfessor","subjectListByLevel","nameError","AllObject","label","options","weekday","day","addLesson","bind","handleToggle","profObject","UNSAFE_componentWillMount","role_id","activeClass","classInfo","componentWillUnmount","render","successStatus","message","match","establishments","startTime","endTime","settings","edit","languageId","errorStatus","vertical","horizontal","showMessageEvent","alertMessage","mapStateToProps","remoteEstablishments","auth","planning","locale","AssignementReducer","alert","success","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../../../../styles/app.scss';\nimport './Calendar.css';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport AddEvent from './AddEvent';\nimport PlanningCalendar from './PlanningCalendar';\nimport { getRoomsByEstablshment } from '../../../../../actions/roomAction';\nimport { connect } from 'react-redux';\nimport {\n  getData as getProfessors,\n  getProfesseurByEstablishmentId,\n} from '../../../../../actions/professorAction';\nimport {\n  addEvent,\n  handleEventRequestClose,\n  getEventsByEstabAndSchoolYear,\n  editEvent,\n  deleteEvent,\n} from '../../../../../actions/planningActions';\nimport { getAssignementCourse } from '../../../../../actions/AssignementAction';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { classService } from '../../../../../_services/class.service';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { removeEventList } from '../../../../../actions/planningActions';\nimport EditEvent from './EditEvent';\nimport { roleIdSuperAdmin } from '../../../../../config/config';\nimport EventDetails from './EventDetails';\nimport ConfirmationEditEvent from './ConfirmationEditEvent';\nimport ConfirmationNotifMail from './ConfirmationNotifMail';\nimport ConfirmationDeleteEvent from './ConfirmationDeleteEvent';\nimport { UncontrolledAlert } from 'reactstrap';\nimport AlerteDelete from './AlerteDelete';\nclass Planning extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      slotInfo: '',\n      eventList: [],\n      classrooms: [],\n      classe: {},\n      establishment: '',\n      establishmentClass: [],\n      establishmentProfessor: [],\n      subjectListByLevel: [],\n      show: false,\n      isOpenEdit: false,\n\n      courses: [],\n      subjects: [],\n      nameError: false,\n      professorId: '',\n      frequencyID: '',\n      room: '',\n      // event_type: \"lesson\",\n      subjectId: 0,\n      className: '',\n      startHours: '',\n      endHours: '',\n      dateEvent: '',\n      frequencyOption: false,\n      eventType: 'lesson',\n      loader: false,\n      eventName: '',\n      subject: '',\n      assignClassSubjectId: '',\n      professor: [],\n      roomName: '',\n      subjectName: '',\n      subjectColor: '',\n      profName: '',\n      profSurname: '',\n      idEvent: null,\n      isEditAction: false,\n      isOpenModalConfirm: false,\n      AllObject: {\n        // fk_id_establishment: 0,\n        // fk_id_level_v4: 0,\n        // fk_id_school_year: 0,\n        // fk_id_section_v4: 0,\n        // id: 0,\n        // name: 'All',\n      },\n      EventGategorie: '',\n      isOpen: false,\n      details: {},\n      eventChecked: 'thisEvent',\n      frequency: [],\n      allFrequency: [\n        {\n          value: 'weekly',\n          label: <IntlMessages id=\"data.weekly\" />,\n        },\n        {\n          value: 'fortnightly',\n          label: <IntlMessages id=\"data.fortnightly\" />,\n        },\n        {\n          value: 'annual',\n          label: <IntlMessages id=\"mode_payment.establishment.annual\" />,\n        },\n      ],\n      examFrequency: [\n        {\n          value: 'annual',\n          label: <IntlMessages id=\"mode_payment.establishment.annual\" />,\n        },\n      ],\n      options: {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric',\n      },\n      courseAssignmentClass: [],\n      endTimeEventError: true,\n      startTimeEventError: true,\n      endHourEventError: true,\n      startHourEventError: true,\n      detailsMailNotif: {},\n      isOpenModalConfimationNotif: false,\n      alerteNotif: false,\n      messageAlerte: '',\n      colorNotif: ' ',\n      disponibleRooms: [],\n      indisponibleprofessors: [],\n      isOpenModalDelete: false,\n      deleteItem: {},\n      typeDeleteChecked: 'all',\n    };\n\n    this.addLesson = this.addLesson.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeClasse = this.handleChangeClasse.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeFields = this.handleChangeFields.bind(this);\n    this.handleChangeFieldsProfessor = this.handleChangeFieldsProfessor.bind(this);\n    this.handleChangeFieldsRoom = this.handleChangeFieldsRoom.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeEventType = this.handleChangeEventType.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleChangeStartDate = this.handleChangeStartDate.bind(this);\n    this.handleChangeEndDate = this.handleChangeEndDate.bind(this);\n    this.displayEventDetails = this.displayEventDetails.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleEditConfirmation = this.handleEditConfirmation.bind(this);\n    this.handleCancelEditEvent = this.handleCancelEditEvent.bind(this);\n    this.handleChangeEvent = this.handleChangeEvent.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleDateEndChange = this.handleDateEndChange.bind(this);\n    this.handleDateStartChange = this.handleDateStartChange.bind(this);\n    this.handleNotifMailConfirmation = this.handleNotifMailConfirmation.bind(this);\n    this.handleCancelNotif = this.handleCancelNotif.bind(this);\n    this.handleSubmitNotif = this.handleSubmitNotif.bind(this);\n    this.handleDeleteConfirmation = this.handleDeleteConfirmation.bind(this);\n    this.handleSubmitDelete = this.handleSubmitDelete.bind(this);\n    this.handleChangeTypeDelete = this.handleChangeTypeDelete.bind(this);\n  }\n\n  handleDeleteConfirmation = (event) => {\n    this.setState({\n      isOpen: false,\n      deleteItem: event,\n      isOpenModalDelete: true,\n    });\n  };\n  handleSubmitDelete = () => {\n    let startTimeDate =\n      moment(this.state.deleteItem.start).format('YYYY-MM-DD') +\n      'T' +\n      moment(this.state.deleteItem.start).format('HH:mm:ssZ');\n    let endTimeDate =\n      moment(this.state.deleteItem.end).format('YYYY-MM-DD') +\n      'T' +\n      moment(this.state.deleteItem.end).format('HH:mm:ssZ');\n\n    let data = {};\n    data.id = this.state.deleteItem.id;\n    data.start = startTimeDate;\n    data.end = endTimeDate;\n\n    if (this.state.typeDeleteChecked == 'future') {\n      let newRepetition = this.state.deleteItem.repetition.filter(\n        (element) => element < this.state.deleteItem.idRepetition\n      );\n      data.repetition = newRepetition;\n      data.status = true;\n      this.props.dispatch(\n        deleteEvent(\n          this.state.typeDeleteChecked,\n          data,\n          this.props.userProfile.establishment_id,\n          this.props.userProfile.school_year_id,\n          this.state.classe.id\n        )\n      );\n    } else if (this.state.typeDeleteChecked == 'uniq') {\n      let newRepetition = this.state.deleteItem.repetition.filter(\n        (element) => element != this.state.deleteItem.idRepetition\n      );\n      data.repetition = newRepetition;\n      data.status = true;\n      this.props.dispatch(\n        deleteEvent(\n          this.state.typeDeleteChecked,\n          data,\n          this.props.userProfile.establishment_id,\n          this.props.userProfile.school_year_id,\n          this.state.classe.id\n        )\n      );\n    } else if (this.state.typeDeleteChecked == 'all') {\n      data.status = false;\n      let classId = this.state.classe.id == undefined ? 0 : this.state.classe.id;\n      this.props.dispatch(\n        deleteEvent(\n          this.state.typeDeleteChecked,\n          data,\n          this.props.userProfile.establishment_id,\n          this.props.userProfile.school_year_id,\n          classId\n        )\n      );\n    }\n    this.setState({\n      deleteItem: {},\n      isOpenModalDelete: false,\n      typeDeleteChecked: 'all',\n    });\n  };\n  handleSubmitNotif = () => {\n    let obj = {};\n    obj.subjectName = this.state.detailsMailNotif.subjectName;\n    obj.eventType = this.state.detailsMailNotif.eventType;\n    obj.profName = this.state.detailsMailNotif.profName;\n    obj.profSurname = this.state.detailsMailNotif.profSurname;\n    obj.roomName = this.state.detailsMailNotif.roomName;\n    obj.end = moment(this.state.detailsMailNotif.end).format('LT');\n    obj.start = moment(this.state.detailsMailNotif.start).format('LLLL');\n    obj.classId = this.state.detailsMailNotif.classId;\n    obj.classeName = this.state.detailsMailNotif.classeName;\n    let apiEndpoint = `/planning_events/absent-prof-notif?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, obj).then((response) => {\n      if (response.data.notificationData.length > 0) {\n        this.setState({\n          messageAlerte:\n            response.data.notificationData.length + ' Parents sont notifiés avec succées',\n          alerteNotif: true,\n          colorNotif: 'bg-success',\n        });\n        setTimeout(() => {\n          this.setState({ messageAlerte: '', alerteNotif: false });\n        }, 4000);\n      } else {\n        this.setState({\n          messageAlerte: ' Aucun Parent est notifié',\n          alerteNotif: true,\n          colorNotif: 'bg-danger',\n        });\n        setTimeout(() => {\n          this.setState({ messageAlerte: '', alerteNotif: false });\n        }, 4000);\n      }\n    });\n\n    this.setState({ detailsMailNotif: {}, isOpenModalConfimationNotif: false });\n  };\n  handleCancelNotif = () => {\n    this.setState({\n      detailsMailNotif: {},\n      isOpenModalConfimationNotif: false,\n      deleteItem: {},\n      isOpenModalDelete: false,\n      typeDeleteChecked: 'all',\n    });\n  };\n\n  handleNotifMailConfirmation = (event) => {\n    this.setState({\n      isOpen: false,\n      detailsMailNotif: event,\n      isOpenModalConfimationNotif: true,\n    });\n  };\n\n  handleDateStartChange = (date) => {\n    let startHourEventError = moment(date._d).isBefore(this.state.endHours);\n\n    this.setState({\n      startHours: date,\n      startHourEventError: startHourEventError,\n    });\n  };\n  handleDateEndChange = (date) => {\n    let endHourEventError = moment(date._d).isAfter(this.state.startHours);\n\n    this.setState({ endHours: date, endHourEventError: endHourEventError });\n  };\n\n  handleDateChange = (date) => {\n    let startHours = moment({\n      y: moment(date).year(),\n      M: moment(date).month(),\n      d: moment(date).format('DD'),\n      h: moment(this.state.startHours).hour(),\n      m: moment(this.state.startHours).minutes(),\n    });\n    let endHours = moment({\n      y: moment(date).year(),\n      M: moment(date).month(),\n      d: moment(date).format('DD'),\n      h: moment(this.state.endHours).hour(),\n      m: moment(this.state.endHours).minutes(),\n    });\n    this.setState({\n      startHours: moment(startHours).format(),\n      endHours: moment(endHours).format(),\n      dateEvent: moment(date).format(),\n    });\n  };\n\n  handleChangeEvent = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n  handleChangeTypeDelete = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n  handleEditConfirmation = (event) => {\n    event.preventDefault();\n    this.setState({ isOpenModalConfirm: true });\n  };\n\n  handleCancelEditEvent = () => {\n    this.setState({ isOpenModalConfirm: false });\n  };\n  handleEdit = (event) => {\n    const course = this.state.courses.filter(\n      (element) => element.fk_id_subject_v4 === event.subjectId\n    );\n\n    if (event.eventType === 'exam') {\n      const frequency = this.state.examFrequency;\n      this.setState({\n        frequency: frequency,\n        professor: this.props.professors,\n        EventGategorie: 1,\n      });\n      if (!_.isEmpty(course[0].course)) {\n        this.setState({\n          subjectName: course[0].subject.name,\n          subjectColor: course[0].subject.color,\n          endHours: event.end,\n        });\n      }\n    } else if (event.eventType === 'lesson') {\n      const frequency = this.state.allFrequency;\n      this.setState({ frequency: frequency });\n      if (!_.isEmpty(course[0].course)) {\n        const profId = course[0].course[0].fk_id_professor;\n        var professor = this.props.professors.filter((element) => {\n          if (!_.isEmpty(element.profile.professors)) {\n            var x = element.profile.professors[0].id;\n            if (x == profId) return element;\n          }\n        });\n\n        this.setState({\n          subjectName: course[0].subject.name,\n          subjectColor: course[0].subject.color,\n          professor: professor,\n          EventGategorie: 1,\n          endHours: event.end,\n        });\n      }\n    } else if (event.eventType === 'event') {\n      this.setState({\n        professor: this.props.professors,\n        EventGategorie: 1,\n        endHours: event.end,\n      });\n    } else {\n      this.setState({\n        EventGategorie: 0,\n        endHours: moment(event.end).subtract(1, 'days'),\n      });\n    }\n\n    this.setState({\n      isOpen: false,\n      startHours: event.start,\n      eventName: event.title,\n      frequencyID: event.frequency,\n      eventType: event.eventType,\n      room: event.roomId,\n      professorId: event.profId,\n      assignClassSubjectId: event.assignClassSubjectId,\n      subject: event.subjectId,\n      idEvent: event.id,\n      subjectId: event.subjectId,\n      profName: event.profName,\n      profSurname: event.profSurname,\n      className: event.classeName,\n      roomName: event.roomName,\n      isEditAction: true,\n      isOpenEdit: true,\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({ isOpen: false });\n  };\n\n  displayEventDetails = (event) => {\n    this.setState({ isOpen: true, details: event });\n  };\n\n  handleChangeStartDate = (date) => {\n    let startTimeEventError = moment(date._d).isBefore(this.state.endHours);\n\n    this.setState({\n      startHours: date._d,\n      startTimeEventError: startTimeEventError,\n    });\n  };\n  handleChangeEndDate = (date) => {\n    let endTimeEventError = moment(date._d).isAfter(this.state.startHours);\n\n    this.setState({\n      endHours: date._d,\n      endTimeEventError: endTimeEventError,\n    });\n  };\n\n  handleToggle() {\n    this.setState({\n      professorId: '',\n      frequencyID: '',\n      room: '',\n      eventType: 'lesson',\n      subjectId: '',\n      profObject: {},\n      isEditAction: false,\n      modal: false,\n      isOpenEdit: false,\n      disponibleRooms: [],\n      indisponibleprofessors: [],\n      subject: '',\n      professor: [],\n    });\n  }\n\n  toggle = (tab) => {\n    if (this.state.eventType !== tab) {\n      this.setState({\n        eventType: tab,\n      });\n    }\n    if (tab === 'exam') {\n      const frequency = this.state.examFrequency;\n      this.setState({ frequency: frequency });\n    } else {\n      const frequency = this.state.allFrequency;\n      this.setState({ frequency: frequency });\n    }\n  };\n\n  handleChangeEventType = () => {\n    if (this.state.EventGategorie == 1) {\n      this.setState({\n        eventType: 'lesson',\n      });\n    } else {\n      this.setState({\n        eventType: 'holidays',\n      });\n    }\n  };\n\n  handleChangeFields = (name) => (event) => {\n    if (this.state.eventType === 'event') {\n      this.setState({ professor: this.props.professors });\n    }\n    this.setState({\n      [name]: event.target.value,\n    });\n    if (name === 'frequencyID') {\n      let disponibleRooms = [];\n      const startHours = this.state.startHours;\n      const endHours = this.state.endHours;\n      let establishementId = this.props.userProfile.establishment_id;\n      let schoolYearId = this.props.userProfile.school_year_id;\n      let frequency = event.target.value;\n      let apiEndpoint = `/planning_events/check-planning/${establishementId}/${schoolYearId}/${startHours}/${endHours}/${frequency}?access_token=${localStorage.token}`;\n      classService\n        .get(apiEndpoint)\n        .then((response) => {\n          let data = response.data.checkData;\n          disponibleRooms = this.props.rooms.filter(\n            (element) => data.indisponibleRooms.indexOf(element.id) < 0\n          );\n          this.setState({\n            disponibleRooms,\n            indisponibleprofessors: data.indisponibleprofessors,\n            professor: [],\n            subject: '',\n            professorId: '',\n            room: '',\n          });\n        })\n        .catch((err) => {});\n    }\n  };\n\n  handleChangeFieldsProfessor = (name) => (event) => {\n    if (event.target.value !== undefined) {\n      var Professor = this.state.professor.filter(\n        (element) => element.profile.professors[0].id == event.target.value\n      );\n      this.setState({\n        [name]: event.target.value,\n        profName: Professor[0].profile.user.name,\n        profSurname: Professor[0].profile.user.surname,\n      });\n    }\n  };\n  handleChangeFieldsRoom = (name) => (event) => {\n    var Room = this.props.rooms.filter((element) => element.id == event.target.value);\n    this.setState({\n      [name]: event.target.value,\n      roomName: Room[0].name,\n    });\n  };\n\n  handleChangeSubject = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    const course = this.state.courses.filter(\n      (element) => element.fk_id_subject_v4 === event.target.value\n    );\n\n    if (!_.isEmpty(course[0].course)) {\n      this.setState({\n        subjectName: course[0].subject.name,\n        subjectColor: course[0].subject.color,\n      });\n      const assignClassSubjectId = course[0].id;\n      const profId = course[0].course[0].fk_id_professor;\n      let professor = this.props.professors.filter((element) => {\n        if (!_.isEmpty(element.profile.professors)) {\n          let professorId = element.profile.professors[0].id;\n          if (professorId == profId && this.state.indisponibleprofessors.indexOf(professorId) < 0)\n            return element;\n        }\n      });\n\n      this.setState({\n        assignClassSubjectId: assignClassSubjectId,\n        professor: professor,\n        subjectId: event.target.value,\n      });\n    }\n\n    if (this.state.eventType === 'exam') {\n      this.setState({ professor: this.props.professors });\n    }\n  };\n\n  handleChangeClasse = (name) => (event) => {\n    this.props.dispatch(\n      getEventsByEstabAndSchoolYear(\n        this.props.userProfile.establishment_id,\n        this.props.userProfile.school_year_id,\n        event.target.value.id\n      )\n    );\n    this.setState({ EventGategorie: event.target.value.id === 0 ? 0 : 1 });\n    if (event.target.value.id && event.target.value.id !== 0) {\n      let courseAssignment = this.props.courseAssignment.filter(\n        (element) => element.fk_id_class_v4 === event.target.value.id\n      );\n\n      let subjects = _.map(courseAssignment, 'subject');\n      let classe = this.state.establishmentClass.find(({ id }) => id === event.target.value.id);\n      this.setState({\n        courses: courseAssignment,\n        subjects: subjects,\n        classe: classe,\n        courseAssignmentClass: courseAssignment,\n      });\n    } else {\n      this.setState({\n        classe: { id: 0 },\n      });\n    }\n  };\n\n  handleChange = (name) => (event) => {\n    let classrooms = this.props.rooms.filter(\n      ({ establishment_id }) => establishment_id === event.target.value\n    );\n    let establishmentClass = this.props.classes.filter(\n      (classe) => classe.establishment_id === event.target.value\n    );\n    this.setState({\n      [name]: event.target.value,\n      establishmentClass: establishmentClass,\n      events: [],\n      classe: '',\n      classrooms: classrooms,\n    });\n  };\n\n  addLesson(slotInfo) {\n    if (_.isEmpty(this.state.classe)) {\n      this.setState({ show: true });\n    } else {\n      const startHours = moment(slotInfo.start);\n      const endHours = moment(slotInfo.end);\n      this.setState({\n        modal: true,\n        startHours: startHours,\n        endHours: endHours,\n        slotInfo: slotInfo,\n        eventList: [],\n        isOpen: false,\n      });\n    }\n  }\n  onConfirm = () => {\n    this.setState({\n      show: false,\n    });\n  };\n  UNSAFE_componentWillMount() {\n    const frequency = this.state.allFrequency;\n    this.setState({ frequency: frequency });\n    this.props.dispatch(\n      getAssignementCourse(\n        this.props.userProfile.establishment_id,\n        this.props.userProfile.school_year_id\n      )\n    );\n    this.props.dispatch(getProfesseurByEstablishmentId(this.props.userProfile.establishment_id));\n    this.props.dispatch(\n      getRoomsByEstablshment(\n        this.props.userProfile.establishment_id,\n        this.props.userProfile.school_year_id\n      )\n    );\n    if (this.props.userProfile.role_id !== roleIdSuperAdmin) {\n      let apiEndpoint =\n        `/class_v4?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=` +\n        this.props.userProfile.establishment_id +\n        `&filter[where][and][1][fk_id_school_year]=` +\n        this.props.userProfile.school_year_id;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let activeClass = response.data.filter((classInfo) => classInfo.status);\n          // activeClass.unshift(this.state.AllObject);\n          this.setState({\n            establishmentClass: activeClass,\n          });\n        }\n      });\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    var data = {};\n    const expr = this.state.eventType;\n\n    switch (expr) {\n      case 'lesson':\n        data.start_time = moment(this.state.startHours).format();\n        data.end_time = moment(this.state.endHours).format();\n        data.title = this.state.eventName;\n        data.frequency = this.state.frequencyID;\n        data.event_type = this.state.eventType;\n        data.status = true;\n        data.fk_id_room = this.state.room;\n        data.fk_id_prof = this.state.professorId;\n        data.fk_id_assign_class_subject = this.state.assignClassSubjectId;\n        data.fk_id_profile_creator = this.props.userProfile.id;\n        data.repetition =\n          this.state.frequencyID == 'weekly'\n            ? [\n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n                13,\n                14,\n                15,\n                16,\n                17,\n                18,\n                19,\n                20,\n                21,\n                22,\n                23,\n                24,\n                25,\n                26,\n                27,\n                28,\n              ]\n            : this.state.frequencyID == 'fortnightly'\n            ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n            : [0];\n\n        break;\n      case 'exam':\n        data.start_time = moment(this.state.startHours).format();\n        data.end_time = moment(this.state.endHours).format();\n        data.title = this.state.eventName;\n        data.frequency = this.state.frequencyID;\n        data.event_type = this.state.eventType;\n        data.status = true;\n        data.fk_id_room = this.state.room;\n        data.fk_id_prof = this.state.professorId;\n        data.fk_id_assign_class_subject = this.state.assignClassSubjectId;\n        data.fk_id_profile_creator = this.props.userProfile.id;\n        data.repetition = [0];\n        break;\n      case 'event':\n        data.start_time = moment(this.state.startHours).format();\n        data.end_time = moment(this.state.endHours).format();\n        data.title = this.state.eventName;\n        data.frequency = this.state.frequencyID;\n        data.event_type = this.state.eventType;\n        data.status = true;\n        data.fk_id_room = this.state.room;\n        data.fk_id_prof = this.state.professorId;\n        data.fk_id_assign_class_subject = this.state.courseAssignmentClass[0].id;\n        data.fk_id_profile_creator = this.props.userProfile.id;\n        data.repetition =\n          this.state.frequencyID == 'weekly'\n            ? [\n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n                13,\n                14,\n                15,\n                16,\n                17,\n                18,\n                19,\n                20,\n                21,\n                22,\n                23,\n                24,\n                25,\n                26,\n                27,\n                28,\n              ]\n            : this.state.frequencyID == 'fortnightly'\n            ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n            : [0];\n        break;\n      case 'holidays':\n        data.start_time = moment(this.state.startHours).format();\n        data.end_time = moment(this.state.startHours).format();\n        data.title = this.state.eventName;\n        data.frequency = 'unique';\n        data.event_type = this.state.eventType;\n        data.status = true;\n        data.fk_id_room = null;\n        data.fk_id_prof = null;\n        data.fk_id_assign_class_subject = this.props.courseAssignment[0].id;\n        data.fk_id_profile_creator = this.props.userProfile.id;\n        data.repetition = [0];\n        break;\n      case 'schoolVacation':\n        data.start_time = moment(this.state.startHours).format();\n        data.end_time = moment(this.state.endHours).format();\n        data.title = this.state.eventName;\n        data.frequency = 'unique';\n        data.event_type = this.state.eventType;\n        data.status = true;\n        data.fk_id_room = null;\n        data.fk_id_prof = null;\n        data.fk_id_assign_class_subject = this.props.courseAssignment[0].id;\n        data.fk_id_profile_creator = this.props.userProfile.id;\n        data.repetition = [0];\n        break;\n      default:\n        console.log(`Sorry, we are out of ${expr}.`);\n    }\n    var dataSup = {};\n    dataSup.className = this.state.className;\n    dataSup.classId = this.state.classe.id;\n    dataSup.creatorName = this.props.userProfile.user.name;\n    dataSup.creatorSurname = this.props.userProfile.user.surname;\n\n    dataSup.roomName = this.state.roomName;\n    dataSup.subjectName = this.state.subjectName;\n    dataSup.subjectColor = this.state.subjectColor;\n    dataSup.profName = this.state.profName;\n    dataSup.profSurname = this.state.profSurname;\n    dataSup.subjectId = this.state.subjectId;\n\n    dataSup.establishmentId = this.props.userProfile.establishment_id;\n    dataSup.schoolYearId = this.props.userProfile.school_year_id;\n    if (this.state.isEditAction === true) {\n      //edit action\n\n      data.id = this.state.idEvent;\n      dataSup.eventsEdited = this.state.eventChecked;\n\n      this.props.dispatch(editEvent(data, dataSup));\n      this.setState({ isEditAction: false });\n    } else {\n      //add action\n      this.props.dispatch(addEvent(data, dataSup));\n    }\n\n    this.setState({\n      modal: false,\n      professorId: '',\n      frequencyID: '',\n      room: '',\n      subjectId: 0,\n      className: '',\n      startHours: '',\n      endHours: '',\n      dateEvent: '',\n      frequencyOption: false,\n      eventType: 'lesson',\n      loader: false,\n      eventName: '',\n      subject: '',\n      assignClassSubjectId: '',\n      professor: [],\n      roomName: '',\n      subjectName: '',\n      subjectColor: '',\n      profName: '',\n      profSurname: '',\n      isOpenEdit: false,\n      isOpenModalConfirm: false,\n    });\n  };\n\n  handleRequestClose = () => {\n    this.props.dispatch(handleEventRequestClose());\n  };\n\n  componentWillUnmount() {\n    this.props.dispatch(removeEventList());\n  }\n  // edit(event) {\n  //   let params = {\n  //     startHours: moment(event.start).format(\"YYYY-MM-DD HH:mm:ss\"),\n  //     endHours: moment(event.end).format(\"YYYY-MM-DD HH:mm:ss\"),\n  //     establishmentId: this.props.userProfile.establishment_id,\n  //     classe: this.state.classe.id,\n  //   };\n\n  //   let apiEndpoint = `/rooms/get-disposable-rooms/${JSON.stringify(\n  //     params\n  //   )}?access_token=${localStorage.token}`;\n  //   classService\n  //     .get(apiEndpoint)\n  //     .then((response) => {\n  //       this.setState({\n  //         classrooms: response.data.rooms,\n  //         establishment: this.props.userProfile.establishment_id,\n  //       });\n  //     })\n  //     .catch((err) => {});\n\n  //   this.setState({\n  //     modalEdit: true,\n  //     event: event,\n  //   });\n  // }\n  // closeEdit() {\n  //   this.setState({\n  //     modalEdit: false,\n  //   });\n  // }\n\n  render() {\n    return (\n      <div className=\"animated slideInUpTiny animation-duration-3\">\n        {this.state.alerteNotif ? (\n          <UncontrolledAlert\n            className={`alert-addon-card ${this.state.colorNotif} text-white shadow-lg`}\n          >\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\"> {this.state.messageAlerte} </span>\n          </UncontrolledAlert>\n        ) : (\n          ''\n        )}\n        {/* {this.props.errorStatus ? (\n          <UncontrolledAlert className=\"alert-addon-card bg-danger   text-white shadow-lg\">\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\"> {this.props.message} </span>\n          </UncontrolledAlert>\n        ) : (\n          ''\n        )} */}\n        {this.props.successStatus ? (\n          <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\"> {this.props.message} </span>\n          </UncontrolledAlert>\n        ) : (\n          ''\n        )}\n        <PlanningCalendar\n          events={this.props.events}\n          displayEventDetails={this.displayEventDetails}\n          subjects={this.props.subjects}\n          match={this.props.match}\n          userProfile={this.props.userProfile}\n          addLesson={this.addLesson}\n          classes={this.props.classes}\n          establishments={this.props.establishments}\n          establishment={this.state.establishment}\n          handleChangeClasse={this.handleChangeClasse}\n          handleChange={this.handleChange}\n          establishmentClass={this.state.establishmentClass}\n          establishmentProfessor={this.state.establishmentProfessor}\n          startTime={this.props.startTime}\n          endTime={this.props.endTime}\n          appLang={this.props.settings}\n          edit={this.edit}\n        />\n        {this.state.modal ? (\n          <AddEvent\n            handleChangeStartDate={this.handleChangeStartDate}\n            handleChangeEndDate={this.handleChangeEndDate}\n            modal={this.state.modal}\n            startDateLesson={this.state.startHours}\n            endDateLesson={this.state.endHours}\n            handleSubmit={this.handleSubmit}\n            handleChangeFields={this.handleChangeFields}\n            handleChangeSubject={this.handleChangeSubject}\n            handleChangeEventType={this.handleChangeEventType}\n            toggle={this.toggle}\n            handleToggle={this.handleToggle}\n            values={this.state}\n            rooms={this.state.disponibleRooms}\n            language={this.props.settings.languageId}\n            handleChangeFieldsProfessor={this.handleChangeFieldsProfessor}\n            handleChangeFieldsRoom={this.handleChangeFieldsRoom}\n          />\n        ) : (\n          ''\n        )}\n\n        {this.state.isOpen ? (\n          <EventDetails\n            values={this.state}\n            handleCancel={this.handleCancel}\n            language={this.props.settings.languageId}\n            handleEdit={this.handleEdit}\n            handleNotifMailConfirmation={this.handleNotifMailConfirmation}\n            handleDeleteConfirmation={this.handleDeleteConfirmation}\n          />\n        ) : (\n          ''\n        )}\n\n        {this.state.isOpenEdit ? (\n          <EditEvent\n            handleChangeStartDate={this.handleChangeStartDate}\n            handleChangeEndDate={this.handleChangeEndDate}\n            modal={this.state.isOpenEdit}\n            handleEditConfirmation={this.handleEditConfirmation}\n            handleChangeFields={this.handleChangeFields}\n            handleChangeSubject={this.handleChangeSubject}\n            toggle={this.toggle}\n            handleToggle={this.handleToggle}\n            values={this.state}\n            rooms={this.props.rooms}\n            language={this.props.settings.languageId}\n            handleChangeFieldsProfessor={this.handleChangeFieldsProfessor}\n            handleChangeFieldsRoom={this.handleChangeFieldsRoom}\n            handleDateChange={this.handleDateChange}\n            handleDateEndChange={this.handleDateEndChange}\n            handleDateStartChange={this.handleDateStartChange}\n          />\n        ) : null}\n        {this.state.isOpenModalConfirm ? (\n          <ConfirmationEditEvent\n            modal={this.state.isOpenModalConfirm}\n            handleCancelEditEvent={this.handleCancelEditEvent}\n            handleChangeEvent={this.handleChangeEvent}\n            eventChecked={this.state.eventChecked}\n            handleSubmit={this.handleSubmit}\n          />\n        ) : (\n          ''\n        )}\n        {this.state.isOpenModalDelete ? (\n          <ConfirmationDeleteEvent\n            item={this.state.deleteItem}\n            modal={this.state.isOpenModalDelete}\n            handleCancelNotif={this.handleCancelNotif}\n            handleSubmitDelete={this.handleSubmitDelete}\n            typeDeleteChecked={this.state.typeDeleteChecked}\n            handleChangeTypeDelete={this.handleChangeTypeDelete}\n          />\n        ) : (\n          ''\n        )}\n        {this.state.isOpenModalConfimationNotif ? (\n          <ConfirmationNotifMail\n            modal={this.state.isOpenModalConfimationNotif}\n            handleCancelNotif={this.handleCancelNotif}\n            handleSubmitNotif={this.handleSubmitNotif}\n          />\n        ) : (\n          ''\n        )}\n        {this.props.errorStatus ? (\n          <AlerteDelete modal={this.props.errorStatus} message={this.props.message} />\n        ) : (\n          ''\n        )}\n        <SweetAlert\n          show={this.state.show}\n          title={<IntlMessages id=\"components.planning.alert.message.add.event\" />}\n          onConfirm={this.onConfirm}\n        ></SweetAlert>\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={this.props.showMessageEvent}\n          autoHideDuration={3000}\n          onClose={this.handleRequestClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{this.props.alertMessage}</span>}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    classes: state.classes,\n    establishments: state.establishment.remoteEstablishments,\n    userProfile: state.auth.userProfile,\n    rooms: state.rooms.rooms,\n    events: state.planning.events,\n    alertMessage: state.planning.alertMessage,\n    showMessageEvent: state.planning.showMessageEvent,\n    startTime: state.settings.startTime,\n    endTime: state.settings.endTime,\n    settings: state.settings.locale.languageId,\n    courseAssignment: state.AssignementReducer.courseAssignment,\n    professors: state.professor.professors,\n    settings: state.settings.locale,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n  };\n};\n\nexport default connect(mapStateToProps)(Planning);\n"]},"metadata":{},"sourceType":"module"}