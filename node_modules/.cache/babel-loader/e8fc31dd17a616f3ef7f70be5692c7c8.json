{"ast":null,"code":"import { gradeService } from '../_services/grade.service';\nimport { GET_ALL_GRADES, ADD_GRADE, UPDATE_GRADE } from \"../constants/ActionTypes\";\nexport const getGrades = () => {\n  return dispatch => {\n    let apiEndpoint = `/grades?access_token=${localStorage.token}`;\n    gradeService.get(apiEndpoint).then(response => {\n      dispatch({\n        type: GET_ALL_GRADES,\n        payload: response.data\n      });\n    }).catch(err => {});\n  };\n};\nexport const addGrade = gradeItem => {\n  return dispatch => {\n    let apiEndpoint = '/grades';\n    gradeService.post(apiEndpoint, gradeItem).then(response => {\n      let data = response.data;\n      dispatch({\n        type: ADD_GRADE,\n        payload: data\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n};\nexport const updateGrade = gradeItem => {\n  return dispatch => {\n    let apiEndpoint = '/grades/' + gradeItem.id + `?access_token=${localStorage.token}`;\n    let value = gradeItem.value;\n    let comment = gradeItem.comment;\n    const student_id = gradeItem.student_id;\n    const class_id = gradeItem.class_id;\n    const exam_id = gradeItem.exam_id;\n    const data = {\n      value,\n      comment,\n      student_id,\n      class_id,\n      exam_id\n    };\n    gradeService.put(apiEndpoint, data).then(response => {\n      dispatch({\n        type: UPDATE_GRADE,\n        payload: response.data\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n};\nexport const gradeAction = {\n  getGrades,\n  addGrade,\n  updateGrade\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/actions/gradeAction.js"],"names":["gradeService","GET_ALL_GRADES","ADD_GRADE","UPDATE_GRADE","getGrades","dispatch","apiEndpoint","localStorage","token","get","then","response","type","payload","data","catch","err","addGrade","gradeItem","post","error","updateGrade","id","value","comment","student_id","class_id","exam_id","put","gradeAction"],"mappings":"AACA,SAASA,YAAT,QAA6B,4BAA7B;AACA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,YAApC,QAAwD,0BAAxD;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAOC,QAAQ,IAAI;AACjB,QAAIC,WAAW,GAAI,wBAAuBC,YAAY,CAACC,KAAM,EAA7D;AACAR,IAAAA,YAAY,CAACS,GAAb,CAAiBH,WAAjB,EAA8BI,IAA9B,CACGC,QAAD,IAAc;AACZN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEX,cAAR;AAAwBY,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA1C,OAAD,CAAR;AACD,KAHH,EAGKC,KAHL,CAGYC,GAAD,IAAS,CACjB,CAJH;AAKD,GAPD;AAQD,CATM;AAYP,OAAO,MAAMC,QAAQ,GAAIC,SAAD,IAAe;AACrC,SAAQb,QAAD,IAAc;AACnB,QAAIC,WAAW,GAAG,SAAlB;AACAN,IAAAA,YAAY,CAACmB,IAAb,CAAkBb,WAAlB,EAA+BY,SAA/B,EACGR,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIG,IAAI,GAAGH,QAAQ,CAACG,IAApB;AACAT,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEV,SAAR;AAAmBW,QAAAA,OAAO,EAAEC;AAA5B,OAAD,CAAR;AACD,KAJH,EAKGC,KALH,CAKSK,KAAK,IAAI;AAAE,YAAOA,KAAP;AAAe,KALnC;AAMD,GARD;AASD,CAVM;AAYP,OAAO,MAAMC,WAAW,GAAIH,SAAD,IAAe;AACxC,SAAQb,QAAD,IAAc;AACnB,QAAIC,WAAW,GAAG,aAAaY,SAAS,CAACI,EAAvB,GAA4B,iBAAgBf,YAAY,CAACC,KAAM,EAAjF;AACA,QAAIe,KAAK,GAAGL,SAAS,CAACK,KAAtB;AACA,QAAIC,OAAO,GAAGN,SAAS,CAACM,OAAxB;AACA,UAAMC,UAAU,GAAGP,SAAS,CAACO,UAA7B;AACA,UAAMC,QAAQ,GAAGR,SAAS,CAACQ,QAA3B;AACA,UAAMC,OAAO,GAAGT,SAAS,CAACS,OAA1B;AACA,UAAMb,IAAI,GAAG;AAAES,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA,UAAlB;AAA8BC,MAAAA,QAA9B;AAAwCC,MAAAA;AAAxC,KAAb;AACA3B,IAAAA,YAAY,CAAC4B,GAAb,CAAiBtB,WAAjB,EAA8BQ,IAA9B,EACGJ,IADH,CACQC,QAAQ,IAAI;AAChBN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAET,YAAR;AAAsBU,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAAxC,OAAD,CAAR;AACD,KAHH,EAGKC,KAHL,CAGWK,KAAK,IAAI;AAAE,YAAOA,KAAP;AAAe,KAHrC;AAID,GAZD;AAaD,CAdM;AAgBP,OAAO,MAAMS,WAAW,GAAG;AACzBzB,EAAAA,SADyB;AAEzBa,EAAAA,QAFyB;AAGzBI,EAAAA;AAHyB,CAApB","sourcesContent":["\nimport { gradeService } from '../_services/grade.service';\nimport { GET_ALL_GRADES, ADD_GRADE, UPDATE_GRADE } from \"../constants/ActionTypes\";\n\nexport const getGrades = () => {\n  return dispatch => {\n    let apiEndpoint = `/grades?access_token=${localStorage.token}`;\n    gradeService.get(apiEndpoint).then(\n      (response) => {\n        dispatch({ type: GET_ALL_GRADES, payload: response.data })\n      }).catch((err) => {\n      })\n  };\n};\n\n\nexport const addGrade = (gradeItem) => {\n  return (dispatch) => {\n    let apiEndpoint = '/grades';\n    gradeService.post(apiEndpoint, gradeItem)\n      .then(response => {\n        let data = response.data;\n        dispatch({ type: ADD_GRADE, payload: data })\n      })\n      .catch(error => { throw (error) });\n  };\n};\n\nexport const updateGrade = (gradeItem) => {\n  return (dispatch) => {\n    let apiEndpoint = '/grades/' + gradeItem.id +`?access_token=${localStorage.token}`;\n    let value = gradeItem.value;\n    let comment = gradeItem.comment;\n    const student_id = gradeItem.student_id;\n    const class_id = gradeItem.class_id;\n    const exam_id = gradeItem.exam_id;\n    const data = { value, comment, student_id, class_id, exam_id };\n    gradeService.put(apiEndpoint, data)\n      .then(response => {\n        dispatch({ type: UPDATE_GRADE, payload: response.data })\n      }).catch(error => { throw (error) });\n  };\n};\n\nexport const gradeAction = {\n  getGrades,\n  addGrade,\n  updateGrade\n};"]},"metadata":{},"sourceType":"module"}