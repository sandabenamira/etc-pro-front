{"ast":null,"code":"import _ from \"lodash\";\nimport { classService } from \"../_services/class.service\";\nimport axios from \"axios\";\nimport baseUrl from \"../config/config\";\nimport { SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from \"../constants/ActionTypes\";\nexport function getEstablishment() {\n  return dispatch => {\n    let apiEndpoint = `/establishments?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      const ListEstablishments = response.data;\n      const establishmentList = ListEstablishments.filter(element => element.status);\n      dispatch({\n        type: \"GET_ALL_ESTABLISHMENT\",\n        payload: establishmentList\n      }); //dispatch(addEstablishmentContainers(establishmentList));\n    }).catch(error => {});\n  };\n}\nexport function addEstablishmentContainers(listEstablishment) {\n  return dispatch => {\n    let apiEndpoint = `/containers?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      listEstablishment.map(establishment => {\n        if (_.some(response.data, [\"name\", establishment.name])) {} else {\n          let container = {\n            name: establishment.name\n          };\n          let formadata = new FormData();\n          formadata.append(\"image\", container);\n          let apiEndpoint2 = `/containers?access_token=${localStorage.token}`;\n          classService.post(apiEndpoint2, container);\n        }\n      });\n    }).catch(error => {});\n  };\n}\nexport function uploadFile2(payload, file) {\n  return dispatch => {\n    let formadata = new FormData();\n    formadata.append(\"image\", file);\n    const apiEndpoint = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n    axios({\n      url: apiEndpoint,\n      method: \"POST\",\n      data: formadata\n    }).then(response => {\n      if (response) {\n        axios.patch(`${baseUrl.baseUrl}/establishments/` + payload.id + `?access_token=${localStorage.token}`, {\n          logo: response.data.result.files.image[0].providerResponse.location\n        }).then(response => {\n          dispatch({\n            type: \"ADD_ESTABLISHMENT\",\n            payload: response.data\n          });\n        }).catch(error => {});\n      }\n    }).catch(error => {});\n  };\n}\nexport function saveEstablishment(payload, file) {\n  return dispatch => {\n    let establishmentData = {\n      name: payload.name,\n      ar_name: payload.ar_name,\n      address: payload.address,\n      code: payload.code,\n      city: payload.city,\n      countries_id: payload.countries_id,\n      phone: payload.phone,\n      email_establishment: payload.email_establishment,\n      website: payload.website,\n      surname_director: payload.surname_director,\n      name_director: payload.name_director,\n      email_director: payload.email_director,\n      phone_director: payload.phone_director,\n      estab_type_id: payload.estab_type_id,\n      fk_id_school_year_current: payload.currentYearId,\n      status: true,\n      module_id: payload.module_id,\n      logo: \"\",\n      matricule: payload.matricule,\n      tva: payload.tva,\n      capital: payload.capital,\n      siren: payload.siren,\n      siret: payload.siret,\n      rib: payload.rib,\n      iban: payload.iban\n    };\n    let apiEndpoint = `/establishments?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, establishmentData).then(response => {\n      if (file !== null) {\n        const fileExtension = file.name.replace(/^.*\\./, \"\");\n        const fileName = response.data.id + response.data.name + \".\" + fileExtension;\n        let dataWithFile = {\n          name: payload.name,\n          ar_name: payload.ar_name,\n          address: payload.address,\n          code: payload.code,\n          city: payload.city,\n          countries_id: payload.countries_id,\n          phone: payload.phone,\n          email_establishment: payload.email_establishment,\n          website: payload.website,\n          surname_director: payload.surname_director,\n          name_director: payload.name_director,\n          email_director: payload.email_director,\n          phone_director: payload.phone_director,\n          estab_type_id: payload.estab_type_id,\n          fk_id_school_year_current: payload.currentYearId,\n          status: true,\n          module_id: payload.module_id,\n          // logo: fileName,\n          matricule: payload.matricule,\n          tva: payload.tva,\n          capital: payload.capital,\n          siren: payload.siren,\n          siret: payload.siret,\n          rib: payload.rib,\n          iban: payload.iban\n        };\n        const myNewFile = new File([file], fileName, {\n          type: file.type\n        });\n        dispatch(uploadFile2(response.data, myNewFile)); // let apiEndpoint2 =\n        //   `/establishments/` +\n        //   response.data.id +\n        //   `?access_token=${localStorage.token}`;\n        // classService\n        //   .put(apiEndpoint2, dataWithFile)\n        //   .then((response) => {\n        //     const myNewFile = new File([file], fileName, { type: file.type });\n        //     dispatch(uploadFile2(response.data, myNewFile));\n        //   })\n        //   .catch((error) => {});\n      } else {\n        let dataWithoutFile = {\n          name: payload.name,\n          ar_name: payload.ar_name,\n          address: payload.address,\n          code: payload.code,\n          city: payload.city,\n          countries_id: payload.countries_id,\n          phone: payload.phone,\n          email_establishment: payload.email_establishment,\n          website: payload.website,\n          surname_director: payload.surname_director,\n          name_director: payload.name_director,\n          email_director: payload.email_director,\n          phone_director: payload.phone_director,\n          estab_type_id: payload.estab_type_id,\n          fk_id_school_year_current: payload.currentYearId,\n          status: true,\n          module_id: payload.module_id,\n          logo: null,\n          matricule: payload.matricule,\n          tva: payload.tva,\n          capital: payload.capital,\n          siren: payload.siren,\n          siret: payload.siret,\n          rib: payload.rib,\n          iban: payload.iban\n        };\n        let apiEndpoint3 = `/establishments/` + response.data.id + `?access_token=${localStorage.token}`;\n        classService.put(apiEndpoint3, dataWithoutFile).then(response => {\n          if (response) {\n            dispatch({\n              type: \"ADD_ESTABLISHMENT\",\n              payload: response.data\n            });\n            dispatch({\n              type: SHOW_SUCCESS_MESSAGE,\n              payload: \"La création est effectuée avec succès\"\n            });\n            setTimeout(() => {\n              dispatch({\n                type: HIDE_SUCCESS_MESSAGE\n              });\n            }, 4000);\n          } else {\n            dispatch({\n              type: SHOW_ERROR_MESSAGE,\n              payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n            });\n            setTimeout(() => {\n              dispatch({\n                type: HIDE_ERROR_MESSAGE\n              });\n            }, 4000);\n          }\n        });\n      }\n    }).catch(error => {});\n  };\n}\nexport function saveEstablishments(establishment, file) {\n  let container = {\n    name: establishment.name\n  };\n  let formadata = new FormData();\n  formadata.append(\"image\", container);\n  return dispatch => {\n    dispatch(saveEstablishment(establishment, file)); // let apiEndpoint = `/containers?access_token=${localStorage.token}`;\n    // classService\n    //   .post(apiEndpoint, container)\n    //   .then(response => {\n    //     dispatch(saveEstablishment(establishment, file));\n    //   })\n    //   .catch(error => {\n    //   });\n  };\n}\nexport function deleteData(idItem) {\n  return dispatch => {\n    let apiEndpoint = `/establishments/` + idItem + `?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      const dataEstablishment = response.data;\n      let establishmentData = {\n        name: dataEstablishment.name,\n        ar_name: dataEstablishment.ar_name,\n        address: dataEstablishment.address,\n        code: dataEstablishment.code,\n        city: dataEstablishment.city,\n        countries_id: dataEstablishment.countries_id,\n        phone: dataEstablishment.phone,\n        email_establishment: dataEstablishment.email_establishment,\n        website: dataEstablishment.website,\n        surname_director: dataEstablishment.surname_director,\n        name_director: dataEstablishment.name_director,\n        email_director: dataEstablishment.email_director,\n        phone_director: dataEstablishment.phone_director,\n        estab_type_id: dataEstablishment.estab_type_id,\n        number_students: dataEstablishment.number_students,\n        contract_start_date: dataEstablishment.contract_start_date,\n        contract_end_date: dataEstablishment.contract_end_date,\n        number_sms: dataEstablishment.number_sms,\n        mode_payment: dataEstablishment.mode_payment,\n        status: false,\n        module_id: dataEstablishment.module_id,\n        id: dataEstablishment.id,\n        matricule: dataEstablishment.matricule,\n        tva: dataEstablishment.tva,\n        capital: dataEstablishment.capital,\n        siren: dataEstablishment.siren,\n        siret: dataEstablishment.siret,\n        rib: dataEstablishment.rib,\n        iban: dataEstablishment.iban\n      };\n      let apiEndpoint2 = `/establishments/` + dataEstablishment.id + `?access_token=${localStorage.token}`;\n      classService.put(apiEndpoint2, establishmentData).then(response => {\n        dispatch({\n          type: \"DELETE_ESTABLISHMENT\",\n          payload: response.data\n        });\n      }).catch(error => {});\n    }).catch(error => {});\n  };\n}\nexport function updateEstablishment(payload, file) {\n  if (file !== null) {\n    if (payload.logo !== null) {\n      return dispatch => {\n        let formadata = new FormData();\n        formadata.append(\"image\", file);\n        let apiEndpoint = `/containers/` + payload.name + \"/files/\" + payload.logo + `?access_token=${localStorage.token}`;\n        classService.delete(apiEndpoint, formadata).then(response => {\n          dispatch(updateEstablishData(payload, file));\n        }).catch(error => {});\n      };\n    } else {\n      return function (dispatch) {\n        dispatch(updateEstablishData(payload, file));\n      };\n    }\n  } else {\n    return dispatch => {\n      let data = {\n        name: payload.name,\n        ar_name: payload.ar_name,\n        address: payload.address,\n        code: payload.code,\n        city: payload.city,\n        countries_id: payload.countries_id,\n        phone: payload.phone,\n        email_establishment: payload.email_establishment,\n        website: payload.website,\n        surname_director: payload.surname_director,\n        name_director: payload.name_director,\n        email_director: payload.email_director,\n        phone_director: payload.phone_director,\n        estab_type_id: payload.estab_type_id,\n        fk_id_school_year_current: payload.currentYearId,\n        status: payload.status,\n        module_id: payload.module_id,\n        id: payload.id,\n        logo: payload.logo,\n        matricule: payload.matricule,\n        tva: payload.tva,\n        capital: payload.capital,\n        siren: payload.siren,\n        siret: payload.siret,\n        rib: payload.rib,\n        iban: payload.iban\n      };\n      let apiEndpoint = `/establishments/` + payload.id + `?access_token=${localStorage.token}`;\n      classService.put(apiEndpoint, data).then(response => {\n        dispatch({\n          type: \"EDIT_ESTABLISHMENT\",\n          payload: response.data\n        });\n        dispatch(deleteEstablishmentModules(payload.id));\n      }).catch(error => {});\n    };\n  }\n}\nexport function updateEstablishData(payload, file) {\n  return dispatch => {\n    const fileExtension = file.name.replace(/^.*\\./, \"\");\n    const fileName = payload.id + payload.name + \".\" + fileExtension;\n    const myNewFile = new File([file], fileName, {\n      type: file.type\n    });\n    let newData = {\n      name: payload.name,\n      ar_name: payload.ar_name,\n      address: payload.address,\n      code: payload.code,\n      city: payload.city,\n      countries_id: payload.countries_id,\n      phone: payload.phone,\n      email_establishment: payload.email_establishment,\n      website: payload.website,\n      surname_director: payload.surname_director,\n      name_director: payload.name_director,\n      email_director: payload.email_director,\n      phone_director: payload.phone_director,\n      estab_type_id: payload.estab_type_id,\n      fk_id_school_year_current: payload.currentYearId,\n      status: payload.status,\n      module_id: payload.module_id,\n      id: payload.id,\n      logo: fileName,\n      matricule: payload.matricule,\n      tva: payload.tva,\n      capital: payload.capital,\n      siren: payload.siren,\n      siret: payload.siret,\n      rib: payload.rib,\n      iban: payload.iban\n    };\n    let apiEndpoint = `/establishments/` + payload.id + `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, newData).then(response => {\n      dispatch(uploadEditFile(response.data, myNewFile));\n    }).catch(error => {});\n  };\n}\nexport function uploadEditFile(payload, file) {\n  return dispatch => {\n    let formadata = new FormData();\n    formadata.append(\"image\", file);\n    let apiEndpoint = `/containers/` + payload.name + `/upload?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, formadata).then(response => {\n      dispatch({\n        type: \"EDIT_ESTABLISHMENT\",\n        payload: payload\n      });\n      alert(\"L'ajout est effectué avec succès\");\n    }).catch(error => {});\n  };\n}\nexport function deleteEstablishmentModules(id) {\n  return dispatch => {\n    axios.get(`${baseUrl.baseUrl}/establishments/getModuleEstab/` + id + `?access_token=${localStorage.token}`).then(response => {}).catch(error => {});\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/establishmentAction.js"],"names":["_","classService","axios","baseUrl","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","getEstablishment","dispatch","apiEndpoint","localStorage","token","get","then","response","ListEstablishments","data","establishmentList","filter","element","status","type","payload","catch","error","addEstablishmentContainers","listEstablishment","map","establishment","some","name","container","formadata","FormData","append","apiEndpoint2","post","uploadFile2","file","url","method","patch","id","logo","result","files","image","providerResponse","location","saveEstablishment","establishmentData","ar_name","address","code","city","countries_id","phone","email_establishment","website","surname_director","name_director","email_director","phone_director","estab_type_id","fk_id_school_year_current","currentYearId","module_id","matricule","tva","capital","siren","siret","rib","iban","fileExtension","replace","fileName","dataWithFile","myNewFile","File","dataWithoutFile","apiEndpoint3","put","setTimeout","saveEstablishments","deleteData","idItem","dataEstablishment","number_students","contract_start_date","contract_end_date","number_sms","mode_payment","updateEstablishment","delete","updateEstablishData","deleteEstablishmentModules","newData","uploadEditFile","alert"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,oBAHF,EAIEC,oBAJF,QAKO,0BALP;AAOA,OAAO,SAASC,gBAAT,GAA4B;AACjC,SAAQC,QAAD,IAAc;AACnB,QAAIC,WAAW,GAAI,gCAA+BC,YAAY,CAACC,KAAM,EAArE;AACAX,IAAAA,YAAY,CACTY,GADH,CACOH,WADP,EAEGI,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMC,kBAAkB,GAAGD,QAAQ,CAACE,IAApC;AACA,YAAMC,iBAAiB,GAAGF,kBAAkB,CAACG,MAAnB,CACvBC,OAAD,IAAaA,OAAO,CAACC,MADG,CAA1B;AAGAZ,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAE,uBAAR;AAAiCC,QAAAA,OAAO,EAAEL;AAA1C,OAAD,CAAR,CALkB,CAMlB;AACD,KATH,EAUGM,KAVH,CAUUC,KAAD,IAAW,CAAE,CAVtB;AAWD,GAbD;AAcD;AACD,OAAO,SAASC,0BAAT,CAAoCC,iBAApC,EAAuD;AAC5D,SAAQlB,QAAD,IAAc;AACnB,QAAIC,WAAW,GAAI,4BAA2BC,YAAY,CAACC,KAAM,EAAjE;AACAX,IAAAA,YAAY,CACTY,GADH,CACOH,WADP,EAEGI,IAFH,CAESC,QAAD,IAAc;AAClBY,MAAAA,iBAAiB,CAACC,GAAlB,CAAuBC,aAAD,IAAmB;AACvC,YAAI7B,CAAC,CAAC8B,IAAF,CAAOf,QAAQ,CAACE,IAAhB,EAAsB,CAAC,MAAD,EAASY,aAAa,CAACE,IAAvB,CAAtB,CAAJ,EAAyD,CACxD,CADD,MACO;AACL,cAAIC,SAAS,GAAG;AAAED,YAAAA,IAAI,EAAEF,aAAa,CAACE;AAAtB,WAAhB;AACA,cAAIE,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACAD,UAAAA,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAA0BH,SAA1B;AACA,cAAII,YAAY,GAAI,4BAA2BzB,YAAY,CAACC,KAAM,EAAlE;AACAX,UAAAA,YAAY,CAACoC,IAAb,CAAkBD,YAAlB,EAAgCJ,SAAhC;AACD;AACF,OATD;AAUD,KAbH,EAcGR,KAdH,CAcUC,KAAD,IAAW,CAAE,CAdtB;AAeD,GAjBD;AAkBD;AAED,OAAO,SAASa,WAAT,CAAqBf,OAArB,EAA8BgB,IAA9B,EAAoC;AACzC,SAAQ9B,QAAD,IAAc;AACnB,QAAIwB,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAA0BI,IAA1B;AACA,UAAM7B,WAAW,GAAI,GAAEP,OAAO,CAACA,OAAQ,2DAA0DQ,YAAY,CAACC,KAAM,EAApH;AAEAV,IAAAA,KAAK,CAAC;AACJsC,MAAAA,GAAG,EAAE9B,WADD;AAEJ+B,MAAAA,MAAM,EAAE,MAFJ;AAGJxB,MAAAA,IAAI,EAAEgB;AAHF,KAAD,CAAL,CAKGnB,IALH,CAKSC,QAAD,IAAc;AAClB,UAAIA,QAAJ,EAAc;AACZb,QAAAA,KAAK,CACFwC,KADH,CAEK,GAAEvC,OAAO,CAACA,OAAQ,kBAAnB,GACEoB,OAAO,CAACoB,EADV,GAEG,iBAAgBhC,YAAY,CAACC,KAAM,EAJ1C,EAKI;AACEgC,UAAAA,IAAI,EACF7B,QAAQ,CAACE,IAAT,CAAc4B,MAAd,CAAqBC,KAArB,CAA2BC,KAA3B,CAAiC,CAAjC,EAAoCC,gBAApC,CAAqDC;AAFzD,SALJ,EAUGnC,IAVH,CAUSC,QAAD,IAAc;AAClBN,UAAAA,QAAQ,CAAC;AAAEa,YAAAA,IAAI,EAAE,mBAAR;AAA6BC,YAAAA,OAAO,EAAER,QAAQ,CAACE;AAA/C,WAAD,CAAR;AACD,SAZH,EAaGO,KAbH,CAaUC,KAAD,IAAW,CAAE,CAbtB;AAcD;AACF,KAtBH,EAuBGD,KAvBH,CAuBUC,KAAD,IAAW,CAAE,CAvBtB;AAwBD,GA7BD;AA8BD;AAED,OAAO,SAASyB,iBAAT,CAA2B3B,OAA3B,EAAoCgB,IAApC,EAA0C;AAC/C,SAAQ9B,QAAD,IAAc;AACnB,QAAI0C,iBAAiB,GAAG;AACtBpB,MAAAA,IAAI,EAAER,OAAO,CAACQ,IADQ;AAEtBqB,MAAAA,OAAO,EAAE7B,OAAO,CAAC6B,OAFK;AAGtBC,MAAAA,OAAO,EAAE9B,OAAO,CAAC8B,OAHK;AAItBC,MAAAA,IAAI,EAAE/B,OAAO,CAAC+B,IAJQ;AAKtBC,MAAAA,IAAI,EAAEhC,OAAO,CAACgC,IALQ;AAMtBC,MAAAA,YAAY,EAAEjC,OAAO,CAACiC,YANA;AAOtBC,MAAAA,KAAK,EAAElC,OAAO,CAACkC,KAPO;AAQtBC,MAAAA,mBAAmB,EAAEnC,OAAO,CAACmC,mBARP;AAStBC,MAAAA,OAAO,EAAEpC,OAAO,CAACoC,OATK;AAUtBC,MAAAA,gBAAgB,EAAErC,OAAO,CAACqC,gBAVJ;AAWtBC,MAAAA,aAAa,EAAEtC,OAAO,CAACsC,aAXD;AAYtBC,MAAAA,cAAc,EAAEvC,OAAO,CAACuC,cAZF;AAatBC,MAAAA,cAAc,EAAExC,OAAO,CAACwC,cAbF;AActBC,MAAAA,aAAa,EAAEzC,OAAO,CAACyC,aAdD;AAetBC,MAAAA,yBAAyB,EAAE1C,OAAO,CAAC2C,aAfb;AAgBtB7C,MAAAA,MAAM,EAAE,IAhBc;AAiBtB8C,MAAAA,SAAS,EAAE5C,OAAO,CAAC4C,SAjBG;AAkBtBvB,MAAAA,IAAI,EAAE,EAlBgB;AAmBtBwB,MAAAA,SAAS,EAAE7C,OAAO,CAAC6C,SAnBG;AAoBtBC,MAAAA,GAAG,EAAE9C,OAAO,CAAC8C,GApBS;AAqBtBC,MAAAA,OAAO,EAAE/C,OAAO,CAAC+C,OArBK;AAsBtBC,MAAAA,KAAK,EAAEhD,OAAO,CAACgD,KAtBO;AAuBtBC,MAAAA,KAAK,EAAEjD,OAAO,CAACiD,KAvBO;AAwBtBC,MAAAA,GAAG,EAAElD,OAAO,CAACkD,GAxBS;AAyBtBC,MAAAA,IAAI,EAAEnD,OAAO,CAACmD;AAzBQ,KAAxB;AA4BA,QAAIhE,WAAW,GAAI,gCAA+BC,YAAY,CAACC,KAAM,EAArE;AACAX,IAAAA,YAAY,CACToC,IADH,CACQ3B,WADR,EACqByC,iBADrB,EAEGrC,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIwB,IAAI,KAAK,IAAb,EAAmB;AACjB,cAAMoC,aAAa,GAAGpC,IAAI,CAACR,IAAL,CAAU6C,OAAV,CAAkB,OAAlB,EAA2B,EAA3B,CAAtB;AACA,cAAMC,QAAQ,GACZ9D,QAAQ,CAACE,IAAT,CAAc0B,EAAd,GAAmB5B,QAAQ,CAACE,IAAT,CAAcc,IAAjC,GAAwC,GAAxC,GAA8C4C,aADhD;AAEA,YAAIG,YAAY,GAAG;AACjB/C,UAAAA,IAAI,EAAER,OAAO,CAACQ,IADG;AAEjBqB,UAAAA,OAAO,EAAE7B,OAAO,CAAC6B,OAFA;AAGjBC,UAAAA,OAAO,EAAE9B,OAAO,CAAC8B,OAHA;AAIjBC,UAAAA,IAAI,EAAE/B,OAAO,CAAC+B,IAJG;AAKjBC,UAAAA,IAAI,EAAEhC,OAAO,CAACgC,IALG;AAMjBC,UAAAA,YAAY,EAAEjC,OAAO,CAACiC,YANL;AAOjBC,UAAAA,KAAK,EAAElC,OAAO,CAACkC,KAPE;AAQjBC,UAAAA,mBAAmB,EAAEnC,OAAO,CAACmC,mBARZ;AASjBC,UAAAA,OAAO,EAAEpC,OAAO,CAACoC,OATA;AAUjBC,UAAAA,gBAAgB,EAAErC,OAAO,CAACqC,gBAVT;AAWjBC,UAAAA,aAAa,EAAEtC,OAAO,CAACsC,aAXN;AAYjBC,UAAAA,cAAc,EAAEvC,OAAO,CAACuC,cAZP;AAajBC,UAAAA,cAAc,EAAExC,OAAO,CAACwC,cAbP;AAcjBC,UAAAA,aAAa,EAAEzC,OAAO,CAACyC,aAdN;AAejBC,UAAAA,yBAAyB,EAAE1C,OAAO,CAAC2C,aAflB;AAgBjB7C,UAAAA,MAAM,EAAE,IAhBS;AAiBjB8C,UAAAA,SAAS,EAAE5C,OAAO,CAAC4C,SAjBF;AAkBjB;AACAC,UAAAA,SAAS,EAAE7C,OAAO,CAAC6C,SAnBF;AAoBjBC,UAAAA,GAAG,EAAE9C,OAAO,CAAC8C,GApBI;AAqBjBC,UAAAA,OAAO,EAAE/C,OAAO,CAAC+C,OArBA;AAsBjBC,UAAAA,KAAK,EAAEhD,OAAO,CAACgD,KAtBE;AAuBjBC,UAAAA,KAAK,EAAEjD,OAAO,CAACiD,KAvBE;AAwBjBC,UAAAA,GAAG,EAAElD,OAAO,CAACkD,GAxBI;AAyBjBC,UAAAA,IAAI,EAAEnD,OAAO,CAACmD;AAzBG,SAAnB;AA2BA,cAAMK,SAAS,GAAG,IAAIC,IAAJ,CAAS,CAACzC,IAAD,CAAT,EAAiBsC,QAAjB,EAA2B;AAAEvD,UAAAA,IAAI,EAAEiB,IAAI,CAACjB;AAAb,SAA3B,CAAlB;AACAb,QAAAA,QAAQ,CAAC6B,WAAW,CAACvB,QAAQ,CAACE,IAAV,EAAgB8D,SAAhB,CAAZ,CAAR,CAhCiB,CAiCjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OA5CD,MA4CO;AACL,YAAIE,eAAe,GAAG;AACpBlD,UAAAA,IAAI,EAAER,OAAO,CAACQ,IADM;AAEpBqB,UAAAA,OAAO,EAAE7B,OAAO,CAAC6B,OAFG;AAGpBC,UAAAA,OAAO,EAAE9B,OAAO,CAAC8B,OAHG;AAIpBC,UAAAA,IAAI,EAAE/B,OAAO,CAAC+B,IAJM;AAKpBC,UAAAA,IAAI,EAAEhC,OAAO,CAACgC,IALM;AAMpBC,UAAAA,YAAY,EAAEjC,OAAO,CAACiC,YANF;AAOpBC,UAAAA,KAAK,EAAElC,OAAO,CAACkC,KAPK;AAQpBC,UAAAA,mBAAmB,EAAEnC,OAAO,CAACmC,mBART;AASpBC,UAAAA,OAAO,EAAEpC,OAAO,CAACoC,OATG;AAUpBC,UAAAA,gBAAgB,EAAErC,OAAO,CAACqC,gBAVN;AAWpBC,UAAAA,aAAa,EAAEtC,OAAO,CAACsC,aAXH;AAYpBC,UAAAA,cAAc,EAAEvC,OAAO,CAACuC,cAZJ;AAapBC,UAAAA,cAAc,EAAExC,OAAO,CAACwC,cAbJ;AAcpBC,UAAAA,aAAa,EAAEzC,OAAO,CAACyC,aAdH;AAepBC,UAAAA,yBAAyB,EAAE1C,OAAO,CAAC2C,aAff;AAgBpB7C,UAAAA,MAAM,EAAE,IAhBY;AAiBpB8C,UAAAA,SAAS,EAAE5C,OAAO,CAAC4C,SAjBC;AAkBpBvB,UAAAA,IAAI,EAAE,IAlBc;AAmBpBwB,UAAAA,SAAS,EAAE7C,OAAO,CAAC6C,SAnBC;AAoBpBC,UAAAA,GAAG,EAAE9C,OAAO,CAAC8C,GApBO;AAqBpBC,UAAAA,OAAO,EAAE/C,OAAO,CAAC+C,OArBG;AAsBpBC,UAAAA,KAAK,EAAEhD,OAAO,CAACgD,KAtBK;AAuBpBC,UAAAA,KAAK,EAAEjD,OAAO,CAACiD,KAvBK;AAwBpBC,UAAAA,GAAG,EAAClD,OAAO,CAACkD,GAxBQ;AAyBtBC,UAAAA,IAAI,EAACnD,OAAO,CAACmD;AAzBS,SAAtB;AA2BA,YAAIQ,YAAY,GACb,kBAAD,GACAnE,QAAQ,CAACE,IAAT,CAAc0B,EADd,GAEC,iBAAgBhC,YAAY,CAACC,KAAM,EAHtC;AAIAX,QAAAA,YAAY,CAACkF,GAAb,CAAiBD,YAAjB,EAA+BD,eAA/B,EAAgDnE,IAAhD,CAAsDC,QAAD,IAAc;AACjE,cAAIA,QAAJ,EAAc;AACZN,YAAAA,QAAQ,CAAC;AAAEa,cAAAA,IAAI,EAAE,mBAAR;AAA6BC,cAAAA,OAAO,EAAER,QAAQ,CAACE;AAA/C,aAAD,CAAR;AACAR,YAAAA,QAAQ,CAAC;AACPa,cAAAA,IAAI,EAAEf,oBADC;AAEPgB,cAAAA,OAAO,EAAE;AAFF,aAAD,CAAR;AAIA6D,YAAAA,UAAU,CAAC,MAAM;AACf3E,cAAAA,QAAQ,CAAC;AAAEa,gBAAAA,IAAI,EAAEhB;AAAR,eAAD,CAAR;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WATD,MASO;AACLG,YAAAA,QAAQ,CAAC;AACPa,cAAAA,IAAI,EAAElB,kBADC;AAEPmB,cAAAA,OAAO,EACL;AAHK,aAAD,CAAR;AAKA6D,YAAAA,UAAU,CAAC,MAAM;AACf3E,cAAAA,QAAQ,CAAC;AAAEa,gBAAAA,IAAI,EAAEjB;AAAR,eAAD,CAAR;AACD,aAFS,EAEP,IAFO,CAAV;AAGD;AACF,SApBD;AAqBD;AACF,KArGH,EAsGGmB,KAtGH,CAsGUC,KAAD,IAAW,CAAE,CAtGtB;AAuGD,GArID;AAsID;AAED,OAAO,SAAS4D,kBAAT,CAA4BxD,aAA5B,EAA2CU,IAA3C,EAAiD;AACtD,MAAIP,SAAS,GAAG;AAAED,IAAAA,IAAI,EAAEF,aAAa,CAACE;AAAtB,GAAhB;AACA,MAAIE,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAA0BH,SAA1B;AACA,SAAQvB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACyC,iBAAiB,CAACrB,aAAD,EAAgBU,IAAhB,CAAlB,CAAR,CADmB,CAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAVD;AAWD;AACD,OAAO,SAAS+C,UAAT,CAAoBC,MAApB,EAA4B;AACjC,SAAQ9E,QAAD,IAAc;AACnB,QAAIC,WAAW,GACZ,kBAAD,GAAqB6E,MAArB,GAA+B,iBAAgB5E,YAAY,CAACC,KAAM,EADpE;AAEAX,IAAAA,YAAY,CACTY,GADH,CACOH,WADP,EAEGI,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMyE,iBAAiB,GAAGzE,QAAQ,CAACE,IAAnC;AACA,UAAIkC,iBAAiB,GAAG;AACtBpB,QAAAA,IAAI,EAAEyD,iBAAiB,CAACzD,IADF;AAEtBqB,QAAAA,OAAO,EAAEoC,iBAAiB,CAACpC,OAFL;AAGtBC,QAAAA,OAAO,EAAEmC,iBAAiB,CAACnC,OAHL;AAItBC,QAAAA,IAAI,EAAEkC,iBAAiB,CAAClC,IAJF;AAKtBC,QAAAA,IAAI,EAAEiC,iBAAiB,CAACjC,IALF;AAMtBC,QAAAA,YAAY,EAAEgC,iBAAiB,CAAChC,YANV;AAOtBC,QAAAA,KAAK,EAAE+B,iBAAiB,CAAC/B,KAPH;AAQtBC,QAAAA,mBAAmB,EAAE8B,iBAAiB,CAAC9B,mBARjB;AAStBC,QAAAA,OAAO,EAAE6B,iBAAiB,CAAC7B,OATL;AAUtBC,QAAAA,gBAAgB,EAAE4B,iBAAiB,CAAC5B,gBAVd;AAWtBC,QAAAA,aAAa,EAAE2B,iBAAiB,CAAC3B,aAXX;AAYtBC,QAAAA,cAAc,EAAE0B,iBAAiB,CAAC1B,cAZZ;AAatBC,QAAAA,cAAc,EAAEyB,iBAAiB,CAACzB,cAbZ;AActBC,QAAAA,aAAa,EAAEwB,iBAAiB,CAACxB,aAdX;AAetByB,QAAAA,eAAe,EAAED,iBAAiB,CAACC,eAfb;AAgBtBC,QAAAA,mBAAmB,EAAEF,iBAAiB,CAACE,mBAhBjB;AAiBtBC,QAAAA,iBAAiB,EAAEH,iBAAiB,CAACG,iBAjBf;AAkBtBC,QAAAA,UAAU,EAAEJ,iBAAiB,CAACI,UAlBR;AAmBtBC,QAAAA,YAAY,EAAEL,iBAAiB,CAACK,YAnBV;AAoBtBxE,QAAAA,MAAM,EAAE,KApBc;AAqBtB8C,QAAAA,SAAS,EAAEqB,iBAAiB,CAACrB,SArBP;AAsBtBxB,QAAAA,EAAE,EAAE6C,iBAAiB,CAAC7C,EAtBA;AAuBtByB,QAAAA,SAAS,EAAEoB,iBAAiB,CAACpB,SAvBP;AAwBtBC,QAAAA,GAAG,EAAEmB,iBAAiB,CAACnB,GAxBD;AAyBtBC,QAAAA,OAAO,EAAEkB,iBAAiB,CAAClB,OAzBL;AA0BtBC,QAAAA,KAAK,EAAEiB,iBAAiB,CAACjB,KA1BH;AA2BtBC,QAAAA,KAAK,EAAEgB,iBAAiB,CAAChB,KA3BH;AA4BtBC,QAAAA,GAAG,EAAEe,iBAAiB,CAACf,GA5BD;AA6BtBC,QAAAA,IAAI,EAAEc,iBAAiB,CAACd;AA7BF,OAAxB;AA+BC,UAAItC,YAAY,GACd,kBAAD,GACAoD,iBAAiB,CAAC7C,EADlB,GAEC,iBAAgBhC,YAAY,CAACC,KAAM,EAHrC;AAIDX,MAAAA,YAAY,CACTkF,GADH,CACO/C,YADP,EACqBe,iBADrB,EAGGrC,IAHH,CAGSC,QAAD,IAAc;AAClBN,QAAAA,QAAQ,CAAC;AAAEa,UAAAA,IAAI,EAAE,sBAAR;AAAgCC,UAAAA,OAAO,EAAER,QAAQ,CAACE;AAAlD,SAAD,CAAR;AACD,OALH,EAMGO,KANH,CAMUC,KAAD,IAAW,CAAE,CANtB;AAOD,KA9CH,EA+CGD,KA/CH,CA+CUC,KAAD,IAAW,CAAE,CA/CtB;AAgDD,GAnDD;AAoDD;AAED,OAAO,SAASqE,mBAAT,CAA6BvE,OAA7B,EAAsCgB,IAAtC,EAA4C;AACjD,MAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,QAAIhB,OAAO,CAACqB,IAAR,KAAiB,IAArB,EAA2B;AACzB,aAAQnC,QAAD,IAAc;AACnB,YAAIwB,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACAD,QAAAA,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAA0BI,IAA1B;AACA,YAAI7B,WAAW,GACZ,cAAD,GACAa,OAAO,CAACQ,IADR,GAEA,SAFA,GAGAR,OAAO,CAACqB,IAHR,GAIC,iBAAgBjC,YAAY,CAACC,KAAM,EALtC;AAMAX,QAAAA,YAAY,CACT8F,MADH,CACUrF,WADV,EACuBuB,SADvB,EAEGnB,IAFH,CAESC,QAAD,IAAc;AAClBN,UAAAA,QAAQ,CAACuF,mBAAmB,CAACzE,OAAD,EAAUgB,IAAV,CAApB,CAAR;AACD,SAJH,EAKGf,KALH,CAKUC,KAAD,IAAW,CAAE,CALtB;AAMD,OAfD;AAgBD,KAjBD,MAiBO;AACL,aAAO,UAAShB,QAAT,EAAmB;AACxBA,QAAAA,QAAQ,CAACuF,mBAAmB,CAACzE,OAAD,EAAUgB,IAAV,CAApB,CAAR;AACD,OAFD;AAGD;AACF,GAvBD,MAuBO;AACL,WAAQ9B,QAAD,IAAc;AACnB,UAAIQ,IAAI,GAAG;AACTc,QAAAA,IAAI,EAAER,OAAO,CAACQ,IADL;AAETqB,QAAAA,OAAO,EAAE7B,OAAO,CAAC6B,OAFR;AAGTC,QAAAA,OAAO,EAAE9B,OAAO,CAAC8B,OAHR;AAITC,QAAAA,IAAI,EAAE/B,OAAO,CAAC+B,IAJL;AAKTC,QAAAA,IAAI,EAAEhC,OAAO,CAACgC,IALL;AAMTC,QAAAA,YAAY,EAAEjC,OAAO,CAACiC,YANb;AAOTC,QAAAA,KAAK,EAAElC,OAAO,CAACkC,KAPN;AAQTC,QAAAA,mBAAmB,EAAEnC,OAAO,CAACmC,mBARpB;AASTC,QAAAA,OAAO,EAAEpC,OAAO,CAACoC,OATR;AAUTC,QAAAA,gBAAgB,EAAErC,OAAO,CAACqC,gBAVjB;AAWTC,QAAAA,aAAa,EAAEtC,OAAO,CAACsC,aAXd;AAYTC,QAAAA,cAAc,EAAEvC,OAAO,CAACuC,cAZf;AAaTC,QAAAA,cAAc,EAAExC,OAAO,CAACwC,cAbf;AAcTC,QAAAA,aAAa,EAAEzC,OAAO,CAACyC,aAdd;AAeTC,QAAAA,yBAAyB,EAAE1C,OAAO,CAAC2C,aAf1B;AAgBT7C,QAAAA,MAAM,EAAEE,OAAO,CAACF,MAhBP;AAiBT8C,QAAAA,SAAS,EAAE5C,OAAO,CAAC4C,SAjBV;AAkBTxB,QAAAA,EAAE,EAAEpB,OAAO,CAACoB,EAlBH;AAmBTC,QAAAA,IAAI,EAAErB,OAAO,CAACqB,IAnBL;AAoBTwB,QAAAA,SAAS,EAAE7C,OAAO,CAAC6C,SApBV;AAqBTC,QAAAA,GAAG,EAAE9C,OAAO,CAAC8C,GArBJ;AAsBTC,QAAAA,OAAO,EAAE/C,OAAO,CAAC+C,OAtBR;AAuBTC,QAAAA,KAAK,EAAEhD,OAAO,CAACgD,KAvBN;AAwBTC,QAAAA,KAAK,EAAEjD,OAAO,CAACiD,KAxBN;AAyBTC,QAAAA,GAAG,EAAElD,OAAO,CAACkD,GAzBJ;AA0BTC,QAAAA,IAAI,EAAEnD,OAAO,CAACmD;AA1BL,OAAX;AA4BA,UAAIhE,WAAW,GACZ,kBAAD,GAAqBa,OAAO,CAACoB,EAA7B,GAAmC,iBAAgBhC,YAAY,CAACC,KAAM,EADxE;AAEAX,MAAAA,YAAY,CACTkF,GADH,CACOzE,WADP,EACoBO,IADpB,EAEGH,IAFH,CAESC,QAAD,IAAc;AAClBN,QAAAA,QAAQ,CAAC;AAAEa,UAAAA,IAAI,EAAE,oBAAR;AAA8BC,UAAAA,OAAO,EAAER,QAAQ,CAACE;AAAhD,SAAD,CAAR;AACAR,QAAAA,QAAQ,CAACwF,0BAA0B,CAAC1E,OAAO,CAACoB,EAAT,CAA3B,CAAR;AACD,OALH,EAMGnB,KANH,CAMUC,KAAD,IAAW,CAAE,CANtB;AAOD,KAtCD;AAuCD;AACF;AAED,OAAO,SAASuE,mBAAT,CAA6BzE,OAA7B,EAAsCgB,IAAtC,EAA4C;AACjD,SAAQ9B,QAAD,IAAc;AACnB,UAAMkE,aAAa,GAAGpC,IAAI,CAACR,IAAL,CAAU6C,OAAV,CAAkB,OAAlB,EAA2B,EAA3B,CAAtB;AACA,UAAMC,QAAQ,GAAGtD,OAAO,CAACoB,EAAR,GAAapB,OAAO,CAACQ,IAArB,GAA4B,GAA5B,GAAkC4C,aAAnD;AACA,UAAMI,SAAS,GAAG,IAAIC,IAAJ,CAAS,CAACzC,IAAD,CAAT,EAAiBsC,QAAjB,EAA2B;AAAEvD,MAAAA,IAAI,EAAEiB,IAAI,CAACjB;AAAb,KAA3B,CAAlB;AACA,QAAI4E,OAAO,GAAG;AACZnE,MAAAA,IAAI,EAAER,OAAO,CAACQ,IADF;AAEZqB,MAAAA,OAAO,EAAE7B,OAAO,CAAC6B,OAFL;AAGZC,MAAAA,OAAO,EAAE9B,OAAO,CAAC8B,OAHL;AAIZC,MAAAA,IAAI,EAAE/B,OAAO,CAAC+B,IAJF;AAKZC,MAAAA,IAAI,EAAEhC,OAAO,CAACgC,IALF;AAMZC,MAAAA,YAAY,EAAEjC,OAAO,CAACiC,YANV;AAOZC,MAAAA,KAAK,EAAElC,OAAO,CAACkC,KAPH;AAQZC,MAAAA,mBAAmB,EAAEnC,OAAO,CAACmC,mBARjB;AASZC,MAAAA,OAAO,EAAEpC,OAAO,CAACoC,OATL;AAUZC,MAAAA,gBAAgB,EAAErC,OAAO,CAACqC,gBAVd;AAWZC,MAAAA,aAAa,EAAEtC,OAAO,CAACsC,aAXX;AAYZC,MAAAA,cAAc,EAAEvC,OAAO,CAACuC,cAZZ;AAaZC,MAAAA,cAAc,EAAExC,OAAO,CAACwC,cAbZ;AAcZC,MAAAA,aAAa,EAAEzC,OAAO,CAACyC,aAdX;AAeZC,MAAAA,yBAAyB,EAAE1C,OAAO,CAAC2C,aAfvB;AAgBZ7C,MAAAA,MAAM,EAAEE,OAAO,CAACF,MAhBJ;AAiBZ8C,MAAAA,SAAS,EAAE5C,OAAO,CAAC4C,SAjBP;AAkBZxB,MAAAA,EAAE,EAAEpB,OAAO,CAACoB,EAlBA;AAmBZC,MAAAA,IAAI,EAAEiC,QAnBM;AAoBZT,MAAAA,SAAS,EAAE7C,OAAO,CAAC6C,SApBP;AAqBZC,MAAAA,GAAG,EAAE9C,OAAO,CAAC8C,GArBD;AAsBZC,MAAAA,OAAO,EAAE/C,OAAO,CAAC+C,OAtBL;AAuBZC,MAAAA,KAAK,EAAEhD,OAAO,CAACgD,KAvBH;AAwBZC,MAAAA,KAAK,EAAEjD,OAAO,CAACiD,KAxBH;AAyBZC,MAAAA,GAAG,EAAElD,OAAO,CAACkD,GAzBD;AA0BZC,MAAAA,IAAI,EAAEnD,OAAO,CAACmD;AA1BF,KAAd;AA4BA,QAAIhE,WAAW,GACZ,kBAAD,GAAqBa,OAAO,CAACoB,EAA7B,GAAmC,iBAAgBhC,YAAY,CAACC,KAAM,EADxE;AAEAX,IAAAA,YAAY,CACTkF,GADH,CACOzE,WADP,EACoBwF,OADpB,EAEGpF,IAFH,CAESC,QAAD,IAAc;AAClBN,MAAAA,QAAQ,CAAC0F,cAAc,CAACpF,QAAQ,CAACE,IAAV,EAAgB8D,SAAhB,CAAf,CAAR;AACD,KAJH,EAKGvD,KALH,CAKUC,KAAD,IAAW,CAAE,CALtB;AAMD,GAxCD;AAyCD;AAED,OAAO,SAAS0E,cAAT,CAAwB5E,OAAxB,EAAiCgB,IAAjC,EAAuC;AAC5C,SAAQ9B,QAAD,IAAc;AACnB,QAAIwB,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAA0BI,IAA1B;AACA,QAAI7B,WAAW,GACZ,cAAD,GACAa,OAAO,CAACQ,IADR,GAEC,wBAAuBpB,YAAY,CAACC,KAAM,EAH7C;AAIAX,IAAAA,YAAY,CACToC,IADH,CACQ3B,WADR,EACqBuB,SADrB,EAEGnB,IAFH,CAESC,QAAD,IAAc;AAClBN,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAE,oBAAR;AAA8BC,QAAAA,OAAO,EAAEA;AAAvC,OAAD,CAAR;AACA6E,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACD,KALH,EAMG5E,KANH,CAMUC,KAAD,IAAW,CAAE,CANtB;AAOD,GAdD;AAeD;AAED,OAAO,SAASwE,0BAAT,CAAoCtD,EAApC,EAAwC;AAC7C,SAAQlC,QAAD,IAAc;AACnBP,IAAAA,KAAK,CACFW,GADH,CAEK,GAAEV,OAAO,CAACA,OAAQ,iCAAnB,GACEwC,EADF,GAEG,iBAAgBhC,YAAY,CAACC,KAAM,EAJ1C,EAMGE,IANH,CAMSC,QAAD,IAAc,CAAE,CANxB,EAOGS,KAPH,CAOUC,KAAD,IAAW,CAAE,CAPtB;AAQD,GATD;AAUD","sourcesContent":["import _ from \"lodash\";\nimport { classService } from \"../_services/class.service\";\nimport axios from \"axios\";\nimport baseUrl from \"../config/config\";\nimport {\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n} from \"../constants/ActionTypes\";\n\nexport function getEstablishment() {\n  return (dispatch) => {\n    let apiEndpoint = `/establishments?access_token=${localStorage.token}`;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        const ListEstablishments = response.data;\n        const establishmentList = ListEstablishments.filter(\n          (element) => element.status\n        );\n        dispatch({ type: \"GET_ALL_ESTABLISHMENT\", payload: establishmentList });\n        //dispatch(addEstablishmentContainers(establishmentList));\n      })\n      .catch((error) => {});\n  };\n}\nexport function addEstablishmentContainers(listEstablishment) {\n  return (dispatch) => {\n    let apiEndpoint = `/containers?access_token=${localStorage.token}`;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        listEstablishment.map((establishment) => {\n          if (_.some(response.data, [\"name\", establishment.name])) {\n          } else {\n            let container = { name: establishment.name };\n            let formadata = new FormData();\n            formadata.append(\"image\", container);\n            let apiEndpoint2 = `/containers?access_token=${localStorage.token}`;\n            classService.post(apiEndpoint2, container);\n          }\n        });\n      })\n      .catch((error) => {});\n  };\n}\n\nexport function uploadFile2(payload, file) {\n  return (dispatch) => {\n    let formadata = new FormData();\n    formadata.append(\"image\", file);\n    const apiEndpoint = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n\n    axios({\n      url: apiEndpoint,\n      method: \"POST\",\n      data: formadata,\n    })\n      .then((response) => {\n        if (response) {\n          axios\n            .patch(\n              `${baseUrl.baseUrl}/establishments/` +\n                payload.id +\n                `?access_token=${localStorage.token}`,\n              {\n                logo:\n                  response.data.result.files.image[0].providerResponse.location,\n              }\n            )\n            .then((response) => {\n              dispatch({ type: \"ADD_ESTABLISHMENT\", payload: response.data });\n            })\n            .catch((error) => {});\n        }\n      })\n      .catch((error) => {});\n  };\n}\n\nexport function saveEstablishment(payload, file) {\n  return (dispatch) => {\n    let establishmentData = {\n      name: payload.name,\n      ar_name: payload.ar_name,\n      address: payload.address,\n      code: payload.code,\n      city: payload.city,\n      countries_id: payload.countries_id,\n      phone: payload.phone,\n      email_establishment: payload.email_establishment,\n      website: payload.website,\n      surname_director: payload.surname_director,\n      name_director: payload.name_director,\n      email_director: payload.email_director,\n      phone_director: payload.phone_director,\n      estab_type_id: payload.estab_type_id,\n      fk_id_school_year_current: payload.currentYearId,\n      status: true,\n      module_id: payload.module_id,\n      logo: \"\",\n      matricule: payload.matricule,\n      tva: payload.tva,\n      capital: payload.capital,\n      siren: payload.siren,\n      siret: payload.siret,\n      rib: payload.rib,\n      iban: payload.iban,\n    };\n\n    let apiEndpoint = `/establishments?access_token=${localStorage.token}`;\n    classService\n      .post(apiEndpoint, establishmentData)\n      .then((response) => {\n        if (file !== null) {\n          const fileExtension = file.name.replace(/^.*\\./, \"\");\n          const fileName =\n            response.data.id + response.data.name + \".\" + fileExtension;\n          let dataWithFile = {\n            name: payload.name,\n            ar_name: payload.ar_name,\n            address: payload.address,\n            code: payload.code,\n            city: payload.city,\n            countries_id: payload.countries_id,\n            phone: payload.phone,\n            email_establishment: payload.email_establishment,\n            website: payload.website,\n            surname_director: payload.surname_director,\n            name_director: payload.name_director,\n            email_director: payload.email_director,\n            phone_director: payload.phone_director,\n            estab_type_id: payload.estab_type_id,\n            fk_id_school_year_current: payload.currentYearId,\n            status: true,\n            module_id: payload.module_id,\n            // logo: fileName,\n            matricule: payload.matricule,\n            tva: payload.tva,\n            capital: payload.capital,\n            siren: payload.siren,\n            siret: payload.siret,\n            rib: payload.rib,\n            iban: payload.iban,\n          };\n          const myNewFile = new File([file], fileName, { type: file.type });\n          dispatch(uploadFile2(response.data, myNewFile));\n          // let apiEndpoint2 =\n          //   `/establishments/` +\n          //   response.data.id +\n          //   `?access_token=${localStorage.token}`;\n          // classService\n          //   .put(apiEndpoint2, dataWithFile)\n          //   .then((response) => {\n          //     const myNewFile = new File([file], fileName, { type: file.type });\n          //     dispatch(uploadFile2(response.data, myNewFile));\n          //   })\n          //   .catch((error) => {});\n        } else {\n          let dataWithoutFile = {\n            name: payload.name,\n            ar_name: payload.ar_name,\n            address: payload.address,\n            code: payload.code,\n            city: payload.city,\n            countries_id: payload.countries_id,\n            phone: payload.phone,\n            email_establishment: payload.email_establishment,\n            website: payload.website,\n            surname_director: payload.surname_director,\n            name_director: payload.name_director,\n            email_director: payload.email_director,\n            phone_director: payload.phone_director,\n            estab_type_id: payload.estab_type_id,\n            fk_id_school_year_current: payload.currentYearId,\n            status: true,\n            module_id: payload.module_id,\n            logo: null,\n            matricule: payload.matricule,\n            tva: payload.tva,\n            capital: payload.capital,\n            siren: payload.siren,\n            siret: payload.siret,\n            rib:payload.rib,\n          iban:payload.iban,\n          };\n          let apiEndpoint3 =\n            `/establishments/` +\n            response.data.id +\n            `?access_token=${localStorage.token}`;\n          classService.put(apiEndpoint3, dataWithoutFile).then((response) => {\n            if (response) {\n              dispatch({ type: \"ADD_ESTABLISHMENT\", payload: response.data });\n              dispatch({\n                type: SHOW_SUCCESS_MESSAGE,\n                payload: \"La création est effectuée avec succès\",\n              });\n              setTimeout(() => {\n                dispatch({ type: HIDE_SUCCESS_MESSAGE });\n              }, 4000);\n            } else {\n              dispatch({\n                type: SHOW_ERROR_MESSAGE,\n                payload:\n                  \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n              });\n              setTimeout(() => {\n                dispatch({ type: HIDE_ERROR_MESSAGE });\n              }, 4000);\n            }\n          });\n        }\n      })\n      .catch((error) => {});\n  };\n}\n\nexport function saveEstablishments(establishment, file) {\n  let container = { name: establishment.name };\n  let formadata = new FormData();\n  formadata.append(\"image\", container);\n  return (dispatch) => {\n    dispatch(saveEstablishment(establishment, file));\n    // let apiEndpoint = `/containers?access_token=${localStorage.token}`;\n    // classService\n    //   .post(apiEndpoint, container)\n    //   .then(response => {\n    //     dispatch(saveEstablishment(establishment, file));\n    //   })\n    //   .catch(error => {\n    //   });\n  };\n}\nexport function deleteData(idItem) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/establishments/` + idItem + `?access_token=${localStorage.token}`;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        const dataEstablishment = response.data;\n        let establishmentData = {\n          name: dataEstablishment.name,\n          ar_name: dataEstablishment.ar_name,\n          address: dataEstablishment.address,\n          code: dataEstablishment.code,\n          city: dataEstablishment.city,\n          countries_id: dataEstablishment.countries_id,\n          phone: dataEstablishment.phone,\n          email_establishment: dataEstablishment.email_establishment,\n          website: dataEstablishment.website,\n          surname_director: dataEstablishment.surname_director,\n          name_director: dataEstablishment.name_director,\n          email_director: dataEstablishment.email_director,\n          phone_director: dataEstablishment.phone_director,\n          estab_type_id: dataEstablishment.estab_type_id,\n          number_students: dataEstablishment.number_students,\n          contract_start_date: dataEstablishment.contract_start_date,\n          contract_end_date: dataEstablishment.contract_end_date,\n          number_sms: dataEstablishment.number_sms,\n          mode_payment: dataEstablishment.mode_payment,\n          status: false,\n          module_id: dataEstablishment.module_id,\n          id: dataEstablishment.id,\n          matricule: dataEstablishment.matricule,\n          tva: dataEstablishment.tva,\n          capital: dataEstablishment.capital,\n          siren: dataEstablishment.siren,\n          siret: dataEstablishment.siret,\n          rib: dataEstablishment.rib,\n          iban: dataEstablishment.iban,\n        };\n         let apiEndpoint2 =\n          `/establishments/` +\n          dataEstablishment.id +\n          `?access_token=${localStorage.token}`;\n        classService\n          .put(apiEndpoint2, establishmentData)\n\n          .then((response) => {\n            dispatch({ type: \"DELETE_ESTABLISHMENT\", payload: response.data });\n          })\n          .catch((error) => {});\n      })\n      .catch((error) => {});\n  };\n}\n\nexport function updateEstablishment(payload, file) {\n  if (file !== null) {\n    if (payload.logo !== null) {\n      return (dispatch) => {\n        let formadata = new FormData();\n        formadata.append(\"image\", file);\n        let apiEndpoint =\n          `/containers/` +\n          payload.name +\n          \"/files/\" +\n          payload.logo +\n          `?access_token=${localStorage.token}`;\n        classService\n          .delete(apiEndpoint, formadata)\n          .then((response) => {\n            dispatch(updateEstablishData(payload, file));\n          })\n          .catch((error) => {});\n      };\n    } else {\n      return function(dispatch) {\n        dispatch(updateEstablishData(payload, file));\n      };\n    }\n  } else {\n    return (dispatch) => {\n      let data = {\n        name: payload.name,\n        ar_name: payload.ar_name,\n        address: payload.address,\n        code: payload.code,\n        city: payload.city,\n        countries_id: payload.countries_id,\n        phone: payload.phone,\n        email_establishment: payload.email_establishment,\n        website: payload.website,\n        surname_director: payload.surname_director,\n        name_director: payload.name_director,\n        email_director: payload.email_director,\n        phone_director: payload.phone_director,\n        estab_type_id: payload.estab_type_id,\n        fk_id_school_year_current: payload.currentYearId,\n        status: payload.status,\n        module_id: payload.module_id,\n        id: payload.id,\n        logo: payload.logo,\n        matricule: payload.matricule,\n        tva: payload.tva,\n        capital: payload.capital,\n        siren: payload.siren,\n        siret: payload.siret,\n        rib: payload.rib,\n        iban: payload.iban,\n      };\n      let apiEndpoint =\n        `/establishments/` + payload.id + `?access_token=${localStorage.token}`;\n      classService\n        .put(apiEndpoint, data)\n        .then((response) => {\n          dispatch({ type: \"EDIT_ESTABLISHMENT\", payload: response.data });\n          dispatch(deleteEstablishmentModules(payload.id));\n        })\n        .catch((error) => {});\n    };\n  }\n}\n\nexport function updateEstablishData(payload, file) {\n  return (dispatch) => {\n    const fileExtension = file.name.replace(/^.*\\./, \"\");\n    const fileName = payload.id + payload.name + \".\" + fileExtension;\n    const myNewFile = new File([file], fileName, { type: file.type });\n    let newData = {\n      name: payload.name,\n      ar_name: payload.ar_name,\n      address: payload.address,\n      code: payload.code,\n      city: payload.city,\n      countries_id: payload.countries_id,\n      phone: payload.phone,\n      email_establishment: payload.email_establishment,\n      website: payload.website,\n      surname_director: payload.surname_director,\n      name_director: payload.name_director,\n      email_director: payload.email_director,\n      phone_director: payload.phone_director,\n      estab_type_id: payload.estab_type_id,\n      fk_id_school_year_current: payload.currentYearId,\n      status: payload.status,\n      module_id: payload.module_id,\n      id: payload.id,\n      logo: fileName,\n      matricule: payload.matricule,\n      tva: payload.tva,\n      capital: payload.capital,\n      siren: payload.siren,\n      siret: payload.siret,\n      rib: payload.rib,\n      iban: payload.iban,\n    };\n    let apiEndpoint =\n      `/establishments/` + payload.id + `?access_token=${localStorage.token}`;\n    classService\n      .put(apiEndpoint, newData)\n      .then((response) => {\n        dispatch(uploadEditFile(response.data, myNewFile));\n      })\n      .catch((error) => {});\n  };\n}\n\nexport function uploadEditFile(payload, file) {\n  return (dispatch) => {\n    let formadata = new FormData();\n    formadata.append(\"image\", file);\n    let apiEndpoint =\n      `/containers/` +\n      payload.name +\n      `/upload?access_token=${localStorage.token}`;\n    classService\n      .post(apiEndpoint, formadata)\n      .then((response) => {\n        dispatch({ type: \"EDIT_ESTABLISHMENT\", payload: payload });\n        alert(\"L'ajout est effectué avec succès\");\n      })\n      .catch((error) => {});\n  };\n}\n\nexport function deleteEstablishmentModules(id) {\n  return (dispatch) => {\n    axios\n      .get(\n        `${baseUrl.baseUrl}/establishments/getModuleEstab/` +\n          id +\n          `?access_token=${localStorage.token}`\n      )\n      .then((response) => {})\n      .catch((error) => {});\n  };\n}\n"]},"metadata":{},"sourceType":"module"}