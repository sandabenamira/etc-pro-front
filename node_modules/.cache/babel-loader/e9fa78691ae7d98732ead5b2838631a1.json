{"ast":null,"code":"import { classService } from '../_services/class.service';\nimport { FETECHED_ALL_VIRTUAL_CLASS, ADD_VIRTUAL_CLASS, EDIT_VIRTUAL_CLASS, DELETE_VIRTUAL_CLASS, HANDLE_REQUEST_CLOSE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from '../constants/ActionTypes';\nimport baseUrl from '../config/config';\nimport axios from 'axios';\nexport const addClassVirtual = itemClass => {\n  //1\n  return dispatch => {\n    let apiEndpoint = `/virtual_classes?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, itemClass).then(response => {\n      if (response) {\n        dispatch({\n          type: ADD_VIRTUAL_CLASS,\n          payload: response.data\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'La création est effectuée avec succès'\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};\nexport const getClassesVirtual = () => {\n  return dispatch => {\n    let apiEndpoint = `/virtual_classes?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      const list = response.data;\n      const ClassVirtualList = list.filter(element => element.status);\n      dispatch({\n        type: FETECHED_ALL_VIRTUAL_CLASS,\n        payload: ClassVirtualList\n      });\n    }).catch(err => {});\n  };\n};\nexport const getClassVirtualByEstablishmentId = establishmentId => {\n  return dispatch => {\n    let apiEndpoint = `/virtual_classes?access_token=${localStorage.token}&filter[where][establishment_id]=` + establishmentId;\n    classService.get(apiEndpoint).then(response => {\n      const list = response.data;\n      const ClassVirtualList = list.filter(element => element.status);\n      dispatch({\n        type: FETECHED_ALL_VIRTUAL_CLASS,\n        payload: ClassVirtualList\n      });\n    }).catch(err => {});\n  };\n};\nexport function deleteClassVirtual(itemId) {\n  return dispatch => {\n    axios.patch(`${baseUrl.baseUrl}/virtual_classes/` + itemId + `?access_token=${localStorage.token}`, {\n      status: false\n    }).then(response => {\n      dispatch({\n        type: DELETE_VIRTUAL_CLASS,\n        payload: response.data\n      });\n    }).catch(function (error) {});\n  };\n}\nexport function editClassVirtual(dataClassVirtual) {\n  return dispatch => {\n    let apiEndpoint = `/virtual_classes/` + dataClassVirtual.id + `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, dataClassVirtual).then(response => {\n      dispatch({\n        type: EDIT_VIRTUAL_CLASS,\n        payload: response.data\n      });\n      dispatch({\n        type: SHOW_SUCCESS_MESSAGE,\n        payload: 'La modification est effectuée avec succès'\n      });\n      setTimeout(() => {\n        dispatch({\n          type: HIDE_SUCCESS_MESSAGE\n        });\n      }, 4000);\n    });\n  };\n}\nexport const serviceAction = {\n  addClassVirtual,\n  getClassesVirtual,\n  deleteClassVirtual,\n  editClassVirtual,\n  getClassVirtualByEstablishmentId\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/VirtualClassAction.js"],"names":["classService","FETECHED_ALL_VIRTUAL_CLASS","ADD_VIRTUAL_CLASS","EDIT_VIRTUAL_CLASS","DELETE_VIRTUAL_CLASS","HANDLE_REQUEST_CLOSE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","baseUrl","axios","addClassVirtual","itemClass","dispatch","apiEndpoint","localStorage","token","post","then","response","type","payload","data","setTimeout","getClassesVirtual","get","list","ClassVirtualList","filter","element","status","catch","err","getClassVirtualByEstablishmentId","establishmentId","deleteClassVirtual","itemId","patch","error","editClassVirtual","dataClassVirtual","id","put","serviceAction"],"mappings":"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","sourcesContent":["import { classService } from '../_services/class.service';\nimport {\n  FETECHED_ALL_VIRTUAL_CLASS,\n  ADD_VIRTUAL_CLASS,\n  EDIT_VIRTUAL_CLASS,\n  DELETE_VIRTUAL_CLASS,\n  HANDLE_REQUEST_CLOSE,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n} from '../constants/ActionTypes';\nimport baseUrl from '../config/config';\nimport axios from 'axios';\nexport const addClassVirtual = (itemClass) => {\n  //1\n  return (dispatch) => {\n    let apiEndpoint = `/virtual_classes?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, itemClass).then((response) => {\n      if (response) {\n        dispatch({ type: ADD_VIRTUAL_CLASS, payload: response.data });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'La création est effectuée avec succès',\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n\nexport const getClassesVirtual = () => {\n  return (dispatch) => {\n    let apiEndpoint = `/virtual_classes?access_token=${localStorage.token}`;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        const list = response.data;\n        const ClassVirtualList = list.filter((element) => element.status);\n        dispatch({\n          type: FETECHED_ALL_VIRTUAL_CLASS,\n          payload: ClassVirtualList,\n        });\n      })\n      .catch((err) => {});\n  };\n};\n\nexport const getClassVirtualByEstablishmentId = (establishmentId) => {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/virtual_classes?access_token=${localStorage.token}&filter[where][establishment_id]=` +\n      establishmentId;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        const list = response.data;\n        const ClassVirtualList = list.filter((element) => element.status);\n\n        dispatch({\n          type: FETECHED_ALL_VIRTUAL_CLASS,\n          payload: ClassVirtualList,\n        });\n      })\n      .catch((err) => {});\n  };\n};\n\nexport function deleteClassVirtual(itemId) {\n  return (dispatch) => {\n    axios\n      .patch(\n        `${baseUrl.baseUrl}/virtual_classes/` +\n          itemId +\n          `?access_token=${localStorage.token}`,\n        {\n          status: false,\n        }\n      )\n      .then((response) => {\n        dispatch({ type: DELETE_VIRTUAL_CLASS, payload: response.data });\n      })\n      .catch(function(error) {\n       });\n  };\n}\n\nexport function editClassVirtual(dataClassVirtual) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/virtual_classes/` +\n      dataClassVirtual.id +\n      `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, dataClassVirtual).then((response) => {\n      dispatch({ type: EDIT_VIRTUAL_CLASS, payload: response.data });\n      dispatch({\n        type: SHOW_SUCCESS_MESSAGE,\n        payload: 'La modification est effectuée avec succès',\n      });\n      setTimeout(() => {\n        dispatch({ type: HIDE_SUCCESS_MESSAGE });\n      }, 4000);\n    });\n  };\n}\n\nexport const serviceAction = {\n  addClassVirtual,\n  getClassesVirtual,\n  deleteClassVirtual,\n  editClassVirtual,\n  getClassVirtualByEstablishmentId,\n};\n"]},"metadata":{},"sourceType":"module"}