{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/HealthMonitoring/HealthMonitoring.js\";\nimport React from 'react';\nimport IntlMessages from '../../../util/IntlMessages';\nimport ContainerHeader from '../../../components/ContainerHeader/index';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport AddHealthFile from './AddHealthFile';\nimport HealthFileList from './HealthFileList';\nimport { addFicheMedical } from '../../../actions/HealthAction';\nimport { getFicheMedicalByEstablishmentId } from '../../../actions/HealthAction';\nimport { connect } from 'react-redux';\nimport { getSectionFromLevel } from '../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from '../../../actions/classLevelAction';\nimport axios from 'axios';\nimport baseUrl from '../../../config/config';\nimport { getSections } from '../../../actions/sectionAction';\nimport { getLevels } from '../../../actions/classLevelAction';\nimport { getLevelsVirtualClass } from '../../../actions/classLevelAction';\nimport { getClassesByEstablishmentId } from '../../../actions/classeAction';\nimport { UncontrolledAlert } from 'reactstrap';\nimport Can from '../../../can';\nimport { RoleContext } from '../../../Context';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { roleIdSuperAdmin } from '../../../config/config';\nimport { roleIdAdmin } from '../../../config/config';\nimport { roleIdDirector } from '../../../config/config';\nimport CardBox from \"../../../components/CardBox/index\";\nimport { classService } from \"../../../_services/class.service\";\n\nclass HealthMonitoring extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeClassStudent = name => event => {\n      let students = this.state.studentList.filter(student => student.class_id === event.target.value);\n      this.setState({\n        studentByclassID: students,\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeSection = name => event => {\n      var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === this.state.levelId && classe.section_id === event.target.value && classe.status);\n      this.setState({\n        [name]: event.target.value,\n        studentClassesByLevelSectionID: studentfiltredClasses\n      });\n    };\n\n    this.handleChangesLevel = name => event => {\n      if (event.target.value > 10) {\n        var studentSectionbyLevel = getSectionFromLevel(this.props.classSections, event.target.value);\n        this.setState({\n          [name]: event.target.value,\n          Disable_studentsection: false,\n          studentsectionByLevels: studentSectionbyLevel\n        });\n      } else {\n        var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === event.target.value && classe.status);\n        this.setState({\n          Disable_studentsection: true,\n          section_id: 0,\n          studentClassesByLevelSectionID: studentfiltredClasses,\n          [name]: event.target.value\n        });\n      }\n    };\n\n    this.handleCheck = event => {\n      var tab = this.state.checkedValues;\n      var test = this.state.checkedValues.findIndex(element => element == event.target.value);\n\n      if (test == -1) {\n        tab.push(parseInt(event.target.value, 10));\n        this.setState({\n          checkedValues: tab\n        });\n      } else {\n        tab.splice(test, 1);\n        this.setState({\n          checkedValues: tab\n        });\n      }\n    };\n\n    this.handleChangestudentLevel = name => event => {\n      if (event.target.value === '0') {\n        this.setState({\n          classId: '',\n          level_id: ''\n        });\n      } else {\n        this.setState({\n          section_id: 0,\n          classId: 0\n        });\n\n        if (event.target.value > 10) {\n          this.setState({\n            [name]: event.target.value\n          });\n          this.setState({\n            Disable_studentsection: false\n          });\n          var studentSectionbyLevel = getSectionFromLevel(this.props.classSections, event.target.value);\n          this.setState({\n            studentsectionByLevels: studentSectionbyLevel\n          });\n        } else {\n          this.setState({\n            level_id: event.target.value,\n            Disable_studentsection: true,\n            section_id: 0\n          });\n          const levelID = event.target.value;\n          var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.status);\n          this.setState({\n            studentClassesByLevelSectionID: studentfiltredClasses\n          });\n        }\n      }\n    };\n\n    this.handleChangestudentSection = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      const levelID = this.state.level_id;\n      const sectionID = event.target.value;\n      var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.section_id === sectionID && classe.status);\n      this.setState({\n        studentClassesByLevelSectionID: studentfiltredClasses\n      });\n    };\n\n    this.handleChangeClass = name => event => {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        axios.get(`${baseUrl.baseUrl}/students/fetchAllStudentsDataByClassID/` + event.target.value + `?access_token=${localStorage.token}`).then(res => {\n          this.setState({\n            studentByclassID: res.data.classData\n          });\n        });\n        this.setState({\n          establishment_id: this.props.userProfile.establishment_id\n        });\n      }\n\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeStudent = name => event => {\n      this.setState({\n        student_id: event.target.value\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.addHealthShowModal = () => {\n      this.setState({\n        addIsopen: true // level_id: '',\n        // section_id: '',\n        // establishment_id: '',\n        // class_id: '',\n        // student_id: '',\n\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        addIsopen: false\n      });\n    };\n\n    this.onDrop = e => {\n      let file = e.target.files[0];\n      this.setState({\n        userPhotos: file,\n        inputText: file.name\n      });\n    };\n\n    this.addHealthFile = () => {\n      var data = {}; // data.establishment_id = this.props.userProfile.establishment_id;\n      // data.student_id = this.state.student_id;\n      // data.class_id = this.state.class_id;\n      // data.nom_doctor = this.state.nom_doctor;\n      // data.prenom_doctor = this.state.prenom_doctor;\n      // data.phone_doctor = parseInt(this.state.phone_doctor, 10);\n      // data.blood_type = this.state.blood_type;\n      // data.poids = parseInt(this.state.poids, 10);\n      // data.hauteur = parseInt(this.state.hauteur, 10);\n      // data.problems = this.state.checkedValues;\n      // data.remarque = this.state.remarque;\n      // data.files = '1.png';\n      // data.status = true;\n      // data.mail_doctor = this.state.mail_doctor;\n\n      data.establishment_id = 2;\n      data.student_id = 30;\n      data.class_id = 3;\n      data.nom_doctor = \"Zied\";\n      data.prenom_doctor = \"Wafi\";\n      data.phone_doctor = parseInt(\"25147963\", 10);\n      data.blood_type = 1;\n      data.poids = parseInt(\"16\", 10);\n      data.hauteur = parseInt(\"188\", 10);\n      data.problems = [2, 3];\n      data.remarque = \"dqffffe\";\n      data.files = '1.png';\n      data.status = true;\n      data.mail_doctor = \"doc@gmail.com\";\n      this.props.addFicheMedical(data, this.state.userPhotos);\n      this.setState({\n        addIsopen: false,\n        level_id: '',\n        section_id: '',\n        class_id: '',\n        student_id: '',\n        blood_type: '',\n        poids: '',\n        hauteur: '',\n        prenom_doctor: '',\n        nom_doctor: '',\n        phone_doctor: '',\n        mail_doctor: '',\n        remarque: '',\n        userPhotos: null,\n        checkedBox: true,\n        inputText: '',\n        checkedValues: []\n      });\n    };\n\n    this.state = {\n      addIsopen: false,\n      level_id: '',\n      section_id: '',\n      establishment_id: '',\n      class_id: '',\n      student_id: '',\n      blood_type: '',\n      poids: '',\n      hauteur: '',\n      prenom_doctor: '',\n      nom_doctor: '',\n      phone_doctor: '',\n      mail_doctor: '',\n      remarque: '',\n      userPhotos: null,\n      checkedBox: true,\n      inputText: '',\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: [],\n      professorIdFilter: '',\n      professorClassesList: [],\n      professor_class_id: '',\n      selectedFilterDateProfessor: null,\n      studentByclassID: [],\n      levelId: 0,\n      sectionId: 0,\n      student_subject_id: '',\n      selectedFilterDateStudent: null,\n      studentList: [],\n      classId: '',\n      data: [{\n        id: 1,\n        name: 'Des yeux'\n      }, {\n        id: 2,\n        name: 'Coeur'\n      }, {\n        id: 3,\n        name: 'CUTANÉ'\n      }, {\n        id: 4,\n        name: 'Système respiratoire'\n      }, {\n        id: 5,\n        name: 'Des oreilles'\n      }, {\n        id: 6,\n        name: 'Tension'\n      }, {\n        id: 7,\n        name: 'Système musculo-squelettique'\n      }, {\n        id: 8,\n        name: 'Système respiratoire'\n      }, {\n        id: 9,\n        name: 'Système nerveux'\n      }],\n      checkedValues: [],\n      blood_group: [{\n        id: 1,\n        type: 'A+'\n      }, {\n        id: 2,\n        type: 'A-'\n      }, {\n        id: 3,\n        type: 'B+'\n      }, {\n        id: 4,\n        type: 'B-'\n      }, {\n        id: 5,\n        type: 'AB+'\n      }, {\n        id: 6,\n        type: 'AB-'\n      }, {\n        id: 7,\n        type: 'O+'\n      }, {\n        id: 8,\n        type: 'O-'\n      }]\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addHealthShowModal = this.addHealthShowModal.bind(this);\n    this.handleChangestudentLevel = this.handleChangestudentLevel.bind(this);\n    this.handleChangestudentSection = this.handleChangestudentSection.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.handleChangeStudent = this.handleChangeStudent.bind(this);\n    this.addHealthFile = this.addHealthFile.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleChangesLevel = this.handleChangesLevel.bind(this);\n    this.handleChangeSection = this.handleChangeSection.bind(this);\n    this.handleChangeClassStudent = this.handleChangeClassStudent.bind(this);\n  }\n\n  componentDidMount() {\n    let apiEndpoint = \"\";\n    apiEndpoint = `/students/fetchStudentByEstablishmentId/${this.props.userProfile.establishment_id}?access_token=${localStorage.token}&filter[include][profile][user]`;\n    classService.get(apiEndpoint).then(res => {\n      if (res) {\n        this.setState({\n          studentList: res.data.students\n        });\n      }\n    });\n  }\n\n  componentWillMount() {\n    this.props.getSections(); // this.props.getLevels();\n\n    this.props.getLevelsVirtualClass();\n    this.props.getClassesByEstablishmentId(this.props.userProfile.establishment_id);\n    this.props.getFicheMedicalByEstablishmentId(this.props.userProfile.establishment_id);\n    this.setState({\n      levelsbyestablishment: this.props.ClassLevels\n    }); // axios\n    //   .get(\n    //     `${baseUrl.baseUrl}/establishments/` +\n    //       this.props.userProfile.establishment_id +\n    //       `?access_token=${localStorage.token}`\n    //   )\n    //   .then((res) => {\n    //     var levelsbyestablishment = getLevelListFromEstabType(this.props.classLevels,res.data.estab_type_id);\n    //     this.setState({\n    //       estabType: res.data.estab_type_id,\n    //       levelsbyestablishment: levelsbyestablishment,\n    //     });\n    //   });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ContainerHeader, {\n      match: this.props.match,\n      title: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"sidebar.components.health-monitiring\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 18\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }\n    }), this.props.successStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 13\n      }\n    }, \" \", this.props.message, \" \")) : '', this.props.errorStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }\n    }, \" \", this.props.message)) : '', /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-filter:visit\",\n      yes: () => /*#__PURE__*/React.createElement(CardBox, {\n        styleName: \"col-lg-12 text-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12  d-flex justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"user-filter-establishment:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-2 text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          className: \"mt-0\",\n          required: true,\n          name: \"establishment_id\",\n          id: \"establishment_id\",\n          select: true,\n          label: /*#__PURE__*/React.createElement(IntlMessages, {\n            id: \"components.student.formadd.establishment\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 29\n            }\n          }) //  value={this.state.establishment_id}\n          // onChange={this.handleChangeEstablishment('establishment_id')}\n          ,\n          SelectProps: {},\n          margin: \"normal\",\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 25\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-2 text-left \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"level_id\",\n        name: \"level_id\",\n        select: true,\n        value: this.state.level_id,\n        defaultValue: \" \",\n        onChange: this.handleChangestudentLevel('level_id'),\n        SelectProps: {},\n        helperText: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.class.level.input.label.level\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 25\n          }\n        }),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        key: \"0\",\n        value: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"extraPages.all\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 25\n        }\n      })), this.props.classLevels.map(level => /*#__PURE__*/React.createElement(MenuItem, {\n        key: level.id,\n        value: level.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 25\n        }\n      }, this.props.settings.languageId == 'tunisia' ? level.name_AR : this.props.settings.languageId == 'french' ? level.name_FR : level.name_EN)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-2 text-left \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"section_id\",\n        name: \"section_id\",\n        select: true,\n        value: this.state.section_id,\n        onChange: this.handleChangestudentSection('section_id'),\n        disabled: this.state.Disable_studentsection,\n        SelectProps: {},\n        helperText: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.class.level.input.label.section\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 25\n          }\n        }),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 21\n        }\n      }, this.state.studentsectionByLevels.map(section => /*#__PURE__*/React.createElement(MenuItem, {\n        key: section.id,\n        value: section.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 25\n        }\n      }, section.name)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-2 text-left \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"classId\",\n        name: \"classId\",\n        select: true,\n        value: this.state.classId,\n        onChange: this.handleChangeClass('classId'),\n        SelectProps: {},\n        helperText: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"ticket.name.class\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 35\n          }\n        }),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 21\n        }\n      }, this.state.studentClassesByLevelSectionID.map(classe => /*#__PURE__*/React.createElement(MenuItem, {\n        key: classe.id,\n        value: classe.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 27\n        }\n      }, classe.name)))), this.props.userProfile.role_id === roleIdSuperAdmin || this.props.userProfile.role_id === roleIdAdmin || this.props.userProfile.role_id === roleIdDirector ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6 text-right \",\n        style: {\n          marginBottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        size: \"small\",\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        onClick: this.addHealthShowModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 25\n        }\n      }))) : '')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(HealthFileList, {\n      ficheMedicalList: this.props.ficheMedicalList,\n      class_id: this.state.classId,\n      levelsbyestablishment: this.props.classLevels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AddHealthFile, {\n      values: this.state,\n      addIsopen: this.state.addIsopen,\n      handleCancel: this.handleCancel,\n      handleChange: this.handleChange,\n      handleChangeSection: this.handleChangeSection,\n      handleChangesLevel: this.handleChangesLevel,\n      handleChangeClassStudent: this.handleChangeClassStudent,\n      onDrop: this.onDrop,\n      handleChangeStudent: this.handleChangeStudent,\n      addHealthFile: this.addHealthFile,\n      handleCheck: this.handleCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    classSections: state.classSections.remoteSections,\n    classes: state.classes,\n    classVirtual: state.classVirtualReducer.remoteClassVirtual,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    settings: state.settings.locale,\n    ficheMedicalList: state.HealthReducer.remoteFicheMedical\n  };\n}\n\nexport default connect(mapStateToProps, {\n  addFicheMedical,\n  getSections,\n  getLevels,\n  getLevelsVirtualClass,\n  getClassesByEstablishmentId,\n  getFicheMedicalByEstablishmentId\n})(HealthMonitoring);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/HealthMonitoring/HealthMonitoring.js"],"names":["React","IntlMessages","ContainerHeader","Fab","AddIcon","AddHealthFile","HealthFileList","addFicheMedical","getFicheMedicalByEstablishmentId","connect","getSectionFromLevel","getLevelListFromEstabType","axios","baseUrl","getSections","getLevels","getLevelsVirtualClass","getClassesByEstablishmentId","UncontrolledAlert","Can","RoleContext","TextField","MenuItem","roleIdSuperAdmin","roleIdAdmin","roleIdDirector","CardBox","classService","HealthMonitoring","Component","constructor","props","handleChangeClassStudent","name","event","students","state","studentList","filter","student","class_id","target","value","setState","studentByclassID","handleChangeSection","studentfiltredClasses","classes","classe","level_id","levelId","section_id","status","studentClassesByLevelSectionID","handleChangesLevel","studentSectionbyLevel","classSections","Disable_studentsection","studentsectionByLevels","handleCheck","tab","checkedValues","test","findIndex","element","push","parseInt","splice","handleChangestudentLevel","classId","levelID","handleChangestudentSection","sectionID","handleChangeClass","userProfile","role_id","get","localStorage","token","then","res","data","classData","establishment_id","handleChangeStudent","student_id","handleChange","addHealthShowModal","addIsopen","handleCancel","onDrop","e","file","files","userPhotos","inputText","addHealthFile","nom_doctor","prenom_doctor","phone_doctor","blood_type","poids","hauteur","problems","remarque","mail_doctor","checkedBox","levelsbyestablishment","subjectList","establishmentProfessor","professorIdFilter","professorClassesList","professor_class_id","selectedFilterDateProfessor","sectionId","student_subject_id","selectedFilterDateStudent","id","blood_group","type","bind","componentDidMount","apiEndpoint","componentWillMount","ClassLevels","render","match","successStatus","message","errorStatus","role","classLevels","map","level","settings","languageId","name_AR","name_FR","name_EN","section","marginBottom","ficheMedicalList","mapStateToProps","auth","remoteLevels","remoteSections","classVirtual","classVirtualReducer","remoteClassVirtual","alert","success","error","locale","HealthReducer","remoteFicheMedical"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IntlMessages from '../../../util/IntlMessages';\nimport ContainerHeader from '../../../components/ContainerHeader/index';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport AddHealthFile from './AddHealthFile';\nimport HealthFileList from './HealthFileList';\nimport { addFicheMedical } from '../../../actions/HealthAction';\nimport { getFicheMedicalByEstablishmentId } from '../../../actions/HealthAction';\nimport { connect } from 'react-redux';\nimport { getSectionFromLevel } from '../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from '../../../actions/classLevelAction';\nimport axios from 'axios';\nimport baseUrl from '../../../config/config';\nimport { getSections } from '../../../actions/sectionAction';\nimport { getLevels } from '../../../actions/classLevelAction';\nimport { getLevelsVirtualClass } from '../../../actions/classLevelAction';\nimport { getClassesByEstablishmentId } from '../../../actions/classeAction';\nimport { UncontrolledAlert } from 'reactstrap';\nimport Can from '../../../can';\nimport { RoleContext } from '../../../Context';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { roleIdSuperAdmin } from '../../../config/config';\nimport { roleIdAdmin } from '../../../config/config';\nimport { roleIdDirector } from '../../../config/config';\nimport CardBox from \"../../../components/CardBox/index\";\nimport { classService } from \"../../../_services/class.service\";\nclass HealthMonitoring extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      addIsopen: false,\n      level_id: '',\n      section_id: '',\n      establishment_id: '',\n      class_id: '',\n      student_id: '',\n      blood_type: '',\n      poids: '',\n      hauteur: '',\n      prenom_doctor: '',\n      nom_doctor: '',\n      phone_doctor: '',\n      mail_doctor: '',\n      remarque: '',\n      userPhotos: null,\n      checkedBox: true,\n      inputText: '',\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: [],\n      professorIdFilter: '',\n      professorClassesList: [],\n      professor_class_id: '',\n      selectedFilterDateProfessor: null,\n      studentByclassID: [],\n      levelId:0,\n      sectionId:0,\n      student_subject_id: '',\n      selectedFilterDateStudent: null,\n      studentList:[],\n      classId:'',\n      data: [\n        {\n          id: 1,\n          name: 'Des yeux',\n        },\n        {\n          id: 2,\n          name: 'Coeur',\n        },\n        {\n          id: 3,\n          name: 'CUTANÉ',\n        },\n        {\n          id: 4,\n          name: 'Système respiratoire',\n        },\n        {\n          id: 5,\n          name: 'Des oreilles',\n        },\n        {\n          id: 6,\n          name: 'Tension',\n        },\n        {\n          id: 7,\n          name: 'Système musculo-squelettique',\n        },\n        {\n          id: 8,\n          name: 'Système respiratoire',\n        },\n        {\n          id: 9,\n          name: 'Système nerveux',\n        },\n      ],\n      checkedValues: [],\n      blood_group: [\n        {\n          id: 1,\n          type: 'A+',\n        },\n        {\n          id: 2,\n          type: 'A-',\n        },\n        {\n          id: 3,\n          type: 'B+',\n        },\n        {\n          id: 4,\n          type: 'B-',\n        },\n        {\n          id: 5,\n          type: 'AB+',\n        },\n        {\n          id: 6,\n          type: 'AB-',\n        },\n        {\n          id: 7,\n          type: 'O+',\n        },\n        {\n          id: 8,\n          type: 'O-',\n        },\n      ],\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addHealthShowModal = this.addHealthShowModal.bind(this);\n    this.handleChangestudentLevel = this.handleChangestudentLevel.bind(this);\n    this.handleChangestudentSection = this.handleChangestudentSection.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.handleChangeStudent = this.handleChangeStudent.bind(this);\n    this.addHealthFile = this.addHealthFile.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleChangesLevel = this.handleChangesLevel.bind(this);\n    this.handleChangeSection = this.handleChangeSection.bind(this); \n    this.handleChangeClassStudent = this.handleChangeClassStudent.bind(this);\n    \n    \n  }\n\ncomponentDidMount(){\n  let apiEndpoint = \"\";\n  apiEndpoint = `/students/fetchStudentByEstablishmentId/${this.props.userProfile.establishment_id}?access_token=${localStorage.token}&filter[include][profile][user]`;\n  classService.get(apiEndpoint).then((res) => {\n    if (res) {      \n      this.setState({ studentList: res.data.students });\n    }\n  });\n}\n\n  handleChangeClassStudent= (name) => (event) => { \n  let students= this.state.studentList.filter(student => student.class_id === event.target.value);\n  this.setState({studentByclassID : students, [name]: event.target.value })\n  \n  }\n\n  handleChangeSection= (name) => (event) => {\n    \n    var studentfiltredClasses = this.props.classes.filter(\n      (classe) =>\n        classe.level_id === this.state.levelId &&\n        classe.section_id === event.target.value &&\n        classe.status\n    );\n    this.setState({[name]: event.target.value, studentClassesByLevelSectionID: studentfiltredClasses });\n  }\n\n  handleChangesLevel = (name) => (event) => {\n    if (event.target.value > 10) {\n      var studentSectionbyLevel = getSectionFromLevel(\n        this.props.classSections,\n        event.target.value\n      );\n      this.setState({[name]: event.target.value ,Disable_studentsection: false , studentsectionByLevels: studentSectionbyLevel });\n    }\n    else {\n      var studentfiltredClasses = this.props.classes.filter( (classe) => classe.level_id === event.target.value && classe.status);\n      this.setState({\n        Disable_studentsection: true,\n        section_id: 0,\n        studentClassesByLevelSectionID: studentfiltredClasses,\n        [name]: event.target.value \n      });\n    }\n  }\n  \n  handleCheck = (event) => {\n    var tab = this.state.checkedValues;\n    var test = this.state.checkedValues.findIndex(\n      (element) => element == event.target.value\n    );\n    if (test == -1) {\n      tab.push(parseInt(event.target.value, 10));\n      this.setState({ checkedValues: tab });\n    } else {\n      tab.splice(test, 1);\n      this.setState({ checkedValues: tab });\n    }\n  };\n  handleChangestudentLevel = (name) => (event) => {\n    if (event.target.value === '0') {\n      this.setState({\n        classId: '',\n        level_id: '',\n      });\n    } else {\n      this.setState({ section_id: 0, classId: 0 });\n      if (event.target.value > 10) {\n        this.setState({ [name]: event.target.value });\n        this.setState({ Disable_studentsection: false });\n        var studentSectionbyLevel = getSectionFromLevel(\n          this.props.classSections,\n          event.target.value\n        );\n        this.setState({ studentsectionByLevels: studentSectionbyLevel });\n      } else {\n        this.setState({\n          level_id: event.target.value,\n          Disable_studentsection: true,\n          section_id: 0,\n        });\n        const levelID = event.target.value;\n        var studentfiltredClasses = this.props.classes.filter(\n          (classe) => classe.level_id === levelID && classe.status\n        );\n        this.setState({\n          studentClassesByLevelSectionID: studentfiltredClasses,\n        });\n      }\n    }\n  };\n\n  handleChangestudentSection = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    const levelID = this.state.level_id;\n    const sectionID = event.target.value;\n    var studentfiltredClasses = this.props.classes.filter(\n      (classe) =>\n        classe.level_id === levelID &&\n        classe.section_id === sectionID &&\n        classe.status\n    );\n    this.setState({ studentClassesByLevelSectionID: studentfiltredClasses });\n  };\n\n  handleChangeClass = (name) => (event) => {\n    \n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      axios\n        .get(\n          `${baseUrl.baseUrl}/students/fetchAllStudentsDataByClassID/` +\n            event.target.value +\n            `?access_token=${localStorage.token}`\n        )\n        .then((res) => {\n          this.setState({\n            studentByclassID: res.data.classData,\n          });\n        });\n      this.setState({\n        establishment_id: this.props.userProfile.establishment_id,\n      });\n    }\n    this.setState({ [name]: event.target.value });\n  };\n\n\n  handleChangeStudent = (name) => (event) => {\n    this.setState({\n      student_id: event.target.value,\n    });\n  };\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n  addHealthShowModal = () => {\n    this.setState({\n      addIsopen: true,\n      // level_id: '',\n      // section_id: '',\n      // establishment_id: '',\n      // class_id: '',\n      // student_id: '',\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      addIsopen: false,\n    });\n  };\n  onDrop = (e) => {\n    let file = e.target.files[0];\n    this.setState({ userPhotos: file, inputText: file.name });\n  };\n  addHealthFile = () => {\n    var data = {};\n    // data.establishment_id = this.props.userProfile.establishment_id;\n    // data.student_id = this.state.student_id;\n    // data.class_id = this.state.class_id;\n    // data.nom_doctor = this.state.nom_doctor;\n    // data.prenom_doctor = this.state.prenom_doctor;\n    // data.phone_doctor = parseInt(this.state.phone_doctor, 10);\n    // data.blood_type = this.state.blood_type;\n    // data.poids = parseInt(this.state.poids, 10);\n    // data.hauteur = parseInt(this.state.hauteur, 10);\n    // data.problems = this.state.checkedValues;\n    // data.remarque = this.state.remarque;\n    // data.files = '1.png';\n    // data.status = true;\n    // data.mail_doctor = this.state.mail_doctor;\n\n\n    data.establishment_id = 2;\n    data.student_id = 30;\n    data.class_id = 3;\n    data.nom_doctor = \"Zied\";\n    data.prenom_doctor = \"Wafi\";\n    data.phone_doctor = parseInt(\"25147963\", 10);\n    data.blood_type = 1;\n    data.poids = parseInt(\"16\", 10);\n    data.hauteur = parseInt(\"188\", 10);\n    data.problems = [2,3];\n    data.remarque = \"dqffffe\";\n    data.files = '1.png';\n    data.status = true;\n    data.mail_doctor = \"doc@gmail.com\";\n    this.props.addFicheMedical(data, this.state.userPhotos);\n\n    this.setState({\n      addIsopen: false,\n      level_id: '',\n      section_id: '',\n      class_id: '',\n      student_id: '',\n      blood_type: '',\n      poids: '',\n      hauteur: '',\n      prenom_doctor: '',\n      nom_doctor: '',\n      phone_doctor: '',\n      mail_doctor: '',\n      remarque: '',\n      userPhotos: null,\n      checkedBox: true,\n      inputText: '',\n      checkedValues: [],\n    });\n  };\n\n  componentWillMount() {\n    this.props.getSections();\n    // this.props.getLevels();\n    this.props.getLevelsVirtualClass();\n    this.props.getClassesByEstablishmentId(this.props.userProfile.establishment_id);\n    this.props.getFicheMedicalByEstablishmentId(this.props.userProfile.establishment_id);\nthis.setState({levelsbyestablishment: this.props.ClassLevels})\n    // axios\n    //   .get(\n    //     `${baseUrl.baseUrl}/establishments/` +\n    //       this.props.userProfile.establishment_id +\n    //       `?access_token=${localStorage.token}`\n    //   )\n    //   .then((res) => {\n    //     var levelsbyestablishment = getLevelListFromEstabType(this.props.classLevels,res.data.estab_type_id);\n    //     this.setState({\n    //       estabType: res.data.estab_type_id,\n    //       levelsbyestablishment: levelsbyestablishment,\n    //     });\n    //   });\n       \n  }\n\n  render() {\n    \n    return (\n      <div className=\"app-wrapper\">\n        <ContainerHeader\n          match={this.props.match}\n          title={<IntlMessages id=\"sidebar.components.health-monitiring\" />}\n        />\n        {this.props.successStatus ? (\n          <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\"> {this.props.message} </span>\n          </UncontrolledAlert>\n        ) : (\n          ''\n        )}\n        {this.props.errorStatus ? (\n          <UncontrolledAlert className=\"alert-addon-card bg-danger bg-danger text-white shadow-lg\">\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\"> {this.props.message}</span>\n          </UncontrolledAlert>\n        ) : (\n          ''\n        )}\n        <br />\n\n        <RoleContext.Consumer>\n          {({ role }) => (\n            <Can\n              role={role}\n              perform=\"user-filter:visit\"\n              yes={() => (\n                <CardBox styleName=\"col-lg-12 text-primary\">\n                <div className=\"col-md-12  d-flex justify-content-between\">\n                  <Can\n                    role={role}\n                    perform=\"user-filter-establishment:visit\"\n                    yes={() => (\n                      <div className=\"col-md-2 text-left\">\n                        <TextField\n                          className=\"mt-0\"\n                          required\n                          name=\"establishment_id\"\n                          id=\"establishment_id\"\n                          select\n                          label={\n                            <IntlMessages id=\"components.student.formadd.establishment\" />\n                          }\n                          //  value={this.state.establishment_id}\n                          // onChange={this.handleChangeEstablishment('establishment_id')}\n                          SelectProps={{}}\n                          margin=\"normal\"\n                          fullWidth\n                        >\n                          {/* {this.state.establishments.map(establishment => (\n                            <MenuItem key={establishment.id} value={establishment.id}>\n                              {this.props.settings == \"tunisia\" ? establishment.ar_name : establishment.name}\n                            </MenuItem>\n                          ))} */}\n                        </TextField>\n                      </div>\n                    )}\n                  />\n                  <div className=\"col-md-2 text-left \">\n                    <TextField\n                      id=\"level_id\"\n                      name=\"level_id\"\n                      select\n                      value={this.state.level_id}\n                      defaultValue=\" \"\n                      onChange={this.handleChangestudentLevel('level_id')}\n                      SelectProps={{}}\n                      helperText={\n                        <IntlMessages id=\"components.class.level.input.label.level\" />\n                      }\n                      margin=\"normal\"\n                      fullWidth\n                    >\n                      <MenuItem key=\"0\" value=\"0\">\n                        <IntlMessages id=\"extraPages.all\" />\n                      </MenuItem>\n                      {this.props.classLevels.map((level) => (\n                        <MenuItem key={level.id} value={level.id}>\n                          {this.props.settings.languageId == 'tunisia'\n                            ? level.name_AR\n                            : this.props.settings.languageId == 'french'\n                            ? level.name_FR\n                            : level.name_EN}\n                            {/* {level.name} */}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </div>\n                  <div className=\"col-md-2 text-left \">\n                    <TextField\n                      id=\"section_id\"\n                      name=\"section_id\"\n                      select\n                      value={this.state.section_id}\n                      onChange={this.handleChangestudentSection('section_id')}\n                      disabled={this.state.Disable_studentsection}\n                      SelectProps={{}}\n                      helperText={\n                        <IntlMessages id=\"components.class.level.input.label.section\" />\n                      }\n                      margin=\"normal\"\n                      fullWidth\n                    >\n                      {this.state.studentsectionByLevels.map((section) => (\n                        <MenuItem key={section.id} value={section.id}>\n                          {section.name}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </div>\n                  <div className=\"col-md-2 text-left \">\n                    <TextField\n                      id=\"classId\"\n                      name=\"classId\"\n                      select\n                      value={this.state.classId}\n                      onChange={this.handleChangeClass('classId')}\n                      SelectProps={{}}\n                      helperText={<IntlMessages id=\"ticket.name.class\" />}\n                      margin=\"normal\"\n                      fullWidth\n                    >\n                      {this.state.studentClassesByLevelSectionID.map(\n                        (classe) => (\n                          <MenuItem key={classe.id} value={classe.id}>\n                            {classe.name}\n                          </MenuItem>\n                        )\n                      )}\n                    </TextField>\n                  </div>\n                  {this.props.userProfile.role_id === roleIdSuperAdmin ||\n                  this.props.userProfile.role_id === roleIdAdmin ||\n                  this.props.userProfile.role_id === roleIdDirector ? (\n                    <div\n                      className=\"col-md-6 text-right \"\n                      style={{ marginBottom: 20 }}\n                    >\n                      <Fab\n                        size=\"small\"\n                        color=\"primary\"\n                        aria-label=\"Add\"\n                        onClick={this.addHealthShowModal}\n                      >\n                        <AddIcon />\n                      </Fab>\n                    </div>\n                  ) : (\n                    ''\n                  )}\n                </div>\n              </CardBox>\n              \n              )}\n            />\n          )}\n        </RoleContext.Consumer>\n\n        {\n          <HealthFileList\n            ficheMedicalList={this.props.ficheMedicalList}\n            class_id={this.state.classId}\n            levelsbyestablishment={this.props.classLevels}\n          />\n        }\n\n        <AddHealthFile\n          values={this.state}\n          addIsopen={this.state.addIsopen}\n          handleCancel={this.handleCancel}\n          handleChange={this.handleChange}\n          handleChangeSection={this.handleChangeSection}\n          handleChangesLevel={this.handleChangesLevel}\n          handleChangeClassStudent={this.handleChangeClassStudent}\n          onDrop={this.onDrop}\n          handleChangeStudent={this.handleChangeStudent}\n          addHealthFile={this.addHealthFile}\n          handleCheck={this.handleCheck}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    classSections: state.classSections.remoteSections,\n    classes: state.classes,\n    classVirtual: state.classVirtualReducer.remoteClassVirtual,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    settings: state.settings.locale,\n    ficheMedicalList: state.HealthReducer.remoteFicheMedical,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    addFicheMedical,\n    getSections,\n    getLevels,\n    getLevelsVirtualClass,\n    getClassesByEstablishmentId,\n    getFicheMedicalByEstablishmentId,\n  }\n)(HealthMonitoring);\n"]},"metadata":{},"sourceType":"module"}