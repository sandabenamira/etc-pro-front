{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/todo/Devoir/HomeworkItem.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport IntlMessages from '../../../../util/IntlMessages';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteHomework from './deleteHomework';\nimport EditHomework from './editHomework';\nimport { classService } from \"../../../../_services/class.service\";\nimport Can from '../../../../can';\nimport { RoleContext } from '../../../../Context';\nimport HomeworkDetail from './HomeworkDetail';\nimport { roleIdProfessor } from '../../../../config/config';\nimport { getName } from \"../../../../actions/countriesAction\";\nimport Switch from '@material-ui/core/Switch';\nimport defaultImg from './Assets/homework.png';\nimport professor1 from \"./Assets/prof1.jpg\";\nimport professor2 from \"./Assets/prof2.jpg\";\nlet apiEndpoint = '';\n\nclass HomeworkItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = name => (event, checked) => {\n      const data = {\n        \"active\": checked\n      };\n      apiEndpoint = `/homeworks/${this.props.todo.id}?access_token=${localStorage.token}`;\n      classService.patch(apiEndpoint, data).then(response => {\n        if (response) {\n          this.setState({\n            [name]: checked\n          });\n        }\n      });\n    };\n\n    this.state = {\n      url: '',\n      deleteModel: false,\n      editModel: false,\n      detailsModel: false,\n      homework: {},\n      studentsList: [],\n      checkedE: true,\n      nbreStudents: 0\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.editHomeworkClass = this.editHomeworkClass.bind(this);\n    this.toDoDetails = this.toDoDetails.bind(this);\n  }\n\n  downloadFile(info) {\n    var files;\n\n    if (this.props.todo.studentHomework === false) {\n      files = this.props.todo.files;\n    } else {\n      files = this.props.todo.homework.files;\n    }\n\n    if (files !== null) {\n      var estblishmentId = localStorage.getItem('establishment_id');\n      apiEndpoint = `/establishments/` + estblishmentId + `?access_token=${localStorage.token}`;\n      classService.get(apiEndpoint).then(response => {\n        if (response) {\n          this.setState({\n            establishmentName: response.data.name\n          });\n          apiEndpoint = `/containers/checkFileExist/${response.data.name}?access_token=${localStorage.token}`;\n          classService.get(apiEndpoint).then(response => {\n            if (response) {\n              let fileList = _.isEmpty(response.data.checkFile) ? null : response.data.checkFile.find(item => item.name === files);\n              const establishLogoUrl = _.isEmpty(fileList) ? null : `/containers/` + this.state.establishmentName + '/download/' + fileList.name + `?access_token=${localStorage.token}`;\n\n              if (establishLogoUrl !== null) {\n                const fileExtension = fileList.name.replace(/^.*\\./, '');\n                classService.getPhoto(establishLogoUrl).then(response => {\n                  if (response) {\n                    var arr = response.data;\n                    var data2 = new Uint8Array(arr);\n                    var blob = [];\n\n                    if (fileExtension === 'pdf') {\n                      blob = new Blob([data2], {\n                        type: 'application/pdf'\n                      });\n                    } else if (fileExtension === 'png' || fileExtension === 'jpeg' || fileExtension === 'gif') {\n                      blob = new Blob([data2], {\n                        type: 'image/*'\n                      });\n                    } else {\n                      blob = new Blob([data2], {\n                        type: 'application/txt'\n                      });\n                    }\n\n                    var url = window.URL.createObjectURL(blob);\n                    const link = document.createElement(\"a\");\n                    link.href = url;\n\n                    if (info === \"download\") {\n                      if (this.props.todo.files_name !== null) {\n                        const name = this.props.todo.files_name;\n                        link.setAttribute(\"download\", name);\n                      } else {\n                        link.setAttribute(\"download\", \"file.pdf\");\n                      }\n                    } else {\n                      link.setAttribute('target', '_blank');\n                    }\n\n                    document.body.appendChild(link);\n                    link.click();\n                  }\n                }).catch(err => {\n                  console.log('erorrrrrrrrr', err);\n                });\n              } else {\n                this.setState({\n                  url: null\n                });\n              }\n            }\n          });\n        }\n      });\n    } else {\n      alert( /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"message.no.file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }));\n    }\n  }\n\n  toDoDetails(e) {\n    e.preventDefault();\n\n    if (this.props.userProfile.role_id === roleIdProfessor) {\n      if (!_.isEmpty(this.props.todo.homeworkClass)) {\n        const classId = _.head(this.props.todo.homeworkClass).class_id;\n\n        apiEndpoint = `/students?access_token=${localStorage.token}&filter[where][class_id]=${classId}&filter[include][profile][user]`;\n        classService.get(apiEndpoint).then(response => {\n          if (response) {\n            this.setState({\n              studentsList: _.map(response.data, 'profile')\n            });\n          }\n        });\n      }\n\n      this.setState({\n        detailsModel: true\n      });\n    } else {\n      this.setState({\n        detailsModel: true\n      });\n    }\n  }\n\n  handleCancel() {\n    this.setState({\n      deleteModel: false,\n      editModel: false,\n      detailsModel: false\n    });\n  }\n\n  handleDelete(e) {\n    e.preventDefault();\n    this.setState({\n      deleteModel: true,\n      idHomework: this.props.todo.id\n    });\n  }\n\n  editHomeworkClass(e) {\n    e.preventDefault();\n    this.setState({\n      editModel: true,\n      homework: this.props.todo\n    });\n  }\n\n  componentDidMount() {\n    let apiEndpoint = '';\n\n    if (this.props.userProfile.role_id === roleIdProfessor && this.props.todo.homeworkClass[0]) {\n      const classId = this.props.todo.homeworkClass[0].class_id;\n      apiEndpoint = `/students/count?access_token=${localStorage.token}&where={\"class_id\":${classId}}`;\n      classService.get(apiEndpoint).then(response => {\n        if (response) {\n          this.setState({\n            nbreStudents: response.data.count\n          });\n        }\n      }); // this.props.dispatch(getNumberOfHomeworkStudents(this.props.todo.id))\n    }\n\n    this.setState({\n      checkedE: this.props.todo.active\n    });\n  }\n\n  render() {\n    var things = [defaultImg, professor1, professor2];\n    var thing = things[Math.floor(Math.random() * things.length)];\n    const {\n      title,\n      date_creation,\n      subject,\n      homeworkClass,\n      files\n    } = this.props.todo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-md-6 col-sm-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card product-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header border-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-thumb-equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"grid-thumb-cover jr-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Remy Sharp\",\n      src: thing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"todo-menu-action:visit\",\n      yes: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex  bd-highligh justify-content-between text-dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-1 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 29\n        }\n      }, getName(subject), \" \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 55\n        }\n      }), /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"todo-menu-action-modif:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 43\n          }\n        }, homeworkClass[0] ? /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 57\n          }\n        }, homeworkClass[0].class.name)) : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"todo-menu-active-homework:visit\",\n        yes: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-2 bd-highlight\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Switch, {\n          classes: {\n            checked: 'text-success' // bar: 'bg-success',\n\n          },\n          checked: this.state.checkedE,\n          onChange: this.handleChange('checkedE'),\n          \"aria-label\": \"checkedE\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          className: \" bg-success text-white \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"notification.success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 36\n          }\n        })), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 33\n          }\n        }), \" \", /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 40\n          }\n        }, \" \", moment(date_creation).format('L')))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-row bd-highligh justify-content-between text-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-1 bd-highlight mt-auto mb-0 pointer\",\n        onClick: this.toDoDetails,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 27\n        }\n      }, title, \" \"), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"homework.detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 35\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-row bd-highligh justify-content-between text-grey pl-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"todo-menu-action-modif:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-1  bd-highlight\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \" pointer\",\n          onClick: this.editHomeworkClass,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"button.modify\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 88\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \" bd-highlight ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }\n      }, files !== null ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n        size: \"small\",\n        className: \"icon-btn\",\n        onClick: this.downloadFile.bind(this, \"download\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-download\",\n        style: {\n          color: 'text-grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 33\n        }\n      })), \"\\xA0 | \\xA0\", /*#__PURE__*/React.createElement(IconButton, {\n        size: \"small\",\n        className: \"icon-btn\",\n        onClick: this.downloadFile.bind(this, \"display\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-eye\",\n        style: {\n          color: 'text-grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 33\n        }\n      }))) : \"\", /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"todo-menu-action-delete:visit\",\n        yes: () => /*#__PURE__*/React.createElement(React.Fragment, null, files !== null ? /*#__PURE__*/React.createElement(React.Fragment, null, \"\\xA0 | \\xA0 \") : \"\", /*#__PURE__*/React.createElement(IconButton, {\n          size: \"small\",\n          className: \"icon-btn\",\n          onClick: this.handleDelete,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"zmdi zmdi-delete\",\n          style: {\n            color: 'text-grey'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 35\n          }\n        })), ' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 27\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    })))), this.state.deleteModel ? /*#__PURE__*/React.createElement(DeleteHomework, {\n      idHomework: this.state.idHomework,\n      cancelModal: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 35\n      }\n    }) : '', this.state.editModel ? /*#__PURE__*/React.createElement(EditHomework, {\n      homework: this.state.homework,\n      cancelModal: this.handleCancel,\n      classesList: this.props.classesList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 33\n      }\n    }) : '', this.state.detailsModel ? /*#__PURE__*/React.createElement(HomeworkDetail, {\n      open: this.state.detailsModel,\n      cancelModal: this.handleCancel,\n      todo: this.props.todo,\n      userProfile: this.props.userProfile,\n      studentsList: this.state.studentsList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 36\n      }\n    }) : '');\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile\n  };\n}\n\nexport default connect(mapStateToProps)(HomeworkItem);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/todo/Devoir/HomeworkItem.js"],"names":["React","Button","IntlMessages","_","connect","moment","IconButton","DeleteHomework","EditHomework","classService","Can","RoleContext","HomeworkDetail","roleIdProfessor","getName","Switch","defaultImg","professor1","professor2","apiEndpoint","HomeworkItem","Component","constructor","props","handleChange","name","event","checked","data","todo","id","localStorage","token","patch","then","response","setState","state","url","deleteModel","editModel","detailsModel","homework","studentsList","checkedE","nbreStudents","handleCancel","bind","handleDelete","editHomeworkClass","toDoDetails","downloadFile","info","files","studentHomework","estblishmentId","getItem","get","establishmentName","fileList","isEmpty","checkFile","find","item","establishLogoUrl","fileExtension","replace","getPhoto","arr","data2","Uint8Array","blob","Blob","type","window","URL","createObjectURL","link","document","createElement","href","files_name","setAttribute","body","appendChild","click","catch","err","console","log","alert","e","preventDefault","userProfile","role_id","homeworkClass","classId","head","class_id","map","idHomework","componentDidMount","count","active","render","things","thing","Math","floor","random","length","title","date_creation","subject","role","class","format","color","classesList","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport IntlMessages from '../../../../util/IntlMessages';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteHomework from './deleteHomework';\nimport EditHomework from './editHomework';\nimport { classService } from \"../../../../_services/class.service\";\nimport Can from '../../../../can';\nimport { RoleContext } from '../../../../Context';\nimport HomeworkDetail from './HomeworkDetail';\nimport { roleIdProfessor } from '../../../../config/config';\nimport { getName } from \"../../../../actions/countriesAction\";\nimport Switch from '@material-ui/core/Switch';\nimport defaultImg from './Assets/homework.png';\nimport professor1 from \"./Assets/prof1.jpg\"\nimport professor2 from \"./Assets/prof2.jpg\"\n\n\nlet apiEndpoint = '';\n\nclass HomeworkItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      url: '',\n      deleteModel: false,\n      editModel: false,\n      detailsModel: false,\n      homework: {},\n      studentsList: [],\n      checkedE: true,\n      nbreStudents: 0\n\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.editHomeworkClass = this.editHomeworkClass.bind(this);\n    this.toDoDetails = this.toDoDetails.bind(this);\n\n  }\n\n  downloadFile(info) {\n    var files;\n    if (this.props.todo.studentHomework === false) {\n      files = this.props.todo.files\n    }\n    else {\n      files = this.props.todo.homework.files\n    }\n    if (files !== null) {\n\n      var estblishmentId = localStorage.getItem('establishment_id');\n      apiEndpoint = `/establishments/` + estblishmentId + `?access_token=${localStorage.token}`\n      classService.get(apiEndpoint)\n        .then(response => {\n          if (response) {\n            this.setState({\n              establishmentName: response.data.name\n            })\n            apiEndpoint = `/containers/checkFileExist/${response.data.name}?access_token=${localStorage.token}`\n            classService.get(apiEndpoint)\n              .then((response) => {\n                if (response) {\n                  let fileList = _.isEmpty(response.data.checkFile) ? null :\n                    response.data.checkFile.find(item => item.name === files);\n                  const establishLogoUrl = _.isEmpty(fileList) ? null : `/containers/` + this.state.establishmentName + '/download/' + fileList.name + `?access_token=${localStorage.token}`;\n\n                  if (establishLogoUrl !== null) {\n                    const fileExtension = fileList.name.replace(/^.*\\./, '');\n                    classService.getPhoto(establishLogoUrl)\n\n                      .then((response) => {\n\n                        if (response) {\n                          var arr = response.data;\n                          var data2 = new Uint8Array(arr);\n                          var blob = []\n                          if (fileExtension === 'pdf') {\n                            blob = new Blob([data2], { type: 'application/pdf' });\n                          } else if (fileExtension === 'png' || fileExtension === 'jpeg' || fileExtension === 'gif') {\n                            blob = new Blob([data2], { type: 'image/*' });\n                          } else {\n                            blob = new Blob([data2], { type: 'application/txt' });\n                          }\n                          var url = window.URL.createObjectURL(blob);\n                          const link = document.createElement(\"a\");\n                          link.href = url;\n                          if (info === \"download\") {\n                            if (this.props.todo.files_name !== null) {\n                              const name = this.props.todo.files_name\n                              link.setAttribute(\"download\", name);\n                            } else {\n                              link.setAttribute(\"download\", \"file.pdf\");\n                            }\n\n                          } else {\n                            link.setAttribute('target', '_blank');\n                          }\n                          document.body.appendChild(link);\n                          link.click();\n\n                        }\n                      })\n                      .catch((err) => {\n                        console.log('erorrrrrrrrr', err);\n                      })\n                  }\n                  else {\n                    this.setState({\n                      url: null\n                    })\n                  }\n                }\n              });\n          }\n        })\n    } else {\n      alert(<IntlMessages id=\"message.no.file\" />)\n    }\n  }\n\n  toDoDetails(e) {\n    e.preventDefault();\n    if ((this.props.userProfile.role_id === roleIdProfessor)) {\n      if (!_.isEmpty(this.props.todo.homeworkClass)) {\n        const classId = _.head(this.props.todo.homeworkClass).class_id\n        apiEndpoint = `/students?access_token=${localStorage.token}&filter[where][class_id]=${classId}&filter[include][profile][user]`;\n        classService.get(apiEndpoint).then(response => {\n          if (response) {\n            this.setState({ studentsList: _.map(response.data, 'profile') })\n          }\n        })\n      }\n\n      this.setState({ detailsModel: true, })\n\n\n\n    } else {\n      this.setState({ detailsModel: true, })\n    }\n  }\n\n  handleCancel() {\n    this.setState({ deleteModel: false, editModel: false, detailsModel: false, })\n  };\n\n  handleDelete(e) {\n    e.preventDefault();\n    this.setState({ deleteModel: true, idHomework: this.props.todo.id });\n  };\n\n  editHomeworkClass(e) {\n    e.preventDefault();\n    this.setState({ editModel: true, homework: this.props.todo });\n  };\n\n  handleChange = name => (event, checked) => {\n    const data = { \"active\": checked }\n    apiEndpoint = `/homeworks/${this.props.todo.id}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, data)\n      .then(response => {\n        if (response) {\n          this.setState({ [name]: checked });\n        }\n      })\n\n  };\n  componentDidMount() {\n    let apiEndpoint = '';\n    if (this.props.userProfile.role_id === roleIdProfessor && this.props.todo.homeworkClass[0]) {\n      const classId = this.props.todo.homeworkClass[0].class_id;\n      apiEndpoint = `/students/count?access_token=${localStorage.token}&where={\"class_id\":${classId}}`;\n      classService.get(apiEndpoint).then(response => {\n        if (response) {\n          this.setState({ nbreStudents: response.data.count });\n        }\n      })\n      // this.props.dispatch(getNumberOfHomeworkStudents(this.props.todo.id))\n\n    }\n    this.setState({ checkedE: this.props.todo.active })\n  }\n  render() {\n    var things = [defaultImg, professor1, professor2];\n    var thing = things[Math.floor(Math.random() * things.length)];\n    const { title, date_creation, subject, homeworkClass, files } = this.props.todo;\n    return (\n      <div className=\"col-xl-3 col-md-6 col-sm-6 col-12\">\n        <div className=\"card product-item\" >\n          <div className=\"card-header border-0 p-0\" >\n            <div className=\"card-image\">\n              <div className=\"grid-thumb-equal\">\n                <span className=\"grid-thumb-cover jr-link\">\n                  <img alt=\"Remy Sharp\" src={thing} />\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-body\">\n\n            <RoleContext.Consumer>\n              {({ role }) => (\n                <Can\n                  role={role}\n                  perform=\"todo-menu-action:visit\"\n                  yes={() => (\n                    <div>\n                      <div className=\"d-flex  bd-highligh justify-content-between text-dark\">\n                        <div className=\"p-1 bd-highlight\">\n                          <h3 >\n                            <b>{getName(subject)} </b><br />\n                            <Can\n                              role={role}\n                              perform=\"todo-menu-action-modif:visit\"\n                              yes={() => (<p>\n                                {homeworkClass[0] ? <h5><b>{homeworkClass[0].class.name}</b></h5> : ''}\n                              </p>\n                              )}\n                            />\n                          </h3></div>\n                        <Can\n                          role={role}\n                          perform=\"todo-menu-active-homework:visit\"\n                          yes={() => (\n                            <>\n                              <div className=\"p-2 bd-highlight\">\n                                <Switch\n                                  classes={{\n                                    checked: 'text-success',\n                                    // bar: 'bg-success',\n                                  }}\n                                  checked={this.state.checkedE}\n                                  onChange={this.handleChange('checkedE')}\n                                  aria-label=\"checkedE\"\n                                />\n                              </div>\n                              <div >\n                                <Button className=\" bg-success text-white \">\n                                  {<IntlMessages id=\"notification.success\" />}\n                                </Button>\n                                <br /> <p> {moment(date_creation).format('L')}</p>\n                              </div>\n                            </>\n                          )}\n                        />\n\n                      </div>\n\n                      <div className=\"d-flex flex-row bd-highligh justify-content-between text-primary\">\n                        <div className=\"p-1 bd-highlight mt-auto mb-0 pointer\"  onClick={this.toDoDetails}>\n                          <h3>{title} </h3>\n                            <h6 >{<IntlMessages id=\"homework.detail\" />}</h6>\n                         \n                        </div>\n                      </div>\n\n                      <div className=\"d-flex flex-row bd-highligh justify-content-between text-grey pl-0\">\n                        <Can\n                          role={role}\n                          perform=\"todo-menu-action-modif:visit\"\n                          yes={() => (\n                            <div className=\"p-1  bd-highlight\">\n                              <p className=\" pointer\" onClick={this.editHomeworkClass}><IntlMessages id=\"button.modify\" /></p>\n                            </div>\n                          )}\n                        />\n                        <div className=\" bd-highlight ml-auto\">\n                          {files !== null ?\n                            <>\n                              <IconButton\n                                size=\"small\"\n                                className=\"icon-btn\"\n                                onClick={this.downloadFile.bind(this, \"download\")}\n                              >\n                                <i\n                                  className=\"zmdi zmdi-download\"\n                                  style={{ color: 'text-grey' }}\n                                />\n                              </IconButton>\n                              &nbsp; | &nbsp;\n\n                          <IconButton\n                                size=\"small\"\n                                className=\"icon-btn\"\n                                onClick={this.downloadFile.bind(this, \"display\")}\n                              >\n                                <i\n                                  className=\"zmdi zmdi-eye\"\n                                  style={{ color: 'text-grey' }}\n                                />\n                              </IconButton>\n                            </> : \"\"}\n                          <Can\n                            role={role}\n                            perform=\"todo-menu-action-delete:visit\"\n                            yes={() => (\n                              <>\n                                {files !== null ? <>&nbsp; | &nbsp; </> : \"\"}\n\n                                <IconButton\n                                  size=\"small\"\n                                  className=\"icon-btn\"\n                                  onClick={this.handleDelete}\n                                >\n                                  <i\n                                    className=\"zmdi zmdi-delete\"\n                                    style={{ color: 'text-grey' }}\n                                  />\n                                </IconButton>{' '}\n                              </>\n                            )}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                />\n              )}\n            </RoleContext.Consumer>\n\n          </div>\n\n\n        </div>\n        {this.state.deleteModel ? <DeleteHomework idHomework={this.state.idHomework} cancelModal={this.handleCancel} /> : ''}\n        {this.state.editModel ? <EditHomework homework={this.state.homework} cancelModal={this.handleCancel} classesList={this.props.classesList} /> : ''}\n        {this.state.detailsModel ? <HomeworkDetail open={this.state.detailsModel} cancelModal={this.handleCancel} todo={this.props.todo} userProfile={this.props.userProfile} studentsList={this.state.studentsList} /> : ''}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n\n\n  };\n}\nexport default connect(mapStateToProps)(HomeworkItem);\n\n"]},"metadata":{},"sourceType":"module"}