{"ast":null,"code":"import { classService } from '../_services/class.service';\nimport { SHOW_SUCCESS_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, GET_GROUPS, ADD_GROUPS, EDIT_GROUPS, DELETE_GROUPS, ARCHIVED_GET_GROUPS } from '../constants/ActionTypes';\nexport function addGroup(data, dataClass) {\n  return dispatch => {\n    console.log('data avant post ', data, dataClass);\n    let apiEndpoint = `/groups?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then(response => {\n      if (response) {\n        let dataStore = { ...dataClass,\n          group: [response.data]\n        };\n        console.log(dataStore, 'dataStore');\n        console.log('response.data ', response.data);\n        dispatch({\n          type: ADD_GROUPS,\n          payload: dataStore\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'La création est effectuée avec succès'\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n}\nexport function editGroup(data) {\n  return dispatch => {\n    let apiEndpoint = `/group_v4/${data.id}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, data).then(response => {\n      if (response) {\n        dispatch({\n          type: EDIT_GROUPS,\n          payload: response.data\n        });\n      }\n    });\n  };\n}\nexport function getGroup(establishementId, schoolYearId) {\n  return dispatch => {\n    let apiEndpoint = `/class_v4?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=` + establishementId + `&filter[where][and][1][fk_id_school_year]=` + schoolYearId + `&filter[include]=group`;\n    classService.get(apiEndpoint).then(response => {\n      if (response) {\n        console.log(response.data, 'response.data');\n        let groupList = [];\n        let ArchivedGroupList = [];\n        response.data.map(element => {\n          if (element.status && element.group.length > 0) {\n            let listTrue = [];\n            let listFalse = [];\n            listTrue = element.group.filter(group => group.status);\n            listFalse = element.group.filter(group => !group.status);\n            groupList.push({ ...element,\n              group: listTrue\n            });\n\n            if (listFalse.length > 0) {\n              ArchivedGroupList.push({ ...element,\n                group: listFalse\n              });\n            }\n          }\n        });\n        console.log(ArchivedGroupList, 'ArchivedGroupList');\n        console.log(groupList, 'groupList');\n        dispatch({\n          type: GET_GROUPS,\n          payload: groupList\n        });\n        dispatch({\n          type: ARCHIVED_GET_GROUPS,\n          payload: ArchivedGroupList\n        });\n      }\n    });\n  };\n}\nexport function deleteGroup(itemId) {\n  return dispatch => {\n    let apiEndpoint = `/group_v4/` + itemId.id + `?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=${localStorage.establishment_id}&filter[where][and][1][fk_id_school_year]=${localStorage.school_year_id}`;\n    classService.patch(apiEndpoint, {\n      status: false\n    }).then(response => {\n      dispatch({\n        type: DELETE_GROUPS,\n        payload: response.data\n      });\n    }).catch(function (error) {});\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/GroupsAction.js"],"names":["classService","SHOW_SUCCESS_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","GET_GROUPS","ADD_GROUPS","EDIT_GROUPS","DELETE_GROUPS","ARCHIVED_GET_GROUPS","addGroup","data","dataClass","dispatch","console","log","apiEndpoint","localStorage","token","post","then","response","dataStore","group","type","payload","setTimeout","editGroup","id","patch","getGroup","establishementId","schoolYearId","get","groupList","ArchivedGroupList","map","element","status","length","listTrue","listFalse","filter","push","deleteGroup","itemId","establishment_id","school_year_id","catch","error"],"mappings":"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","sourcesContent":["import { classService } from '../_services/class.service';\nimport {\n  SHOW_SUCCESS_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  GET_GROUPS,\n  ADD_GROUPS,\n  EDIT_GROUPS,\n  DELETE_GROUPS,\n  ARCHIVED_GET_GROUPS,\n} from '../constants/ActionTypes';\n\nexport function addGroup(data, dataClass) {\n  return (dispatch) => {\n    console.log('data avant post ', data, dataClass);\n    let apiEndpoint = `/groups?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then((response) => {\n      if (response) {\n        let dataStore = { ...dataClass, group: [response.data] };\n        console.log(dataStore, 'dataStore');\n        console.log('response.data ', response.data);\n        dispatch({ type: ADD_GROUPS, payload: dataStore });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'La création est effectuée avec succès',\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n}\n\nexport function editGroup(data) {\n  return (dispatch) => {\n    let apiEndpoint = `/group_v4/${data.id}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, data).then((response) => {\n      if (response) {\n        dispatch({ type: EDIT_GROUPS, payload: response.data });\n      }\n    });\n  };\n}\n\nexport function getGroup(establishementId, schoolYearId) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/class_v4?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=` +\n      establishementId +\n      `&filter[where][and][1][fk_id_school_year]=` +\n      schoolYearId +\n      `&filter[include]=group`;\n    classService.get(apiEndpoint).then((response) => {\n      if (response) {\n        console.log(response.data, 'response.data');\n\n        let groupList = [];\n        let ArchivedGroupList = [];\n        response.data.map((element) => {\n          if (element.status && element.group.length > 0) {\n            let listTrue = [];\n            let listFalse = [];\n\n            listTrue = element.group.filter((group) => group.status);\n            listFalse = element.group.filter((group) => !group.status);\n            groupList.push({ ...element, group: listTrue });\n            if (listFalse.length > 0) {\n              ArchivedGroupList.push({ ...element, group: listFalse });\n            }\n          }\n        });\n        console.log(ArchivedGroupList, 'ArchivedGroupList');\n        console.log(groupList, 'groupList');\n\n        dispatch({ type: GET_GROUPS, payload: groupList });\n        dispatch({ type: ARCHIVED_GET_GROUPS, payload: ArchivedGroupList });\n      }\n    });\n  };\n}\n\nexport function deleteGroup(itemId) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/group_v4/` +\n      itemId.id +\n      `?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=${localStorage.establishment_id}&filter[where][and][1][fk_id_school_year]=${localStorage.school_year_id}`;\n    classService\n      .patch(apiEndpoint, {\n        status: false,\n      })\n      .then((response) => {\n        dispatch({ type: DELETE_GROUPS, payload: response.data });\n      })\n      .catch(function(error) {});\n  };\n}\n"]},"metadata":{},"sourceType":"module"}