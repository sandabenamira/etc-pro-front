{"ast":null,"code":"import { getName } from \"./countriesAction\";\nimport { classService } from \"../_services/class.service\";\nimport _ from \"lodash\";\n\nfunction getSubjectName(subjects, subject_id) {\n  let subjectName = subjects.find(element => element.id === subject_id);\n  return getName(subjectName);\n}\n\nfunction subjectsByEstabType(estab_type_id) {\n  return dispatch => {\n    let apiEndpoint = `/subjects?access_token=${localStorage.token}&filter[where][estab_type_id]=` + estab_type_id;\n    classService.get(apiEndpoint).then(response => {\n      let subjectsList = [];\n      response.data.forEach(element => {\n        subjectsList.push({\n          id: element.id,\n          name: getName(element),\n          name_FR: element.name_FR,\n          name_AR: element.name_AR,\n          name_EN: element.name_EN,\n          coefficient: element.coefficient,\n          level_id: element.level_id,\n          section_id: element.section_id,\n          horaires_officiels: element.horaires_officiels,\n          horaires_supplementaires: element.horaires_supplementaires,\n          hexa_color: element.hexa_color\n        });\n      });\n      dispatch({\n        type: \"DATA_LOADED_SUBJECT\",\n        payload: subjectsList\n      });\n    }).catch(error => {});\n  };\n}\n\nfunction subjectsByLevelBySection(subjects, level_id, section_id) {\n  let subjectList = [];\n\n  if (section_id === 0 && level_id === 0) {\n    subjectList = [];\n  } else if (level_id === 0) {\n    subjectList = subjects.filter(element => element.section_id === section_id);\n  } else if (section_id === 0) {\n    subjectList = subjects.filter(element => element.level_id === level_id);\n  } else {\n    subjectList = subjects.filter(element => element.level_id === level_id && element.section_id === section_id);\n  }\n\n  return subjectList;\n}\n\nfunction getSubject() {\n  return dispatch => {\n    let apiEndpoint = `/subjects?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      let subjectsList = [];\n      response.data.forEach(element => {\n        subjectsList.push({\n          id: element.id,\n          name: getName(element),\n          name_FR: element.name_FR,\n          name_AR: element.name_AR,\n          name_EN: element.name_EN,\n          coefficient: element.coefficient,\n          level_id: element.level_id,\n          section_id: element.section_id,\n          horaires_officiels: element.horaires_officiels,\n          horaires_supplementaires: element.horaires_supplementaires,\n          hexa_color: element.hexa_color\n        });\n      });\n      dispatch({\n        type: \"DATA_LOADED_SUBJECT\",\n        payload: subjectsList\n      });\n    }).catch(err => {});\n  };\n}\n\nexport { getSubject, getSubjectName, subjectsByEstabType, subjectsByLevelBySection };\nexport function addData(subject) {\n  return dispatch => {\n    let subjectData = {\n      name: subject.name,\n      description: subject.description,\n      coefficient: subject.coefficient,\n      status: true,\n      establishment_id: subject.establishment_id\n    };\n    let apiEndpoint = `/subjects?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, subjectData).then(response => {\n      dispatch({\n        type: \"ADD_SUBJECT\",\n        payload: response.data\n      });\n      alert(\"L'ajout est effectué avec succès\");\n    }).catch(error => {});\n  };\n}\nexport function deleteData(idItem) {\n  return dispatch => {\n    let apiEndpoint = `/subjects/` + idItem + `?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      const dataSubject = response.data;\n      let subjectData = {\n        name: dataSubject.name,\n        description: dataSubject.description,\n        coefficient: dataSubject.coefficient,\n        status: false,\n        establishment_id: dataSubject.establishment_id,\n        id: dataSubject.id\n      };\n      let apiEndpoint2 = `/subjects/` + dataSubject.id + `?access_token=${localStorage.token}`;\n      classService.put(apiEndpoint2, subjectData).then(response => {\n        dispatch({\n          type: \"DELETE_SUBJECT\",\n          payload: response.data\n        });\n      }).catch(error => {});\n    }).catch(error => {});\n  };\n}\nexport function editData(data) {\n  return dispatch => {\n    let subjectData = {\n      name: data.name,\n      description: data.description,\n      coefficient: data.coefficient,\n      status: true,\n      establishment_id: data.establishment_id,\n      id: data.id\n    };\n    let apiEndpoint = `/subjects/` + data.id + `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, subjectData).then(response => {\n      dispatch({\n        type: \"EDIT_SUBJECT\",\n        payload: response.data\n      });\n    }).catch(error => {});\n  };\n}\nexport function getSubjectsByEstablishmentId(id) {\n  let apiEndpoint = \"\";\n  return dispatch => {\n    apiEndpoint = `/establishments/${id}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      if (response) {\n        const establishmentType = response.data.estab_type_id;\n        apiEndpoint = `/subjects?access_token=${localStorage.token}&filter[where][estab_type_id]=` + establishmentType;\n        classService.get(apiEndpoint).then(response => {\n          if (response) {\n            let subjectsList = [];\n            response.data.forEach(element => {\n              subjectsList.push({\n                id: element.id,\n                name: getName(element),\n                name_FR: element.name_FR,\n                name_AR: element.name_AR,\n                name_EN: element.name_EN,\n                coefficient: element.coefficient,\n                level_id: element.level_id,\n                section_id: element.section_id,\n                horaires_officiels: element.horaires_officiels,\n                horaires_supplementaires: element.horaires_supplementaires,\n                hexa_color: element.hexa_color\n              });\n            });\n            dispatch({\n              type: \"DATA_LOADED_SUBJECT\",\n              payload: subjectsList\n            });\n          }\n        });\n      }\n    });\n  };\n}\nexport function getSubjectsForProf(id) {\n  return dispatch => {\n    let apiEndpoint = `/professors?access_token=${localStorage.token}&filter[where][profile_id]=${id}&filter[include][profSubjects][subject]`;\n    classService.get(apiEndpoint).then(res => {\n      let subjectsFiltred = _.map(res.data[0].profSubjects, \"subject\");\n\n      dispatch({\n        type: \"DATA_LOADED_SUBJECT_PROFESSOR\",\n        payload: subjectsFiltred\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/subjectAction.js"],"names":["getName","classService","_","getSubjectName","subjects","subject_id","subjectName","find","element","id","subjectsByEstabType","estab_type_id","dispatch","apiEndpoint","localStorage","token","get","then","response","subjectsList","data","forEach","push","name","name_FR","name_AR","name_EN","coefficient","level_id","section_id","horaires_officiels","horaires_supplementaires","hexa_color","type","payload","catch","error","subjectsByLevelBySection","subjectList","filter","getSubject","err","addData","subject","subjectData","description","status","establishment_id","post","alert","deleteData","idItem","dataSubject","apiEndpoint2","put","editData","getSubjectsByEstablishmentId","establishmentType","getSubjectsForProf","res","subjectsFiltred","map","profSubjects"],"mappings":"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","sourcesContent":["import { getName } from \"./countriesAction\";\nimport { classService } from \"../_services/class.service\";\nimport _ from \"lodash\";\n\nfunction getSubjectName(subjects, subject_id) {\n  let subjectName = subjects.find((element) => element.id === subject_id);\n  return getName(subjectName);\n}\n\nfunction subjectsByEstabType(estab_type_id) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/subjects?access_token=${localStorage.token}&filter[where][estab_type_id]=` +\n      estab_type_id;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        let subjectsList = [];\n        response.data.forEach((element) => {\n          subjectsList.push({\n            id: element.id,\n            name: getName(element),\n            name_FR: element.name_FR,\n            name_AR: element.name_AR,\n            name_EN: element.name_EN,\n            coefficient: element.coefficient,\n            level_id: element.level_id,\n            section_id: element.section_id,\n            horaires_officiels: element.horaires_officiels,\n            horaires_supplementaires: element.horaires_supplementaires,\n            hexa_color: element.hexa_color,\n          });\n        });\n        dispatch({ type: \"DATA_LOADED_SUBJECT\", payload: subjectsList });\n      })\n      .catch((error) => {});\n  };\n}\n\nfunction subjectsByLevelBySection(subjects, level_id, section_id) {\n  let subjectList = [];\n  if (section_id === 0 && level_id === 0) {\n    subjectList = [];\n  } else if (level_id === 0) {\n    subjectList = subjects.filter(\n      (element) => element.section_id === section_id\n    );\n  } else if (section_id === 0) {\n    subjectList = subjects.filter((element) => element.level_id === level_id);\n  } else {\n    subjectList = subjects.filter(\n      (element) =>\n        element.level_id === level_id && element.section_id === section_id\n    );\n  }\n  return subjectList;\n}\n\nfunction getSubject() {\n  return (dispatch) => {\n    let apiEndpoint = `/subjects?access_token=${localStorage.token}`;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        let subjectsList = [];\n        response.data.forEach((element) => {\n          subjectsList.push({\n            id: element.id,\n            name: getName(element),\n            name_FR: element.name_FR,\n            name_AR: element.name_AR,\n            name_EN: element.name_EN,\n            coefficient: element.coefficient,\n            level_id: element.level_id,\n            section_id: element.section_id,\n            horaires_officiels: element.horaires_officiels,\n            horaires_supplementaires: element.horaires_supplementaires,\n            hexa_color: element.hexa_color,\n          });\n        });\n\n        dispatch({ type: \"DATA_LOADED_SUBJECT\", payload: subjectsList });\n      })\n      .catch((err) => {});\n  };\n}\n\nexport {\n  getSubject,\n  getSubjectName,\n  subjectsByEstabType,\n  subjectsByLevelBySection,\n};\n\nexport function addData(subject) {\n  return (dispatch) => {\n    let subjectData = {\n      name: subject.name,\n      description: subject.description,\n      coefficient: subject.coefficient,\n      status: true,\n      establishment_id: subject.establishment_id,\n    };\n    let apiEndpoint = `/subjects?access_token=${localStorage.token}`;\n    classService\n      .post(apiEndpoint, subjectData)\n      .then((response) => {\n        dispatch({ type: \"ADD_SUBJECT\", payload: response.data });\n        alert(\"L'ajout est effectué avec succès\");\n      })\n      .catch((error) => {});\n  };\n}\n\nexport function deleteData(idItem) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/subjects/` + idItem + `?access_token=${localStorage.token}`;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        const dataSubject = response.data;\n        let subjectData = {\n          name: dataSubject.name,\n          description: dataSubject.description,\n          coefficient: dataSubject.coefficient,\n          status: false,\n          establishment_id: dataSubject.establishment_id,\n          id: dataSubject.id,\n        };\n        let apiEndpoint2 =\n          `/subjects/` + dataSubject.id + `?access_token=${localStorage.token}`;\n        classService\n          .put(apiEndpoint2, subjectData)\n\n          .then((response) => {\n            dispatch({ type: \"DELETE_SUBJECT\", payload: response.data });\n          })\n          .catch((error) => {});\n      })\n      .catch((error) => {});\n  };\n}\n\nexport function editData(data) {\n  return (dispatch) => {\n    let subjectData = {\n      name: data.name,\n      description: data.description,\n      coefficient: data.coefficient,\n      status: true,\n      establishment_id: data.establishment_id,\n      id: data.id,\n    };\n    let apiEndpoint =\n      `/subjects/` + data.id + `?access_token=${localStorage.token}`;\n    classService\n      .put(apiEndpoint, subjectData)\n      .then((response) => {\n        dispatch({ type: \"EDIT_SUBJECT\", payload: response.data });\n      })\n      .catch((error) => {});\n  };\n}\n\nexport function getSubjectsByEstablishmentId(id) {\n  let apiEndpoint = \"\";\n  return (dispatch) => {\n    apiEndpoint = `/establishments/${id}?access_token=${localStorage.token}`;\n\n    classService.get(apiEndpoint).then((response) => {\n      if (response) {\n        const establishmentType = response.data.estab_type_id;\n        apiEndpoint =\n          `/subjects?access_token=${localStorage.token}&filter[where][estab_type_id]=` +\n          establishmentType;\n        classService.get(apiEndpoint).then((response) => {\n          if (response) {\n            let subjectsList = [];\n            response.data.forEach((element) => {\n              subjectsList.push({\n                id: element.id,\n                name: getName(element),\n                name_FR: element.name_FR,\n                name_AR: element.name_AR,\n                name_EN: element.name_EN,\n                coefficient: element.coefficient,\n                level_id: element.level_id,\n                section_id: element.section_id,\n                horaires_officiels: element.horaires_officiels,\n                horaires_supplementaires: element.horaires_supplementaires,\n                hexa_color: element.hexa_color,\n              });\n            });\n            dispatch({ type: \"DATA_LOADED_SUBJECT\", payload: subjectsList });\n          }\n        });\n      }\n    });\n  };\n}\nexport function getSubjectsForProf(id) {\n  return (dispatch) => {\n    let apiEndpoint = `/professors?access_token=${localStorage.token}&filter[where][profile_id]=${id}&filter[include][profSubjects][subject]`;\n    classService.get(apiEndpoint).then((res) => {\n      let subjectsFiltred = _.map(res.data[0].profSubjects, \"subject\");\n      dispatch({\n        type: \"DATA_LOADED_SUBJECT_PROFESSOR\",\n        payload: subjectsFiltred,\n      });\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}