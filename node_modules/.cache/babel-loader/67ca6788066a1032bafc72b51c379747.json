{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/reducers/ToDo.js\";\nimport arrayMove from 'array-move';\nimport { FETCH_ALL_TODO_CONVERSATION_SUCCESS, FETCH_ALL_TODO_SUCCESS, GET_ALL_TODO, GET_IMPORTANT_TODO, GET_MARK_AS_START, GET_NAV_FILTERS, GET_NAV_LABELS, GET_STARRED_TODO, GET_TODO_CONVERSATION, GET_UNIMPORTANT_TODO, GET_UNSELECTED_ALL_TODO, GET_UNSTARRED_TODO, HANDLE_REQUEST_CLOSE, ON_DELETE_TODO, ON_HIDE_LOADER, ON_LABEL_MENU_ITEM_SELECT, ON_LABEL_SELECT, ON_LABEL_UPDATE, ON_OPTION_MENU_ITEM_SELECT, ON_OPTION_MENU_SELECT, ON_SORTEND, ON_TODO_ADD, ON_TODO_CHECKED, ON_TODO_SELECT, ON_TODO_UPDATE, ON_TOGGLE_DRAWER, SEARCH_TODO, SELECT_ALL_TODO, SET_CURRENT_TODO_NULL, SHOW_MESSAGE, SHOW_TODOS, UPDATE_SEARCH, ADD_HOMEWORK, ASSIGN_HOMEWORK, GET_LABELS_FOR_HOMRWORK, FETCH_ALL_TODO_SUCCESS_FOR_PARENT, FETCH_ALL_TODO_SUCCESS_FOR_ADMIN, GET_NAV_LABELS_FOR_ADMIN, ADD_TODO_CONVERSATION } from '../constants/ActionTypes';\nimport React from 'react';\nimport IntlMessages from '../util/IntlMessages';\nconst INIT_STATE = {\n  searchTodo: '',\n  alertMessage: '',\n  loader: true,\n  showMessage: false,\n  optionName: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"autocomplete.emploidutemps.none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }),\n  drawerState: false,\n  allToDos: [],\n  currentTodo: null,\n  user: {\n    name: 'Robert Johnson',\n    email: 'robert.johnson@example.com',\n    avatar: 'https://via.placeholder.com/150x150'\n  },\n  selectedToDos: 0,\n  labelMenuState: false,\n  optionMenuState: false,\n  toDos: [],\n  toDosForParent: [],\n  toDosForAdmin: [],\n  filter: -1,\n  todoConversation: [],\n  // todoConversation,\n  conversation: null,\n  assignHomeworkList: [],\n  labels: []\n};\nexport default ((state = INIT_STATE, action) => {\n  switch (action.type) {\n    case ON_SORTEND:\n      {\n        return { ...state,\n          toDos: arrayMove(state.toDos, action.payload.oldIndex, action.payload.newIndex)\n        };\n      }\n\n    case ON_LABEL_SELECT:\n      {\n        return { ...state,\n          labelMenuState: !state.labelMenuState\n        };\n      }\n\n    case ON_OPTION_MENU_SELECT:\n      {\n        return { ...state,\n          optionMenuState: !state.optionMenuState\n        };\n      }\n\n    case ON_OPTION_MENU_ITEM_SELECT:\n      {\n        return { ...state\n        };\n      }\n\n    case SELECT_ALL_TODO:\n      {\n        let toDos = state.allToDos.map(todo => todo ? { ...todo,\n          selected: true\n        } : todo);\n        return { ...state,\n          selectedToDos: toDos.length,\n          allToDos: action.payload,\n          optionName: 'All',\n          toDos: action.payload\n        };\n      }\n\n    case GET_ALL_TODO:\n      {\n        return { ...state,\n          currentTodo: null,\n          toDos: state.allToDos\n        };\n      }\n\n    case GET_UNSELECTED_ALL_TODO:\n      {\n        let toDos = state.allToDos.map(todo => todo ? { ...todo,\n          selected: false\n        } : todo);\n        return { ...state,\n          selectedToDos: 0,\n          allToDos: toDos,\n          optionName: 'None',\n          toDos: toDos\n        };\n      }\n\n    case GET_STARRED_TODO:\n      {\n        let selectedToDos = 0;\n        let toDos = state.allToDos.map(todo => {\n          if (todo.starred) {\n            selectedToDos++;\n            return { ...todo,\n              selected: true\n            };\n          }\n\n          return { ...todo,\n            selected: false\n          };\n        });\n        return { ...state,\n          selectedToDos: selectedToDos,\n          allToDos: toDos,\n          optionName: 'Stared',\n          toDos: toDos.filter(todo => !todo.deleted)\n        };\n      }\n\n    case GET_UNSTARRED_TODO:\n      {\n        let selectedToDos = 0;\n        let toDos = state.allToDos.map(todo => {\n          if (!todo.starred) {\n            selectedToDos++;\n            return { ...todo,\n              selected: true\n            };\n          }\n\n          return { ...todo,\n            selected: false\n          };\n        });\n        return { ...state,\n          selectedToDos: selectedToDos,\n          allToDos: toDos,\n          optionName: 'UnStarred',\n          toDos: toDos.filter(todo => !todo.deleted)\n        };\n      }\n\n    case GET_IMPORTANT_TODO:\n      {\n        let selectedToDos = 0;\n        let toDos = state.allToDos.map(todo => {\n          if (todo.important) {\n            selectedToDos++;\n            return { ...todo,\n              selected: true\n            };\n          }\n\n          return { ...todo,\n            selected: false\n          };\n        });\n        return { ...state,\n          selectedToDos: selectedToDos,\n          allToDos: toDos,\n          optionName: 'Important',\n          toDos: toDos.filter(todo => !todo.deleted)\n        };\n      }\n\n    case GET_MARK_AS_START:\n      {\n        const toDos = state.allToDos.map(todo => {\n          if (todo.id === action.payload.id) {\n            return action.payload;\n          } else {\n            return todo;\n          }\n        });\n        return { ...state,\n          alertMessage: 'ToDo Updated Successfully',\n          showMessage: true,\n          allToDos: toDos,\n          toDos: toDos\n        };\n      }\n\n    case GET_UNIMPORTANT_TODO:\n      {\n        let selectedToDos = 0;\n        let toDos = state.allToDos.map(todo => {\n          if (!todo.important) {\n            selectedToDos++;\n            return { ...todo,\n              selected: true\n            };\n          }\n\n          return { ...todo,\n            selected: false\n          };\n        });\n        return { ...state,\n          selectedToDos: selectedToDos,\n          allToDos: toDos,\n          optionName: 'Unimportant',\n          toDos: toDos.filter(todo => !todo.deleted)\n        };\n      }\n\n    case ON_LABEL_MENU_ITEM_SELECT:\n      {\n        const toDos = state.allToDos.map(todo => {\n          if (todo.selected) {\n            if (todo.labels.includes(action.payload.id)) {\n              todo.labels.splice(todo.labels.indexOf(action.payload.id), 1);\n              return { ...todo,\n                labels: todo.labels\n              };\n            } else {\n              return { ...todo,\n                labels: todo.labels.concat(action.payload.id)\n              };\n            }\n          } else {\n            return todo;\n          }\n        });\n        return { ...state,\n          alertMessage: 'Label Updated Successfully',\n          showMessage: true,\n          allToDos: toDos,\n          toDos: toDos\n        };\n      }\n\n    case ON_LABEL_UPDATE:\n      {\n        if (action.payload.data.labels.includes(action.payload.label.id)) {\n          action.payload.data.labels.splice(action.payload.data.labels.indexOf(action.payload.label.id), 1);\n        } else {\n          action.payload.data.labels = action.payload.data.labels.concat(action.payload.label.id);\n        }\n\n        const toDos = state.allToDos.map(todo => {\n          if (todo.id === action.payload.data.id) {\n            return action.payload.data;\n          } else {\n            return todo;\n          }\n        });\n        return { ...state,\n          alertMessage: 'Label Updated Successfully',\n          showMessage: true,\n          currentTodo: action.payload,\n          allToDos: toDos,\n          toDos: toDos\n        };\n      }\n\n    case ON_TODO_UPDATE:\n      {\n        const toDos = state.allToDos.map(todo => {\n          if (todo.id === action.payload.id) {\n            let data = { ...action.payload,\n              'professor': todo.professor\n            };\n            return data;\n          } else {\n            return todo;\n          }\n        });\n        return { ...state,\n          alertMessage: 'ToDo Updated Successfully',\n          showMessage: true,\n          // currentTodo: action.payload,\n          allToDos: toDos,\n          toDos: toDos\n        };\n      }\n\n    case 'TODO_UPDATE':\n      return state = [...state.allToDos.filter(element => element.id !== action.payload.id), action.payload];\n\n    case ON_DELETE_TODO:\n      {\n        let selectedToDos = 0;\n        const toDos = state.allToDos.map(todo => {\n          if (todo.selected) {\n            selectedToDos++;\n          }\n\n          if (action.payload.id === todo.id) {\n            if (todo.selected) {\n              selectedToDos--;\n            }\n\n            return { ...todo,\n              deleted: true\n            };\n          } else {\n            return todo;\n          }\n        });\n        return { ...state,\n          // alertMessage: 'ToDo Deleted Successfully',\n          // showMessage: true,\n          allToDos: toDos,\n          currentTodo: null,\n          selectedToDos: selectedToDos,\n          toDos: toDos.filter(todo => !todo.deleted)\n        };\n      }\n    //   case ON_DELETE_TODO: {\n    //     console.log('element to delete',action.payload)\n    //     console.log('allTodos', state.allToDos)\n    //     console.log('todos',state.toDos)\n    //   return Object.assign({}, state, {\n    //     allToDos: [...state.allToDos.filter(element => element.id !== action.payload.id)],\n    //     alertMessage: 'ToDo Deleted Successfully',\n    //      showMessage: true,\n    //      currentTodo: null,\n    //   });\n    // }\n\n    case GET_NAV_LABELS:\n      {\n        // const filterMails = state.allToDos.filter(todo => todo.labels.includes(action.payload.id));\n        // return {\n        //   ...state,\n        //   loader: true,\n        //   currentTodo: null,\n        //   toDos: filterMails\n        // }\n        return { ...state,\n          currentTodo: null,\n          toDos: action.payload\n        };\n      }\n\n    case GET_NAV_LABELS_FOR_ADMIN:\n      {\n        return { ...state,\n          currentTodo: null,\n          toDosForAdmin: action.payload\n        };\n      }\n\n    case GET_NAV_FILTERS:\n      {\n        const filterMails = state.allToDos.filter(todo => {\n          if (action.payload.id === 0 && todo.starred) {\n            return todo;\n          } else if (action.payload.id === 1 && todo.important) {\n            return todo;\n          } else if (action.payload.id === 2 && todo.important) {\n            return todo;\n          } else if (action.payload.id === 3 && todo.important) {\n            return todo;\n          } else if (action.payload.id === 4 && todo.completed) {\n            return todo;\n          } else if (action.payload.id === 5 && todo.deleted) {\n            return todo;\n          } else return todo;\n        });\n        return { ...state,\n          loader: true,\n          currentTodo: null,\n          filter: action.payload.id,\n          toDos: filterMails\n        };\n      }\n\n    case SEARCH_TODO:\n      {\n        if (action.payload === '') {\n          return { ...state,\n            toDos: state.allToDos.filter(todo => !todo.deleted)\n          };\n        } else {\n          const searchToDos = state.allToDos.filter(todo => !todo.deleted && todo.title.toLowerCase().indexOf(action.payload.toLowerCase()) > -1);\n          return { ...state,\n            toDos: searchToDos\n          };\n        }\n      }\n\n    case SHOW_TODOS:\n      {\n        return { ...state\n        };\n      }\n\n    case GET_TODO_CONVERSATION:\n      {\n        return { ...state\n        };\n      }\n\n    case ON_TODO_CHECKED:\n      {\n        action.payload.selected = !action.payload.selected;\n        let selectedToDos = 0;\n        const toDos = state.toDos.map(todo => {\n          if (todo.selected) {\n            selectedToDos++;\n          }\n\n          if (todo.id === action.payload.id) {\n            if (todo.selected) {\n              selectedToDos++;\n            }\n\n            return action.payload;\n          } else {\n            return todo;\n          }\n        });\n        return { ...state,\n          selectedToDos: selectedToDos,\n          toDos: toDos\n        };\n      }\n\n    case ON_TODO_ADD:\n      {\n        return { ...state,\n          alertMessage: 'L\\'ajout est effectué avec succès',\n          showMessage: true,\n          currentTodo: null,\n          toDos: state.allToDos.concat(action.payload),\n          allToDos: state.allToDos.concat(action.payload),\n          toDosForAdmin: state.toDosForAdmin.concat(action.payload)\n        };\n      }\n\n    case ON_TODO_SELECT:\n      {\n        let conversationList = state.todoConversation.find(conversation => conversation.id === action.payload.id);\n\n        if (conversationList) {\n          conversationList = conversationList.conversationData;\n        } else {\n          conversationList = [];\n        }\n\n        return { ...state,\n          currentTodo: action.payload,\n          loader: true,\n          conversation: conversationList\n        };\n      }\n\n    case SET_CURRENT_TODO_NULL:\n      {\n        return { ...state,\n          currentTodo: null\n        };\n      }\n\n    case UPDATE_SEARCH:\n      {\n        return { ...state,\n          searchTodo: action.payload\n        };\n      }\n\n    case ON_TOGGLE_DRAWER:\n      {\n        return { ...state,\n          drawerState: !state.drawerState\n        };\n      }\n\n    case HANDLE_REQUEST_CLOSE:\n      {\n        return { ...state,\n          showMessage: false,\n          addTodo: false,\n          labelMenuState: false,\n          optionMenuState: false\n        };\n      }\n\n    case ON_HIDE_LOADER:\n      {\n        return { ...state,\n          loader: false\n        };\n      }\n\n    case FETCH_ALL_TODO_SUCCESS:\n      {\n        return { ...state,\n          allToDos: action.payload,\n          toDos: action.payload,\n          loader: false\n        };\n      }\n\n    case FETCH_ALL_TODO_SUCCESS_FOR_PARENT:\n      {\n        return { ...state,\n          toDosForParent: action.payload,\n          loader: false\n        };\n      }\n\n    case FETCH_ALL_TODO_SUCCESS_FOR_ADMIN:\n      {\n        return { ...state,\n          toDosForAdmin: action.payload,\n          loader: false\n        };\n      }\n\n    case FETCH_ALL_TODO_CONVERSATION_SUCCESS:\n      {\n        return { ...state,\n          todoConversation: action.payload\n        };\n      }\n\n    case SHOW_MESSAGE:\n      {\n        return { ...state,\n          alertMessage: action.payload,\n          showMessage: true,\n          loader: false\n        };\n      }\n\n    case ADD_HOMEWORK:\n      {\n        return Object.assign({}, state, {\n          toDos: state.toDos.concat(action.payload),\n          allToDos: state.allToDos.concat(action.payload)\n        });\n      }\n\n    case ASSIGN_HOMEWORK:\n      {\n        return Object.assign({}, state, {\n          assignHomeworkList: state.assignHomeworkList.concat(action.payload)\n        });\n      }\n\n    case GET_LABELS_FOR_HOMRWORK:\n      {\n        return { ...state,\n          currentTodo: null,\n          labels: action.payload\n        };\n      }\n\n    case ADD_TODO_CONVERSATION:\n      {\n        return Object.assign({}, state, {\n          todoConversation: state.todoConversation.concat(action.payload)\n        });\n      }\n\n    case 'CLEAN_TODO_STATE':\n      {\n        return Object.assign({}, state, {\n          allToDos: action.payload,\n          toDos: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/reducers/ToDo.js"],"names":["arrayMove","FETCH_ALL_TODO_CONVERSATION_SUCCESS","FETCH_ALL_TODO_SUCCESS","GET_ALL_TODO","GET_IMPORTANT_TODO","GET_MARK_AS_START","GET_NAV_FILTERS","GET_NAV_LABELS","GET_STARRED_TODO","GET_TODO_CONVERSATION","GET_UNIMPORTANT_TODO","GET_UNSELECTED_ALL_TODO","GET_UNSTARRED_TODO","HANDLE_REQUEST_CLOSE","ON_DELETE_TODO","ON_HIDE_LOADER","ON_LABEL_MENU_ITEM_SELECT","ON_LABEL_SELECT","ON_LABEL_UPDATE","ON_OPTION_MENU_ITEM_SELECT","ON_OPTION_MENU_SELECT","ON_SORTEND","ON_TODO_ADD","ON_TODO_CHECKED","ON_TODO_SELECT","ON_TODO_UPDATE","ON_TOGGLE_DRAWER","SEARCH_TODO","SELECT_ALL_TODO","SET_CURRENT_TODO_NULL","SHOW_MESSAGE","SHOW_TODOS","UPDATE_SEARCH","ADD_HOMEWORK","ASSIGN_HOMEWORK","GET_LABELS_FOR_HOMRWORK","FETCH_ALL_TODO_SUCCESS_FOR_PARENT","FETCH_ALL_TODO_SUCCESS_FOR_ADMIN","GET_NAV_LABELS_FOR_ADMIN","ADD_TODO_CONVERSATION","React","IntlMessages","INIT_STATE","searchTodo","alertMessage","loader","showMessage","optionName","drawerState","allToDos","currentTodo","user","name","email","avatar","selectedToDos","labelMenuState","optionMenuState","toDos","toDosForParent","toDosForAdmin","filter","todoConversation","conversation","assignHomeworkList","labels","state","action","type","payload","oldIndex","newIndex","map","todo","selected","length","starred","deleted","important","id","includes","splice","indexOf","concat","data","label","professor","element","filterMails","completed","searchToDos","title","toLowerCase","conversationList","find","conversationData","addTodo","Object","assign"],"mappings":"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","sourcesContent":["import arrayMove from 'array-move';\r\nimport {\r\n  FETCH_ALL_TODO_CONVERSATION_SUCCESS,\r\n  FETCH_ALL_TODO_SUCCESS,\r\n  GET_ALL_TODO,\r\n  GET_IMPORTANT_TODO,\r\n  GET_MARK_AS_START,\r\n  GET_NAV_FILTERS,\r\n  GET_NAV_LABELS,\r\n  GET_STARRED_TODO,\r\n  GET_TODO_CONVERSATION,\r\n  GET_UNIMPORTANT_TODO,\r\n  GET_UNSELECTED_ALL_TODO,\r\n  GET_UNSTARRED_TODO,\r\n  HANDLE_REQUEST_CLOSE,\r\n  ON_DELETE_TODO,\r\n  ON_HIDE_LOADER,\r\n  ON_LABEL_MENU_ITEM_SELECT,\r\n  ON_LABEL_SELECT,\r\n  ON_LABEL_UPDATE,\r\n  ON_OPTION_MENU_ITEM_SELECT,\r\n  ON_OPTION_MENU_SELECT,\r\n  ON_SORTEND,\r\n  ON_TODO_ADD,\r\n  ON_TODO_CHECKED,\r\n  ON_TODO_SELECT,\r\n  ON_TODO_UPDATE,\r\n  ON_TOGGLE_DRAWER,\r\n  SEARCH_TODO,\r\n  SELECT_ALL_TODO,\r\n  SET_CURRENT_TODO_NULL,\r\n  SHOW_MESSAGE,\r\n  SHOW_TODOS,\r\n  UPDATE_SEARCH,\r\n  ADD_HOMEWORK,\r\n  ASSIGN_HOMEWORK,\r\n  GET_LABELS_FOR_HOMRWORK,\r\n  FETCH_ALL_TODO_SUCCESS_FOR_PARENT,\r\n  FETCH_ALL_TODO_SUCCESS_FOR_ADMIN,\r\n  GET_NAV_LABELS_FOR_ADMIN,\r\n  ADD_TODO_CONVERSATION\r\n} from '../constants/ActionTypes';\r\nimport React from 'react';\r\nimport IntlMessages from '../util/IntlMessages';\r\n\r\nconst INIT_STATE = {\r\n  searchTodo: '',\r\n  alertMessage: '',\r\n  loader: true,\r\n  showMessage: false,\r\n  optionName: <IntlMessages id=\"autocomplete.emploidutemps.none\"/>,\r\n  drawerState: false,\r\n  allToDos: [],\r\n  currentTodo: null,\r\n  user: {\r\n    name: 'Robert Johnson',\r\n    email: 'robert.johnson@example.com',\r\n    avatar: 'https://via.placeholder.com/150x150'\r\n  },\r\n  selectedToDos: 0,\r\n  labelMenuState: false,\r\n  optionMenuState: false,\r\n  toDos: [],\r\n  toDosForParent:[],\r\n  toDosForAdmin:[],\r\n  filter: -1,\r\n  todoConversation: [],\r\n  // todoConversation,\r\n  conversation: null,\r\n  assignHomeworkList : [],\r\n  labels:[]\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case ON_SORTEND: {\r\n      return {\r\n        ...state, toDos: arrayMove(state.toDos, action.payload.oldIndex, action.payload.newIndex)\r\n      }\r\n    }\r\n    case ON_LABEL_SELECT: {\r\n      return {\r\n        ...state,\r\n        labelMenuState: !state.labelMenuState\r\n      }\r\n    }\r\n    case ON_OPTION_MENU_SELECT: {\r\n      return {\r\n        ...state,\r\n        optionMenuState: !state.optionMenuState\r\n      }\r\n    }\r\n    case ON_OPTION_MENU_ITEM_SELECT: {\r\n      return { ...state }\r\n    }\r\n    case SELECT_ALL_TODO: {\r\n      let toDos = state.allToDos.map((todo) => todo ? {\r\n        ...todo,\r\n        selected: true\r\n      } : todo);\r\n\r\n      return {\r\n        ...state,\r\n        selectedToDos: toDos.length,\r\n        allToDos: action.payload,\r\n        optionName: 'All',\r\n        toDos: action.payload\r\n      }\r\n    }\r\n    case GET_ALL_TODO: {\r\n      return {\r\n        ...state,\r\n        currentTodo: null,\r\n         toDos: state.allToDos\r\n      }\r\n    }\r\n    case GET_UNSELECTED_ALL_TODO: {\r\n\r\n      let toDos = state.allToDos.map((todo) => todo ? {\r\n        ...todo,\r\n        selected: false\r\n      } : todo);\r\n      return {\r\n        ...state,\r\n        selectedToDos: 0,\r\n        allToDos: toDos,\r\n        optionName: 'None',\r\n        toDos: toDos\r\n      }\r\n    }\r\n    case GET_STARRED_TODO: {\r\n      let selectedToDos = 0;\r\n      let toDos = state.allToDos.map((todo) => {\r\n        if (todo.starred) {\r\n          selectedToDos++;\r\n          return { ...todo, selected: true };\r\n        }\r\n        return { ...todo, selected: false }\r\n      });\r\n      return {\r\n        ...state,\r\n        selectedToDos: selectedToDos,\r\n        allToDos: toDos,\r\n        optionName: 'Stared',\r\n        toDos: toDos.filter(todo => !todo.deleted)\r\n      }\r\n    }\r\n    case GET_UNSTARRED_TODO: {\r\n      let selectedToDos = 0;\r\n      let toDos = state.allToDos.map((todo) => {\r\n        if (!todo.starred) {\r\n          selectedToDos++;\r\n          return { ...todo, selected: true };\r\n        }\r\n        return { ...todo, selected: false }\r\n      });\r\n      return {\r\n        ...state,\r\n        selectedToDos: selectedToDos,\r\n        allToDos: toDos,\r\n        optionName: 'UnStarred',\r\n        toDos: toDos.filter(todo => !todo.deleted)\r\n      }\r\n    }\r\n    case GET_IMPORTANT_TODO: {\r\n      let selectedToDos = 0;\r\n      let toDos = state.allToDos.map((todo) => {\r\n        if (todo.important) {\r\n          selectedToDos++;\r\n          return { ...todo, selected: true };\r\n        }\r\n        return { ...todo, selected: false }\r\n      });\r\n      return {\r\n        ...state,\r\n        selectedToDos: selectedToDos,\r\n        allToDos: toDos,\r\n        optionName: 'Important',\r\n        toDos: toDos.filter(todo => !todo.deleted)\r\n      }\r\n    }\r\n\r\n    case GET_MARK_AS_START: {\r\n      const toDos = state.allToDos.map(todo => {\r\n        if (todo.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        alertMessage: 'ToDo Updated Successfully',\r\n        showMessage: true,\r\n        allToDos: toDos,\r\n        toDos: toDos,\r\n      }\r\n    }\r\n    case GET_UNIMPORTANT_TODO: {\r\n      let selectedToDos = 0;\r\n      let toDos = state.allToDos.map((todo) => {\r\n        if (!todo.important) {\r\n          selectedToDos++;\r\n          return { ...todo, selected: true };\r\n        }\r\n        return { ...todo, selected: false }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        selectedToDos: selectedToDos,\r\n        allToDos: toDos,\r\n        optionName: 'Unimportant',\r\n        toDos: toDos.filter(todo => !todo.deleted)\r\n      }\r\n    }\r\n    case ON_LABEL_MENU_ITEM_SELECT: {\r\n      const toDos = state.allToDos.map(todo => {\r\n        if (todo.selected) {\r\n          if (todo.labels.includes(action.payload.id)) {\r\n            todo.labels.splice(todo.labels.indexOf(action.payload.id), 1);\r\n            return { ...todo, labels: todo.labels };\r\n          } else {\r\n            return { ...todo, labels: todo.labels.concat(action.payload.id) };\r\n          }\r\n        } else {\r\n          return todo;\r\n        }\r\n      }\r\n      );\r\n      return {\r\n        ...state,\r\n        alertMessage: 'Label Updated Successfully',\r\n        showMessage: true,\r\n        allToDos: toDos,\r\n        toDos: toDos\r\n      }\r\n    }\r\n    case ON_LABEL_UPDATE: {\r\n      if (action.payload.data.labels.includes(action.payload.label.id)) {\r\n        action.payload.data.labels.splice(action.payload.data.labels.indexOf(action.payload.label.id), 1);\r\n      } else {\r\n        action.payload.data.labels = action.payload.data.labels.concat(action.payload.label.id);\r\n      }\r\n      const toDos = state.allToDos.map(todo => {\r\n        if (todo.id === action.payload.data.id) {\r\n          return action.payload.data;\r\n        } else {\r\n          return todo;\r\n        }\r\n      }\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        alertMessage: 'Label Updated Successfully',\r\n        showMessage: true,\r\n        currentTodo: action.payload,\r\n        allToDos: toDos,\r\n        toDos: toDos,\r\n      }\r\n    }\r\n\r\n    case ON_TODO_UPDATE: {\r\n      \r\n      \r\n      const toDos = state.allToDos.map(todo => {\r\n      if (todo.id === action.payload.id) {\r\n        let data={\r\n          ...action.payload,\r\n          'professor':todo.professor\r\n        }\r\n      return data;\r\n      } else {\r\n      return todo;\r\n      }\r\n      });\r\n      return {\r\n      ...state,\r\n      alertMessage: 'ToDo Updated Successfully',\r\n      showMessage: true,\r\n     // currentTodo: action.payload,\r\n      allToDos: toDos,\r\n      toDos: toDos,\r\n      }\r\n      }\r\n\r\n    case 'TODO_UPDATE':      \r\n      return state = [...state.allToDos.filter(element => element.id !== action.payload.id), action.payload]\r\n\r\n      case ON_DELETE_TODO: {\r\n        let selectedToDos = 0;\r\n        const toDos = state.allToDos.map(todo => {\r\n        if (todo.selected) {\r\n        selectedToDos++\r\n        }\r\n        if (action.payload.id === todo.id) {\r\n        if (todo.selected) {\r\n        selectedToDos--\r\n        }\r\n        return { ...todo, deleted: true };\r\n        } else {\r\n        return todo;\r\n        }\r\n        }\r\n        );\r\n        return {\r\n        ...state,\r\n        // alertMessage: 'ToDo Deleted Successfully',\r\n        // showMessage: true,\r\n        allToDos: toDos,\r\n        currentTodo: null,\r\n        selectedToDos: selectedToDos,\r\n        toDos: toDos.filter((todo) => !todo.deleted)\r\n        }\r\n        }\r\n\r\n  //   case ON_DELETE_TODO: {\r\n  //     console.log('element to delete',action.payload)\r\n  //     console.log('allTodos', state.allToDos)\r\n  //     console.log('todos',state.toDos)\r\n  //   return Object.assign({}, state, {\r\n  //     allToDos: [...state.allToDos.filter(element => element.id !== action.payload.id)],\r\n  //     alertMessage: 'ToDo Deleted Successfully',\r\n  //      showMessage: true,\r\n  //      currentTodo: null,\r\n  //   });\r\n\r\n  // }\r\n\r\n    case GET_NAV_LABELS: {\r\n   \r\n      // const filterMails = state.allToDos.filter(todo => todo.labels.includes(action.payload.id));\r\n      // return {\r\n      //   ...state,\r\n      //   loader: true,\r\n      //   currentTodo: null,\r\n      //   toDos: filterMails\r\n      // }\r\n      return {\r\n        ...state,\r\n        currentTodo: null,\r\n        toDos: action.payload\r\n      }\r\n    }\r\n    case GET_NAV_LABELS_FOR_ADMIN: {\r\n      return {\r\n        ...state,\r\n        currentTodo: null,\r\n        toDosForAdmin: action.payload\r\n      }\r\n    }\r\n    case GET_NAV_FILTERS: {\r\n      const filterMails = state.allToDos.filter(todo => {\r\n        if (action.payload.id === 0 && todo.starred) {\r\n          return todo\r\n        } else if (action.payload.id === 1 && todo.important) {\r\n          return todo\r\n        } else if (action.payload.id === 2 && todo.important) {\r\n          return todo\r\n        } else if (action.payload.id === 3 && todo.important) {\r\n          return todo\r\n        } else if (action.payload.id === 4 && todo.completed) {\r\n          return todo\r\n        } else if (action.payload.id === 5 && todo.deleted) {\r\n          return todo\r\n        } else return todo;\r\n      });\r\n      return {\r\n        ...state,\r\n        loader: true,\r\n        currentTodo: null,\r\n        filter: action.payload.id,\r\n        toDos: filterMails\r\n      }\r\n    }\r\n\r\n    case SEARCH_TODO: {\r\n      if (action.payload === '') {\r\n        return { ...state, toDos: state.allToDos.filter((todo) => !todo.deleted) };\r\n      } else {\r\n        const searchToDos = state.allToDos.filter((todo) =>\r\n          !todo.deleted && todo.title.toLowerCase().indexOf(action.payload.toLowerCase()) > -1);\r\n        return { ...state, toDos: searchToDos }\r\n      }\r\n    }\r\n    case SHOW_TODOS: {\r\n      \r\n      return { ...state }\r\n    }\r\n    case GET_TODO_CONVERSATION: {\r\n      return { ...state }\r\n    }\r\n    case ON_TODO_CHECKED: {\r\n      action.payload.selected = !action.payload.selected;\r\n      let selectedToDos = 0;\r\n      const toDos = state.toDos.map(todo => {\r\n        if (todo.selected) {\r\n          selectedToDos++;\r\n        }\r\n        if (todo.id === action.payload.id) {\r\n          if (todo.selected) {\r\n            selectedToDos++;\r\n          }\r\n          return action.payload;\r\n        } else {\r\n          return todo;\r\n        }\r\n      }\r\n      );\r\n      return {\r\n        ...state,\r\n        selectedToDos: selectedToDos,\r\n        toDos: toDos\r\n      }\r\n    }\r\n    case ON_TODO_ADD: {\r\n      return {\r\n        ...state,\r\n        alertMessage: 'L\\'ajout est effectué avec succès',\r\n        showMessage: true,\r\n        currentTodo: null,\r\n        toDos: state.allToDos.concat(action.payload),\r\n        allToDos: state.allToDos.concat(action.payload),\r\n        toDosForAdmin: state.toDosForAdmin.concat(action.payload)\r\n      }\r\n    }\r\n    case ON_TODO_SELECT: {\r\n      let conversationList = state.todoConversation.find((conversation) => conversation.id === action.payload.id);\r\n      if (conversationList) {\r\n        conversationList = conversationList.conversationData;\r\n      } else {\r\n        conversationList = [];\r\n      }\r\n      return {\r\n        ...state,\r\n        currentTodo: action.payload,\r\n        loader: true,\r\n        conversation: conversationList\r\n      }\r\n    }\r\n    case SET_CURRENT_TODO_NULL: {\r\n      return { ...state, currentTodo: null }\r\n    }\r\n    case UPDATE_SEARCH: {\r\n      return { ...state, searchTodo: action.payload }\r\n    }\r\n    case ON_TOGGLE_DRAWER: {\r\n      return { ...state, drawerState: !state.drawerState }\r\n    }\r\n    case HANDLE_REQUEST_CLOSE: {\r\n      return { ...state, showMessage: false, addTodo: false, labelMenuState: false, optionMenuState: false }\r\n    }\r\n    case ON_HIDE_LOADER: {\r\n      return { ...state, loader: false }\r\n    }\r\n    case FETCH_ALL_TODO_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        allToDos: action.payload,\r\n        toDos: action.payload,\r\n        loader: false,\r\n      }\r\n    }\r\n    case FETCH_ALL_TODO_SUCCESS_FOR_PARENT: {\r\n      return {\r\n        ...state,\r\n        toDosForParent: action.payload,\r\n        loader: false,\r\n      }\r\n    } \r\n    case FETCH_ALL_TODO_SUCCESS_FOR_ADMIN: {\r\n      return {\r\n        ...state,\r\n        toDosForAdmin: action.payload,\r\n        loader: false,\r\n      }\r\n    }\r\n    case FETCH_ALL_TODO_CONVERSATION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        todoConversation: action.payload\r\n      }\r\n    }\r\n    case SHOW_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        alertMessage: action.payload,\r\n        showMessage: true,\r\n        loader: false\r\n      }\r\n    }\r\n    case ADD_HOMEWORK: {\r\n      return Object.assign({}, state, {\r\n        toDos: state.toDos.concat(action.payload),\r\n        allToDos: state.allToDos.concat(action.payload)\r\n\r\n      });\r\n    }\r\n    case ASSIGN_HOMEWORK: {\r\n      return Object.assign({}, state, {\r\n        assignHomeworkList: state.assignHomeworkList.concat(action.payload)\r\n      });\r\n    }\r\n    case GET_LABELS_FOR_HOMRWORK: {\r\n      return {\r\n        ...state,\r\n        currentTodo: null,\r\n        labels: action.payload\r\n      }\r\n    }\r\n    case ADD_TODO_CONVERSATION: {\r\n      return Object.assign({}, state, {\r\n        todoConversation: state.todoConversation.concat(action.payload)\r\n      });\r\n    }\r\n    case 'CLEAN_TODO_STATE': {\r\n      return Object.assign({}, state, {\r\n        allToDos: action.payload,\r\n        toDos: action.payload,\r\n      });\r\n    }\r\n    \r\n\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}