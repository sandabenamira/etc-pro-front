{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/Payment/PayBill.js\";\nimport React from \"react\";\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport Button from '@material-ui/core/Button';\nimport Auxiliary from \"../../../../../util/Auxiliary\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { payBill, editBill } from '../../../../../actions/PaymentAction';\nimport { connect } from 'react-redux';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { classService } from \"../../../../../_services/class.service\";\nimport { partiallyPaidInvoice } from '../../../../../config/config';\n\nclass PayBill extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = key => (event, value) => {\n      this.setState({\n        [key]: value,\n        paymentMethode: value,\n        paymentMethodeError: false\n      });\n    };\n\n    this.handleChangeInput = name => event => {\n      if (name == 'price') {\n        let priceError = false;\n        priceError = this.props.invoice.bill.total_incl_tax < event.target.value.trim();\n        this.setState({\n          [name]: event.target.value,\n          priceError\n        });\n      } else {\n        this.setState({\n          [name]: event.target.value\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.paymentMethode === '') {\n        this.setState({\n          paymentMethodeError: true\n        });\n      } else if (this.state.price > this.props.invoice.bill.total_incl_tax) {\n        this.setState({\n          priceError: true\n        });\n      } else {\n        let data = {};\n\n        if (this.props.invoice.bill.status === partiallyPaidInvoice) {\n          const newPrice = parseInt(this.state.price) + this.state.oldPrice;\n\n          if (newPrice > this.props.invoice.bill.total_incl_tax) {\n            this.setState({\n              priceError: true\n            });\n          } else {\n            data = {\n              \"price_paid\": newPrice\n            };\n            this.props.dispatch(editBill(data, this.state.idPaymentV2, this.props.invoice));\n            this.props.cancelModal();\n          }\n        } else {\n          data = {\n            \"payment_day\": this.state.paymentDay,\n            \"payment_methode\": this.state.paymentMethode,\n            \"fk_id_profile\": this.props.userProfile.id,\n            \"fk_id_bill\": this.props.invoice.bill.id,\n            \"price_invoice\": this.props.invoice.bill.total_incl_tax,\n            \"price_paid\": this.state.price\n          };\n          this.props.dispatch(payBill(data, this.props.invoice));\n          this.props.cancelModal();\n        }\n      }\n    };\n\n    this.state = {\n      previewVisible: true,\n      price: 0,\n      paymentDay: '',\n      paymentMethode: '',\n      expectedDay: '',\n      idItem: '',\n      studentServiceId: '',\n      dataPaymentItem: {},\n      priceError: false,\n      paymentMethodeError: false,\n      idPaymentV2: 0,\n      oldPrice: 0\n    };\n  }\n\n  componentDidMount() {\n    const data = this.props.invoice;\n    const today = moment().format();\n    const paymentDay = today.split('T');\n\n    if (data.bill.status === partiallyPaidInvoice) {\n      let apiEndpoint = `/payments_v2?access_token=${localStorage.token}&filter[where][fk_id_bill]=${data.bill.id}`;\n      classService.get(apiEndpoint).then(response => {\n        const price = parseInt(response.data[0].price_invoice) - parseInt(response.data[0].price_paid);\n        this.setState({\n          price,\n          oldPrice: parseInt(response.data[0].price_paid),\n          paymentDay: paymentDay[0],\n          idPaymentV2: response.data[0].id\n        });\n      });\n    } else {\n      this.setState({\n        price: data.bill.total_incl_tax,\n        paymentDay: paymentDay[0]\n      });\n    }\n  }\n\n  handleCancel() {\n    this.props.cancelModal();\n  }\n\n  render() {\n    const {\n      paymentDay,\n      price,\n      paymentMethode\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.previewVisible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.handleCancel.bind(this),\n      className: \"modal-box-header bg-primary text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jr-currentplan-col pb-xl-2 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-white jr-font-weight-medium \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"invoice.reference\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 38\n      }\n    }), \" \", this.props.invoice.bill.reference))), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"row\",\n      autoComplete: \"off\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"service.price_ttc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 66\n      }\n    })), /*#__PURE__*/React.createElement(TextField, {\n      id: \"price\",\n      type: \"number\",\n      value: price,\n      error: this.state.priceError,\n      onChange: this.handleChangeInput('price'),\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(FormHelperText, {\n      error: this.state.priceError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    }, this.state.priceError ? /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"message.error.price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 47\n      }\n    }) : '')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"paymentDay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"payment.date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 71\n      }\n    })), /*#__PURE__*/React.createElement(TextField, {\n      id: \"paymentDay\",\n      name: \"paymentDay\",\n      type: \"date\",\n      value: paymentDay,\n      onChange: this.handleChangeInput('paymentDay'),\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"paymentMethode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"methode.of.payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 75\n      }\n    })), /*#__PURE__*/React.createElement(RadioGroup, {\n      row: true,\n      \"aria-label\": \"paymentMethode\",\n      name: \"paymentMethode\" // value={paymentMethode}\n      ,\n      onChange: this.handleChange('paymentMethode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: \"Esp\\xE8ce\",\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 83\n        }\n      }),\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"payment.service.cash\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 101\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: \"Ch\\xE8que\",\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 83\n        }\n      }),\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"payment.service.cheque\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 101\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: \"Carte bancaire\",\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 91\n        }\n      }),\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"payment.methode.creditCard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 109\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(FormHelperText, {\n      error: this.state.paymentMethodeError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }, this.state.paymentMethodeError ? /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"message.error.payment.methode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 47\n      }\n    }) : '')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"jr-btn bg-indigo text-white \",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"button.pay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 122\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"jr-btn bg-grey text-white \",\n      onClick: this.handleCancel.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.establishments.formadd.buttonCancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 144\n      }\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile\n  };\n};\n\nexport default connect(mapStateToProps)(PayBill);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/Payment/PayBill.js"],"names":["React","IntlMessages","Button","Auxiliary","Modal","ModalBody","ModalHeader","InputLabel","FormControlLabel","Radio","RadioGroup","TextField","moment","payBill","editBill","connect","FormHelperText","classService","partiallyPaidInvoice","PayBill","Component","constructor","props","handleChange","key","event","value","setState","paymentMethode","paymentMethodeError","handleChangeInput","name","priceError","invoice","bill","total_incl_tax","target","trim","handleSubmit","e","preventDefault","state","price","data","status","newPrice","parseInt","oldPrice","dispatch","idPaymentV2","cancelModal","paymentDay","userProfile","id","previewVisible","expectedDay","idItem","studentServiceId","dataPaymentItem","componentDidMount","today","format","split","apiEndpoint","localStorage","token","get","then","response","price_invoice","price_paid","handleCancel","render","bind","reference","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport Button from '@material-ui/core/Button';\nimport Auxiliary from \"../../../../../util/Auxiliary\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { payBill, editBill } from '../../../../../actions/PaymentAction';\nimport { connect } from 'react-redux';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { classService } from \"../../../../../_services/class.service\";\nimport {partiallyPaidInvoice} from '../../../../../config/config'\n\n\nclass PayBill extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            previewVisible: true,\n            price: 0,\n            paymentDay: '',\n            paymentMethode: '',\n            expectedDay: '',\n            idItem: '',\n            studentServiceId: '',\n            dataPaymentItem: {},\n            priceError: false,\n            paymentMethodeError: false,\n            idPaymentV2:0,\n            oldPrice:0\n\n        }\n    }\n\n    componentDidMount() {\n        const data = this.props.invoice;\n        const today = moment().format();\n        const paymentDay = today.split('T');\n        if (data.bill.status === partiallyPaidInvoice) {\n            let apiEndpoint = `/payments_v2?access_token=${localStorage.token}&filter[where][fk_id_bill]=${data.bill.id}`;\n            classService.get(apiEndpoint).then((response) => {\n                const price = parseInt(response.data[0].price_invoice) - parseInt(response.data[0].price_paid)               \n                this.setState({ price, oldPrice:parseInt(response.data[0].price_paid), paymentDay: paymentDay[0] , idPaymentV2:response.data[0].id})\n            });\n        } else {\n            this.setState({ price: data.bill.total_incl_tax, paymentDay: paymentDay[0] })\n        }\n    }\n\n    handleChange = key => (event, value) => {\n        this.setState({ [key]: value, paymentMethode: value, paymentMethodeError: false });\n    }\n\n    handleChangeInput = name => event => {\n        if (name == 'price') {\n            let priceError = false;\n            priceError = this.props.invoice.bill.total_incl_tax < event.target.value.trim()\n            this.setState({ [name]: event.target.value, priceError });\n        } else {\n            this.setState({ [name]: event.target.value, });\n        }\n    }\n\n    handleCancel() {\n        this.props.cancelModal()\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.paymentMethode === '') {\n            this.setState({ paymentMethodeError: true })\n        }else if(this.state.price > this.props.invoice.bill.total_incl_tax ){\n            this.setState({ priceError: true })\n        } \n        else {\n            let data = {};\n            if (this.props.invoice.bill.status === partiallyPaidInvoice) {\n                const newPrice= parseInt(this.state.price) + this.state.oldPrice;\n                if(newPrice > this.props.invoice.bill.total_incl_tax){\n                    this.setState({ priceError: true })\n                    \n                }else{    \n                    data = { \"price_paid\": newPrice }\n                    this.props.dispatch(editBill(data,this.state.idPaymentV2, this.props.invoice));\n                    this.props.cancelModal();\n                }\n              \n            }else{\n                 data = {\n                    \"payment_day\": this.state.paymentDay,\n                    \"payment_methode\": this.state.paymentMethode,\n                    \"fk_id_profile\": this.props.userProfile.id,\n                    \"fk_id_bill\": this.props.invoice.bill.id,\n                    \"price_invoice\": this.props.invoice.bill.total_incl_tax,\n                    \"price_paid\": this.state.price\n                }\n    \n                this.props.dispatch(payBill(data, this.props.invoice));\n                this.props.cancelModal();\n            }\n          \n           \n        }\n\n    }\n\n    render() {\n\n        const { paymentDay, price, paymentMethode } = this.state;\n\n        return (\n            <div>\n                <Auxiliary>\n                    <Modal isOpen={this.state.previewVisible} >\n                        <ModalHeader toggle={this.handleCancel.bind(this)} className=\"modal-box-header bg-primary text-white\">\n                            <div className=\"jr-currentplan-col pb-xl-2 text-center\">\n                                <h2 className=\"text-white jr-font-weight-medium \">\n                                    {<IntlMessages id=\"invoice.reference\" />} {this.props.invoice.bill.reference}\n                                </h2>\n                            </div>\n                        </ModalHeader>\n                        <ModalBody>\n                            <form className=\"row\" autoComplete=\"off\" onSubmit={this.handleSubmit}>\n\n                                <div className=\"col-sm-6\">\n                                    <InputLabel htmlFor=\"price\">{<IntlMessages id=\"service.price_ttc\" />}</InputLabel>\n                                    <TextField\n                                        id=\"price\"\n                                        type=\"number\"\n                                        value={price}\n                                        error={this.state.priceError}\n                                        onChange={this.handleChangeInput('price')}\n                                        fullWidth\n                                    />\n                                    <FormHelperText error={this.state.priceError}>\n                                        {this.state.priceError\n                                            ? <IntlMessages id=\"message.error.price\" />\n                                            : ''}\n                                    </FormHelperText>\n                                    \n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <InputLabel htmlFor=\"paymentDay\">{<IntlMessages id=\"payment.date\" />}</InputLabel>\n                                    <TextField\n                                        id=\"paymentDay\"\n                                        name=\"paymentDay\"\n                                        type=\"date\"\n                                        value={paymentDay}\n                                        onChange={this.handleChangeInput('paymentDay')}\n                                        fullWidth\n                                    />\n                                </div>\n                                <br /><br /><br /><br />\n                                <div className=\"col-sm-12\">\n                                    <InputLabel htmlFor=\"paymentMethode\">{<IntlMessages id=\"methode.of.payment\" />}</InputLabel>\n                                    <RadioGroup\n                                        row\n                                        aria-label=\"paymentMethode\"\n                                        name=\"paymentMethode\"\n                                        // value={paymentMethode}\n                                        onChange={this.handleChange('paymentMethode')}\n                                    >\n                                        <FormControlLabel value=\"Espèce\" control={<Radio />} label={<IntlMessages id=\"payment.service.cash\" />} />\n                                        <FormControlLabel value=\"Chèque\" control={<Radio />} label={<IntlMessages id=\"payment.service.cheque\" />} />\n                                        <FormControlLabel value=\"Carte bancaire\" control={<Radio />} label={<IntlMessages id=\"payment.methode.creditCard\" />} />\n                                    </RadioGroup>\n                                    <FormHelperText error={this.state.paymentMethodeError}>\n                                        {this.state.paymentMethodeError\n                                            ? <IntlMessages id=\"message.error.payment.methode\" />\n                                            : ''}\n                                    </FormHelperText>\n                                </div>\n                                <div className=\"col-md-12  \">\n                                    <br />\n                                    <Button variant=\"contained\" className=\"jr-btn bg-indigo text-white \" type=\"submit\" >{<IntlMessages id=\"button.pay\" />}</Button>\n                                    <Button variant=\"contained\" className=\"jr-btn bg-grey text-white \" onClick={this.handleCancel.bind(this)}>{<IntlMessages id=\"components.establishments.formadd.buttonCancel\" />}</Button>\n                                </div>\n\n                            </form>\n                        </ModalBody>\n                    </Modal>\n                </Auxiliary>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        userProfile: state.auth.userProfile\n    };\n};\n\nexport default connect(mapStateToProps)(PayBill);"]},"metadata":{},"sourceType":"module"}