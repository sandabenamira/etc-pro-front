{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport { FETECHED_QUESTION_BY_PROFILE, ADD_QUESTION, EDIT_QUESTION, DELETE_QUESTION, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from \"../constants/ActionTypes\";\nimport baseUrl from \"../config/config\";\nimport axios from \"axios\";\nexport function editQuestionAction(dataQuestion, nbAffectation) {\n  return dispatch => {\n    console.log(\"fffffffffff\", dataQuestion);\n    let apiEndpoint = `/questions/` + dataQuestion.id + `?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, dataQuestion).then(response => {\n      let question = { ...response.data,\n        question_test: nbAffectation\n      };\n      dispatch({\n        type: EDIT_QUESTION,\n        payload: question\n      });\n    });\n  };\n}\nexport function getChoicesByQuestionId(questionID) {\n  return dispatch => {\n    let apiEndpoint = `/question_proposals?access_token=${localStorage.token}&filter[where][id_question_proposal]=` + questionID;\n    classService.get(apiEndpoint).then(response => {\n      const listChoices = response.data;\n      return listChoices;\n    }).catch(err => {});\n  };\n}\nexport function deleteQuestion(itemId) {\n  return dispatch => {\n    axios.patch(`${baseUrl.baseUrl}/questions/` + itemId + `?access_token=${localStorage.token}`, {\n      status: false\n    }).then(response => {\n      dispatch({\n        type: DELETE_QUESTION,\n        payload: response.data\n      });\n      dispatch({\n        type: SHOW_SUCCESS_MESSAGE,\n        payload: \"La question a été supprimé avec succés\"\n      });\n      setTimeout(() => {\n        dispatch({\n          type: HIDE_SUCCESS_MESSAGE\n        });\n      }, 8000);\n    }).catch(function (error) {\n      console.log(\"error\", error);\n    });\n  };\n}\nexport const addQuestion = (question, choices) => {\n  return dispatch => {\n    let apiEndpoint = `/questions?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, question).then(response => {\n      if (response) {\n        let question = { ...response.data,\n          question_test: 0\n        };\n        dispatch({\n          type: ADD_QUESTION,\n          payload: question\n        });\n        let data = choices.map(choice => ({ ...choice,\n          id_question_proposal: response.data.id\n        }));\n        let apiEndpoint1 = `/question_proposals?access_token=${localStorage.token}`;\n        classService.post(apiEndpoint1, data).then(response => {\n          if (response) {\n            console.log(\"okkk choices\", response);\n          } else {\n            console.log(\"nooo choices\", response);\n          }\n        });\n      } else {\n        console.log(\"nooo\", response);\n      }\n    });\n  };\n};\nexport const addChoice = choices => {\n  return dispatch => {\n    let apiEndpoint = `/question_proposals?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, choices).then(response => {\n      if (response) {\n        console.log(\"okkk choices\", response);\n      } else {\n        console.log(\"nooo choices\", response);\n      }\n    }).catch(err => {});\n  };\n};\nexport const editChoice = choice => {\n  return dispatch => {\n    let apiEndpoint = `/question_proposals/` + choice.id + `?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, choice).then(response => {\n      if (response) {\n        console.log(\"okkk editttt\", response);\n      } else {\n        console.log(\"nooo editttt\", response);\n      }\n    }).catch(err => {});\n  };\n};\nexport const getQuestionsByProfileId = profileId => {\n  return dispatch => {\n    let apiEndpoint = `/questions?access_token=${localStorage.token}&filter[where][id_profile_creator]=` + profileId + `&filter[include]=question_test&filter[include]=question_proposals`;\n    classService.get(apiEndpoint).then(response => {\n      const listQuestions = response.data.map(element => {\n        return { ...element,\n          question_test: element.question_test.length\n        };\n      });\n      const listQuestionsFiltred = listQuestions.filter(element => element.status);\n      dispatch({\n        type: FETECHED_QUESTION_BY_PROFILE,\n        payload: listQuestionsFiltred\n      });\n    }).catch(err => {});\n  };\n};\nexport const serviceAction = {\n  addQuestion,\n  getQuestionsByProfileId,\n  addChoice,\n  editChoice\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/QuestionActions.js"],"names":["classService","FETECHED_QUESTION_BY_PROFILE","ADD_QUESTION","EDIT_QUESTION","DELETE_QUESTION","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","baseUrl","axios","editQuestionAction","dataQuestion","nbAffectation","dispatch","console","log","apiEndpoint","id","localStorage","token","patch","then","response","question","data","question_test","type","payload","getChoicesByQuestionId","questionID","get","listChoices","catch","err","deleteQuestion","itemId","status","setTimeout","error","addQuestion","choices","post","map","choice","id_question_proposal","apiEndpoint1","addChoice","editChoice","getQuestionsByProfileId","profileId","listQuestions","element","length","listQuestionsFiltred","filter","serviceAction"],"mappings":"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","sourcesContent":["import { classService } from \"../_services/class.service\";\nimport {\n  FETECHED_QUESTION_BY_PROFILE,\n  ADD_QUESTION,\n  EDIT_QUESTION,\n  DELETE_QUESTION,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n} from \"../constants/ActionTypes\";\n\nimport baseUrl from \"../config/config\";\nimport axios from \"axios\";\n\nexport function editQuestionAction(dataQuestion, nbAffectation) {\n  return (dispatch) => {\n    console.log(\"fffffffffff\", dataQuestion);\n    let apiEndpoint =\n      `/questions/` + dataQuestion.id + `?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, dataQuestion).then((response) => {\n      let question = { ...response.data, question_test: nbAffectation };\n\n      dispatch({ type: EDIT_QUESTION, payload: question });\n    });\n  };\n}\nexport function getChoicesByQuestionId(questionID) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/question_proposals?access_token=${localStorage.token}&filter[where][id_question_proposal]=` +\n      questionID;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        const listChoices = response.data;\n        return listChoices;\n      })\n      .catch((err) => {});\n  };\n}\n\nexport function deleteQuestion(itemId) {\n  return (dispatch) => {\n    axios\n      .patch(\n        `${baseUrl.baseUrl}/questions/` +\n          itemId +\n          `?access_token=${localStorage.token}`,\n        {\n          status: false,\n        }\n      )\n      .then((response) => {\n        dispatch({ type: DELETE_QUESTION, payload: response.data });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La question a été supprimé avec succés\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 8000);\n      })\n      .catch(function(error) {\n        console.log(\"error\", error);\n      });\n  };\n}\n\nexport const addQuestion = (question, choices) => {\n  return (dispatch) => {\n    let apiEndpoint = `/questions?access_token=${localStorage.token}`;\n\n    classService.post(apiEndpoint, question).then((response) => {\n      if (response) {\n        let question = { ...response.data, question_test: 0 };\n        dispatch({ type: ADD_QUESTION, payload: question });\n\n        let data = choices.map((choice) => ({\n          ...choice,\n          id_question_proposal: response.data.id,\n        }));\n        let apiEndpoint1 = `/question_proposals?access_token=${localStorage.token}`;\n        classService.post(apiEndpoint1, data).then((response) => {\n          if (response) {\n            console.log(\"okkk choices\", response);\n          } else {\n            console.log(\"nooo choices\", response);\n          }\n        });\n      } else {\n        console.log(\"nooo\", response);\n      }\n    });\n  };\n};\nexport const addChoice = (choices) => {\n  return (dispatch) => {\n    let apiEndpoint = `/question_proposals?access_token=${localStorage.token}`;\n    classService\n      .post(apiEndpoint, choices)\n      .then((response) => {\n        if (response) {\n          console.log(\"okkk choices\", response);\n        } else {\n          console.log(\"nooo choices\", response);\n        }\n      })\n      .catch((err) => {});\n  };\n};\nexport const editChoice = (choice) => {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/question_proposals/` +\n      choice.id +\n      `?access_token=${localStorage.token}`;\n    classService\n      .patch(apiEndpoint, choice)\n      .then((response) => {\n        if (response) {\n          console.log(\"okkk editttt\", response);\n        } else {\n          console.log(\"nooo editttt\", response);\n        }\n      })\n      .catch((err) => {});\n  };\n};\nexport const getQuestionsByProfileId = (profileId) => {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/questions?access_token=${localStorage.token}&filter[where][id_profile_creator]=` +\n      profileId +\n      `&filter[include]=question_test&filter[include]=question_proposals`;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        const listQuestions = response.data.map((element) => {\n          return { ...element, question_test: element.question_test.length };\n        });\n        const listQuestionsFiltred = listQuestions.filter(\n          (element) => element.status\n        );\n\n        dispatch({\n          type: FETECHED_QUESTION_BY_PROFILE,\n          payload: listQuestionsFiltred,\n        });\n      })\n      .catch((err) => {});\n  };\n};\n\nexport const serviceAction = {\n  addQuestion,\n  getQuestionsByProfileId,\n  addChoice,\n  editChoice,\n};\n"]},"metadata":{},"sourceType":"module"}