{"ast":null,"code":"import { ADD_EXAM_TYPE, GET_EXAM_TYPE, EDIT_EXAM_TYPE, DELETE_EXAM_TYPES, ARCHIVED_GET_EXAM_TYPES } from \"../constants/ActionTypes\";\nconst initialState = {\n  examTypes: [],\n  archivedexamTypes: []\n};\nexport default function (state = initialState, action) {\n  if (action.type === GET_EXAM_TYPE) {\n    return Object.assign({}, state, {\n      examTypes: action.payload\n    });\n  }\n\n  if (action.type === ARCHIVED_GET_EXAM_TYPES) {\n    return Object.assign({}, state, {\n      archivedexamTypes: action.payload\n    });\n  }\n\n  if (action.type === ADD_EXAM_TYPE) {\n    return Object.assign({}, state, {\n      examTypes: state.examTypes.concat(action.payload)\n    });\n  }\n\n  if (action.type === EDIT_EXAM_TYPE) {\n    return Object.assign({}, state, {\n      examTypes: [...state.examTypes.filter(element => element.id !== action.payload.id), action.payload]\n    });\n  }\n\n  if (action.type === DELETE_EXAM_TYPES) {\n    return Object.assign({}, state, {\n      examTypes: [...state.examTypes.filter(element => element.id !== action.payload.id)],\n      archivedexamTypes: state.archivedexamTypes.concat(action.payload)\n    });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/reducers/ExamTypesReducer.js"],"names":["ADD_EXAM_TYPE","GET_EXAM_TYPE","EDIT_EXAM_TYPE","DELETE_EXAM_TYPES","ARCHIVED_GET_EXAM_TYPES","initialState","examTypes","archivedexamTypes","state","action","type","Object","assign","payload","concat","filter","element","id"],"mappings":"AAAA,SACEA,aADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,iBAJF,EAKEC,uBALF,QAMO,0BANP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,iBAAiB,EAAE;AAFA,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgBT,aAApB,EAAmC;AACjC,WAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BF,MAAAA,SAAS,EAAEG,MAAM,CAACI;AADU,KAAzB,CAAP;AAGD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBN,uBAApB,EAA6C;AAC3C,WAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BD,MAAAA,iBAAiB,EAAEE,MAAM,CAACI;AADE,KAAzB,CAAP;AAGD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBV,aAApB,EAAmC;AACjC,WAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBQ,MAAhB,CAAuBL,MAAM,CAACI,OAA9B;AADmB,KAAzB,CAAP;AAGD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBR,cAApB,EAAoC;AAClC,WAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,SAAS,EAAE,CACT,GAAGE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACAC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAD1C,CADM,EAITR,MAAM,CAACI,OAJE;AADmB,KAAzB,CAAP;AAQD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBP,iBAApB,EAAuC;AACrC,WAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BF,MAAAA,SAAS,EAAE,CACX,GAAGE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACAC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAD1C,CADQ,CADiB;AAM9BV,MAAAA,iBAAiB,EAAEC,KAAK,CAACD,iBAAN,CAAwBO,MAAxB,CACjBL,MAAM,CAACI,OADU;AANW,KAAzB,CAAP;AAUD;;AAED,SAAOL,KAAP;AACD","sourcesContent":["import {\n  ADD_EXAM_TYPE,\n  GET_EXAM_TYPE,\n  EDIT_EXAM_TYPE,\n  DELETE_EXAM_TYPES,\n  ARCHIVED_GET_EXAM_TYPES,\n} from \"../constants/ActionTypes\";\nconst initialState = {\n  examTypes: [],\n  archivedexamTypes: [],\n};\n\nexport default function(state = initialState, action) {\n  if (action.type === GET_EXAM_TYPE) {\n    return Object.assign({}, state, {\n        examTypes: action.payload,\n    });\n  }\n  if (action.type === ARCHIVED_GET_EXAM_TYPES) {\n    return Object.assign({}, state, {\n        archivedexamTypes: action.payload,\n    });\n  }\n\n  if (action.type === ADD_EXAM_TYPE) {\n    return Object.assign({}, state, {\n      examTypes: state.examTypes.concat(action.payload),\n    });\n  }\n\n  if (action.type === EDIT_EXAM_TYPE) {\n    return Object.assign({}, state, {\n      examTypes: [\n        ...state.examTypes.filter(\n          (element) => element.id !== action.payload.id\n        ),\n        action.payload,\n      ],\n    });\n  }\n\n  if (action.type === DELETE_EXAM_TYPES) {\n    return Object.assign({}, state, {\n        examTypes: [\n        ...state.examTypes.filter(\n          (element) => element.id !== action.payload.id\n        ),\n      ],\n      archivedexamTypes: state.archivedexamTypes.concat(\n        action.payload\n      ),\n    });\n  }\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}