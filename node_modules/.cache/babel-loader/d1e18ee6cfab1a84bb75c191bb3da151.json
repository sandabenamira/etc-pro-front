{"ast":null,"code":"import { callService } from '../_services/call.service';\nimport _ from 'lodash';\nimport { GET_PERMISSION_SETTING, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE, GET_USER_PERMISSION, EDIT_PERMISSION_SETTING } from '../constants/ActionTypes';\nexport const getPermissionSetting = estabId => {\n  let id = parseInt(estabId, 10);\n  return dispatch => {\n    let apiEndpoint = `/establishments/${id}/permission?access_token=${localStorage.token}`;\n    callService.get(apiEndpoint).then(response => {\n      if (response) {\n        dispatch({\n          type: GET_PERMISSION_SETTING,\n          payload: response.data.permissionList\n        });\n      }\n    });\n  };\n};\nexport const getUserPermissions = (estabId, roleId) => {\n  return dispatch => {\n    let apiEndpoint = `/etab_role_permissions?access_token=${localStorage.token}&filter[where][and][0][fk_id_etab]=` + estabId + `&filter[where][and][1][fk_id_role]=` + roleId + `&filter[include]=permission`;\n    callService.get(apiEndpoint).then(response => {\n      if (response) {\n        dispatch({\n          type: GET_USER_PERMISSION,\n          payload: response.data\n        });\n      }\n    });\n  };\n};\nexport const applyPermissionSetting = (data, dataForStore, establishmentId, roleId) => {\n  let permissionList = {\n    permissionRoleEtab: data\n  };\n  return dispatch => {\n    let apiEndpoint = `/permissions/attributePermission?access_token=${localStorage.token}`;\n    callService.put(apiEndpoint, permissionList).then(response => {\n      if (response) {\n        dispatch({\n          type: EDIT_PERMISSION_SETTING,\n          payload: dataForStore\n        });\n        dispatch(getUserPermissions(establishmentId, roleId));\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"L'affectation est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de l'affectation merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/actions/PermissionAction.js"],"names":["callService","_","GET_PERMISSION_SETTING","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","GET_USER_PERMISSION","EDIT_PERMISSION_SETTING","getPermissionSetting","estabId","id","parseInt","dispatch","apiEndpoint","localStorage","token","get","then","response","type","payload","data","permissionList","getUserPermissions","roleId","applyPermissionSetting","dataForStore","establishmentId","permissionRoleEtab","put","setTimeout"],"mappings":"AAAA,SAASA,WAAT,QAA4B,2BAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SACEC,sBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,mBANF,EAOEC,uBAPF,QAQO,0BARP;AAUA,OAAO,MAAMC,oBAAoB,GAAIC,OAAD,IAAa;AAC/C,MAAIC,EAAE,GAAGC,QAAQ,CAACF,OAAD,EAAU,EAAV,CAAjB;AACA,SAAQG,QAAD,IAAc;AACnB,QAAIC,WAAW,GAAI,mBAAkBH,EAAG,4BAA2BI,YAAY,CAACC,KAAM,EAAtF;AAEAhB,IAAAA,WAAW,CAACiB,GAAZ,CAAgBH,WAAhB,EAA6BI,IAA7B,CAAmCC,QAAD,IAAc;AAC9C,UAAIA,QAAJ,EAAc;AACZN,QAAAA,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAElB,sBAAR;AAAgCmB,UAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAAvD,SAAD,CAAR;AACD;AACF,KAJD;AAKD,GARD;AASD,CAXM;AAYP,OAAO,MAAMC,kBAAkB,GAAG,CAACd,OAAD,EAAUe,MAAV,KAAqB;AACrD,SAAQZ,QAAD,IAAc;AACnB,QAAIC,WAAW,GACZ,uCAAsCC,YAAY,CAACC,KAAM,qCAA1D,GACAN,OADA,GAEC,qCAFD,GAGAe,MAHA,GAIC,6BALH;AAOAzB,IAAAA,WAAW,CAACiB,GAAZ,CAAgBH,WAAhB,EAA6BI,IAA7B,CAAmCC,QAAD,IAAc;AAC9C,UAAIA,QAAJ,EAAc;AACZN,QAAAA,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAEb,mBAAR;AAA6Bc,UAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA/C,SAAD,CAAR;AACD;AACF,KAJD;AAKD,GAbD;AAcD,CAfM;AAgBP,OAAO,MAAMI,sBAAsB,GAAG,CAACJ,IAAD,EAAOK,YAAP,EAAqBC,eAArB,EAAsCH,MAAtC,KAAiD;AACrF,MAAIF,cAAc,GAAG;AAAEM,IAAAA,kBAAkB,EAAEP;AAAtB,GAArB;AACA,SAAQT,QAAD,IAAc;AACnB,QAAIC,WAAW,GAAI,iDAAgDC,YAAY,CAACC,KAAM,EAAtF;AAEAhB,IAAAA,WAAW,CAAC8B,GAAZ,CAAgBhB,WAAhB,EAA6BS,cAA7B,EAA6CL,IAA7C,CAAmDC,QAAD,IAAc;AAC9D,UAAIA,QAAJ,EAAc;AACZN,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAEZ,uBADC;AAEPa,UAAAA,OAAO,EAAEM;AAFF,SAAD,CAAR;AAKAd,QAAAA,QAAQ,CAACW,kBAAkB,CAACI,eAAD,EAAkBH,MAAlB,CAAnB,CAAR;AACAZ,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAEd,oBADC;AAEPe,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAIAU,QAAAA,UAAU,CAAC,MAAM;AACflB,UAAAA,QAAQ,CAAC;AAAEO,YAAAA,IAAI,EAAEf;AAAR,WAAD,CAAR;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OAdD,MAcO;AACLQ,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAEjB,kBADC;AAEPkB,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAIAU,QAAAA,UAAU,CAAC,MAAM;AACflB,UAAAA,QAAQ,CAAC;AAAEO,YAAAA,IAAI,EAAEhB;AAAR,WAAD,CAAR;AACD,SAFS,EAEP,IAFO,CAAV;AAGD;AACF,KAxBD;AAyBD,GA5BD;AA6BD,CA/BM","sourcesContent":["import { callService } from '../_services/call.service';\nimport _ from 'lodash';\nimport {\n  GET_PERMISSION_SETTING,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n  GET_USER_PERMISSION,\n  EDIT_PERMISSION_SETTING,\n} from '../constants/ActionTypes';\n\nexport const getPermissionSetting = (estabId) => {\n  let id = parseInt(estabId, 10);\n  return (dispatch) => {\n    let apiEndpoint = `/establishments/${id}/permission?access_token=${localStorage.token}`;\n\n    callService.get(apiEndpoint).then((response) => {\n      if (response) {\n        dispatch({ type: GET_PERMISSION_SETTING, payload: response.data.permissionList });\n      }\n    });\n  };\n};\nexport const getUserPermissions = (estabId, roleId) => {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/etab_role_permissions?access_token=${localStorage.token}&filter[where][and][0][fk_id_etab]=` +\n      estabId +\n      `&filter[where][and][1][fk_id_role]=` +\n      roleId +\n      `&filter[include]=permission`;\n\n    callService.get(apiEndpoint).then((response) => {\n      if (response) {\n        dispatch({ type: GET_USER_PERMISSION, payload: response.data });\n      }\n    });\n  };\n};\nexport const applyPermissionSetting = (data, dataForStore, establishmentId, roleId) => {\n  let permissionList = { permissionRoleEtab: data };\n  return (dispatch) => {\n    let apiEndpoint = `/permissions/attributePermission?access_token=${localStorage.token}`;\n\n    callService.put(apiEndpoint, permissionList).then((response) => {\n      if (response) {\n        dispatch({\n          type: EDIT_PERMISSION_SETTING,\n          payload: dataForStore,\n        });\n\n        dispatch(getUserPermissions(establishmentId, roleId));\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"L'affectation est effectuée avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de l'affectation merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}