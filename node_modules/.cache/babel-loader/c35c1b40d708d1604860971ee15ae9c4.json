{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Lesson/DownloadFiles.js\";\nimport React, { Component } from 'react';\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport IntlMessages from \"../../../util/IntlMessages\";\nimport Button from '@material-ui/core/Button';\nimport CardBox from \"../../../components/CardBox/index\";\nimport Auxiliary from \"../../../util/Auxiliary\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getUserProfile } from '../../../actions/Auth';\nimport { subjectsByLevelBySection } from '../../../actions/subjectAction';\nimport { RoleContext } from \"../../../Context\";\nimport Can from '../../../can';\nimport Aux from \"../../../util/Auxiliary.js\";\nimport _ from 'lodash';\nimport axios from 'axios';\nimport baseUrl from '../../../config/config';\nimport imageLogo from \"./Assets/image.png\";\nimport docLogo from \"./Assets/pdf.png\";\nimport videoLogo from \"./Assets/video.png\";\nimport { element } from 'prop-types';\nimport { classService } from '../../../_services/class.service';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass DownloadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoUrl: [],\n      pdfUrl: [],\n      imageUrl: [],\n      loader: true\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.loader) {\n      setTimeout(() => {\n        this.setState({\n          loader: false\n        });\n      }, 5000);\n    }\n  }\n\n  componentWillMount() {\n    axios.get(`${baseUrl.baseUrl}/establishments/` + this.props.userProfile.establishment_id + `?access_token=${localStorage.token}`).then(response => {\n      var establishmentName = response.data.name;\n      axios.get(`${baseUrl.baseUrl}/courses/` + this.props.lessonId + `/courseFile?access_token=${localStorage.token}`).then(response => {\n        var tabPDF = [];\n        var tabVideo = [];\n        var tabImage = [];\n\n        if (!_.isEmpty(response.data)) {\n          var files = response.data;\n          files.map(element => {\n            var establishLogoUrl = `/containers/` + establishmentName + '/download/' + element.file_name + `?access_token=${localStorage.token}`;\n            const fileExtension = element.file_name.replace(/^.*\\./, '');\n            classService.getPhoto(establishLogoUrl).then(response => {\n              if (response) {\n                var arr = response.data;\n                var data2 = new Uint8Array(arr);\n                var blob;\n\n                if (fileExtension === \"pdf\") {\n                  blob = new Blob([data2], {\n                    type: 'application/pdf'\n                  });\n                  var url = URL.createObjectURL(blob);\n                  tabPDF.push(url);\n                  this.setState({\n                    pdfUrl: tabPDF\n                  });\n                } else if (fileExtension === \"mp4\" || fileExtension === \"mov\" || fileExtension === \"mpeg\" || fileExtension === \"asf\" || fileExtension === \"x-m4v\" || fileExtension === \"webm\") {\n                  blob = new Blob([data2], {\n                    type: 'video/*'\n                  });\n                  var url = URL.createObjectURL(blob);\n                  tabVideo.push(url);\n                  this.setState({\n                    videoUrl: tabVideo\n                  });\n                } else {\n                  blob = new Blob([data2], {\n                    type: 'video/*'\n                  });\n                  var url = URL.createObjectURL(blob);\n                  tabImage.push(url);\n                  this.setState({\n                    imageUrl: tabImage\n                  });\n                }\n              }\n            });\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.props.opendownload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.props.handleCancel,\n      className: \"modal-box-header bg-primary text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"course.download.modal.title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      heading: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"cours.video\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 41\n        }\n      }),\n      styleName: \"col-lg-12 text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, this.state.loader && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 45\n      }\n    }, this.state.videoUrl.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"complex-btn-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 57\n      }\n    }, this.state.videoUrl.map((element, index) => /*#__PURE__*/React.createElement(ButtonBase, {\n      focusRipple: true,\n      onClick: () => {},\n      href: element,\n      download: true,\n      key: index,\n      className: \"complex-btn ripple-effect\",\n      style: {\n        width: '20%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-src\",\n      style: {\n        backgroundImage: `url(${videoLogo})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-btn-overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h3\",\n      type: \"subheading\",\n      color: \"inherit\",\n      className: \"img-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"message.attach.download\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 78\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-marked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 77\n      }\n    })))))) : \"\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      heading: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"cours.pdf\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 41\n        }\n      }),\n      styleName: \"col-lg-12 text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 33\n      }\n    }, this.state.loader && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 45\n      }\n    }, this.state.pdfUrl.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"complex-btn-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 57\n      }\n    }, this.state.pdfUrl.map((element, index) => /*#__PURE__*/React.createElement(ButtonBase, {\n      focusRipple: true,\n      onClick: () => {},\n      href: element,\n      download: true,\n      key: index,\n      className: \"complex-btn ripple-effect\",\n      style: {\n        width: '20%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-src\",\n      style: {\n        backgroundImage: `url(${docLogo})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-btn-overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h3\",\n      type: \"subheading\",\n      color: \"inherit\",\n      className: \"img-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"message.attach.download\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 78\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-marked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 77\n      }\n    })))))) : \"\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      heading: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"cours.image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 41\n        }\n      }),\n      styleName: \"col-lg-12 text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 33\n      }\n    }, this.state.loader && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 37\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 45\n      }\n    }, this.state.imageUrl.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"complex-btn-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 57\n      }\n    }, this.state.imageUrl.map((element, index) => /*#__PURE__*/React.createElement(ButtonBase, {\n      focusRipple: true,\n      onClick: () => {},\n      href: element,\n      download: true,\n      key: index,\n      className: \"complex-btn ripple-effect\",\n      style: {\n        width: '20%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-src\",\n      style: {\n        backgroundImage: `url(${imageLogo})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-btn-overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h3\",\n      type: \"subheading\",\n      color: \"inherit\",\n      className: \"img-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"message.attach.download\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 78\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-marked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 77\n      }\n    })))))) : \"\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 text-right \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"jr-btn bg-grey text-white \",\n      onClick: this.props.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.establishments.formadd.buttonCancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 41\n      }\n    })))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getUserProfile\n})(DownloadFiles);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Lesson/DownloadFiles.js"],"names":["React","Component","Modal","ModalBody","ModalHeader","IntlMessages","Button","CardBox","Auxiliary","TextField","InputLabel","MenuItem","connect","getUserProfile","subjectsByLevelBySection","RoleContext","Can","Aux","_","axios","baseUrl","imageLogo","docLogo","videoLogo","element","classService","ButtonBase","Typography","CircularProgress","DownloadFiles","constructor","props","state","videoUrl","pdfUrl","imageUrl","loader","componentDidMount","setTimeout","setState","componentWillMount","get","userProfile","establishment_id","localStorage","token","then","response","establishmentName","data","name","lessonId","tabPDF","tabVideo","tabImage","isEmpty","files","map","establishLogoUrl","file_name","fileExtension","replace","getPhoto","arr","data2","Uint8Array","blob","Blob","type","url","URL","createObjectURL","push","render","opendownload","handleCancel","role","length","index","width","backgroundImage","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport IntlMessages from \"../../../util/IntlMessages\";\nimport Button from '@material-ui/core/Button';\nimport CardBox from \"../../../components/CardBox/index\";\nimport Auxiliary from \"../../../util/Auxiliary\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getUserProfile } from '../../../actions/Auth';\nimport { subjectsByLevelBySection } from '../../../actions/subjectAction';\nimport { RoleContext } from \"../../../Context\";\nimport Can from '../../../can';\nimport Aux from \"../../../util/Auxiliary.js\"\nimport _ from 'lodash';\nimport axios from 'axios';\nimport baseUrl from '../../../config/config';\nimport imageLogo from \"./Assets/image.png\"\nimport docLogo from \"./Assets/pdf.png\"\nimport videoLogo from \"./Assets/video.png\"\nimport { element } from 'prop-types';\nimport { classService } from '../../../_services/class.service';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass DownloadFiles extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            videoUrl: [],\n            pdfUrl: [],\n            imageUrl: [],\n            loader: true\n\n        }\n    }\n\n    componentDidMount() {\n        if (this.state.loader) {\n            setTimeout(() => {\n                this.setState({ loader: false });\n            }, 5000);\n        }\n    }\n    componentWillMount() {\n\n        axios.get(`${baseUrl.baseUrl}/establishments/` + this.props.userProfile.establishment_id + `?access_token=${localStorage.token}`)\n            .then(response => {\n                var establishmentName = response.data.name\n                axios.get(`${baseUrl.baseUrl}/courses/` + this.props.lessonId + `/courseFile?access_token=${localStorage.token}`)\n                    .then(response => {\n                        var tabPDF = []\n                        var tabVideo = []\n                        var tabImage = []\n\n                        if (!_.isEmpty(response.data)) {\n                            var files = response.data\n                            files.map(element => {\n\n                                var establishLogoUrl = `/containers/` + establishmentName + '/download/' + element.file_name + `?access_token=${localStorage.token}`;\n                                const fileExtension = element.file_name.replace(/^.*\\./, '');\n\n                                classService.getPhoto(establishLogoUrl)\n                                    .then((response) => {\n\n                                        if (response) {\n                                            var arr = response.data;\n                                            var data2 = new Uint8Array(arr);\n                                            var blob\n                                            if (fileExtension === \"pdf\") {\n\n                                                blob = new Blob([data2], { type: 'application/pdf' })\n\n                                                var url = URL.createObjectURL(blob);\n                                                tabPDF.push(url)\n                                                this.setState({\n                                                    pdfUrl: tabPDF\n                                                })\n\n                                            }\n                                            else if (fileExtension === \"mp4\" || fileExtension === \"mov\" || fileExtension === \"mpeg\" || fileExtension === \"asf\" || fileExtension === \"x-m4v\" || fileExtension === \"webm\") {\n\n\n                                                blob = new Blob([data2], { type: 'video/*' })\n\n                                                var url = URL.createObjectURL(blob);\n                                                tabVideo.push(url)\n                                                this.setState({\n                                                    videoUrl: tabVideo\n                                                })\n                                            }\n                                            else {\n\n                                                blob = new Blob([data2], { type: 'video/*' })\n\n                                                var url = URL.createObjectURL(blob);\n                                                tabImage.push(url)\n                                                this.setState({\n                                                    imageUrl: tabImage\n                                                })\n                                            }\n\n                                        }\n\n                                    })\n                            })\n                        }\n                    })\n\n            })\n\n    }\n\n    render() {\n        return (\n            <Auxiliary>\n                <Modal isOpen={this.props.opendownload}>\n                    <ModalHeader\n                        toggle={this.props.handleCancel}\n                        className=\"modal-box-header bg-primary text-white\"\n                    >\n\n                        {<IntlMessages id=\"course.download.modal.title\" />}\n                    </ModalHeader>\n                    <br />\n                    <ModalBody>\n                        <form autoComplete=\"off\">\n                            <div className=\"row\">\n                                <CardBox\n\n                                    heading={\n                                        <IntlMessages id=\"cours.video\" />\n                                    }\n                                    styleName=\"col-lg-12 text-primary\"\n                                >\n                                    {\n                                        this.state.loader &&\n                                        <div className=\"loader-view\">\n                                            <CircularProgress />\n                                        </div>\n                                    }\n                                    <RoleContext.Consumer>\n                                        {({ role }) => (\n                                            <div className=\"row\">\n\n                                                {\n                                                    this.state.videoUrl.length > 0 ?\n                                                        <div className=\"complex-btn-wrapper\">\n                                                            {this.state.videoUrl.map((element, index) => (\n                                                                <ButtonBase\n                                                                    focusRipple\n                                                                    onClick={() => {\n\n                                                                    }}\n                                                                    href={element} download\n                                                                    key={index}\n                                                                    className=\"complex-btn ripple-effect\"\n                                                                    style={{\n                                                                        width: '20%',\n                                                                    }}>\n                                                                    <div\n                                                                        className=\"img-src\"\n                                                                        style={{\n                                                                            backgroundImage: `url(${videoLogo})`,\n                                                                        }}\n                                                                    />\n                                                                    <div className=\"img-btn-overlay\" />\n                                                                    <div className=\"img-btn\">\n                                                                        <Typography\n                                                                            component=\"h3\"\n                                                                            type=\"subheading\"\n                                                                            color=\"inherit\"\n                                                                            className=\"img-title\"\n                                                                        >\n                                                                            {<IntlMessages id=\"message.attach.download\" />}\n                                                                            <div className=\"img-marked\" />\n                                                                        </Typography>\n                                                                    </div>\n                                                                </ButtonBase>\n                                                            ))}\n                                                        </div> : \"\"\n                                                }\n\n                                            </div>\n                                        )}\n                                    </RoleContext.Consumer>\n                                </CardBox>\n                            </div>\n\n                            <div className=\"row\">\n                                <CardBox\n                                    heading={\n                                        <IntlMessages id=\"cours.pdf\" />\n                                    }\n                                    styleName=\"col-lg-12 text-primary\"\n                                >\n                                    {\n                                        this.state.loader &&\n                                        <div className=\"loader-view\">\n                                            <CircularProgress />\n                                        </div>\n                                    }\n                                    <RoleContext.Consumer>\n                                        {({ role }) => (\n                                            <div className=\"row\">\n\n                                                {\n                                                    this.state.pdfUrl.length > 0 ?\n                                                        <div className=\"complex-btn-wrapper\">\n                                                            {this.state.pdfUrl.map((element, index) => (\n                                                                <ButtonBase\n                                                                    focusRipple\n                                                                    onClick={() => {\n\n                                                                    }}\n                                                                    href={element} download\n                                                                    key={index}\n                                                                    className=\"complex-btn ripple-effect\"\n                                                                    style={{\n                                                                        width: '20%',\n                                                                    }}>\n                                                                    <div\n                                                                        className=\"img-src\"\n                                                                        style={{\n                                                                            backgroundImage: `url(${docLogo})`,\n                                                                        }}\n                                                                    />\n                                                                    <div className=\"img-btn-overlay\" />\n                                                                    <div className=\"img-btn\">\n                                                                        <Typography\n                                                                            component=\"h3\"\n                                                                            type=\"subheading\"\n                                                                            color=\"inherit\"\n                                                                            className=\"img-title\"\n                                                                        >\n                                                                            {<IntlMessages id=\"message.attach.download\" />}\n                                                                            <div className=\"img-marked\" />\n                                                                        </Typography>\n                                                                    </div>\n                                                                </ButtonBase>\n                                                            ))}\n                                                        </div> : \"\"\n                                                }\n\n                                            </div>\n                                        )}\n                                    </RoleContext.Consumer>\n                                </CardBox>\n                            </div>\n                            <div className=\"row\">\n                                <CardBox\n                                    heading={\n                                        <IntlMessages id=\"cours.image\" />\n                                    }\n                                    styleName=\"col-lg-12 text-primary\"\n                                >\n                                    {\n                                        this.state.loader &&\n                                        <div className=\"loader-view\">\n                                            <CircularProgress />\n                                        </div>\n                                    }\n                                    <RoleContext.Consumer>\n                                        {({ role }) => (\n                                            <div className=\"row\">\n\n                                                {\n                                                    this.state.imageUrl.length > 0 ?\n                                                        <div className=\"complex-btn-wrapper\">\n                                                            {this.state.imageUrl.map((element, index) => (\n                                                                <ButtonBase\n                                                                    focusRipple\n                                                                    onClick={() => {\n\n                                                                    }}\n                                                                    href={element} download\n                                                                    key={index}\n                                                                    className=\"complex-btn ripple-effect\"\n                                                                    style={{\n                                                                        width: '20%',\n                                                                    }}>\n                                                                    <div\n                                                                        className=\"img-src\"\n                                                                        style={{\n                                                                            backgroundImage: `url(${imageLogo})`,\n                                                                        }}\n                                                                    />\n                                                                    <div className=\"img-btn-overlay\" />\n                                                                    <div className=\"img-btn\">\n                                                                        <Typography\n                                                                            component=\"h3\"\n                                                                            type=\"subheading\"\n                                                                            color=\"inherit\"\n                                                                            className=\"img-title\"\n                                                                        >\n                                                                            {<IntlMessages id=\"message.attach.download\" />}\n                                                                            <div className=\"img-marked\" />\n                                                                        </Typography>\n                                                                    </div>\n                                                                </ButtonBase>\n                                                            ))}\n                                                        </div> : \"\"\n                                                }\n\n                                            </div>\n                                        )}\n                                    </RoleContext.Consumer>\n                                </CardBox>\n                            </div>\n\n                            <div className=\"col-md-12 text-right \">\n                                <br />\n                                <br />\n                                <Button\n                                    variant=\"contained\"\n                                    className=\"jr-btn bg-grey text-white \"\n                                    onClick={this.props.handleCancel}\n                                >\n                                    {\n                                        <IntlMessages id=\"components.establishments.formadd.buttonCancel\" />\n                                    }\n                                </Button>\n                            </div>\n                        </form>\n                    </ModalBody>\n                </Modal>\n            </Auxiliary>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n\n        userProfile: state.auth.userProfile,\n    };\n}\nexport default connect(\n    mapStateToProps,\n    {\n        getUserProfile\n    }\n)(DownloadFiles);\n\n"]},"metadata":{},"sourceType":"module"}