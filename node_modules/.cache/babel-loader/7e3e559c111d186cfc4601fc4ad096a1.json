{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/ServiceAllocation/AddAllocationService.js\";\nimport React from 'react';\nimport CardBox from '../../../../../components/CardBox/index';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from 'react-select';\nimport ServiceItem from './ServiceAllocationComp/ServiceItem';\nimport Button from '@material-ui/core/Button';\nimport AllocationItem from './ServiceAllocationComp/AllocationItem';\nimport { addAllocationService, studentExist, getAllocationServiceByEstablishment } from '../../../../../actions/AllocationServiceAction';\nimport { connect } from 'react-redux';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { UncontrolledAlert } from 'reactstrap';\nimport _ from 'lodash';\n\nclass AddAllocationService extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeStudent = selectedOption => {\n      let idStudentsAffected = _.map(this.props.allocationService, function (el) {\n        if (el.services.length > 0) {\n          return el.services[0].fk_id_student;\n        }\n      });\n\n      let alerte;\n      alerte = idStudentsAffected.indexOf(selectedOption.value) >= 0;\n\n      if (alerte) {\n        this.props.openAddModal();\n        this.props.studentExist(this.state.options[selectedOption.key].label);\n      } else {}\n\n      this.setState({\n        student_id: selectedOption.value\n      });\n    };\n\n    this.HandleSubmitAllocationService = () => {\n      if (this.state.student_id == '' || this.state.servicesSelected.length == 0) {\n        this.setState({\n          alerteEmpty: true,\n          messageAlerte: 'il faut choisir un élève et une prestation au moins '\n        });\n        setTimeout(() => {\n          this.setState({\n            alerteEmpty: false,\n            messageAlerte: ''\n          });\n        }, 3000);\n      } else {\n        let monthExisted = true;\n        let data = [];\n        let prestationWithoutMonths = '';\n        this.state.servicesSelected.map(element => {\n          var allocationData = {};\n          allocationData.fk_id_student = this.state.student_id;\n          allocationData.fk_id_service = element.id;\n          allocationData.allocation_month = element.monthSelected;\n\n          if (element.monthSelected.length == 0) {\n            prestationWithoutMonths = element.name_fr_service;\n          }\n\n          monthExisted = monthExisted && element.monthSelected.length > 0;\n          data.push(allocationData);\n        });\n\n        if (monthExisted) {\n          this.props.addAllocationService(data, this.props.userProfile.establishment_id, this.props.userProfile.school_year_id);\n          this.setState({\n            showListePrestation: false,\n            frequency: '',\n            servicesSelected: [],\n            student_id: 0\n          });\n          this.props.openAddModal();\n        } else {\n          this.setState({\n            alerteEmpty: true,\n            messageAlerte: \" Vous n'avez pas choisir un mois pour le service  \" + prestationWithoutMonths\n          });\n          setTimeout(() => {\n            this.setState({\n              alerteEmpty: false,\n              messageAlerte: ''\n            });\n          }, 3000);\n        }\n      }\n    };\n\n    this.state = {\n      showListePrestation: false,\n      frequency: '',\n      servicesSelected: [],\n      student_id: 0,\n      options: [],\n      idStudents: [],\n      alerteEmpty: false,\n      messageAlerte: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeStudent = this.handleChangeStudent.bind(this);\n    this.handleIcon = this.handleIcon.bind(this);\n    this.HandleSubmitAllocationService = this.HandleSubmitAllocationService.bind(this);\n    this.showPrestaion = this.showPrestaion.bind(this);\n  }\n\n  handleIcon(idSelected) {\n    let servicesSelected = [];\n    let serviceExistant = [];\n    let services = this.state.servicesSelected;\n    servicesSelected = this.props.services.filter(service => service.id == idSelected)[0];\n    let serviceObj = {};\n    serviceObj = servicesSelected;\n\n    if (servicesSelected.fk_id_frequency == 7) {\n      serviceObj.monthSelected = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    } else {\n      serviceObj.monthSelected = [];\n    }\n\n    serviceExistant = services.filter(service => service.id == idSelected);\n    let serviceDelete = services.filter(service => service.id != idSelected);\n\n    if (serviceExistant.length > 0) {\n      this.setState({\n        servicesSelected: serviceDelete\n      });\n    } else {\n      services.push(serviceObj);\n      this.setState({\n        servicesSelected: services\n      });\n    }\n  }\n\n  showPrestaion() {\n    this.setState(previousState => ({\n      showListePrestation: !previousState.showListePrestation\n    }));\n  }\n\n  componentDidMount() {\n    if (this.state.student_id === 0) {\n      let options = [];\n      let idStudents = [];\n      this.props.studentList.forEach((student, index) => {\n        let option = {\n          label: student.profile.user.name + ' ' + student.profile.user.surname,\n          value: student.id,\n          key: index\n        };\n        options.push(option);\n        let ids = {\n          label: student.id,\n          value: student.id,\n          key: index\n        };\n        idStudents.push(ids);\n      });\n      this.setState({\n        options,\n        idStudents\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.studentList !== this.props.studentList) {\n      if (this.state.student_id === 0) {\n        let options = [];\n        let idStudents = [];\n        this.props.studentList.forEach((student, index) => {\n          let option = {\n            label: student.profile.user.name + ' ' + student.profile.user.surname,\n            value: student.id,\n            key: index\n          };\n          options.push(option);\n          let ids = {\n            label: student.id,\n            value: student.id,\n            key: index\n          };\n          idStudents.push(ids);\n        });\n        this.setState({\n          options,\n          idStudents\n        });\n      }\n    }\n  }\n\n  render() {\n    let {\n      services,\n      studentList\n    } = this.props;\n    let {\n      options,\n      idStudents\n    } = this.state;\n    var lengthServices;\n\n    if (this.state.showListePrestation == false) {\n      lengthServices = 4;\n    } else {\n      lengthServices = services.length;\n    }\n\n    return /*#__PURE__*/React.createElement(CardBox, {\n      heading: /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }\n      }, ' ', /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"new.allocation.service\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      })),\n      styleName: \"col-lg-12 text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }\n    }, this.state.alerteEmpty ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }, \" \", this.state.messageAlerte, \" \"))) : '', /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex flex-column bd-highlight mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"p-2 bd-highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontFamily: 'Arial Helvetica sans-serif',\n        color: '#979A9A'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"call.search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    })), ' '), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"p-2 bd-highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex flex-row bd-highlight mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"p-2 bd-highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"idSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"p-2 bd-highlight col-md-2 col-sm-2 col-lg-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      value: idStudents[_.findIndex(idStudents, {\n        value: this.state.student_id\n      })],\n      name: \"student_id\",\n      id: \"student_id\",\n      styles: {\n        control: base => ({ ...base,\n          '&:hover': {\n            borderColor: 'gray'\n          },\n          // border style on hover\n          border: '1px solid lightgray',\n          // default border color\n          boxShadow: 'none',\n          // no box-shadow\n          borderRadius: 20\n        })\n      },\n      onChange: this.handleChangeStudent,\n      options: idStudents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"p-2 bd-highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    }, ' ', /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.professor.formadd.name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"p-2 bd-highlight col-md-2 col-sm-2 col-lg-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      value: options[_.findIndex(options, {\n        value: this.state.student_id\n      })],\n      id: \"nomSelect\",\n      styles: {\n        control: base => ({ ...base,\n          '&:hover': {\n            borderColor: 'gray'\n          },\n          // border style on hover\n          border: '1px solid lightgray',\n          // default border color\n          boxShadow: 'none',\n          // no box-shadow\n          borderTopStyle: 'none',\n          borderRightStyle: 'none',\n          borderLeftStyle: 'none',\n          borderRadius: ' none'\n        })\n      },\n      onChange: this.handleChangeStudent,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    }), ' '))), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        width: '100%',\n        margin: 'auto',\n        marginTop: '5%',\n        marginBottom: '5%',\n        border: '1px dashed #979A9A',\n        paddingLeft: 'none',\n        paddingRight: '-10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, \"Prestation\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-2 col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-10 col-md-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }\n    }, services.slice(0, lengthServices).map(element => /*#__PURE__*/React.createElement(ServiceItem, {\n      key: element.id,\n      item: element,\n      handleIcon: this.handleIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 d-flex flex-column align-items-center \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }\n    }, this.state.showListePrestation == false ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.showPrestaion,\n      style: {\n        borderRadius: '35px',\n        backgroundColor: 'white',\n        padding: '14px',\n        border: '0.5px solid'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 15\n      }\n    }, this.state.showListePrestation == false ? ` Afficher toutes les prestations` : ` masquer les prestations`) : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }\n    }, this.state.servicesSelected.map((element, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AllocationItem, {\n        item: element,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 19\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 text-right \",\n      style: {\n        marginTop: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      style: {\n        borderBottomLeftRadius: '16px',\n        borderBottomRightRadius: '16px',\n        borderTopLeftRadius: '16px',\n        borderTopRightRadius: '16px'\n      },\n      onClick: this.props.openAddModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.classes.formadd.buttonCancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 15\n      }\n    })), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      style: {\n        borderBottomLeftRadius: '16px',\n        borderBottomRightRadius: '16px',\n        borderTopLeftRadius: '16px',\n        borderTopRightRadius: '16px'\n      },\n      className: \" bg-indigo text-white \",\n      onClick: this.HandleSubmitAllocationService,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"note.button.save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile\n  };\n}\n\nexport default connect(mapStateToProps, {\n  addAllocationService,\n  studentExist,\n  getAllocationServiceByEstablishment\n})(AddAllocationService);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/ServiceAllocation/AddAllocationService.js"],"names":["React","CardBox","InputLabel","Select","ServiceItem","Button","AllocationItem","addAllocationService","studentExist","getAllocationServiceByEstablishment","connect","MenuItem","IntlMessages","UncontrolledAlert","_","AddAllocationService","Component","constructor","props","handleChange","name","event","setState","target","value","handleChangeStudent","selectedOption","idStudentsAffected","map","allocationService","el","services","length","fk_id_student","alerte","indexOf","openAddModal","state","options","key","label","student_id","HandleSubmitAllocationService","servicesSelected","alerteEmpty","messageAlerte","setTimeout","monthExisted","data","prestationWithoutMonths","element","allocationData","fk_id_service","id","allocation_month","monthSelected","name_fr_service","push","userProfile","establishment_id","school_year_id","showListePrestation","frequency","idStudents","bind","handleIcon","showPrestaion","idSelected","serviceExistant","filter","service","serviceObj","fk_id_frequency","serviceDelete","previousState","componentDidMount","studentList","forEach","student","index","option","profile","user","surname","ids","componentDidUpdate","prevProps","prevState","render","lengthServices","fontFamily","color","findIndex","control","base","borderColor","border","boxShadow","borderRadius","borderTopStyle","borderRightStyle","borderLeftStyle","width","margin","marginTop","marginBottom","paddingLeft","paddingRight","slice","backgroundColor","padding","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CardBox from '../../../../../components/CardBox/index';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from 'react-select';\nimport ServiceItem from './ServiceAllocationComp/ServiceItem';\nimport Button from '@material-ui/core/Button';\nimport AllocationItem from './ServiceAllocationComp/AllocationItem';\nimport {\n  addAllocationService,\n  studentExist,\n  getAllocationServiceByEstablishment,\n} from '../../../../../actions/AllocationServiceAction';\nimport { connect } from 'react-redux';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { UncontrolledAlert } from 'reactstrap';\nimport _ from 'lodash';\nclass AddAllocationService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showListePrestation: false,\n      frequency: '',\n      servicesSelected: [],\n      student_id: 0,\n      options: [],\n      idStudents: [],\n      alerteEmpty: false,\n      messageAlerte: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeStudent = this.handleChangeStudent.bind(this);\n    this.handleIcon = this.handleIcon.bind(this);\n    this.HandleSubmitAllocationService = this.HandleSubmitAllocationService.bind(this);\n    this.showPrestaion = this.showPrestaion.bind(this);\n  }\n\n  handleIcon(idSelected) {\n    let servicesSelected = [];\n    let serviceExistant = [];\n\n    let services = this.state.servicesSelected;\n    servicesSelected = this.props.services.filter((service) => service.id == idSelected)[0];\n    let serviceObj = {};\n\n    serviceObj = servicesSelected;\n\n    if (servicesSelected.fk_id_frequency == 7) {\n      serviceObj.monthSelected = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    } else {\n      serviceObj.monthSelected = [];\n    }\n\n    serviceExistant = services.filter((service) => service.id == idSelected);\n\n    let serviceDelete = services.filter((service) => service.id != idSelected);\n\n    if (serviceExistant.length > 0) {\n      this.setState({\n        servicesSelected: serviceDelete,\n      });\n    } else {\n      services.push(serviceObj);\n\n      this.setState({\n        servicesSelected: services,\n      });\n    }\n  }\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChangeStudent = (selectedOption) => {\n    let idStudentsAffected = _.map(this.props.allocationService, function(el) {\n      if (el.services.length > 0) {\n        return el.services[0].fk_id_student;\n      }\n    });\n    let alerte;\n    alerte = idStudentsAffected.indexOf(selectedOption.value) >= 0;\n\n    if (alerte) {\n      this.props.openAddModal();\n      this.props.studentExist(this.state.options[selectedOption.key].label);\n    } else {\n    }\n    this.setState({\n      student_id: selectedOption.value,\n    });\n  };\n\n  HandleSubmitAllocationService = () => {\n    if (this.state.student_id == '' || this.state.servicesSelected.length == 0) {\n      this.setState({\n        alerteEmpty: true,\n        messageAlerte: 'il faut choisir un élève et une prestation au moins ',\n      });\n      setTimeout(() => {\n        this.setState({\n          alerteEmpty: false,\n          messageAlerte: '',\n        });\n      }, 3000);\n    } else {\n      let monthExisted = true;\n      let data = [];\n      let prestationWithoutMonths = '';\n\n      this.state.servicesSelected.map((element) => {\n        var allocationData = {};\n        allocationData.fk_id_student = this.state.student_id;\n        allocationData.fk_id_service = element.id;\n        allocationData.allocation_month = element.monthSelected;\n        if (element.monthSelected.length == 0) {\n          prestationWithoutMonths = element.name_fr_service;\n        }\n        monthExisted = monthExisted && element.monthSelected.length > 0;\n\n        data.push(allocationData);\n      });\n      if (monthExisted) {\n        this.props.addAllocationService(\n          data,\n          this.props.userProfile.establishment_id,\n          this.props.userProfile.school_year_id\n        );\n        this.setState({\n          showListePrestation: false,\n          frequency: '',\n          servicesSelected: [],\n          student_id: 0,\n        });\n         \n        this.props.openAddModal();\n      } else {\n        this.setState({\n          alerteEmpty: true,\n          messageAlerte:\n            \" Vous n'avez pas choisir un mois pour le service  \" + prestationWithoutMonths,\n        });\n        setTimeout(() => {\n          this.setState({\n            alerteEmpty: false,\n            messageAlerte: '',\n          });\n        }, 3000);\n      }\n    }\n  };\n  showPrestaion() {\n    this.setState((previousState) => ({\n      showListePrestation: !previousState.showListePrestation,\n    }));\n  }\n  componentDidMount() {\n    if (this.state.student_id === 0) {\n      let options = [];\n      let idStudents = [];\n      this.props.studentList.forEach((student, index) => {\n        let option = {\n          label: student.profile.user.name + ' ' + student.profile.user.surname,\n          value: student.id,\n          key: index,\n        };\n        options.push(option);\n\n        let ids = {\n          label: student.id,\n          value: student.id,\n          key: index,\n        };\n\n        idStudents.push(ids);\n      });\n      this.setState({ options, idStudents });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.studentList !== this.props.studentList) {\n      if (this.state.student_id === 0) {\n        let options = [];\n        let idStudents = [];\n        this.props.studentList.forEach((student, index) => {\n          let option = {\n            label: student.profile.user.name + ' ' + student.profile.user.surname,\n            value: student.id,\n            key: index,\n          };\n          options.push(option);\n\n          let ids = {\n            label: student.id,\n            value: student.id,\n            key: index,\n          };\n\n          idStudents.push(ids);\n        });\n        this.setState({ options, idStudents });\n      }\n    }\n  }\n\n  render() {\n    let { services, studentList } = this.props;\n    let { options, idStudents } = this.state;\n    var lengthServices;\n    if (this.state.showListePrestation == false) {\n      lengthServices = 4;\n    } else {\n      lengthServices = services.length;\n    }\n\n    return (\n      <CardBox\n        heading={\n          <b>\n            {' '}\n            <IntlMessages id=\"new.allocation.service\" />\n          </b>\n        }\n        styleName=\"col-lg-12 text-primary\"\n      >\n        {this.state.alerteEmpty ? (\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n            <UncontrolledAlert className=\"alert-addon-card bg-danger bg-danger text-white shadow-lg\">\n              <span className=\"icon-addon alert-addon\">\n                <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n              </span>\n              <span className=\"d-inline-block\"> {this.state.messageAlerte} </span>\n            </UncontrolledAlert>\n          </div>\n        ) : (\n          ''\n        )}\n        <div class=\"d-flex flex-column bd-highlight mb-3\">\n          <div class=\"p-2 bd-highlight\">\n            <p\n              style={{\n                fontFamily: 'Arial Helvetica sans-serif',\n                color: '#979A9A',\n              }}\n            >\n              <IntlMessages id=\"call.search\" />\n            </p>{' '}\n          </div>\n          <div class=\"p-2 bd-highlight\">\n            <div class=\"d-flex flex-row bd-highlight mb-3\">\n              <div class=\"p-2 bd-highlight\">\n                <InputLabel htmlFor=\"idSelect\">\n                  <IntlMessages id=\"id\" />\n                </InputLabel>\n              </div>\n              <div class=\"p-2 bd-highlight col-md-2 col-sm-2 col-lg-2\">\n                <Select\n                  value={\n                    idStudents[\n                      _.findIndex(idStudents, {\n                        value: this.state.student_id,\n                      })\n                    ]\n                  }\n                  name=\"student_id\"\n                  id=\"student_id\"\n                  styles={{\n                    control: (base) => ({\n                      ...base,\n                      '&:hover': { borderColor: 'gray' }, // border style on hover\n                      border: '1px solid lightgray', // default border color\n                      boxShadow: 'none', // no box-shadow\n                      borderRadius: 20,\n                    }),\n                  }}\n                  onChange={this.handleChangeStudent}\n                  options={idStudents}\n                />\n              </div>\n              <div class=\"p-2 bd-highlight\">\n                {' '}\n                <IntlMessages id=\"components.professor.formadd.name\" />\n              </div>\n              <div class=\"p-2 bd-highlight col-md-2 col-sm-2 col-lg-2\">\n                <Select\n                  value={\n                    options[\n                      _.findIndex(options, {\n                        value: this.state.student_id,\n                      })\n                    ]\n                  }\n                  id=\"nomSelect\"\n                  styles={{\n                    control: (base) => ({\n                      ...base,\n                      '&:hover': { borderColor: 'gray' }, // border style on hover\n                      border: '1px solid lightgray', // default border color\n                      boxShadow: 'none', // no box-shadow\n                      borderTopStyle: 'none',\n                      borderRightStyle: 'none',\n                      borderLeftStyle: 'none',\n                      borderRadius: ' none',\n                    }),\n                  }}\n                  onChange={this.handleChangeStudent}\n                  options={options}\n                />{' '}\n              </div>\n            </div>\n          </div>\n\n          <hr\n            style={{\n              width: '100%',\n              margin: 'auto',\n              marginTop: '5%',\n              marginBottom: '5%',\n              border: '1px dashed #979A9A',\n              paddingLeft: 'none',\n              paddingRight: '-10px',\n            }}\n          />\n\n          <h3>\n            <b>Prestation</b>\n          </h3>\n\n          <div className=\"row col-lg-12 col-md-12\"></div>\n          <div className=\"row col-lg-2 col-md-2\"></div>\n\n          <div className=\"row col-lg-10 col-md-10\">\n            {services.slice(0, lengthServices).map((element) => (\n              <ServiceItem key={element.id} item={element} handleIcon={this.handleIcon} />\n            ))}\n          </div>\n          <div className=\"col-lg-12 col-md-12 d-flex flex-column align-items-center \">\n            {this.state.showListePrestation == false ? (\n              <Button\n                variant=\"contained\"\n                onClick={this.showPrestaion}\n                style={{\n                  borderRadius: '35px',\n                  backgroundColor: 'white',\n                  padding: '14px',\n                  border: '0.5px solid',\n                }}\n              >\n                {this.state.showListePrestation == false\n                  ? ` Afficher toutes les prestations`\n                  : ` masquer les prestations`}\n              </Button>\n            ) : (\n              ''\n            )}\n          </div>\n          <div className=\"col-lg-2 col-md-2\"></div>\n          <br />\n          <br />\n          <div className=\"col-lg-12 col-md-12 \">\n            {this.state.servicesSelected.map((element, index) => {\n              return (\n                <div>\n                  <AllocationItem item={element} key={index} />\n                  <br></br>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"col-lg-12 col-md-12 text-right \" style={{ marginTop: '5%' }}>\n            <Button\n              variant=\"contained\"\n              style={{\n                borderBottomLeftRadius: '16px',\n                borderBottomRightRadius: '16px',\n                borderTopLeftRadius: '16px',\n                borderTopRightRadius: '16px',\n              }}\n              onClick={this.props.openAddModal}\n            >\n              <IntlMessages id=\"components.classes.formadd.buttonCancel\" />\n            </Button>\n            &nbsp;&nbsp;\n            <Button\n              variant=\"contained\"\n              style={{\n                borderBottomLeftRadius: '16px',\n                borderBottomRightRadius: '16px',\n                borderTopLeftRadius: '16px',\n                borderTopRightRadius: '16px',\n              }}\n              className=\" bg-indigo text-white \"\n              onClick={this.HandleSubmitAllocationService}\n            >\n              <IntlMessages id=\"note.button.save\" />\n            </Button>\n          </div>\n        </div>\n      </CardBox>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  addAllocationService,\n  studentExist,\n  getAllocationServiceByEstablishment,\n})(AddAllocationService);\n"]},"metadata":{},"sourceType":"module"}