{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/BilletPass/BilletPass.js\";\nimport React from 'react';\nimport IntlMessages from '../../../util/IntlMessages';\nimport TextField from '@material-ui/core/TextField';\nimport CardBox from '../../../components/CardBox/index';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport StudentList from './StudentList';\nimport { connect } from \"react-redux\";\nimport { getClasses, getClassesByEstablishmentId } from \"../../../actions/classeAction\";\nimport { getEstablishment } from \"../../../actions/establishmentAction\";\nimport _ from 'lodash';\nimport ContainerHeader from '../../../components/ContainerHeader/index';\nimport { RoleContext } from '../../../Context';\nimport Can from '../../../can';\nimport { roleIdSuperAdmin, roleIdAdmin, roleIdSupervisor, roleIdDirector } from '../../../config/config';\nimport { classService } from '../../../_services/class.service';\nimport { UncontrolledAlert } from \"reactstrap\";\n\nfunction notEmpty(value) {\n  return !_.isEmpty(value);\n}\n\nfunction mapStateToProps(state) {\n  return {\n    classes: state.classes,\n    establishments: state.establishment.remoteEstablishments,\n    userProfile: state.auth.userProfile,\n    absentStudents: state.callRegister.absentStudents,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message\n  };\n}\n\n;\n\nclass BilletPass extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = name => event => {\n      let obj = JSON.parse(event.target.value);\n\n      if (name === 'classe' && event.target.value) {\n        this.setState({\n          value: event.target.value,\n          classe: obj.classId,\n          class_name: obj.class_name\n        });\n        this.getListOfAbsentStudent(obj.classId);\n      } else {\n        this.setState({\n          [name]: event.target.value\n        });\n      }\n    };\n\n    this.state = {\n      value: '',\n      classe: '',\n      class_name: '',\n      list_presence: [],\n      establishment_id: '',\n      absentStudents: [],\n      noAbsents: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.filterClass = this.filterClass.bind(this);\n    this.getListOfAbsentStudent = this.getListOfAbsentStudent.bind(this);\n  }\n\n  componentWillMount() {\n    switch (parseInt(localStorage.roles_id)) {\n      case roleIdSuperAdmin:\n        this.props.getEstablishment();\n        this.props.getClasses();\n        break;\n\n      case roleIdAdmin:\n      case roleIdSupervisor:\n      case roleIdDirector:\n        this.props.getClassesByEstablishmentId(localStorage.establishment_id);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  filterClass(classes) {\n    if (this.props.userProfile.roles_id === roleIdSuperAdmin && classes.length && this.state.establishment_id) {\n      return classes.filter(classe => classe.establishment_id === this.state.establishment_id && classe.status);\n    } else {\n      let classFiltred = classes.filter(classInfo => classInfo.status);\n      return classFiltred;\n    }\n  }\n\n  getListOfAbsentStudent(class_id) {\n    let apiEndpoint = `/student_calls/fetchAbsentStudentsByClassId/` + class_id + `?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(res => {\n      if (!_.isEmpty(res.data.students)) {\n        this.setState({\n          absentStudents: res.data.students\n        });\n      } else {\n        this.setState({\n          absentStudents: [],\n          noAbsents: true\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      establishment_id: ''\n    });\n  }\n\n  render() {\n    const allEstablishment = Array.from(this.props.establishments);\n    const allClasses = Array.from(this.props.classes);\n    let filteredClasses = this.filterClass(allClasses);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ContainerHeader, {\n      match: this.props.match,\n      title: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"pages.sideNav.component.billetPass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 58\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-sm-12\",\n      heading: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.exam.form.class\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 20\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"billetPass-filter-establishment:visit\",\n      yes: () => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-3 col-sm-6 col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"establishment\",\n        select: true,\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.student.formadd.establishment\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 32\n          }\n        }),\n        value: this.state.establishment_id,\n        onChange: this.handleChange('establishment_id'),\n        SelectProps: {},\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 23\n        }\n      }, allEstablishment.map(establishment => /*#__PURE__*/React.createElement(MenuItem, {\n        key: establishment.id,\n        value: establishment.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 27\n        }\n      }, establishment.name)))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-3 col-sm-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"classe\",\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.note.class\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 28\n        }\n      }),\n      value: this.state.value,\n      onChange: this.handleChange('classe') // onBlur={this.handleBlur}\n      // SelectProps={{}}\n      ,\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, filteredClasses.map(option => {\n      let data = {\n        classId: option.id,\n        class_name: option.name\n      };\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: option.id,\n        value: JSON.stringify(data),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      }, option.name);\n    })))))), this.props.successStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, \" \", this.props.message, \" \")) : \"\", this.props.errorStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, \" \", this.props.message, \" \")) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StudentList, {\n      absentStudents: this.state.absentStudents,\n      noAbsents: this.state.noAbsents,\n      class_name: this.state.class_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  getEstablishment,\n  getClasses,\n  getClassesByEstablishmentId\n})(BilletPass);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/BilletPass/BilletPass.js"],"names":["React","IntlMessages","TextField","CardBox","MenuItem","StudentList","connect","getClasses","getClassesByEstablishmentId","getEstablishment","_","ContainerHeader","RoleContext","Can","roleIdSuperAdmin","roleIdAdmin","roleIdSupervisor","roleIdDirector","classService","UncontrolledAlert","notEmpty","value","isEmpty","mapStateToProps","state","classes","establishments","establishment","remoteEstablishments","userProfile","auth","absentStudents","callRegister","successStatus","alert","success","errorStatus","error","message","BilletPass","Component","constructor","props","handleChange","name","event","obj","JSON","parse","target","setState","classe","classId","class_name","getListOfAbsentStudent","list_presence","establishment_id","noAbsents","bind","filterClass","componentWillMount","parseInt","localStorage","roles_id","length","filter","status","classFiltred","classInfo","class_id","apiEndpoint","token","get","then","res","data","students","componentWillUnmount","render","allEstablishment","Array","from","allClasses","filteredClasses","match","role","map","id","option","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IntlMessages from '../../../util/IntlMessages';\nimport TextField from '@material-ui/core/TextField';\nimport CardBox from '../../../components/CardBox/index';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport StudentList from './StudentList';\nimport { connect } from \"react-redux\";\nimport { getClasses, getClassesByEstablishmentId } from \"../../../actions/classeAction\";\nimport { getEstablishment } from \"../../../actions/establishmentAction\";\nimport _ from 'lodash';\nimport ContainerHeader from '../../../components/ContainerHeader/index';\nimport { RoleContext } from '../../../Context';\nimport Can from '../../../can';\nimport { roleIdSuperAdmin, roleIdAdmin, roleIdSupervisor, roleIdDirector } from '../../../config/config';\nimport { classService } from '../../../_services/class.service';\nimport { UncontrolledAlert } from \"reactstrap\";\n\nfunction notEmpty(value) {\n  return !(_.isEmpty(value))\n}\n\nfunction mapStateToProps(state) {\n  return {\n    classes: state.classes,\n    establishments: state.establishment.remoteEstablishments,\n    userProfile: state.auth.userProfile,\n    absentStudents: state.callRegister.absentStudents,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n  };\n};\n\nclass BilletPass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      classe: '',\n      class_name: '',\n      list_presence: [],\n      establishment_id: '',\n      absentStudents: [],\n      noAbsents: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.filterClass = this.filterClass.bind(this);\n    this.getListOfAbsentStudent = this.getListOfAbsentStudent.bind(this);\n  }\n\n  componentWillMount() {\n    switch (parseInt(localStorage.roles_id)) {\n      case roleIdSuperAdmin:\n        this.props.getEstablishment();\n        this.props.getClasses();\n        break;\n\n      case roleIdAdmin:\n      case roleIdSupervisor:\n      case roleIdDirector:\n        this.props.getClassesByEstablishmentId(localStorage.establishment_id);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n\n  filterClass(classes) {\n    if (this.props.userProfile.roles_id === roleIdSuperAdmin && classes.length && this.state.establishment_id) {\n      return classes.filter(classe => classe.establishment_id === this.state.establishment_id && classe.status)\n    } else {\n      let classFiltred = classes.filter(classInfo => classInfo.status);\n      return classFiltred\n    }\n  }\n\n  getListOfAbsentStudent(class_id) {\n\n    let apiEndpoint = `/student_calls/fetchAbsentStudentsByClassId/` + class_id + `?access_token=${localStorage.token}`\n    classService.get(apiEndpoint)\n      .then(res => {\n        if (!_.isEmpty(res.data.students)) {\n          this.setState({ absentStudents: res.data.students })\n        } else {\n          this.setState({ absentStudents: [], noAbsents: true })\n        }\n\n      })\n  }\n\n  handleChange = name => event => {\n    let obj = JSON.parse(event.target.value);\n    if (name === 'classe' && event.target.value) {\n      this.setState({\n        value: event.target.value,\n        classe: obj.classId,\n        class_name: obj.class_name\n      })\n      this.getListOfAbsentStudent(obj.classId);\n    } else {\n      this.setState({\n        [name]: event.target.value\n      })\n    }\n  }\n  componentWillUnmount() {\n    this.setState({ establishment_id: '' })\n  }\n\n\n  render() {\n    const allEstablishment = Array.from(this.props.establishments);\n    const allClasses = Array.from(this.props.classes);\n    let filteredClasses = this.filterClass(allClasses);\n\n\n    return (\n      <div className=\"app-wrapper\">\n        <ContainerHeader match={this.props.match} title={<IntlMessages id=\"pages.sideNav.component.billetPass\" />} />\n        <CardBox styleName=\"col-sm-12\"\n          heading={<IntlMessages id=\"components.exam.form.class\" />}>\n          <RoleContext.Consumer>\n            {({ role }) => (\n              <div className=\"row\">\n\n                <Can\n                  role={role}\n                  perform=\"billetPass-filter-establishment:visit\"\n                  yes={() => (\n                    <div className=\"col-lg-3 col-sm-6 col-12\" >\n                      <TextField\n                        required\n                        id=\"establishment\"\n                        select\n                        label={<IntlMessages id=\"components.student.formadd.establishment\" />}\n                        value={this.state.establishment_id}\n                        onChange={this.handleChange('establishment_id')}\n                        SelectProps={{}}\n                        margin=\"normal\"\n                        fullWidth >\n                        {allEstablishment.map(establishment => (\n                          <MenuItem key={establishment.id} value={establishment.id}>\n                            {establishment.name}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </div>\n                  )}\n                />\n\n                <div className=\"col-lg-3 col-sm-6 col-12\" >\n\n                  <TextField\n                    required\n                    id=\"classe\"\n                    select\n                    label={<IntlMessages id=\"components.note.class\" />}\n                    value={this.state.value}\n                    onChange={this.handleChange('classe')}\n                    // onBlur={this.handleBlur}\n                    // SelectProps={{}}\n                    margin=\"normal\"\n                    fullWidth >\n                    {filteredClasses.map(option => {\n                      let data = { classId: option.id, class_name: option.name }\n                      return (\n                        <MenuItem key={option.id} value={JSON.stringify(data)}>\n                          {option.name}\n                        </MenuItem>\n                      )\n                    })}\n                  </TextField>\n\n                </div>\n              </div>\n            )}\n          </RoleContext.Consumer>\n        </CardBox>\n        {this.props.successStatus ? (\n          <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\">\n              {\" \"}\n              {this.props.message}{\" \"}\n            </span>\n          </UncontrolledAlert>\n        ) : (\n            \"\"\n          )}\n        {this.props.errorStatus ? (\n          <UncontrolledAlert className=\"alert-addon-card bg-danger bg-danger text-white shadow-lg\">\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\">\n              {\" \"}{this.props.message}{\" \"}\n            </span>\n          </UncontrolledAlert>\n        ) : (\n            \"\"\n          )}\n        <div className=\"row\">\n          <StudentList\n            absentStudents={this.state.absentStudents}\n            noAbsents={this.state.noAbsents}\n            class_name={this.state.class_name}\n\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default connect(mapStateToProps, { getEstablishment, getClasses, getClassesByEstablishmentId })(BilletPass);\n"]},"metadata":{},"sourceType":"module"}