{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/UsersManagement/UserInformation/EditSpecificInformation.js\";\nimport React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IntlMessages from \"../../../../../../util/IntlMessages\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { getLevelListFromEstabType } from \"../../../../../../actions/classLevelAction\";\nimport { getSectionFromLevel } from \"../../../../../../actions/sectionAction\";\nimport { subjectsByLevelBySection } from \"../../../../../../actions/subjectAction\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/moment\";\nimport { UncontrolledAlert } from \"reactstrap\";\nexport default class SpecificInformation extends Component {\n  render() {\n    console.log('====================================');\n    console.log(this.props.classList);\n    console.log('====================================');\n    const {\n      values,\n      handleChangeClass,\n      handleChangeListSubjects,\n      handleChangestudentLevel,\n      handleChangeListSubjectsAdd,\n      handleChangeStartContract,\n      handleChangeEndContract,\n      addNewSubject,\n      handleChangestudentSection,\n      classList,\n      subjects,\n      classesSubjects\n    } = this.props;\n    const levelsbyestablishment = getLevelListFromEstabType(this.props.classLevels, values.estabType);\n    console.log(\"SpecificInformation -> render -> subjects\", subjects);\n    console.log(\"SpecificInformation -> render -> subjects\", values.listOfSubjects);\n    console.log(\"SpecificInformation -> render -> subjects\", values.addedListSubject);\n\n    if (values.role_id === 3) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.professor.formadd.date_start_contract\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 23\n          }\n        }),\n        fullWidth: true,\n        id: \"date_start_contract\",\n        name: \"date_start_contract\",\n        value: values.date_start_contract,\n        onChange: handleChangeStartContract,\n        format: \"DD-MM-YYYY\",\n        autoOk: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.professor.formadd.date_end_contract\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 23\n          }\n        }),\n        fullWidth: true,\n        id: \"date_end_contract\",\n        name: \"date_end_contract\",\n        value: values.date_end_contract,\n        onChange: handleChangeEndContract,\n        format: \"DD-MM-YYYY\",\n        autoOk: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, values.listOfSubjects.map((objSubject, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: `${index}`,\n        name: \"classId\",\n        select: true,\n        multiple: true,\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.student.formadd.classe\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 30\n          }\n        }),\n        value: objSubject.assignmentClassSubject.fk_id_class_v4,\n        onChange: event => handleChangeListSubjects(event, \"classId\", objSubject.id, index),\n        SelectProps: {},\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, classList.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n        key: option.id,\n        value: option.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, option.name))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"subject_id\",\n        id: `${index}`,\n        select: true,\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"sidebar.components.lesson\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 23\n          }\n        }),\n        value: objSubject.assignmentClassSubject.fk_id_subject_v4,\n        onChange: event => handleChangeListSubjects(event, \"subject_id\", objSubject.id, index),\n        SelectProps: {},\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }\n      }, subjects.map(subject => /*#__PURE__*/React.createElement(MenuItem, {\n        key: subject.id,\n        value: subject.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 23\n        }\n      }, subject.name)))), index === values.listOfSubjects.length - 1 && values.addedListSubject.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        size: \"small\",\n        value: `${index}`,\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        onClick: () => addNewSubject(index + 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 23\n        }\n      }))) : null)), values.added ? values.addedListSubject.map((objSubject, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: `${index}`,\n        name: \"classId\",\n        select: true,\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"todo.labels\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 30\n          }\n        }),\n        value: objSubject.classId,\n        onChange: event => handleChangeListSubjects(event, \"classId\", index),\n        SelectProps: {},\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }, classesSubjects.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n        key: option.id,\n        value: option.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }\n      }, option.name))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"subject_id\",\n        id: `${index}`,\n        select: true,\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"sidebar.components.lesson\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 23\n          }\n        }),\n        value: objSubject.subject_id,\n        onChange: event => handleChangeListSubjects(event, \"subject_id\", index),\n        SelectProps: {},\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 19\n        }\n      }, objSubject.subjects.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n        key: item.subject.id,\n        value: item.subject.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 23\n        }\n      }, item.subject.name)))), index === values.addedListSubject.length - 1 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        size: \"small\",\n        value: `${index}`,\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        onClick: () => addNewSubject(values.listOfSubjects.length),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 27\n        }\n      }))) : null)) : null));\n    } /////////////////////////////student////////////////////\n\n\n    if (values.role_id === 5) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }\n      }, values.successStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n        className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"icon-addon alert-addon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"edit.user.message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 18\n        }\n      }))) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        variant: \"outlined\",\n        required: true,\n        name: \"level_id\",\n        id: \"level_id\",\n        select: true,\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.note.niveau\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 24\n          }\n        }),\n        value: values.level_id,\n        onChange: handleChangestudentLevel(\"level_id\"),\n        SelectProps: {},\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }\n      }, levelsbyestablishment.map(level => /*#__PURE__*/React.createElement(MenuItem, {\n        key: level.id,\n        value: level.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 19\n        }\n      }, level.name)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        variant: \"outlined\",\n        required: true,\n        disabled: values.Disable_studentsection,\n        name: \"section_id\",\n        id: \"section_id\",\n        select: true,\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.class.level.input.label.section\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 19\n          }\n        }),\n        value: values.section_id,\n        onChange: handleChangestudentSection(\"section_id\"),\n        SelectProps: {},\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }\n      }, values.studentsectionByLevels.map(section => /*#__PURE__*/React.createElement(MenuItem, {\n        key: section.id,\n        value: section.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 19\n        }\n      }, section.name))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        variant: \"outlined\",\n        required: true,\n        name: \"class_id\",\n        id: \"class_id\",\n        select: true,\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.student.formadd.classe\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 24\n          }\n        }),\n        value: values.class_id,\n        onChange: handleChangeClass(\"class_id\"),\n        SelectProps: {},\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }\n      }, values.studentClassesByLevelSectionID.map(classe => /*#__PURE__*/React.createElement(MenuItem, {\n        key: classe.id,\n        value: classe.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 19\n        }\n      }, classe.name)))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/UsersManagement/UserInformation/EditSpecificInformation.js"],"names":["React","Component","TextField","IntlMessages","MenuItem","Fab","AddIcon","getLevelListFromEstabType","getSectionFromLevel","subjectsByLevelBySection","KeyboardDatePicker","MuiPickersUtilsProvider","DateFnsUtils","UncontrolledAlert","SpecificInformation","render","console","log","props","classList","values","handleChangeClass","handleChangeListSubjects","handleChangestudentLevel","handleChangeListSubjectsAdd","handleChangeStartContract","handleChangeEndContract","addNewSubject","handleChangestudentSection","subjects","classesSubjects","levelsbyestablishment","classLevels","estabType","listOfSubjects","addedListSubject","role_id","date_start_contract","date_end_contract","map","objSubject","index","assignmentClassSubject","fk_id_class_v4","event","id","option","name","fk_id_subject_v4","subject","length","added","classId","subject_id","item","successStatus","level_id","level","Disable_studentsection","section_id","studentsectionByLevels","section","class_id","studentClassesByLevelSectionID","classe"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IntlMessages from \"../../../../../../util/IntlMessages\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { getLevelListFromEstabType } from \"../../../../../../actions/classLevelAction\";\nimport { getSectionFromLevel } from \"../../../../../../actions/sectionAction\";\nimport { subjectsByLevelBySection } from \"../../../../../../actions/subjectAction\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/moment\";\nimport { UncontrolledAlert } from \"reactstrap\";\n\nexport default class SpecificInformation extends Component {\n \n  render() {\n    console.log('====================================');\n    console.log(this.props.classList);\n    console.log('====================================');\n    const {\n      values,\n      handleChangeClass,\n      handleChangeListSubjects,\n      handleChangestudentLevel,\n      handleChangeListSubjectsAdd,\n      handleChangeStartContract,\n      handleChangeEndContract,\n      addNewSubject,\n      handleChangestudentSection,\n      classList,\n      subjects,\n      classesSubjects\n    } = this.props;\n    const levelsbyestablishment = getLevelListFromEstabType(\n      this.props.classLevels,\n      values.estabType\n    );\n    console.log(\"SpecificInformation -> render -> subjects\", subjects)\n    console.log(\"SpecificInformation -> render -> subjects\", values.listOfSubjects)\n    console.log(\"SpecificInformation -> render -> subjects\", values.addedListSubject)\n\n    \n\n    \n    if (values.role_id === 3) {\n      return (\n        <>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    label={\n                      <IntlMessages id=\"components.professor.formadd.date_start_contract\" />\n                    }\n                    fullWidth\n                    id=\"date_start_contract\"\n                    name=\"date_start_contract\"\n                    value={values.date_start_contract}\n                    onChange={handleChangeStartContract}\n                    format=\"DD-MM-YYYY\"\n                    autoOk\n                  />\n                </MuiPickersUtilsProvider>\n              </div>\n            </div>\n\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    label={\n                      <IntlMessages id=\"components.professor.formadd.date_end_contract\" />\n                    }\n                    fullWidth\n                    id=\"date_end_contract\"\n                    name=\"date_end_contract\"\n                    value={values.date_end_contract}\n                    onChange={handleChangeEndContract}\n                    format=\"DD-MM-YYYY\"\n                    autoOk\n                  />\n                </MuiPickersUtilsProvider>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            {values.listOfSubjects.map((objSubject, index) => (\n              <>\n                <div className=\"col-md-6\" key={index}>\n                  <div className=\"form-group\">\n                    <TextField\n                      required\n                      id={`${index}`}\n                      name=\"classId\"\n                      select\n                      multiple\n                      label={<IntlMessages id=\"components.student.formadd.classe\" />}\n                      value={objSubject.assignmentClassSubject.fk_id_class_v4}\n                      onChange={(event) =>\n                        handleChangeListSubjects(\n                          event,\n                          \"classId\",\n                          objSubject.id,\n                          index\n                        )\n                      }\n                      SelectProps={{}}\n                      margin=\"normal\"\n                      fullWidth\n                    >\n                      {classList.map((option) => (\n                        <MenuItem key={option.id} value={option.id}>\n                          {option.name}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </div>\n                </div>\n                {/* <div className=\"col-md-4\">\n                  <div className=\"form-group\">\n                    <TextField\n                      disabled={objSubject.sectionDisabled}\n                      id={`${index}`}\n                      name=\"section_id\"\n                      select\n                      label={\n                        <IntlMessages id=\"components.class.level.input.label.section\" />\n                      }\n                      value={objSubject.section_id}\n                      onChange={(event) =>\n                        handleChangeListSubjects(event, \"section_id\", index)\n                      }\n                      SelectProps={{}}\n                      margin=\"normal\"\n                      fullWidth\n                    >\n                      {getSectionFromLevel(\n                        this.props.classSections,\n                        objSubject.level_id\n                      ).map((option) => (\n                        <MenuItem key={option.id} value={option.id}>\n                          {option.name}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </div>\n                </div> */}\n\n                <div className=\"col-md-5\">\n                  <TextField\n                    required\n                    name=\"subject_id\"\n                    id={`${index}`}\n                    select\n                    label={\n                      <IntlMessages id=\"sidebar.components.lesson\" />\n                    }\n                    value={objSubject.assignmentClassSubject.fk_id_subject_v4}\n                    onChange={(event) =>\n                      handleChangeListSubjects(\n                        event,\n                        \"subject_id\",\n                        objSubject.id,\n                        index\n                      )\n                    }\n                    SelectProps={{}}\n                    margin=\"normal\"\n                    fullWidth\n                  >\n                    {subjects.map((subject) => (\n                      <MenuItem key={subject.id} value={subject.id}>\n                        {subject.name}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </div>\n\n                {index === values.listOfSubjects.length - 1 &&\n                values.addedListSubject.length === 0 ? (\n                  <div className=\"col-md-1\">\n                    <Fab\n                      size=\"small\"\n                      value={`${index}`}\n                      color=\"primary\"\n                      aria-label=\"Add\"\n                      onClick={() => addNewSubject(index + 1)}\n                    >\n                      <AddIcon />\n                    </Fab>\n                  </div>\n                ) : null}\n              </>\n            ))}\n            {values.added\n              ? values.addedListSubject.map((objSubject, index) => (\n                  <>\n                       <div className=\"col-md-6\" key={index}>\n                  <div className=\"form-group\">\n                    <TextField\n                      required\n                      id={`${index}`}\n                      name=\"classId\"\n                      select\n                      label={<IntlMessages id=\"todo.labels\" />}\n                      value={objSubject.classId}\n                      onChange={(event) =>\n                        handleChangeListSubjects(event, \"classId\", index)\n                      }\n                      SelectProps={{}}\n                      margin=\"normal\"\n                      fullWidth\n                    >\n                      {classesSubjects.map((option) => (\n                        <MenuItem key={option.id} value={option.id}>\n                          {option.name}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </div>\n                </div>\n\n\n\n                <div className=\"col-md-5\">\n                  <TextField\n                    required\n                    name=\"subject_id\"\n                    id={`${index}`}\n                    select\n                    label={\n                      <IntlMessages id=\"sidebar.components.lesson\" />\n                    }\n                    value={objSubject.subject_id}\n                    onChange={(event) =>\n                      handleChangeListSubjects(event, \"subject_id\", index)\n                    }\n                    SelectProps={{}}\n                    margin=\"normal\"\n                    fullWidth\n                  >\n                    {objSubject.subjects.map((item) => (\n                      <MenuItem key={item.subject.id} value={item.subject.id}>\n                        {item.subject.name}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </div>\n                  \n\n                    {index === values.addedListSubject.length - 1 ? (\n                      <div className=\"col-md-1\">\n                        <Fab\n                          size=\"small\"\n                          value={`${index}`}\n                          color=\"primary\"\n                          aria-label=\"Add\"\n                          onClick={() =>\n                            addNewSubject(values.listOfSubjects.length)\n                          }\n                        >\n                          <AddIcon />\n                        </Fab>\n                      </div>\n                    ) : null}\n                  </>\n                ))\n              : null}\n          </div>\n        </>\n      );\n    }\n    /////////////////////////////student////////////////////\n    if (values.role_id === 5) {\n      return (\n        <div>\n          {values.successStatus ? (\n            <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n              <span className=\"icon-addon alert-addon\">\n                <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n              </span>\n              <span className=\"d-inline-block\">\n                {<IntlMessages id=\"edit.user.message\" />}\n              </span>\n            </UncontrolledAlert>\n          ) : (\n            \"\"\n          )}\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <TextField\n                variant=\"outlined\"\n                required\n                name=\"level_id\"\n                id=\"level_id\"\n                select\n                label={<IntlMessages id=\"components.note.niveau\" />}\n                value={values.level_id}\n                onChange={handleChangestudentLevel(\"level_id\")}\n                SelectProps={{}}\n                margin=\"normal\"\n                fullWidth\n              >\n                {levelsbyestablishment.map((level) => (\n                  <MenuItem key={level.id} value={level.id}>\n                    {level.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n            <div className=\"col-md-6\">\n              <TextField\n                variant=\"outlined\"\n                required\n                disabled={values.Disable_studentsection}\n                name=\"section_id\"\n                id=\"section_id\"\n                select\n                label={\n                  <IntlMessages id=\"components.class.level.input.label.section\" />\n                }\n                value={values.section_id}\n                onChange={handleChangestudentSection(\"section_id\")}\n                SelectProps={{}}\n                margin=\"normal\"\n                fullWidth\n              >\n                {values.studentsectionByLevels.map((section) => (\n                  <MenuItem key={section.id} value={section.id}>\n                    {section.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <TextField\n                variant=\"outlined\"\n                required\n                name=\"class_id\"\n                id=\"class_id\"\n                select\n                label={<IntlMessages id=\"components.student.formadd.classe\" />}\n                value={values.class_id}\n                onChange={handleChangeClass(\"class_id\")}\n                SelectProps={{}}\n                margin=\"normal\"\n                fullWidth\n              >\n                {values.studentClassesByLevelSectionID.map((classe) => (\n                  <MenuItem key={classe.id} value={classe.id}>\n                    {classe.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n\n            <br />\n            <br />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}