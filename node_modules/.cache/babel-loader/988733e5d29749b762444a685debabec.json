{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport _ from \"lodash\";\nimport { FETECHED_ALL_VIRTUAL_CLASS, ADD_VIRTUAL_CLASS, EDIT_VIRTUAL_CLASS, DELETE_VIRTUAL_CLASS, HANDLE_REQUEST_CLOSE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE, ARCHIVED_VIRTUAL_CLASS } from \"../constants/ActionTypes\";\nimport baseUrl from \"../config/config\";\nimport axios from \"axios\";\nexport const addClassVirtual = itemClass => {\n  return dispatch => {\n    const classId = itemClass.classId;\n    const subjectId = itemClass.subjectId;\n    const profId = itemClass.professorId;\n    const courseId = itemClass.courseId;\n    let dataVirtualClass = {\n      date_virtual_class: itemClass.dateVirtualClass,\n      status: true,\n      virtual_class_name: itemClass.virtualClassName,\n      class_url: itemClass.classUrl,\n      password: itemClass.password,\n      start_time_class: itemClass.startTimeClass,\n      end_time_class: itemClass.endTimeClass,\n      virtual_class_status: \"programée\",\n      accessibility: itemClass.accessibility,\n      fk_id_course_v4: courseId,\n      publish: itemClass.publish,\n      description: itemClass.description\n    };\n    let apiEndpoint = `/virtual_class_v4?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, dataVirtualClass).then(response => {\n      if (response) {\n        let newObject = { ...response.data,\n          classeId: classId,\n          subjectId: subjectId,\n          profId: profId,\n          profName: itemClass.profName,\n          profSurname: itemClass.profSurname,\n          subjectName: itemClass.subjectName,\n          classeName: itemClass.classeName,\n          subjectColor: itemClass.subjectColor\n        };\n        dispatch({\n          type: ADD_VIRTUAL_CLASS,\n          payload: newObject\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};\nexport function getClassesVirtual(establishmentId, schoolYearId, roleId, roleUserId) {\n  return dispatch => {\n    let apiEndpoint = `/virtual_class_v4/fetchVirtualClassByRole/${establishmentId}/${schoolYearId}/${roleId}/${roleUserId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      if (response) {\n        let ClassesVirtualList = response.data.virtualClassData;\n        let ArchivedClassVirtualsList = [];\n        let VirtualClassUnarchived = [];\n        ClassesVirtualList.map(elementItem => {\n          if (elementItem.status === false) {\n            ArchivedClassVirtualsList.push(elementItem);\n          } else {\n            VirtualClassUnarchived.push(elementItem);\n          }\n        });\n        dispatch({\n          type: FETECHED_ALL_VIRTUAL_CLASS,\n          payload: VirtualClassUnarchived\n        });\n        dispatch({\n          type: ARCHIVED_VIRTUAL_CLASS,\n          payload: ArchivedClassVirtualsList\n        });\n      }\n    });\n  };\n}\nexport function getClassVirtualByEstablishmentId(establishmentId) {\n  return dispatch => {\n    let apiEndpoint = `/virtual_classes?access_token=${localStorage.token}&filter[where][establishment_id]=` + establishmentId;\n    classService.get(apiEndpoint).then(response => {\n      const list = response.data; // const ClassVirtualList = list.filter((element) => element.status);\n      // dispatch({\n      //   type: FETECHED_ALL_VIRTUAL_CLASS,\n      //   payload: ClassVirtualList,\n      // });\n    }).catch(err => {});\n  };\n}\nexport function deleteClassVirtual(item) {\n  return dispatch => {\n    axios.patch(`${baseUrl.baseUrl}/virtual_class_v4/` + item.id + `?access_token=${localStorage.token}`, {\n      status: false\n    }).then(response => {\n      let newObject = { ...response.data,\n        classeId: item.classId,\n        subjectId: item.subjectId,\n        profId: item.profId,\n        profName: item.profName,\n        profSurname: item.profSurname,\n        subjectName: item.subjectName,\n        classeName: item.classeName,\n        subjectColor: item.subjectColor\n      };\n      dispatch({\n        type: DELETE_VIRTUAL_CLASS,\n        payload: newObject\n      });\n    }).catch(function (error) {});\n  };\n}\nexport function editClassVirtual(itemClass) {\n  return dispatch => {\n    const classId = itemClass.classId;\n    const subjectId = itemClass.subjectId;\n    const profId = itemClass.professorId;\n    const courseId = itemClass.courseId;\n    let dataVirtualClass = {\n      date_virtual_class: itemClass.dateVirtualClass,\n      status: true,\n      virtual_class_name: itemClass.virtualClassName,\n      class_url: itemClass.classUrl,\n      password: itemClass.password,\n      start_time_class: itemClass.startTimeClass,\n      end_time_class: itemClass.endTimeClass,\n      virtual_class_status: \"programée\",\n      accessibility: itemClass.accessibility,\n      id: itemClass.id,\n      fk_id_course_v4: courseId,\n      publish: itemClass.publish,\n      description: itemClass.description\n    };\n    let apiEndpoint = `/virtual_class_v4/${itemClass.id}?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, dataVirtualClass).then(response => {\n      if (response) {\n        let newObject = { ...response.data,\n          classeId: classId,\n          subjectId: subjectId,\n          profId: profId,\n          profName: itemClass.profName,\n          profSurname: itemClass.profSurname,\n          subjectName: itemClass.subjectName,\n          classeName: itemClass.classeName,\n          subjectColor: itemClass.subjectColor\n        };\n        dispatch({\n          type: EDIT_VIRTUAL_CLASS,\n          payload: newObject\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La modification est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la modification merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n}\nexport const serviceAction = {\n  addClassVirtual,\n  getClassesVirtual,\n  deleteClassVirtual,\n  editClassVirtual,\n  getClassVirtualByEstablishmentId\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/actions/VirtualClassAction.js"],"names":["classService","_","FETECHED_ALL_VIRTUAL_CLASS","ADD_VIRTUAL_CLASS","EDIT_VIRTUAL_CLASS","DELETE_VIRTUAL_CLASS","HANDLE_REQUEST_CLOSE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","ARCHIVED_VIRTUAL_CLASS","baseUrl","axios","addClassVirtual","itemClass","dispatch","classId","subjectId","profId","professorId","courseId","dataVirtualClass","date_virtual_class","dateVirtualClass","status","virtual_class_name","virtualClassName","class_url","classUrl","password","start_time_class","startTimeClass","end_time_class","endTimeClass","virtual_class_status","accessibility","fk_id_course_v4","publish","description","apiEndpoint","localStorage","token","post","then","response","newObject","data","classeId","profName","profSurname","subjectName","classeName","subjectColor","type","payload","setTimeout","getClassesVirtual","establishmentId","schoolYearId","roleId","roleUserId","get","ClassesVirtualList","virtualClassData","ArchivedClassVirtualsList","VirtualClassUnarchived","map","elementItem","push","getClassVirtualByEstablishmentId","list","catch","err","deleteClassVirtual","item","patch","id","error","editClassVirtual","put","serviceAction"],"mappings":"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","sourcesContent":["import { classService } from \"../_services/class.service\";\nimport _ from \"lodash\";\nimport {\n  FETECHED_ALL_VIRTUAL_CLASS,\n  ADD_VIRTUAL_CLASS,\n  EDIT_VIRTUAL_CLASS,\n  DELETE_VIRTUAL_CLASS,\n  HANDLE_REQUEST_CLOSE,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n  ARCHIVED_VIRTUAL_CLASS,\n} from \"../constants/ActionTypes\";\nimport baseUrl from \"../config/config\";\nimport axios from \"axios\";\n\nexport const addClassVirtual = (itemClass) => {\n  return (dispatch) => {\n    const classId = itemClass.classId;\n    const subjectId = itemClass.subjectId;\n    const profId = itemClass.professorId;\n    const courseId = itemClass.courseId;\n\n    let dataVirtualClass = {\n      date_virtual_class: itemClass.dateVirtualClass,\n      status: true,\n      virtual_class_name: itemClass.virtualClassName,\n      class_url: itemClass.classUrl,\n      password: itemClass.password,\n      start_time_class: itemClass.startTimeClass,\n      end_time_class: itemClass.endTimeClass,\n      virtual_class_status: \"programée\",\n      accessibility: itemClass.accessibility,\n      fk_id_course_v4: courseId,\n      publish: itemClass.publish,\n      description: itemClass.description,\n    };\n\n    let apiEndpoint = `/virtual_class_v4?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, dataVirtualClass).then((response) => {\n      if (response) {\n        let newObject = {\n          ...response.data,\n          classeId: classId,\n          subjectId: subjectId,\n          profId: profId,\n          profName: itemClass.profName,\n          profSurname: itemClass.profSurname,\n          subjectName: itemClass.subjectName,\n          classeName: itemClass.classeName,\n          subjectColor: itemClass.subjectColor,\n        };\n        dispatch({ type: ADD_VIRTUAL_CLASS, payload: newObject });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectuée avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n\nexport function getClassesVirtual(\n  establishmentId,\n  schoolYearId,\n  roleId,\n  roleUserId\n) {\n  return (dispatch) => {\n    let apiEndpoint = `/virtual_class_v4/fetchVirtualClassByRole/${establishmentId}/${schoolYearId}/${roleId}/${roleUserId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then((response) => {\n      if (response) {\n        let ClassesVirtualList = response.data.virtualClassData;\n        let ArchivedClassVirtualsList = [];\n        let VirtualClassUnarchived = [];\n\n        ClassesVirtualList.map((elementItem) => {\n          if (elementItem.status === false) {\n            ArchivedClassVirtualsList.push(elementItem);\n          } else {\n            VirtualClassUnarchived.push(elementItem);\n          }\n        });\n\n        dispatch({\n          type: FETECHED_ALL_VIRTUAL_CLASS,\n          payload: VirtualClassUnarchived,\n        });\n        dispatch({\n          type: ARCHIVED_VIRTUAL_CLASS,\n          payload: ArchivedClassVirtualsList,\n        });\n      }\n    });\n  };\n}\n\n \n\nexport function getClassVirtualByEstablishmentId(establishmentId) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/virtual_classes?access_token=${localStorage.token}&filter[where][establishment_id]=` +\n      establishmentId;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        const list = response.data;\n        // const ClassVirtualList = list.filter((element) => element.status);\n\n        // dispatch({\n        //   type: FETECHED_ALL_VIRTUAL_CLASS,\n        //   payload: ClassVirtualList,\n        // });\n      })\n      .catch((err) => {});\n  };\n}\n\nexport function deleteClassVirtual(item) {\n  return (dispatch) => {\n    axios\n      .patch(\n        `${baseUrl.baseUrl}/virtual_class_v4/` +\n          item.id +\n          `?access_token=${localStorage.token}`,\n        {\n          status: false,\n        }\n      )\n      .then((response) => {\n        let newObject = {\n          ...response.data,\n          classeId: item.classId,\n          subjectId: item.subjectId,\n          profId: item.profId,\n          profName: item.profName,\n          profSurname: item.profSurname,\n          subjectName: item.subjectName,\n          classeName: item.classeName,\n          subjectColor: item.subjectColor,\n        };\n        dispatch({ type: DELETE_VIRTUAL_CLASS, payload: newObject });\n      })\n      .catch(function(error) {});\n  };\n}\n\nexport function editClassVirtual(itemClass) {\n  return (dispatch) => {\n    const classId = itemClass.classId;\n    const subjectId = itemClass.subjectId;\n    const profId = itemClass.professorId;\n    const courseId = itemClass.courseId;\n\n    let dataVirtualClass = {\n      date_virtual_class: itemClass.dateVirtualClass,\n      status: true,\n      virtual_class_name: itemClass.virtualClassName,\n      class_url: itemClass.classUrl,\n      password: itemClass.password,\n      start_time_class: itemClass.startTimeClass,\n      end_time_class: itemClass.endTimeClass,\n      virtual_class_status: \"programée\",\n      accessibility: itemClass.accessibility,\n      id: itemClass.id,\n      fk_id_course_v4: courseId,\n      publish: itemClass.publish,\n      description: itemClass.description,\n    };\n\n    let apiEndpoint = `/virtual_class_v4/${itemClass.id}?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, dataVirtualClass).then((response) => {\n      if (response) {\n        let newObject = {\n          ...response.data,\n          classeId: classId,\n          subjectId: subjectId,\n          profId: profId,\n          profName: itemClass.profName,\n          profSurname: itemClass.profSurname,\n          subjectName: itemClass.subjectName,\n          classeName: itemClass.classeName,\n          subjectColor: itemClass.subjectColor,\n        };\n        dispatch({ type: EDIT_VIRTUAL_CLASS, payload: newObject });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La modification est effectuée avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la modification merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n}\n\nexport const serviceAction = {\n  addClassVirtual,\n  getClassesVirtual,\n  deleteClassVirtual,\n  editClassVirtual,\n  getClassVirtualByEstablishmentId,\n};\n"]},"metadata":{},"sourceType":"module"}