{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/HealthMonitoring/HealthMonitoring.js\";\nimport React from 'react';\nimport IntlMessages from '../../../util/IntlMessages';\nimport ContainerHeader from '../../../components/ContainerHeader/index';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport AddHealthFile from './AddHealthFile';\nimport HealthFileList from './HealthFileList';\nimport { addFicheMedical } from '../../../actions/HealthAction';\nimport { getFicheMedicalByEstablishmentId } from '../../../actions/HealthAction';\nimport { connect } from 'react-redux';\nimport { getSectionFromLevel } from '../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from '../../../actions/classLevelAction';\nimport axios from 'axios';\nimport baseUrl from '../../../config/config';\nimport { getSections } from '../../../actions/sectionAction';\nimport { getLevels } from '../../../actions/classLevelAction';\nimport { getLevelsVirtualClass } from '../../../actions/classLevelAction';\nimport { getClassesByEstablishmentId } from '../../../actions/classeAction';\nimport { UncontrolledAlert } from 'reactstrap';\nimport Can from '../../../can';\nimport { RoleContext } from '../../../Context';\nimport Input from '@material-ui/icons/Input';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/moment';\nimport { subjectsByLevelBySection } from '../../../actions/subjectAction';\nimport { roleIdSuperAdmin } from '../../../config/config';\nimport { roleIdAdmin } from '../../../config/config';\nimport { roleIdProfessor } from '../../../config/config';\nimport { roleIdParent } from '../../../config/config';\nimport { roleIdStudent } from '../../../config/config';\nimport { roleIdSupervisor } from '../../../config/config';\nimport { roleIdDirector } from '../../../config/config';\n\nclass HealthMonitoring extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheck = event => {\n      var tab = this.state.checkedValues;\n      var test = this.state.checkedValues.findIndex(element => element == event.target.value);\n\n      if (test == -1) {\n        tab.push(parseInt(event.target.value, 10));\n        this.setState({\n          checkedValues: tab\n        });\n      } else {\n        tab.splice(test, 1);\n        this.setState({\n          checkedValues: tab\n        });\n      }\n    };\n\n    this.handleChangestudentLevel = name => event => {\n      if (event.target.value === '0') {\n        this.setState({\n          class_id: '',\n          level_id: ''\n        });\n      } else {\n        this.setState({\n          section_id: 0,\n          class_id: 0\n        });\n\n        if (event.target.value > 10) {\n          this.setState({\n            [name]: event.target.value\n          });\n          this.setState({\n            Disable_studentsection: false\n          });\n          var studentSectionbyLevel = getSectionFromLevel(this.props.classSections, event.target.value);\n          this.setState({\n            studentsectionByLevels: studentSectionbyLevel\n          });\n        } else {\n          this.setState({\n            level_id: event.target.value,\n            Disable_studentsection: true,\n            section_id: 0\n          });\n          const levelID = event.target.value;\n          var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.status);\n          this.setState({\n            studentClassesByLevelSectionID: studentfiltredClasses\n          });\n        }\n      }\n    };\n\n    this.handleChangestudentSection = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      const levelID = this.state.level_id;\n      const sectionID = event.target.value;\n      var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.section_id === sectionID && classe.status);\n      this.setState({\n        studentClassesByLevelSectionID: studentfiltredClasses\n      });\n    };\n\n    this.handleChangeClass = name => event => {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        axios.get(`${baseUrl.baseUrl}/students/fetchAllStudentsDataByClassID/` + event.target.value + `?access_token=${localStorage.token}`).then(res => {\n          this.setState({\n            studentByclassID: res.data.classData\n          });\n        });\n        this.setState({\n          establishment_id: this.props.userProfile.establishment_id\n        });\n      }\n\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeStudent = name => event => {\n      this.setState({\n        student_id: event.target.value\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.addHealthShowModal = () => {\n      this.setState({\n        addIsopen: true,\n        level_id: '',\n        section_id: '',\n        establishment_id: '',\n        class_id: '',\n        student_id: ''\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        addIsopen: false\n      });\n    };\n\n    this.onDrop = e => {\n      let file = e.target.files[0];\n      this.setState({\n        userPhotos: file,\n        inputText: file.name\n      });\n    };\n\n    this.addHealthFile = () => {\n      var data = {};\n      data.establishment_id = this.props.userProfile.establishment_id;\n      data.student_id = this.state.student_id;\n      data.class_id = this.state.class_id;\n      data.nom_doctor = this.state.nom_doctor;\n      data.prenom_doctor = this.state.prenom_doctor;\n      data.phone_doctor = parseInt(this.state.phone_doctor, 10);\n      data.blood_type = this.state.blood_type;\n      data.poids = parseInt(this.state.poids, 10);\n      data.hauteur = parseInt(this.state.hauteur, 10);\n      data.problems = this.state.checkedValues;\n      data.remarque = this.state.remarque;\n      data.files = '1.png';\n      data.status = true;\n      data.mail_doctor = this.state.mail_doctor;\n      this.props.addFicheMedical(data, this.state.userPhotos);\n      this.setState({\n        addIsopen: false,\n        level_id: '',\n        section_id: '',\n        class_id: '',\n        student_id: '',\n        blood_type: '',\n        poids: '',\n        hauteur: '',\n        prenom_doctor: '',\n        nom_doctor: '',\n        phone_doctor: '',\n        mail_doctor: '',\n        remarque: '',\n        userPhotos: null,\n        checkedBox: true,\n        inputText: '',\n        checkedValues: []\n      });\n    };\n\n    this.state = {\n      addIsopen: false,\n      level_id: '',\n      section_id: '',\n      establishment_id: '',\n      class_id: '',\n      student_id: '',\n      blood_type: '',\n      poids: '',\n      hauteur: '',\n      prenom_doctor: '',\n      nom_doctor: '',\n      phone_doctor: '',\n      mail_doctor: '',\n      remarque: '',\n      userPhotos: null,\n      checkedBox: true,\n      inputText: '',\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: [],\n      professorIdFilter: '',\n      professorClassesList: [],\n      professor_class_id: '',\n      selectedFilterDateProfessor: null,\n      studentByclassID: [],\n      student_subject_id: '',\n      selectedFilterDateStudent: null,\n      data: [{\n        id: 1,\n        name: 'Des yeux'\n      }, {\n        id: 2,\n        name: 'Coeur'\n      }, {\n        id: 3,\n        name: 'CUTANÉ'\n      }, {\n        id: 4,\n        name: 'Système respiratoire'\n      }, {\n        id: 5,\n        name: 'Des oreilles'\n      }, {\n        id: 6,\n        name: 'Tension'\n      }, {\n        id: 7,\n        name: 'Système musculo-squelettique'\n      }, {\n        id: 8,\n        name: 'Système respiratoire'\n      }, {\n        id: 9,\n        name: 'Système nerveux'\n      }],\n      checkedValues: [],\n      blood_group: [{\n        id: 1,\n        type: 'A+'\n      }, {\n        id: 2,\n        type: 'A-'\n      }, {\n        id: 3,\n        type: 'B+'\n      }, {\n        id: 4,\n        type: 'B-'\n      }, {\n        id: 5,\n        type: 'AB+'\n      }, {\n        id: 6,\n        type: 'AB-'\n      }, {\n        id: 7,\n        type: 'O+'\n      }, {\n        id: 8,\n        type: 'O-'\n      }]\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addHealthShowModal = this.addHealthShowModal.bind(this);\n    this.handleChangestudentLevel = this.handleChangestudentLevel.bind(this);\n    this.handleChangestudentSection = this.handleChangestudentSection.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.handleChangeStudent = this.handleChangeStudent.bind(this);\n    this.addHealthFile = this.addHealthFile.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.getSections(); // this.props.getLevels();\n\n    this.props.getLevelsVirtualClass();\n    this.props.getClassesByEstablishmentId(this.props.userProfile.establishment_id);\n    this.props.getFicheMedicalByEstablishmentId(this.props.userProfile.establishment_id);\n    axios.get(`${baseUrl.baseUrl}/establishments/` + this.props.userProfile.establishment_id + `?access_token=${localStorage.token}`).then(res => {\n      var levelsbyestablishment = getLevelListFromEstabType(this.props.classLevels, res.data.estab_type_id);\n      this.setState({\n        estabType: res.data.estab_type_id,\n        levelsbyestablishment: levelsbyestablishment\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ContainerHeader, {\n      match: this.props.match,\n      title: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"sidebar.components.health-monitiring\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 18\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }\n    }), this.props.successStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }\n    }, \" \", this.props.message, \" \")) : '', this.props.errorStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, \" \", this.props.message)) : '', /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-filter:visit\",\n      yes: () => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12  d-flex justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"user-filter-establishment:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-2 text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          className: \"mt-0\",\n          variant: \"outlined\",\n          required: true,\n          name: \"establishment_id\",\n          id: \"establishment_id\",\n          select: true,\n          label: /*#__PURE__*/React.createElement(IntlMessages, {\n            id: \"components.student.formadd.establishment\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 29\n            }\n          }) //  value={this.state.establishment_id}\n          // onChange={this.handleChangeEstablishment('establishment_id')}\n          ,\n          SelectProps: {},\n          margin: \"normal\",\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 text-left \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"level_id\",\n        name: \"level_id\",\n        variant: \"outlined\",\n        select: true,\n        value: this.state.level_id,\n        defaultValue: \" \",\n        onChange: this.handleChangestudentLevel('level_id'),\n        SelectProps: {},\n        helperText: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.class.level.input.label.level\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }\n        }),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        key: \"0\",\n        value: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"extraPages.all\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 25\n        }\n      })), this.state.levelsbyestablishment.map(level => /*#__PURE__*/React.createElement(MenuItem, {\n        key: level.id,\n        value: level.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 25\n        }\n      }, this.props.settings.languageId == 'tunisia' ? level.name_AR : this.props.settings.languageId == 'french' ? level.name_FR : level.name_EN)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 text-left \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"section_id\",\n        name: \"section_id\",\n        variant: \"outlined\",\n        select: true,\n        value: this.state.section_id,\n        onChange: this.handleChangestudentSection('section_id'),\n        disabled: this.state.Disable_studentsection,\n        SelectProps: {},\n        helperText: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.class.level.input.label.section\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 25\n          }\n        }),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 21\n        }\n      }, this.state.studentsectionByLevels.map(section => /*#__PURE__*/React.createElement(MenuItem, {\n        key: section.id,\n        value: section.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }\n      }, section.name)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 text-left \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"class_id\",\n        name: \"class_id\",\n        variant: \"outlined\",\n        select: true,\n        value: this.state.class_id,\n        onChange: this.handleChangeClass('class_id'),\n        SelectProps: {},\n        helperText: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"ticket.name.class\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 35\n          }\n        }),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 21\n        }\n      }, this.state.studentClassesByLevelSectionID.map(classe => /*#__PURE__*/React.createElement(MenuItem, {\n        key: classe.id,\n        value: classe.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 27\n        }\n      }, classe.name)))), this.props.userProfile.role_id === roleIdSuperAdmin || this.props.userProfile.role_id === roleIdAdmin || this.props.userProfile.role_id === roleIdDirector ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-2 text-right \",\n        style: {\n          marginBottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        size: \"small\",\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        onClick: this.addHealthShowModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 25\n        }\n      }))) : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(HealthFileList, {\n      ficheMedicalList: this.props.ficheMedicalList,\n      class_id: this.state.class_id,\n      levelsbyestablishment: this.state.levelsbyestablishment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AddHealthFile, {\n      values: this.state,\n      addIsopen: this.state.addIsopen,\n      handleCancel: this.handleCancel,\n      handleChange: this.handleChange,\n      handleChangestudentSection: this.handleChangestudentSection,\n      handleChangestudentLevel: this.handleChangestudentLevel,\n      handleChangeClass: this.handleChangeClass,\n      onDrop: this.onDrop,\n      handleChangeStudent: this.handleChangeStudent,\n      addHealthFile: this.addHealthFile,\n      handleCheck: this.handleCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    classSections: state.classSections.remoteSections,\n    classes: state.classes,\n    classVirtual: state.classVirtualReducer.remoteClassVirtual,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    settings: state.settings.locale,\n    ficheMedicalList: state.HealthReducer.remoteFicheMedical\n  };\n}\n\nexport default connect(mapStateToProps, {\n  addFicheMedical,\n  getSections,\n  getLevels,\n  getLevelsVirtualClass,\n  getClassesByEstablishmentId,\n  getFicheMedicalByEstablishmentId\n})(HealthMonitoring);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/HealthMonitoring/HealthMonitoring.js"],"names":["React","IntlMessages","ContainerHeader","Fab","AddIcon","AddHealthFile","HealthFileList","addFicheMedical","getFicheMedicalByEstablishmentId","connect","getSectionFromLevel","getLevelListFromEstabType","axios","baseUrl","getSections","getLevels","getLevelsVirtualClass","getClassesByEstablishmentId","UncontrolledAlert","Can","RoleContext","Input","TextField","MenuItem","KeyboardDatePicker","MuiPickersUtilsProvider","DateFnsUtils","subjectsByLevelBySection","roleIdSuperAdmin","roleIdAdmin","roleIdProfessor","roleIdParent","roleIdStudent","roleIdSupervisor","roleIdDirector","HealthMonitoring","Component","constructor","props","handleCheck","event","tab","state","checkedValues","test","findIndex","element","target","value","push","parseInt","setState","splice","handleChangestudentLevel","name","class_id","level_id","section_id","Disable_studentsection","studentSectionbyLevel","classSections","studentsectionByLevels","levelID","studentfiltredClasses","classes","filter","classe","status","studentClassesByLevelSectionID","handleChangestudentSection","sectionID","handleChangeClass","userProfile","role_id","get","localStorage","token","then","res","studentByclassID","data","classData","establishment_id","handleChangeStudent","student_id","handleChange","addHealthShowModal","addIsopen","handleCancel","onDrop","e","file","files","userPhotos","inputText","addHealthFile","nom_doctor","prenom_doctor","phone_doctor","blood_type","poids","hauteur","problems","remarque","mail_doctor","checkedBox","levelsbyestablishment","subjectList","establishmentProfessor","professorIdFilter","professorClassesList","professor_class_id","selectedFilterDateProfessor","student_subject_id","selectedFilterDateStudent","id","blood_group","type","bind","componentWillMount","classLevels","estab_type_id","estabType","render","match","successStatus","message","errorStatus","role","map","level","settings","languageId","name_AR","name_FR","name_EN","section","marginBottom","ficheMedicalList","mapStateToProps","auth","ClassLevels","remoteLevels","remoteSections","classVirtual","classVirtualReducer","remoteClassVirtual","alert","success","error","locale","HealthReducer","remoteFicheMedical"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IntlMessages from '../../../util/IntlMessages';\nimport ContainerHeader from '../../../components/ContainerHeader/index';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport AddHealthFile from './AddHealthFile';\nimport HealthFileList from './HealthFileList';\nimport { addFicheMedical } from '../../../actions/HealthAction';\nimport { getFicheMedicalByEstablishmentId } from '../../../actions/HealthAction';\nimport { connect } from 'react-redux';\nimport { getSectionFromLevel } from '../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from '../../../actions/classLevelAction';\nimport axios from 'axios';\nimport baseUrl from '../../../config/config';\n\nimport { getSections } from '../../../actions/sectionAction';\nimport { getLevels } from '../../../actions/classLevelAction';\nimport { getLevelsVirtualClass } from '../../../actions/classLevelAction';\nimport { getClassesByEstablishmentId } from '../../../actions/classeAction';\nimport { UncontrolledAlert } from 'reactstrap';\nimport Can from '../../../can';\nimport { RoleContext } from '../../../Context';\nimport Input from '@material-ui/icons/Input';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/moment';\nimport { subjectsByLevelBySection } from '../../../actions/subjectAction';\n\nimport { roleIdSuperAdmin } from '../../../config/config';\nimport { roleIdAdmin } from '../../../config/config';\nimport { roleIdProfessor } from '../../../config/config';\nimport { roleIdParent } from '../../../config/config';\nimport { roleIdStudent } from '../../../config/config';\nimport { roleIdSupervisor } from '../../../config/config';\nimport { roleIdDirector } from '../../../config/config';\nclass HealthMonitoring extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      addIsopen: false,\n      level_id: '',\n      section_id: '',\n      establishment_id: '',\n      class_id: '',\n      student_id: '',\n      blood_type: '',\n      poids: '',\n      hauteur: '',\n      prenom_doctor: '',\n      nom_doctor: '',\n      phone_doctor: '',\n      mail_doctor: '',\n      remarque: '',\n      userPhotos: null,\n      checkedBox: true,\n      inputText: '',\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: [],\n      professorIdFilter: '',\n      professorClassesList: [],\n      professor_class_id: '',\n      selectedFilterDateProfessor: null,\n      studentByclassID: [],\n\n      student_subject_id: '',\n      selectedFilterDateStudent: null,\n      data: [\n        {\n          id: 1,\n          name: 'Des yeux',\n        },\n        {\n          id: 2,\n          name: 'Coeur',\n        },\n        {\n          id: 3,\n          name: 'CUTANÉ',\n        },\n        {\n          id: 4,\n          name: 'Système respiratoire',\n        },\n        {\n          id: 5,\n          name: 'Des oreilles',\n        },\n        {\n          id: 6,\n          name: 'Tension',\n        },\n        {\n          id: 7,\n          name: 'Système musculo-squelettique',\n        },\n        {\n          id: 8,\n          name: 'Système respiratoire',\n        },\n        {\n          id: 9,\n          name: 'Système nerveux',\n        },\n      ],\n      checkedValues: [],\n      blood_group: [\n        {\n          id: 1,\n          type: 'A+',\n        },\n        {\n          id: 2,\n          type: 'A-',\n        },\n        {\n          id: 3,\n          type: 'B+',\n        },\n        {\n          id: 4,\n          type: 'B-',\n        },\n        {\n          id: 5,\n          type: 'AB+',\n        },\n        {\n          id: 6,\n          type: 'AB-',\n        },\n        {\n          id: 7,\n          type: 'O+',\n        },\n        {\n          id: 8,\n          type: 'O-',\n        },\n      ],\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addHealthShowModal = this.addHealthShowModal.bind(this);\n    this.handleChangestudentLevel = this.handleChangestudentLevel.bind(this);\n    this.handleChangestudentSection = this.handleChangestudentSection.bind(\n      this\n    );\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.handleChangeStudent = this.handleChangeStudent.bind(this);\n    this.addHealthFile = this.addHealthFile.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n  }\n\n  handleCheck = (event) => {\n    var tab = this.state.checkedValues;\n    var test = this.state.checkedValues.findIndex(\n      (element) => element == event.target.value\n    );\n    if (test == -1) {\n      tab.push(parseInt(event.target.value, 10));\n      this.setState({ checkedValues: tab });\n    } else {\n      tab.splice(test, 1);\n      this.setState({ checkedValues: tab });\n    }\n  };\n  handleChangestudentLevel = (name) => (event) => {\n    if (event.target.value === '0') {\n      this.setState({\n        class_id: '',\n        level_id: '',\n      });\n    } else {\n      this.setState({ section_id: 0, class_id: 0 });\n      if (event.target.value > 10) {\n        this.setState({ [name]: event.target.value });\n        this.setState({ Disable_studentsection: false });\n        var studentSectionbyLevel = getSectionFromLevel(\n          this.props.classSections,\n          event.target.value\n        );\n        this.setState({ studentsectionByLevels: studentSectionbyLevel });\n      } else {\n        this.setState({\n          level_id: event.target.value,\n          Disable_studentsection: true,\n          section_id: 0,\n        });\n        const levelID = event.target.value;\n        var studentfiltredClasses = this.props.classes.filter(\n          (classe) => classe.level_id === levelID && classe.status\n        );\n        this.setState({\n          studentClassesByLevelSectionID: studentfiltredClasses,\n        });\n      }\n    }\n  };\n\n  handleChangestudentSection = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    const levelID = this.state.level_id;\n    const sectionID = event.target.value;\n    var studentfiltredClasses = this.props.classes.filter(\n      (classe) =>\n        classe.level_id === levelID &&\n        classe.section_id === sectionID &&\n        classe.status\n    );\n    this.setState({ studentClassesByLevelSectionID: studentfiltredClasses });\n  };\n  handleChangeClass = (name) => (event) => {\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      axios\n        .get(\n          `${baseUrl.baseUrl}/students/fetchAllStudentsDataByClassID/` +\n            event.target.value +\n            `?access_token=${localStorage.token}`\n        )\n        .then((res) => {\n          this.setState({\n            studentByclassID: res.data.classData,\n          });\n        });\n      this.setState({\n        establishment_id: this.props.userProfile.establishment_id,\n      });\n    }\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChangeStudent = (name) => (event) => {\n    this.setState({\n      student_id: event.target.value,\n    });\n  };\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n  addHealthShowModal = () => {\n    this.setState({\n      addIsopen: true,\n      level_id: '',\n      section_id: '',\n      establishment_id: '',\n      class_id: '',\n      student_id: '',\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      addIsopen: false,\n    });\n  };\n  onDrop = (e) => {\n    let file = e.target.files[0];\n    this.setState({ userPhotos: file, inputText: file.name });\n  };\n  addHealthFile = () => {\n    var data = {};\n    data.establishment_id = this.props.userProfile.establishment_id;\n    data.student_id = this.state.student_id;\n    data.class_id = this.state.class_id;\n    data.nom_doctor = this.state.nom_doctor;\n    data.prenom_doctor = this.state.prenom_doctor;\n    data.phone_doctor = parseInt(this.state.phone_doctor, 10);\n    data.blood_type = this.state.blood_type;\n    data.poids = parseInt(this.state.poids, 10);\n    data.hauteur = parseInt(this.state.hauteur, 10);\n    data.problems = this.state.checkedValues;\n    data.remarque = this.state.remarque;\n    data.files = '1.png';\n    data.status = true;\n    data.mail_doctor = this.state.mail_doctor;\n\n    this.props.addFicheMedical(data, this.state.userPhotos);\n\n    this.setState({\n      addIsopen: false,\n      level_id: '',\n      section_id: '',\n      class_id: '',\n      student_id: '',\n      blood_type: '',\n      poids: '',\n      hauteur: '',\n      prenom_doctor: '',\n      nom_doctor: '',\n      phone_doctor: '',\n      mail_doctor: '',\n      remarque: '',\n      userPhotos: null,\n      checkedBox: true,\n      inputText: '',\n      checkedValues: [],\n    });\n  };\n\n  componentWillMount() {\n    this.props.getSections();\n    // this.props.getLevels();\n    this.props.getLevelsVirtualClass();\n    this.props.getClassesByEstablishmentId(\n      this.props.userProfile.establishment_id\n    );\n    this.props.getFicheMedicalByEstablishmentId(\n      this.props.userProfile.establishment_id\n    );\n\n    axios\n      .get(\n        `${baseUrl.baseUrl}/establishments/` +\n          this.props.userProfile.establishment_id +\n          `?access_token=${localStorage.token}`\n      )\n      .then((res) => {\n        var levelsbyestablishment = getLevelListFromEstabType(\n          this.props.classLevels,\n          res.data.estab_type_id\n        );\n        this.setState({\n          estabType: res.data.estab_type_id,\n          levelsbyestablishment: levelsbyestablishment,\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"app-wrapper\">\n        <ContainerHeader\n          match={this.props.match}\n          title={<IntlMessages id=\"sidebar.components.health-monitiring\" />}\n        />\n        {this.props.successStatus ? (\n          <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\"> {this.props.message} </span>\n          </UncontrolledAlert>\n        ) : (\n          ''\n        )}\n        {this.props.errorStatus ? (\n          <UncontrolledAlert className=\"alert-addon-card bg-danger bg-danger text-white shadow-lg\">\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\"> {this.props.message}</span>\n          </UncontrolledAlert>\n        ) : (\n          ''\n        )}\n        <br />\n\n        <RoleContext.Consumer>\n          {({ role }) => (\n            <Can\n              role={role}\n              perform=\"user-filter:visit\"\n              yes={() => (\n                <div className=\"col-md-12  d-flex justify-content-between\">\n                  <Can\n                    role={role}\n                    perform=\"user-filter-establishment:visit\"\n                    yes={() => (\n                      <div className=\"col-md-2 text-left\">\n                        <TextField\n                          className=\"mt-0\"\n                          variant=\"outlined\"\n                          required\n                          name=\"establishment_id\"\n                          id=\"establishment_id\"\n                          select\n                          label={\n                            <IntlMessages id=\"components.student.formadd.establishment\" />\n                          }\n                          //  value={this.state.establishment_id}\n                          // onChange={this.handleChangeEstablishment('establishment_id')}\n                          SelectProps={{}}\n                          margin=\"normal\"\n                          fullWidth\n                        >\n                          {/* {this.state.establishments.map(establishment => (\n                            <MenuItem key={establishment.id} value={establishment.id}>\n                              {this.props.settings == \"tunisia\" ? establishment.ar_name : establishment.name}\n                            </MenuItem>\n                          ))} */}\n                        </TextField>\n                      </div>\n                    )}\n                  />\n                  <div className=\"col-md-3 text-left \">\n                    <TextField\n                      id=\"level_id\"\n                      name=\"level_id\"\n                      variant=\"outlined\"\n                      select\n                      value={this.state.level_id}\n                      defaultValue=\" \"\n                      onChange={this.handleChangestudentLevel('level_id')}\n                      SelectProps={{}}\n                      helperText={\n                        <IntlMessages id=\"components.class.level.input.label.level\" />\n                      }\n                      margin=\"normal\"\n                      fullWidth\n                    >\n                      <MenuItem key=\"0\" value=\"0\">\n                        <IntlMessages id=\"extraPages.all\" />\n                      </MenuItem>\n                      {this.state.levelsbyestablishment.map((level) => (\n                        <MenuItem key={level.id} value={level.id}>\n                          {this.props.settings.languageId == 'tunisia'\n                            ? level.name_AR\n                            : this.props.settings.languageId == 'french'\n                            ? level.name_FR\n                            : level.name_EN}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </div>\n                  <div className=\"col-md-3 text-left \">\n                    <TextField\n                      id=\"section_id\"\n                      name=\"section_id\"\n                      variant=\"outlined\"\n                      select\n                      value={this.state.section_id}\n                      onChange={this.handleChangestudentSection('section_id')}\n                      disabled={this.state.Disable_studentsection}\n                      SelectProps={{}}\n                      helperText={\n                        <IntlMessages id=\"components.class.level.input.label.section\" />\n                      }\n                      margin=\"normal\"\n                      fullWidth\n                    >\n                      {this.state.studentsectionByLevels.map((section) => (\n                        <MenuItem key={section.id} value={section.id}>\n                          {section.name}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </div>\n                  <div className=\"col-md-3 text-left \">\n                    <TextField\n                      id=\"class_id\"\n                      name=\"class_id\"\n                      variant=\"outlined\"\n                      select\n                      value={this.state.class_id}\n                      onChange={this.handleChangeClass('class_id')}\n                      SelectProps={{}}\n                      helperText={<IntlMessages id=\"ticket.name.class\" />}\n                      margin=\"normal\"\n                      fullWidth\n                    >\n                      {this.state.studentClassesByLevelSectionID.map(\n                        (classe) => (\n                          <MenuItem key={classe.id} value={classe.id}>\n                            {classe.name}\n                          </MenuItem>\n                        )\n                      )}\n                    </TextField>\n                  </div>\n                  {this.props.userProfile.role_id === roleIdSuperAdmin ||\n                  this.props.userProfile.role_id === roleIdAdmin ||\n                  this.props.userProfile.role_id === roleIdDirector ? (\n                    <div\n                      className=\"col-md-2 text-right \"\n                      style={{ marginBottom: 20 }}\n                    >\n                      <Fab\n                        size=\"small\"\n                        color=\"primary\"\n                        aria-label=\"Add\"\n                        onClick={this.addHealthShowModal}\n                      >\n                        <AddIcon />\n                      </Fab>\n                    </div>\n                  ) : (\n                    ''\n                  )}\n                </div>\n              )}\n            />\n          )}\n        </RoleContext.Consumer>\n\n        {\n          <HealthFileList\n            ficheMedicalList={this.props.ficheMedicalList}\n            class_id={this.state.class_id}\n            levelsbyestablishment={this.state.levelsbyestablishment}\n          />\n        }\n\n        <AddHealthFile\n          values={this.state}\n          addIsopen={this.state.addIsopen}\n          handleCancel={this.handleCancel}\n          handleChange={this.handleChange}\n          handleChangestudentSection={this.handleChangestudentSection}\n          handleChangestudentLevel={this.handleChangestudentLevel}\n          handleChangeClass={this.handleChangeClass}\n          onDrop={this.onDrop}\n          handleChangeStudent={this.handleChangeStudent}\n          addHealthFile={this.addHealthFile}\n          handleCheck={this.handleCheck}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    classSections: state.classSections.remoteSections,\n    classes: state.classes,\n    classVirtual: state.classVirtualReducer.remoteClassVirtual,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    settings: state.settings.locale,\n    ficheMedicalList: state.HealthReducer.remoteFicheMedical,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    addFicheMedical,\n    getSections,\n    getLevels,\n    getLevelsVirtualClass,\n    getClassesByEstablishmentId,\n    getFicheMedicalByEstablishmentId,\n  }\n)(HealthMonitoring);\n"]},"metadata":{},"sourceType":"module"}