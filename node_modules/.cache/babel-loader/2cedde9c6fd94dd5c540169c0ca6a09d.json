{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Dashboard/DashboradStudent/TableNotes.js\";\nimport React from 'react'; // import MaterialTable from 'material-table';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { forwardRef } from 'react';\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 37\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 39\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 39\n    }\n  }))),\n  Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 40\n    }\n  }))),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 45\n    }\n  }))),\n  Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 38\n    }\n  }))),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 40\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 40\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 43\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 42\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 42\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 46\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 45\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 40\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 43\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 49\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 44\n    }\n  })))\n};\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: \"Type d'examen\",\n      field: 'typeExamen'\n    }, {\n      title: 'Matiére',\n      field: 'nomMatiére'\n    }, {\n      title: 'Note',\n      field: 'note',\n      type: 'numeric'\n    }, {\n      title: 'Coefficient',\n      field: 'coefficient',\n      type: 'numeric'\n    }, {\n      title: 'Date',\n      field: 'date',\n      type: 'date'\n    }],\n    data: [{\n      typeExamen: 'Devoir controle',\n      nomMatiére: 'Mathématique',\n      note: 15.25,\n      coefficient: 2,\n      date: \"02/01/2020\"\n    }, {\n      typeExamen: 'Devoir Synthése',\n      nomMatiére: 'Science',\n      note: 19,\n      coefficient: 1,\n      date: \"15/03/2020\"\n    }, {\n      typeExamen: 'Devoir controle',\n      nomMatiére: 'Physique',\n      note: 18,\n      coefficient: 2,\n      date: \"10/02/2020\"\n    }, {\n      typeExamen: 'Devoir Synthése',\n      nomMatiére: 'Histoire',\n      note: 13.5,\n      coefficient: 1,\n      date: \"18/03/2020\"\n    }]\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, \"choco\") // <MaterialTable\n  //     icons={tableIcons}\n  //     title=\"Tous les résultats d'examens\"\n  //     columns={state.columns}\n  //     data={state.data}\n  // editable={{\n  //     onRowAdd: (newData) =>\n  //         new Promise((resolve) => {\n  //             setTimeout(() => {\n  //                 resolve();\n  //                 setState((prevState) => {\n  //                     const data = [...prevState.data];\n  //                     data.push(newData);\n  //                     return { ...prevState, data };\n  //                 });\n  //             }, 600);\n  //         }),\n  //     onRowUpdate: (newData, oldData) =>\n  //         new Promise((resolve) => {\n  //             setTimeout(() => {\n  //                 resolve();\n  //                 if (oldData) {\n  //                     setState((prevState) => {\n  //                         const data = [...prevState.data];\n  //                         data[data.indexOf(oldData)] = newData;\n  //                         return { ...prevState, data };\n  //                     });\n  //                 }\n  //             }, 600);\n  //         }),\n  //     onRowDelete: (oldData) =>\n  //         new Promise((resolve) => {\n  //             setTimeout(() => {\n  //                 resolve();\n  //                 setState((prevState) => {\n  //                     const data = [...prevState.data];\n  //                     data.splice(data.indexOf(oldData), 1);\n  //                     return { ...prevState, data };\n  //                 });\n  //             }, 600);\n  //         }),\n  // }}\n  // />\n  ;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Dashboard/DashboradStudent/TableNotes.js"],"names":["React","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","forwardRef","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","MaterialTableDemo","state","setState","useState","columns","title","field","type","data","typeExamen","nomMatiére","note","coefficient","date"],"mappings":"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","sourcesContent":["import React from 'react';\n// import MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { forwardRef } from 'react';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nexport default function MaterialTableDemo() {\n    const [state, setState] = React.useState({\n        columns: [\n            { title: \"Type d'examen\" , field: 'typeExamen' },\n            { title: 'Matiére', field: 'nomMatiére' },\n            { title: 'Note', field: 'note', type: 'numeric' },\n            { title: 'Coefficient', field: 'coefficient', type: 'numeric' },\n            { title: 'Date', field: 'date', type: 'date' },\n        ],\n        data: [\n            { typeExamen: 'Devoir controle', nomMatiére: 'Mathématique', note: 15.25, coefficient: 2,date:\"02/01/2020\" },\n            { typeExamen: 'Devoir Synthése', nomMatiére: 'Science', note: 19, coefficient: 1,date:\"15/03/2020\" },\n            { typeExamen: 'Devoir controle', nomMatiére: 'Physique', note: 18, coefficient: 2,date:\"10/02/2020\" },\n            { typeExamen: 'Devoir Synthése', nomMatiére: 'Histoire', note: 13.5, coefficient: 1,date:\"18/03/2020\" },\n\n        ],\n    });\n\n    return (\n    <div>choco</div>\n        // <MaterialTable\n        //     icons={tableIcons}\n        //     title=\"Tous les résultats d'examens\"\n        //     columns={state.columns}\n        //     data={state.data}\n            // editable={{\n            //     onRowAdd: (newData) =>\n            //         new Promise((resolve) => {\n            //             setTimeout(() => {\n            //                 resolve();\n            //                 setState((prevState) => {\n            //                     const data = [...prevState.data];\n            //                     data.push(newData);\n            //                     return { ...prevState, data };\n            //                 });\n            //             }, 600);\n            //         }),\n            //     onRowUpdate: (newData, oldData) =>\n            //         new Promise((resolve) => {\n            //             setTimeout(() => {\n            //                 resolve();\n            //                 if (oldData) {\n            //                     setState((prevState) => {\n            //                         const data = [...prevState.data];\n            //                         data[data.indexOf(oldData)] = newData;\n            //                         return { ...prevState, data };\n            //                     });\n            //                 }\n            //             }, 600);\n            //         }),\n            //     onRowDelete: (oldData) =>\n            //         new Promise((resolve) => {\n            //             setTimeout(() => {\n            //                 resolve();\n            //                 setState((prevState) => {\n            //                     const data = [...prevState.data];\n            //                     data.splice(data.indexOf(oldData), 1);\n            //                     return { ...prevState, data };\n            //                 });\n            //             }, 600);\n            //         }),\n            // }}\n        // />\n    );\n}"]},"metadata":{},"sourceType":"module"}