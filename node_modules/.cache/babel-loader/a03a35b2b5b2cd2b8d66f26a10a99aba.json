{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js\";\nimport React from \"react\";\nimport IconWithTextCard from \"../../../CommonComponents/IconWithTextCard\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport HomeworkInProgress from \"./HomeworkInProgress\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport RemoveSharpIcon from \"@material-ui/icons/RemoveSharp\";\nimport { connect } from \"react-redux\";\nimport AddHomework from \"./AddHomework\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport { classService } from \"../../../../../_services/class.service\";\nimport HomeworkList from \"./HomeworkList\";\nimport _ from \"lodash\";\nimport { addNewHomework } from \"../../../../../actions/HomeworkAction\";\nimport { RoleContext } from \"../../../../../Context\";\nimport Can from \"../../../../../can\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeClassList = selectedOption => {\n      this.setState({\n        classesId: [selectedOption.value]\n      });\n    };\n\n    this.handleChangeClass = name => event => {\n      if (_.isEmpty(this.state.classes)) {\n        this.setState({\n          errorClass: true\n        });\n      } else {\n        this.setState({\n          [name]: event.target.value\n        });\n        this.setState({\n          errorClass: false\n        });\n\n        if (event.target.value === \"allClasses\") {\n          let classesId = _.map(this.state.classes, \"id\");\n\n          this.setState({\n            classesId\n          });\n        } else {\n          this.setState({\n            classesList: this.state.classes\n          });\n        }\n      }\n    };\n\n    this.handleChangePublicationDate = date => {\n      this.setState({\n        publicationDate: date\n      });\n    };\n\n    this.handleChangePostTime = time => {\n      this.setState({\n        postTime: time._d\n      });\n    };\n\n    this.handleChangeSubject = selectedOption => {\n      this.setState({\n        subjectId: selectedOption.value,\n        subjectColor: selectedOption.color,\n        errorClass: false\n      });\n      let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include][class]`;\n      classService.get(apiEndpoint).then(response => {\n        if (response) {\n          let newList = response.data.map(element => {\n            let object = {};\n            object.label = element.class.name;\n            object.id = element.fk_id_class_v4;\n            object.value = element.fk_id_class_v4;\n            return object;\n          });\n          this.setState({\n            classes: newList\n          });\n        }\n      });\n    };\n\n    this.handleChangeHomeworkType = selectedOption => {\n      this.setState({\n        homeworkType: selectedOption.value\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      isOpenAddModal: false,\n      nameFile: \"\",\n      HomeworkTypes: [{\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.book.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 18\n          }\n        }),\n        value: \"book\",\n        id: 1\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.series.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 18\n          }\n        }),\n        value: \"serie\",\n        id: 2\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.other.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 18\n          }\n        }),\n        value: \"other\",\n        id: 3\n      }],\n      homeworkType: \"\",\n      subjectId: null,\n      subjectColor: \"\",\n      description: \"\",\n      courseUrl: \"\",\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: \"\",\n      classesId: [],\n      errorClass: false,\n      classesList: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.handleChangePublicationDate = this.handleChangePublicationDate.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.addNewHomework = this.addNewHomework.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n  }\n\n  cancelModal() {\n    this.setState({\n      isOpenAddModal: false,\n      nameFile: \"\",\n      homeworkType: \"\",\n      subjectId: null,\n      subjectColor: \"\",\n      description: \"\",\n      courseUrl: \"\",\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: \"\",\n      classesId: [],\n      errorClass: false,\n      classesList: []\n    });\n  }\n\n  addNewHomework(e) {\n    e.preventDefault();\n\n    if (this.state.subjectId === null) {\n      this.setState({\n        errorClass: true\n      });\n    } else {\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType = this.state.homeworkType;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      this.props.dispatch(addNewHomework(dataHomework, this.state.homeworkFiles));\n      this.cancelModal();\n    }\n  }\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter(element => element != filename);\n    let homeworkFiles = this.state.homeworkFiles.filter(element => element.name != filename);\n    this.setState({\n      nameFiles,\n      homeworkFiles\n    });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map(element => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({\n        homeworkFiles: oldFiles,\n        nameFiles\n      });\n    } else {\n      this.setState({\n        messageAlerte: \"Vous avez dÃ©passer 5 fichiers\",\n        alerteStatus: true\n      });\n      setTimeout(() => {\n        this.setState({\n          messageAlerte: \"\",\n          alerteStatus: false\n        });\n      }, 4000);\n    }\n  }\n\n  openAddModal() {\n    this.setState({\n      isOpenAddModal: !this.state.isOpenAddModal\n    });\n  }\n\n  UNSAFE_componentWillMount() {\n    let subjects = createListSubject(this.props.subjects);\n    this.setState({\n      subjects\n    });\n  }\n\n  componentDidUpdate(previouProps) {\n    if (previouProps.subjects !== this.props.subjects) {\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({\n        subjects\n      });\n    }\n  }\n\n  render() {\n    let detailCards = [{\n      cardColor: \"primary\",\n      imageIcon: require(\"../../../../../assets/images/dashboard/teams-icon.png\"),\n      // title: this.props.virtualClasses.length,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `message.Numbers.of.students`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: \"secondary\",\n      imageIcon: require(\"../../../../../assets/images/dashboard/tasks-icon.png\"),\n      // title: this.state.prog,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.file`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: \"info\",\n      imageIcon: require(\"../../../../../assets/images/dashboard/project-icon.png\"),\n      // title: this.state.encours,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.uncorrected`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: \"success\",\n      imageIcon: require(\"../../../../../assets/images/dashboard/files-icon.png\"),\n      // title: this.state.encours,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.educational.files`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 19\n        }\n      })\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper col-lg-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md- col-sm-12  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }, detailCards.map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconWithTextCard, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }, this.state.alerteStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, \" \", this.state.messageAlerte, \" \")), this.props.errorStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger   text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \")), this.props.successStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-auto \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(HomeworkInProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      size: \"small\",\n      color: \"secondary\",\n      \"aria-label\": \"Add\",\n      onClick: this.openAddModal.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }, this.state.isOpenAddModal ? /*#__PURE__*/React.createElement(RemoveSharpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2\",\n      style: {\n        fontFamily: \"Roboto\",\n        fontSize: \"17px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"modal.addToDo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-5 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      size: \"small\",\n      \"aria-label\": \"Add\",\n      style: {\n        backgroundColor: \"#ffbb33\",\n        color: \"#ffffff\"\n      } // onClick={this.props.openAddModal}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2\",\n      style: {\n        fontFamily: \"Roboto\",\n        fontSize: \"17px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"icon.archives\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }\n    })))), this.state.isOpenAddModal && /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AddHomework, {\n      values: this.state,\n      handleChange: this.handleChange,\n      handleChangeHomeworkType: this.handleChangeHomeworkType,\n      subjects: this.state.subjects,\n      handleChangeSubject: this.handleChangeSubject,\n      attachFile: this.attachFile,\n      deleteFile: this.deleteFile,\n      handleChangePostTime: this.handleChangePostTime,\n      handleChangePublicationDate: this.handleChangePublicationDate,\n      handleChangeClass: this.handleChangeClass,\n      handleChangeClassList: this.handleChangeClassList,\n      addNewHomework: this.addNewHomework,\n      cancelModal: this.cancelModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"add-service\",\n      yes: () => /*#__PURE__*/React.createElement(\"div\", {\n        class: \"d-flex flex-wrap flex-row bd-highlight mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"idClasse\",\n        name: \"idClasse\",\n        select: true // value={this.state.filterClassId}\n        // onChange={this.handleChangeFilter('filterClassId')}\n        ,\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.note.class`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 34\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 3\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 3\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"idClasse\",\n        name: \"idClasse\",\n        select: true // value={this.state.filterClassId}\n        // onChange={this.handleChangeFilter('filterClassId')}\n        ,\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.todo.etat`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 34\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 3\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 3\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"idClasse\",\n        name: \"idClasse\",\n        select: true // value={this.state.filterClassId}\n        // onChange={this.handleChangeFilter('filterClassId')}\n        ,\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.todo.type`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 34\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 3\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 3\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"pt-5  bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.todo.date`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 3\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(HomeworkList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    subjects: state.subject.subjects\n  };\n};\n\nexport default connect(mapStateToProps)(Homework);\n\nfunction createListSubject(subjects) {\n  let newList = subjects.map(element => {\n    let object = {};\n    object.label = element.name;\n    object.id = element.id;\n    object.value = element.id;\n    object.color = element.color;\n    return object;\n  });\n  return newList;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js"],"names":["React","IconWithTextCard","IntlMessages","HomeworkInProgress","CardBox","AddIcon","Fab","DeleteOutlineIcon","RemoveSharpIcon","connect","AddHomework","UncontrolledAlert","classService","HomeworkList","_","addNewHomework","RoleContext","Can","TextField","Homework","Component","constructor","props","handleChangeClassList","selectedOption","setState","classesId","value","handleChangeClass","name","event","isEmpty","state","classes","errorClass","target","map","classesList","handleChangePublicationDate","date","publicationDate","handleChangePostTime","time","postTime","_d","handleChangeSubject","subjectId","subjectColor","color","apiEndpoint","localStorage","token","get","then","response","newList","data","element","object","label","class","id","fk_id_class_v4","handleChangeHomeworkType","homeworkType","handleChange","isOpenAddModal","nameFile","HomeworkTypes","description","courseUrl","homeworkFiles","nameFiles","Date","subjects","eventChecked","bind","attachFile","deleteFile","cancelModal","e","preventDefault","dataHomework","title","publicationTime","dispatch","filename","filter","oldFiles","files","Object","values","undefined","length","push","messageAlerte","alerteStatus","setTimeout","openAddModal","UNSAFE_componentWillMount","createListSubject","componentDidUpdate","previouProps","render","detailCards","cardColor","imageIcon","require","subTitle","index","errorStatus","message","successStatus","fontFamily","fontSize","backgroundColor","role","disableUnderline","mapStateToProps","userProfile","auth","alert","success","error","subject"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IconWithTextCard from \"../../../CommonComponents/IconWithTextCard\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport HomeworkInProgress from \"./HomeworkInProgress\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport RemoveSharpIcon from \"@material-ui/icons/RemoveSharp\";\nimport { connect } from \"react-redux\";\nimport AddHomework from \"./AddHomework\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport { classService } from \"../../../../../_services/class.service\";\nimport HomeworkList from \"./HomeworkList\";\nimport _ from \"lodash\";\nimport { addNewHomework } from \"../../../../../actions/HomeworkAction\";\nimport { RoleContext } from \"../../../../../Context\";\nimport Can from \"../../../../../can\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenAddModal: false,\n      nameFile: \"\",\n      HomeworkTypes: [\n        {\n          label: <IntlMessages id=\"toDo.book.exercise\" />,\n          value: \"book\",\n          id: 1,\n        },\n        {\n          label: <IntlMessages id=\"toDo.series.exercise\" />,\n          value: \"serie\",\n          id: 2,\n        },\n        {\n          label: <IntlMessages id=\"toDo.other.exercise\" />,\n          value: \"other\",\n          id: 3,\n        },\n      ],\n      homeworkType: \"\",\n      subjectId: null,\n      subjectColor: \"\",\n      description: \"\",\n      courseUrl: \"\",\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: \"\",\n      classesId: [],\n      errorClass: false,\n      classesList: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.handleChangePublicationDate = this.handleChangePublicationDate.bind(\n      this\n    );\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.addNewHomework = this.addNewHomework.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n  }\n\n  cancelModal() {\n    this.setState({\n      isOpenAddModal: false,\n      nameFile: \"\",\n      homeworkType: \"\",\n      subjectId: null,\n      subjectColor: \"\",\n      description: \"\",\n      courseUrl: \"\",\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: \"\",\n      classesId: [],\n      errorClass: false,\n      classesList: [],\n    });\n  }\n\n  addNewHomework(e) {\n    e.preventDefault();\n    if (this.state.subjectId === null) {\n      this.setState({ errorClass: true });\n    } else {\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType = this.state.homeworkType;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      this.props.dispatch(\n        addNewHomework(dataHomework, this.state.homeworkFiles)\n      );\n      this.cancelModal();\n    }\n  }\n\n  handleChangeClassList = (selectedOption) => {\n    this.setState({ classesId: [selectedOption.value] });\n  };\n\n  handleChangeClass = (name) => (event) => {\n    if (_.isEmpty(this.state.classes)) {\n      this.setState({ errorClass: true });\n    } else {\n      this.setState({ [name]: event.target.value });\n      this.setState({ errorClass: false });\n      if (event.target.value === \"allClasses\") {\n        let classesId = _.map(this.state.classes, \"id\");\n        this.setState({ classesId });\n      } else {\n        this.setState({ classesList: this.state.classes });\n      }\n    }\n  };\n\n  handleChangePublicationDate = (date) => {\n    this.setState({ publicationDate: date });\n  };\n\n  handleChangePostTime = (time) => {\n    this.setState({ postTime: time._d });\n  };\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter(\n      (element) => element != filename\n    );\n\n    let homeworkFiles = this.state.homeworkFiles.filter(\n      (element) => element.name != filename\n    );\n\n    this.setState({ nameFiles, homeworkFiles });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map((element) => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({ homeworkFiles: oldFiles, nameFiles });\n    } else {\n      this.setState({\n        messageAlerte: \"Vous avez dÃ©passer 5 fichiers\",\n        alerteStatus: true,\n      });\n      setTimeout(() => {\n        this.setState({ messageAlerte: \"\", alerteStatus: false });\n      }, 4000);\n    }\n  }\n\n  handleChangeSubject = (selectedOption) => {\n    this.setState({\n      subjectId: selectedOption.value,\n      subjectColor: selectedOption.color,\n      errorClass: false,\n    });\n    let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include][class]`;\n    classService.get(apiEndpoint).then((response) => {\n      if (response) {\n        let newList = response.data.map((element) => {\n          let object = {};\n          object.label = element.class.name;\n          object.id = element.fk_id_class_v4;\n          object.value = element.fk_id_class_v4;\n          return object;\n        });\n        this.setState({ classes: newList });\n      }\n    });\n  };\n\n  handleChangeHomeworkType = (selectedOption) => {\n    this.setState({ homeworkType: selectedOption.value });\n  };\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  openAddModal() {\n    this.setState({ isOpenAddModal: !this.state.isOpenAddModal });\n  }\n\n  UNSAFE_componentWillMount() {\n    let subjects = createListSubject(this.props.subjects);\n    this.setState({ subjects });\n  }\n  componentDidUpdate(previouProps) {\n    if (previouProps.subjects !== this.props.subjects) {\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({ subjects });\n    }\n  }\n\n  render() {\n    let detailCards = [\n      {\n        cardColor: \"primary\",\n        imageIcon: require(\"../../../../../assets/images/dashboard/teams-icon.png\"),\n\n        // title: this.props.virtualClasses.length,\n        subTitle: <IntlMessages id={`message.Numbers.of.students`} />,\n      },\n      {\n        cardColor: \"secondary\",\n        imageIcon: require(\"../../../../../assets/images/dashboard/tasks-icon.png\"),\n        // title: this.state.prog,\n        subTitle: <IntlMessages id={`homework.file`} />,\n      },\n      {\n        cardColor: \"info\",\n        imageIcon: require(\"../../../../../assets/images/dashboard/project-icon.png\"),\n        // title: this.state.encours,\n        subTitle: <IntlMessages id={`homework.uncorrected`} />,\n      },\n      {\n        cardColor: \"success\",\n        imageIcon: require(\"../../../../../assets/images/dashboard/files-icon.png\"),\n        // title: this.state.encours,\n        subTitle: <IntlMessages id={`homework.educational.files`} />,\n      },\n    ];\n    return (\n      <div className=\"app-wrapper col-lg-12 col-md-12\">\n        <div className=\"d-flex flex-column mb-3\">\n          <div className=\"row col-lg-12 col-md- col-sm-12  \">\n            {detailCards.map((data, index) => (\n              <div\n                key={index}\n                className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\"\n              >\n                <IconWithTextCard data={data} />\n              </div>\n            ))}\n          </div>\n          <div>\n            {this.state.alerteStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-danger bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\">\n                  {\" \"}\n                  {this.state.messageAlerte}{\" \"}\n                </span>\n              </UncontrolledAlert>\n            )}\n\n            {this.props.errorStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-danger   text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            )}\n            {this.props.successStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            )}\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-md-auto \">\n              <CardBox styleName=\"row\">\n                <HomeworkInProgress />\n              </CardBox>\n            </div>\n\n            <div className=\"col \">\n              <CardBox styleName=\"col-lg-12 \">\n                <div className=\"row\">\n                  <div>\n                    <Fab\n                      size=\"small\"\n                      color=\"secondary\"\n                      aria-label=\"Add\"\n                      onClick={this.openAddModal.bind(this)}\n                    >\n                      {this.state.isOpenAddModal ? (\n                        <RemoveSharpIcon />\n                      ) : (\n                        <AddIcon />\n                      )}\n                    </Fab>\n                  </div>\n                  <div\n                    className=\"p-2\"\n                    style={{ fontFamily: \"Roboto\", fontSize: \"17px\" }}\n                  >\n                    <IntlMessages id=\"modal.addToDo\" />\n                  </div>\n\n                  <div className=\"pl-5 \">\n                    <Fab\n                      size=\"small\"\n                      aria-label=\"Add\"\n                      style={{ backgroundColor: \"#ffbb33\", color: \"#ffffff\" }}\n                      // onClick={this.props.openAddModal}\n                    >\n                      {/* {this.props.values.isOpen ? (\n                          <RemoveSharpIcon />\n                        ) : ( */}\n                      <DeleteOutlineIcon />\n                      {/* )} */}\n                    </Fab>\n                  </div>\n                  <div\n                    className=\"p-2\"\n                    style={{ fontFamily: \"Roboto\", fontSize: \"17px\" }}\n                  >\n                    <IntlMessages id=\"icon.archives\" />\n                  </div>\n                </div>\n              </CardBox>\n\n              {this.state.isOpenAddModal && (\n                <CardBox styleName=\"col-lg-12\">\n                  <AddHomework\n                    values={this.state}\n                    handleChange={this.handleChange}\n                    handleChangeHomeworkType={this.handleChangeHomeworkType}\n                    subjects={this.state.subjects}\n                    handleChangeSubject={this.handleChangeSubject}\n                    attachFile={this.attachFile}\n                    deleteFile={this.deleteFile}\n                    handleChangePostTime={this.handleChangePostTime}\n                    handleChangePublicationDate={\n                      this.handleChangePublicationDate\n                    }\n                    handleChangeClass={this.handleChangeClass}\n                    handleChangeClassList={this.handleChangeClassList}\n                    addNewHomework={this.addNewHomework}\n                    cancelModal={this.cancelModal}\n                  />\n                </CardBox>\n              )}\n\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"add-service\"\n                    yes={() => (\n\n<div class=\"d-flex flex-wrap flex-row bd-highlight mb-3\">\n  <div class=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-5\">\n  <TextField\n                          id=\"idClasse\"\n                          name=\"idClasse\"\n                          select\n                          // value={this.state.filterClassId}\n                          // onChange={this.handleChangeFilter('filterClassId')}\n                          SelectProps={{}}\n                          label={<IntlMessages id={`components.note.class`} />}\n                          InputProps={{ disableUnderline: true }}\n                          margin=\"normal\"\n                          fullWidth\n                        >\n                          {/* {this.state.filterClasses.length > 0 ? (\n                            this.state.filterClasses.map((option) => (\n                              <MenuItem key={option.id} value={option.id}>\n                                {option.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            <MenuItem key={0} value={0}>\n                              Pas de classe\n                            </MenuItem>\n                          )} */}\n                        </TextField>\n  </div>\n  <div className=\"pt-5 bd-highlight\">|</div>\n\n  <div class=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\" >\n  <TextField\n                          id=\"idClasse\"\n                          name=\"idClasse\"\n                          select\n                          // value={this.state.filterClassId}\n                          // onChange={this.handleChangeFilter('filterClassId')}\n                          SelectProps={{}}\n                          label={<IntlMessages id={`components.todo.etat`} />}\n                          InputProps={{ disableUnderline: true }}\n                          margin=\"normal\"\n                          fullWidth\n                        >\n                          {/* {this.state.filterClasses.length > 0 ? (\n                            this.state.filterClasses.map((option) => (\n                              <MenuItem key={option.id} value={option.id}>\n                                {option.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            <MenuItem key={0} value={0}>\n                              Pas de classe\n                            </MenuItem>\n                          )} */}\n                        </TextField>\n                          \n  </div>\n  <div className=\"pt-5 bd-highlight\">|</div>\n  <div class=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\">\n  <TextField\n                          id=\"idClasse\"\n                          name=\"idClasse\"\n                          select\n                          // value={this.state.filterClassId}\n                          // onChange={this.handleChangeFilter('filterClassId')}\n                          SelectProps={{}}\n                          label={<IntlMessages id={`components.todo.type`} />}\n                          InputProps={{ disableUnderline: true }}\n                          margin=\"normal\"\n                          fullWidth\n                        >\n                          {/* {this.state.filterClasses.length > 0 ? (\n                            this.state.filterClasses.map((option) => (\n                              <MenuItem key={option.id} value={option.id}>\n                                {option.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            <MenuItem key={0} value={0}>\n                              Pas de classe\n                            </MenuItem>\n                          )} */}\n                        </TextField>\n  </div>\n  <div className=\"pt-5 bd-highlight\">|</div>\n  <div class=\"pt-5  bd-highlight col-lg-2 col-md-6 col-sm-6\">\n  <IntlMessages id={`components.todo.date`} />\n  </div>\n</div>\n\n\n\n                  \n                    )}\n                  />\n                )}\n              </RoleContext.Consumer>\n\n              <HomeworkList />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    subjects: state.subject.subjects,\n  };\n};\nexport default connect(mapStateToProps)(Homework);\n\nfunction createListSubject(subjects) {\n  let newList = subjects.map((element) => {\n    let object = {};\n    object.label = element.name;\n    object.id = element.id;\n    object.value = element.id;\n    object.color = element.color;\n    return object;\n  });\n  return newList;\n}\n"]},"metadata":{},"sourceType":"module"}