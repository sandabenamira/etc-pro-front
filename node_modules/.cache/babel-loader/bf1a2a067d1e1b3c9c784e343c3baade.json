{"ast":null,"code":"import { FETCH_ALL_ROLE, ADD_USER, GET_ALL_USERS_FOR_ADMIN, GET_ALL_USERS_FOR_SUPER_ADMIN, EDIT_USER, DELETE_USER, ARCHIVED_USERS } from '../constants/ActionTypes';\nimport { roleIdSuperAdmin, roleIdAdmin, roleIdProfessor, roleIdStudent, roleIdDirector, roleIdParent, roleIdSupervisor } from '../config/config';\nconst initialState = {\n  roles: [],\n  users: [],\n  archivedUsers: [],\n  allUsers: [],\n  students: [],\n  parents: [],\n  professors: [],\n  admins: [],\n  directors: [],\n  supervisors: []\n};\nexport default function (state = initialState, action) {\n  if (action.type === FETCH_ALL_ROLE) {\n    return Object.assign({}, state, {\n      roles: action.payload\n    });\n  }\n\n  if (action.type === GET_ALL_USERS_FOR_ADMIN) {\n    let parents = action.payload.filter(element => element.roleId === roleIdParent);\n    let students = action.payload.filter(element => element.roleId === roleIdStudent);\n    let professors = action.payload.filter(element => element.roleId === roleIdProfessor);\n    let admins = action.payload.filter(element => element.roleId === roleIdAdmin);\n    let directors = action.payload.filter(element => element.roleId === roleIdDirector);\n    let supervisors = action.payload.filter(element => element.roleId === roleIdSupervisor);\n    return Object.assign({}, state, {\n      users: action.payload,\n      parents: parents,\n      students: students,\n      professors: professors,\n      admins: admins,\n      directors: directors,\n      supervisors: supervisors\n    });\n  }\n\n  if (action.type === GET_ALL_USERS_FOR_SUPER_ADMIN) {\n    return Object.assign({}, state, {\n      allUsers: action.payload\n    });\n  }\n\n  if (action.type === ADD_USER) {\n    return Object.assign({}, state, {\n      users: state.users.concat(action.payload)\n    });\n  }\n\n  if (action.type === EDIT_USER) {\n    return Object.assign({}, state, {\n      users: [...state.users.filter(element => element.id !== action.payload.id), action.payload]\n    });\n  }\n\n  if (action.type === DELETE_USER) {\n    return Object.assign({}, state, {\n      users: [...state.users.filter(element => element.id !== action.payload.id)],\n      archivedUsers: state.archivedUsers.concat(action.payload)\n    });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/reducers/usersReducer.js"],"names":["FETCH_ALL_ROLE","ADD_USER","GET_ALL_USERS_FOR_ADMIN","GET_ALL_USERS_FOR_SUPER_ADMIN","EDIT_USER","DELETE_USER","ARCHIVED_USERS","roleIdSuperAdmin","roleIdAdmin","roleIdProfessor","roleIdStudent","roleIdDirector","roleIdParent","roleIdSupervisor","initialState","roles","users","archivedUsers","allUsers","students","parents","professors","admins","directors","supervisors","state","action","type","Object","assign","payload","filter","element","roleId","concat","id"],"mappings":"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","sourcesContent":["import {\n  FETCH_ALL_ROLE,\n  ADD_USER,\n  GET_ALL_USERS_FOR_ADMIN,\n  GET_ALL_USERS_FOR_SUPER_ADMIN,\n  EDIT_USER,\n  DELETE_USER,\n  ARCHIVED_USERS,\n} from '../constants/ActionTypes';\nimport {\n  roleIdSuperAdmin,\n  roleIdAdmin,\n  roleIdProfessor,\n  roleIdStudent,\n  roleIdDirector,\n  roleIdParent,\n  roleIdSupervisor,\n} from '../config/config';\nconst initialState = {\n  roles: [],\n  users: [],\n  archivedUsers: [],\n  allUsers: [],\n  students: [],\n  parents: [],\n  professors: [],\n  admins: [],\n  directors: [],\n  supervisors: [],\n};\n\nexport default function(state = initialState, action) {\n  if (action.type === FETCH_ALL_ROLE) {\n    return Object.assign({}, state, {\n      roles: action.payload,\n    });\n  }\n  if (action.type === GET_ALL_USERS_FOR_ADMIN) {\n    let parents = action.payload.filter((element) => element.roleId === roleIdParent);\n    let students = action.payload.filter((element) => element.roleId === roleIdStudent);\n    let professors = action.payload.filter((element) => element.roleId === roleIdProfessor);\n    let admins = action.payload.filter((element) => element.roleId === roleIdAdmin);\n    let directors = action.payload.filter((element) => element.roleId === roleIdDirector);\n    let supervisors = action.payload.filter((element) => element.roleId === roleIdSupervisor);\n\n    return Object.assign({}, state, {\n      users: action.payload,\n      parents: parents,\n      students: students,\n      professors: professors,\n      admins: admins,\n      directors: directors,\n      supervisors: supervisors,\n    });\n  }\n  if (action.type === GET_ALL_USERS_FOR_SUPER_ADMIN) {\n    return Object.assign({}, state, {\n      allUsers: action.payload,\n    });\n  }\n  if (action.type === ADD_USER) {\n    return Object.assign({}, state, {\n      users: state.users.concat(action.payload),\n    });\n  }\n\n  if (action.type === EDIT_USER) {\n    return Object.assign({}, state, {\n      users: [...state.users.filter((element) => element.id !== action.payload.id), action.payload],\n    });\n  }\n\n  if (action.type === DELETE_USER) {\n    return Object.assign({}, state, {\n      users: [...state.users.filter((element) => element.id !== action.payload.id)],\n      archivedUsers: state.archivedUsers.concat(action.payload),\n    });\n  }\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}