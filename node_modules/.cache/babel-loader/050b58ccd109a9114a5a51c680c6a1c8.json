{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport _ from \"lodash\";\nimport { ADD_MOOCS, GET_MOOCS, EDIT_MOOCS, DELETE_MOOCS, ARCHIVED_GET_MOOCS, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE, SHOW_LOADER, HIDE_LOADER } from \"../constants/ActionTypes\";\nimport baseUrl from \"../config/config\";\nimport axios from \"axios\";\nexport const addMoocs = itemMoocs => {\n  return dispatch => {\n    let moocsFile = itemMoocs.moocsFile;\n    var object = {};\n    object.file = moocsFile;\n    object.fileName = moocsFile.name;\n    const myNewFile = new File([object.file], moocsFile.name, {\n      type: object.file.type\n    });\n    let formadata = new FormData();\n    formadata.append(\"video\", myNewFile);\n    dispatch({\n      type: SHOW_LOADER,\n      payload: true\n    });\n    let apiEndpoint = `/moocs/upload-moocs?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, formadata, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {\n      if (response) {\n        let dataMoocs = {\n          moocsTopic: itemMoocs.topicMoocs,\n          assignementId: itemMoocs.idAssignement,\n          prerequiste: itemMoocs.prerequisite,\n          educationalGoals: itemMoocs.educationalGoals,\n          moocsSession: itemMoocs.SessionMoocs,\n          moocsDuration: 30,\n          status: true,\n          moocsUrl: response.data.moocsURL,\n          posterProfileId: itemMoocs.posteur\n        };\n        let apiEndpoint = `/moocs/create-moocs?access_token=${localStorage.token}`;\n        classService.post(apiEndpoint, dataMoocs).then(response => {\n          if (response) {\n            let newObject = {\n              dateOfCreation: response.data.moocsData.creation_date,\n              educationalGoals: response.data.moocsData.educational_goals,\n              id: response.data.moocsData.id,\n              moocsAssignCourse: itemMoocs.assignmentRefresh,\n              moocsDuration: response.data.moocsData.moocs_duration,\n              moocsSession: response.data.moocsData.moocs_session,\n              moocsStatus: response.data.moocsData.status,\n              moocsTopic: response.data.moocsData.moocs_topic,\n              moocsUrl: response.data.moocsData.moocs_url,\n              poster: itemMoocs.userReresh,\n              prerequiste: response.data.moocsData.prerequiste\n            };\n            dispatch({\n              type: ADD_MOOCS,\n              payload: newObject\n            });\n            dispatch({\n              type: HIDE_LOADER,\n              payload: false\n            });\n            dispatch({\n              type: SHOW_SUCCESS_MESSAGE,\n              payload: \"La création est effectuée avec succès\"\n            });\n            setTimeout(() => {\n              dispatch({\n                type: HIDE_SUCCESS_MESSAGE\n              });\n            }, 4000);\n          } else {\n            dispatch({\n              type: HIDE_LOADER,\n              payload: false\n            });\n            dispatch({\n              type: SHOW_ERROR_MESSAGE,\n              payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n            });\n            setTimeout(() => {\n              dispatch({\n                type: HIDE_ERROR_MESSAGE\n              });\n            }, 4000);\n          }\n        });\n      } else {\n        dispatch({\n          type: HIDE_LOADER,\n          payload: false\n        });\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};\nexport function getMoocs(establishmentId, schoolYearId, roleId, roleUserId) {\n  return dispatch => {\n    let apiEndpoint = `/moocs/fetchMoocsByRole/${establishmentId}/${schoolYearId}/${roleId}/${roleUserId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      if (response) {\n        let moocsList = response.data.moocsData;\n        let ArchivedMoocsList = [];\n        let moocsListUnarchived = [];\n        moocsList.map(elementItem => {\n          if (elementItem.moocsStatus === false) {\n            ArchivedMoocsList.push(elementItem);\n          } else {\n            moocsListUnarchived.push(elementItem);\n          }\n        });\n        dispatch({\n          type: GET_MOOCS,\n          payload: moocsListUnarchived\n        });\n        dispatch({\n          type: ARCHIVED_GET_MOOCS,\n          payload: ArchivedMoocsList\n        });\n      }\n    });\n  };\n}\nexport function deleteMoocs(item) {\n  return dispatch => {\n    axios.patch(`${baseUrl.baseUrl}/moocs/` + item.id + `?access_token=${localStorage.token}`, {\n      status: false\n    }).then(response => {\n      if (response) {\n        dispatch({\n          type: DELETE_MOOCS,\n          payload: response.data.id\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"L'archivage est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    }).catch(function (error) {});\n  };\n}\nexport function editMoocs(itemMoocs) {\n  return dispatch => {\n    if (itemMoocs.moocsFile == null) {\n      let dataMoocs = {\n        id: itemMoocs.id,\n        moocs_topic: itemMoocs.topicMoocs,\n        assignementId: itemMoocs.idAssignement,\n        prerequiste: itemMoocs.prerequiste,\n        educational_goals: itemMoocs.educationalGoals,\n        moocs_session: itemMoocs.SessionMoocs,\n        moocs_duration: 30,\n        creation_date: new Date(),\n        status: true,\n        moocs_url: itemMoocs.moocsUrl\n      };\n      axios.put(`${baseUrl.baseUrl}/moocs/edit-moocs?access_token=${localStorage.token}`, dataMoocs).then(response => {\n        if (response) {\n          let newObject = {\n            dateOfCreation: response.data.MoocsUpDate.moocs.creation_date,\n            educationalGoals: response.data.MoocsUpDate.moocs.educational_goals,\n            id: response.data.MoocsUpDate.moocs.id,\n            moocsAssignCourse: itemMoocs.assignmentRefresh,\n            moocsDuration: response.data.MoocsUpDate.moocs.moocs_duration,\n            moocsSession: response.data.MoocsUpDate.moocs.moocs_session,\n            moocsStatus: response.data.MoocsUpDate.moocs.status,\n            moocsTopic: response.data.MoocsUpDate.moocs.moocs_topic,\n            moocsUrl: response.data.MoocsUpDate.moocs.moocs_url,\n            poster: itemMoocs.userReresh,\n            prerequiste: response.data.MoocsUpDate.moocs.prerequiste\n          };\n          dispatch({\n            type: EDIT_MOOCS,\n            payload: newObject\n          }); // dispatch(\n          //   getMoocs(establishmentId, schoolYearId, roleId, roleUserId)\n          // );\n\n          dispatch({\n            type: SHOW_SUCCESS_MESSAGE,\n            payload: \"La modification est effectuée avec succès\"\n          });\n          setTimeout(() => {\n            dispatch({\n              type: HIDE_SUCCESS_MESSAGE\n            });\n          }, 4000);\n        } else {\n          dispatch({\n            type: SHOW_ERROR_MESSAGE,\n            payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n          });\n          setTimeout(() => {\n            dispatch({\n              type: HIDE_ERROR_MESSAGE\n            });\n          }, 4000);\n        }\n      });\n    } else {\n      let moocsFile = itemMoocs.moocsFile;\n      var object = {};\n      object.file = moocsFile;\n      object.fileName = moocsFile.name;\n      const myNewFile = new File([object.file], moocsFile.name, {\n        type: object.file.type\n      });\n      let formadata = new FormData();\n      formadata.append(\"video\", myNewFile);\n      dispatch({\n        type: SHOW_LOADER,\n        payload: true\n      });\n      let apiEndpoint = `/moocs/upload-moocs?access_token=${localStorage.token}`;\n      classService.post(apiEndpoint, formadata, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(response => {\n        if (response) {\n          let dataMoocs = {\n            id: itemMoocs.id,\n            moocs_topic: itemMoocs.topicMoocs,\n            assignementId: itemMoocs.idAssignement,\n            prerequiste: itemMoocs.prerequiste,\n            educational_goals: itemMoocs.educationalGoals,\n            moocs_session: itemMoocs.SessionMoocs,\n            moocs_duration: 30,\n            creation_date: new Date(),\n            status: true,\n            moocs_url: response.data.moocsURL\n          };\n          axios.put(`${baseUrl.baseUrl}/moocs/edit-moocs?access_token=${localStorage.token}`, dataMoocs).then(response => {\n            if (response) {\n              let newObject = {\n                dateOfCreation: response.data.MoocsUpDate.moocs.creation_date,\n                educationalGoals: response.data.MoocsUpDate.moocs.educational_goals,\n                id: response.data.MoocsUpDate.moocs.id,\n                moocsAssignCourse: itemMoocs.assignmentRefresh,\n                moocsDuration: response.data.MoocsUpDate.moocs.moocs_duration,\n                moocsSession: response.data.MoocsUpDate.moocs.moocs_session,\n                moocsStatus: response.data.MoocsUpDate.moocs.status,\n                moocsTopic: response.data.MoocsUpDate.moocs.moocs_topic,\n                moocsUrl: response.data.MoocsUpDate.moocs.moocs_url,\n                poster: itemMoocs.userReresh,\n                prerequiste: response.data.MoocsUpDate.moocs.prerequiste\n              };\n              dispatch({\n                type: EDIT_MOOCS,\n                payload: newObject\n              });\n              dispatch({\n                type: HIDE_LOADER,\n                payload: false\n              });\n              dispatch({\n                type: SHOW_SUCCESS_MESSAGE,\n                payload: \"La modification est effectuée avec succès\"\n              });\n              setTimeout(() => {\n                dispatch({\n                  type: HIDE_SUCCESS_MESSAGE\n                });\n              }, 4000);\n            } else {\n              dispatch({\n                type: HIDE_LOADER,\n                payload: false\n              });\n              dispatch({\n                type: SHOW_ERROR_MESSAGE,\n                payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n              });\n              setTimeout(() => {\n                dispatch({\n                  type: HIDE_ERROR_MESSAGE\n                });\n              }, 4000);\n            }\n          });\n        } else {\n          dispatch({\n            type: HIDE_LOADER,\n            payload: false\n          });\n          dispatch({\n            type: SHOW_ERROR_MESSAGE,\n            payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n          });\n          setTimeout(() => {\n            dispatch({\n              type: HIDE_ERROR_MESSAGE\n            });\n          }, 4000);\n        }\n      });\n    }\n  };\n}\nexport const serviceAction = {\n  addMoocs,\n  getMoocs,\n  deleteMoocs,\n  editMoocs\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/actions/MoocsActions.js"],"names":["classService","_","ADD_MOOCS","GET_MOOCS","EDIT_MOOCS","DELETE_MOOCS","ARCHIVED_GET_MOOCS","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","SHOW_LOADER","HIDE_LOADER","baseUrl","axios","addMoocs","itemMoocs","dispatch","moocsFile","object","file","fileName","name","myNewFile","File","type","formadata","FormData","append","payload","apiEndpoint","localStorage","token","post","headers","then","response","dataMoocs","moocsTopic","topicMoocs","assignementId","idAssignement","prerequiste","prerequisite","educationalGoals","moocsSession","SessionMoocs","moocsDuration","status","moocsUrl","data","moocsURL","posterProfileId","posteur","newObject","dateOfCreation","moocsData","creation_date","educational_goals","id","moocsAssignCourse","assignmentRefresh","moocs_duration","moocs_session","moocsStatus","moocs_topic","moocs_url","poster","userReresh","setTimeout","getMoocs","establishmentId","schoolYearId","roleId","roleUserId","get","moocsList","ArchivedMoocsList","moocsListUnarchived","map","elementItem","push","deleteMoocs","item","patch","catch","error","editMoocs","Date","put","MoocsUpDate","moocs","serviceAction"],"mappings":"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","sourcesContent":["import { classService } from \"../_services/class.service\";\nimport _ from \"lodash\";\nimport {\n  ADD_MOOCS,\n  GET_MOOCS,\n  EDIT_MOOCS,\n  DELETE_MOOCS,\n  ARCHIVED_GET_MOOCS,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n  SHOW_LOADER,\n  HIDE_LOADER,\n} from \"../constants/ActionTypes\";\nimport baseUrl from \"../config/config\";\nimport axios from \"axios\";\n\nexport const addMoocs = (itemMoocs) => {\n  return (dispatch) => {\n    let moocsFile = itemMoocs.moocsFile;\n    var object = {};\n    object.file = moocsFile;\n    object.fileName = moocsFile.name;\n    const myNewFile = new File([object.file], moocsFile.name, {\n      type: object.file.type,\n    });\n    let formadata = new FormData();\n    formadata.append(\"video\", myNewFile);\n    dispatch({\n      type: SHOW_LOADER,\n      payload: true,\n    });\n    let apiEndpoint = `/moocs/upload-moocs?access_token=${localStorage.token}`;\n    classService\n      .post(apiEndpoint, formadata, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((response) => {\n        if (response) {\n          let dataMoocs = {\n            moocsTopic: itemMoocs.topicMoocs,\n            assignementId: itemMoocs.idAssignement,\n            prerequiste: itemMoocs.prerequisite,\n            educationalGoals: itemMoocs.educationalGoals,\n            moocsSession: itemMoocs.SessionMoocs,\n            moocsDuration: 30,\n            status: true,\n            moocsUrl: response.data.moocsURL,\n            posterProfileId: itemMoocs.posteur,\n          };\n          let apiEndpoint = `/moocs/create-moocs?access_token=${localStorage.token}`;\n          classService.post(apiEndpoint, dataMoocs).then((response) => {\n            if (response) {\n              let newObject = {\n                dateOfCreation: response.data.moocsData.creation_date,\n                educationalGoals: response.data.moocsData.educational_goals,\n                id: response.data.moocsData.id,\n                moocsAssignCourse: itemMoocs.assignmentRefresh,\n                moocsDuration: response.data.moocsData.moocs_duration,\n                moocsSession: response.data.moocsData.moocs_session,\n                moocsStatus: response.data.moocsData.status,\n                moocsTopic: response.data.moocsData.moocs_topic,\n                moocsUrl: response.data.moocsData.moocs_url,\n                poster: itemMoocs.userReresh,\n                prerequiste: response.data.moocsData.prerequiste,\n              };\n\n              dispatch({ type: ADD_MOOCS, payload: newObject });\n              dispatch({\n                type: HIDE_LOADER,\n                payload: false,\n              });\n              dispatch({\n                type: SHOW_SUCCESS_MESSAGE,\n                payload: \"La création est effectuée avec succès\",\n              });\n              setTimeout(() => {\n                dispatch({ type: HIDE_SUCCESS_MESSAGE });\n              }, 4000);\n            } else {\n              dispatch({\n                type: HIDE_LOADER,\n                payload: false,\n              });\n              dispatch({\n                type: SHOW_ERROR_MESSAGE,\n                payload:\n                  \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n              });\n              setTimeout(() => {\n                dispatch({ type: HIDE_ERROR_MESSAGE });\n              }, 4000);\n            }\n          });\n        } else {\n          dispatch({\n            type: HIDE_LOADER,\n            payload: false,\n          });\n          dispatch({\n            type: SHOW_ERROR_MESSAGE,\n            payload:\n              \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_ERROR_MESSAGE });\n          }, 4000);\n        }\n      });\n  };\n};\n\nexport function getMoocs(establishmentId, schoolYearId, roleId, roleUserId) {\n  return (dispatch) => {\n    let apiEndpoint = `/moocs/fetchMoocsByRole/${establishmentId}/${schoolYearId}/${roleId}/${roleUserId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then((response) => {\n      if (response) {\n        let moocsList = response.data.moocsData;\n        let ArchivedMoocsList = [];\n        let moocsListUnarchived = [];\n\n        moocsList.map((elementItem) => {\n          if (elementItem.moocsStatus === false) {\n            ArchivedMoocsList.push(elementItem);\n          } else {\n            moocsListUnarchived.push(elementItem);\n          }\n        });\n\n        dispatch({\n          type: GET_MOOCS,\n          payload: moocsListUnarchived,\n        });\n        dispatch({\n          type: ARCHIVED_GET_MOOCS,\n          payload: ArchivedMoocsList,\n        });\n      }\n    });\n  };\n}\nexport function deleteMoocs(item) {\n  return (dispatch) => {\n    axios\n      .patch(\n        `${baseUrl.baseUrl}/moocs/` +\n          item.id +\n          `?access_token=${localStorage.token}`,\n        {\n          status: false,\n        }\n      )\n      .then((response) => {\n        if (response) {\n          dispatch({ type: DELETE_MOOCS, payload: response.data.id });\n\n          dispatch({\n            type: SHOW_SUCCESS_MESSAGE,\n            payload: \"L'archivage est effectuée avec succès\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_SUCCESS_MESSAGE });\n          }, 4000);\n        } else {\n          dispatch({\n            type: SHOW_ERROR_MESSAGE,\n            payload:\n              \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_ERROR_MESSAGE });\n          }, 4000);\n        }\n      })\n      .catch(function(error) {});\n  };\n}\n\nexport function editMoocs(itemMoocs) {\n  return (dispatch) => {\n    if (itemMoocs.moocsFile == null) {\n      let dataMoocs = {\n        id: itemMoocs.id,\n        moocs_topic: itemMoocs.topicMoocs,\n        assignementId: itemMoocs.idAssignement,\n        prerequiste: itemMoocs.prerequiste,\n        educational_goals: itemMoocs.educationalGoals,\n        moocs_session: itemMoocs.SessionMoocs,\n        moocs_duration: 30,\n        creation_date: new Date(),\n        status: true,\n        moocs_url: itemMoocs.moocsUrl,\n      };\n      axios\n        .put(\n          `${baseUrl.baseUrl}/moocs/edit-moocs?access_token=${localStorage.token}`,\n          dataMoocs\n        )\n        .then((response) => {\n          if (response) {\n            let newObject = {\n              dateOfCreation: response.data.MoocsUpDate.moocs.creation_date,\n              educationalGoals:\n                response.data.MoocsUpDate.moocs.educational_goals,\n              id: response.data.MoocsUpDate.moocs.id,\n              moocsAssignCourse: itemMoocs.assignmentRefresh,\n              moocsDuration: response.data.MoocsUpDate.moocs.moocs_duration,\n              moocsSession: response.data.MoocsUpDate.moocs.moocs_session,\n              moocsStatus: response.data.MoocsUpDate.moocs.status,\n              moocsTopic: response.data.MoocsUpDate.moocs.moocs_topic,\n              moocsUrl: response.data.MoocsUpDate.moocs.moocs_url,\n              poster: itemMoocs.userReresh,\n              prerequiste: response.data.MoocsUpDate.moocs.prerequiste,\n            };\n\n            dispatch({\n              type: EDIT_MOOCS,\n              payload: newObject,\n            });\n\n            // dispatch(\n            //   getMoocs(establishmentId, schoolYearId, roleId, roleUserId)\n            // );\n            dispatch({\n              type: SHOW_SUCCESS_MESSAGE,\n              payload: \"La modification est effectuée avec succès\",\n            });\n            setTimeout(() => {\n              dispatch({ type: HIDE_SUCCESS_MESSAGE });\n            }, 4000);\n          } else {\n            dispatch({\n              type: SHOW_ERROR_MESSAGE,\n              payload:\n                \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n            });\n            setTimeout(() => {\n              dispatch({ type: HIDE_ERROR_MESSAGE });\n            }, 4000);\n          }\n        });\n    } else {\n      let moocsFile = itemMoocs.moocsFile;\n      var object = {};\n      object.file = moocsFile;\n      object.fileName = moocsFile.name;\n      const myNewFile = new File([object.file], moocsFile.name, {\n        type: object.file.type,\n      });\n      let formadata = new FormData();\n      formadata.append(\"video\", myNewFile);\n      dispatch({\n        type: SHOW_LOADER,\n        payload: true,\n      });\n      let apiEndpoint = `/moocs/upload-moocs?access_token=${localStorage.token}`;\n      classService\n        .post(apiEndpoint, formadata, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        })\n        .then((response) => {\n          if (response) {\n            let dataMoocs = {\n              id: itemMoocs.id,\n              moocs_topic: itemMoocs.topicMoocs,\n              assignementId: itemMoocs.idAssignement,\n              prerequiste: itemMoocs.prerequiste,\n              educational_goals: itemMoocs.educationalGoals,\n              moocs_session: itemMoocs.SessionMoocs,\n              moocs_duration: 30,\n              creation_date: new Date(),\n              status: true,\n              moocs_url: response.data.moocsURL,\n            };\n            axios\n              .put(\n                `${baseUrl.baseUrl}/moocs/edit-moocs?access_token=${localStorage.token}`,\n                dataMoocs\n              )\n              .then((response) => {\n                if (response) {\n                  let newObject = {\n                    dateOfCreation:\n                      response.data.MoocsUpDate.moocs.creation_date,\n                    educationalGoals:\n                      response.data.MoocsUpDate.moocs.educational_goals,\n                    id: response.data.MoocsUpDate.moocs.id,\n                    moocsAssignCourse: itemMoocs.assignmentRefresh,\n                    moocsDuration:\n                      response.data.MoocsUpDate.moocs.moocs_duration,\n                    moocsSession: response.data.MoocsUpDate.moocs.moocs_session,\n                    moocsStatus: response.data.MoocsUpDate.moocs.status,\n                    moocsTopic: response.data.MoocsUpDate.moocs.moocs_topic,\n                    moocsUrl: response.data.MoocsUpDate.moocs.moocs_url,\n                    poster: itemMoocs.userReresh,\n                    prerequiste: response.data.MoocsUpDate.moocs.prerequiste,\n                  };\n                  dispatch({\n                    type: EDIT_MOOCS,\n                    payload: newObject,\n                  });\n                  dispatch({\n                    type: HIDE_LOADER,\n                    payload: false,\n                  });\n                  dispatch({\n                    type: SHOW_SUCCESS_MESSAGE,\n                    payload: \"La modification est effectuée avec succès\",\n                  });\n                  setTimeout(() => {\n                    dispatch({ type: HIDE_SUCCESS_MESSAGE });\n                  }, 4000);\n                } else {\n                  dispatch({\n                    type: HIDE_LOADER,\n                    payload: false,\n                  });\n                  dispatch({\n                    type: SHOW_ERROR_MESSAGE,\n                    payload:\n                      \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n                  });\n                  setTimeout(() => {\n                    dispatch({ type: HIDE_ERROR_MESSAGE });\n                  }, 4000);\n                }\n              });\n          } else {\n            dispatch({\n              type: HIDE_LOADER,\n              payload: false,\n            });\n            dispatch({\n              type: SHOW_ERROR_MESSAGE,\n              payload:\n                \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n            });\n            setTimeout(() => {\n              dispatch({ type: HIDE_ERROR_MESSAGE });\n            }, 4000);\n          }\n        });\n    }\n  };\n}\n\nexport const serviceAction = {\n  addMoocs,\n  getMoocs,\n  deleteMoocs,\n  editMoocs,\n};\n"]},"metadata":{},"sourceType":"module"}