{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js\";\nimport React from 'react';\nimport ListHomework from './ListHomework';\nimport _ from 'lodash';\nimport { roleIdProfessor, roleIdAdmin, roleIdParent, roleIdStudent } from '../../../../../config/config';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { getLevelByEstablishmentId } from '../../../../../actions/classLevelAction';\nimport { getSubjectsByEstablishmentId, subjectsByLevelBySection } from '../../../../../actions/subjectAction';\nimport AddHomework from './AddHomework';\nimport { getClassesByEstablishmentId } from '../../../../../actions/classeAction';\nimport { classService } from \"../../../../../_services/class.service\";\nimport { getAllTodoForProfessor, getAllTodoForAdmin, fetchTodo, getAllTodo, cleanState } from '../../../../../actions/ToDo';\nimport { connect } from 'react-redux';\nimport { getEstablishment } from '../../../../../actions/establishmentAction';\nimport { UncontrolledAlert } from 'reactstrap';\nimport Can from '../../../../../can';\nimport { RoleContext } from \"../../../../../Context\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { getName } from \"../../../../../actions/countriesAction\";\nimport IconWithTextCard from \"./IconWithTextCard\";\nimport moment from 'moment';\nlet countesHomeworkUncorrected = [];\n\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeClass = name => event => {\n      let data = this.state.classesList.find(item => item.id === event.target.value);\n      let homeworkFiltredByClassId = [];\n      this.props.toDos.forEach(element => {\n        if (!_.isEmpty(element.homeworkClass)) {\n          _.forEach(element.homeworkClass, function (value) {\n            if (value.class_id === event.target.value) {\n              homeworkFiltredByClassId.push(element);\n            }\n          });\n        }\n      });\n      this.setState({\n        toDoData: homeworkFiltredByClassId,\n        homeworkFiltredByClassId: homeworkFiltredByClassId\n      });\n      let levelId = data.level_id;\n      let subjects = this.state.subjectList.filter(element => element.level_id === levelId);\n\n      if (this.props.userProfile.role_id === roleIdProfessor) {\n        let subjectsList = _.map(subjects, 'subject');\n\n        this.setState({\n          [name]: event.target.value,\n          subjects: subjectsList\n        });\n      } else if (this.props.userProfile.role_id === roleIdAdmin) {\n        this.setState({\n          [name]: event.target.value,\n          subjects: subjects\n        });\n      }\n    };\n\n    this.handleChangeSubject = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      let homeworkFiltredBySubject = [];\n\n      if (!_.isEmpty(this.state.homeworkFiltredByClassId)) {\n        if (event.target.value === '0') {\n          this.setState({\n            toDoData: this.state.homeworkFiltredByClassId\n          });\n        } else {\n          homeworkFiltredBySubject = this.state.homeworkFiltredByClassId.filter(element => element.subject_id === event.target.value);\n          this.setState({\n            toDoData: homeworkFiltredBySubject\n          });\n        }\n      } else {\n        if (event.target.value === '0') {\n          this.setState({\n            toDoData: this.props.toDos\n          });\n        } else {\n          homeworkFiltredBySubject = this.props.toDos.filter(element => element.subject_id === event.target.value);\n          this.setState({\n            toDoData: homeworkFiltredBySubject\n          });\n        }\n      }\n    };\n\n    this.state = {\n      establishment_id: '',\n      classesList: [],\n      subjectList: [],\n      addTodo: false,\n      class_id: 0,\n      subject_id: 0,\n      subjects: [],\n      toDoData: [],\n      homeworkFiltredByClassId: [],\n      countesStudents: 0,\n      countesFiles: 0,\n      countesEducationalFiles: 0\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.filtreListToDo = this.filtreListToDo.bind(this);\n    this.getSubjectsStudent = this.getSubjectsStudent.bind(this);\n    this.getSubjectsParent = this.getSubjectsParent.bind(this);\n  }\n\n  getSubjectsParent() {\n    let apiEndpoint = `/parents/?access_token=${localStorage.token}&filter[where][profile_id]=${this.props.userProfile.id}&filter[include][student_parents][student][class]`;\n    classService.get(apiEndpoint).then(response => {\n      let subjectFiltred = subjectsByLevelBySection(this.props.remoteSubjects, _.head(response.data).student_parents[0].student.class.level_id, _.head(response.data).student_parents[0].student.class.section_id);\n      this.setState({\n        subjects: subjectFiltred\n      });\n    });\n  }\n\n  getSubjectsStudent() {\n    let apiEndpoint = `/students/?access_token=${localStorage.token}&filter[where][profile_id]=${this.props.userProfile.id}&filter[include]=class`;\n    classService.get(apiEndpoint).then(response => {\n      let subjectFiltred = subjectsByLevelBySection(this.props.remoteSubjects, _.head(response.data).class.level_id, _.head(response.data).class.section_id);\n      this.setState({\n        subjects: subjectFiltred\n      });\n    });\n  }\n\n  filtreListToDo(subjectId) {\n    this.setState({\n      subject_id: subjectId\n    });\n  }\n\n  handleCancel() {\n    this.setState({\n      addTodo: false\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.toDos !== this.props.toDos) {\n      this.props.toDos.map(item => item.studentHomework = false);\n      this.setState({\n        toDoData: this.props.toDos\n      });\n    }\n\n    if (prevProps.classes !== this.props.classes) {\n      this.setState({\n        classesList: this.props.classes\n      });\n    }\n\n    if (prevProps.remoteSubjects !== this.props.remoteSubjects) {\n      if (this.props.userProfile.role_id === roleIdStudent) {\n        this.setState({\n          subjectList: this.props.remoteSubjects\n        });\n        this.getSubjectsStudent();\n      } else if (this.props.userProfile.role_id === roleIdParent) {\n        this.setState({\n          subjectList: this.props.remoteSubjects\n        });\n        this.getSubjectsParent();\n      } else if (this.props.userProfile.role_id === roleIdAdmin) {\n        this.setState({\n          subjectList: this.props.remoteSubjects\n        });\n      }\n    }\n\n    if (prevProps.userProfile !== this.props.userProfile) {\n      const establishmentId = this.props.userProfile.establishment_id;\n      const schoolYear = this.props.userProfile.school_year_id;\n      this.props.getClassesByEstablishmentId(establishmentId, schoolYear);\n      this.props.getAllTodoForAdmin(establishmentId, schoolYear);\n    }\n  }\n\n  componentDidMount() {\n    let apiEndpoint = '';\n    const establishmentId = this.props.userProfile.establishment_id;\n    const schoolYear = this.props.userProfile.school_year_id;\n    const profileId = this.props.userProfile.id;\n    this.props.getLevelByEstablishmentId(establishmentId);\n    this.props.getSubjectsByEstablishmentId(establishmentId);\n    this.props.toDos.map(item => item.studentHomework = false);\n    this.setState({\n      toDoData: this.props.toDos\n    });\n    apiEndpoint = `/profiles/count?access_token=${localStorage.token}&where={\"establishment_id\":${establishmentId},\"role_id\":${roleIdStudent}}`;\n    classService.get(apiEndpoint).then(response => {\n      if (response) {\n        this.setState({\n          countesStudents: response.data.count\n        });\n      }\n    });\n\n    if (this.props.userProfile.role_id === roleIdProfessor) {\n      this.props.getAllTodoForProfessor(profileId);\n      apiEndpoint = `/professors/?access_token=${localStorage.token}&filter={\"where\":{\"profile_id\":` + profileId + `}}`;\n      classService.get(apiEndpoint).then(response => {\n        apiEndpoint = `/classes_professors/?access_token=${localStorage.token}&filter[include][class]&filter[where][professor_id]=` + response.data[0].id;\n        classService.get(apiEndpoint).then(res => {\n          this.setState({\n            classesList: _.uniqBy(_.map(res.data, 'class'), 'id')\n          });\n        });\n        apiEndpoint = `/prof_subjects/?access_token=${localStorage.token}&filter[include][subject]&filter[where][professor_id]=` + response.data[0].id;\n        classService.get(apiEndpoint).then(res => {\n          this.setState({\n            subjectList: res.data\n          });\n        });\n      });\n    } else if (this.props.userProfile.role_id === roleIdAdmin) {\n      this.props.getClassesByEstablishmentId(establishmentId, schoolYear);\n      this.props.getAllTodoForAdmin(establishmentId, schoolYear);\n    } else if (this.props.userProfile.role_id === roleIdParent) {\n      this.props.getAllTodo(this.props.userProfile.id, 'fetchHomeworkByProfileIdForParent');\n      this.getSubjectsParent();\n    } else if (this.props.userProfile.role_id === roleIdStudent) {\n      this.props.getAllTodo(this.props.userProfile.id, 'fetchHomeworkByProfileIdForStudent');\n      this.getSubjectsStudent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.cleanState();\n  }\n\n  render() {\n    let detailCards = [];\n\n    if (this.props.userProfile.role_id === roleIdAdmin || this.props.userProfile.role_id === roleIdProfessor) {\n      //countesHomeworkUncorrected = this.props.toDos.filter(element => moment(element.homeworkClass[0].correction_date ).isAfter(moment().format()))\n      detailCards = [{\n        cardColor: 'primary',\n        imageIcon: require('../../../../../assets/images/dashboard/teams-icon.png'),\n        title: this.state.countesStudents,\n        subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"message.Numbers.of.students\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 19\n          }\n        })\n      }, {\n        cardColor: 'secondary',\n        imageIcon: require('../../../../../assets/images/dashboard/tasks-icon.png'),\n        title: this.state.countesFiles,\n        subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"homework.file\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 19\n          }\n        })\n      }, {\n        cardColor: 'info',\n        imageIcon: require('../../../../../assets/images/dashboard/project-icon.png'),\n        title: countesHomeworkUncorrected.length,\n        title: '0',\n        subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"homework.uncorrected\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 19\n          }\n        })\n      }, {\n        cardColor: 'warning',\n        imageIcon: require('../../../../../assets/images/dashboard/files-icon.png'),\n        title: this.state.countesEducationalFiles,\n        subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"homework.educational.files\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 19\n          }\n        })\n      }];\n    }\n\n    const {\n      classesList,\n      toDoData,\n      subjects\n    } = this.state;\n    console.log('====================================');\n    console.log(this.props.establishmentData);\n    console.log('====================================');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper bg-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }, detailCards.map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"col-xl-3 col-lg-3 col-md-3 col-sm-7 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(IconWithTextCard, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    })))), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"todo-filter:visit\",\n      yes: () => /*#__PURE__*/React.createElement(CardBox, {\n        styleName: \"col-lg-12 text-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"todo-filter-class:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-2 text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          required: true,\n          name: \"class_id\",\n          id: \"class_id\",\n          select: true,\n          label: /*#__PURE__*/React.createElement(IntlMessages, {\n            id: \"components.student.formadd.classe\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 36\n            }\n          }),\n          value: this.state.class_id,\n          onChange: this.handleChangeClass(\"class_id\"),\n          SelectProps: {},\n          margin: \"normal\",\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 27\n          }\n        }, classesList.map(classe => /*#__PURE__*/React.createElement(MenuItem, {\n          key: classe.id,\n          value: classe.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 31\n          }\n        }, classe.name)))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"todo-filter-subject:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-2 text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          required: true,\n          name: \"subject_id\",\n          id: \"subject_id\",\n          select: true,\n          label: /*#__PURE__*/React.createElement(IntlMessages, {\n            id: \"components.note.subject\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 36\n            }\n          }),\n          value: this.state.subject_id,\n          onChange: this.handleChangeSubject('subject_id'),\n          SelectProps: {},\n          margin: \"normal\",\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(MenuItem, {\n          key: \"0\",\n          value: \"0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"all.subject\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 31\n          }\n        })), subjects.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n          key: option.id,\n          value: option.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 31\n          }\n        }, getName(option))))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"homework-button-add\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-8 text-right \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Fab, {\n          size: \"small\",\n          color: \"primary\",\n          \"aria-label\": \"Add\",\n          onClick: () => {\n            this.setState({\n              addTodo: true\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(AddIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    })), this.props.success ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IntlMessages, {\n      id: this.props.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 48\n      }\n    }), \" \")) : '', this.props.error ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IntlMessages, {\n      id: this.props.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 48\n      }\n    }), \" \")) : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListHomework, {\n      toDos: toDoData,\n      roleId: this.props.userProfile.role_id,\n      filtreListToDo: this.filtreListToDo,\n      classesList: this.state.classesList,\n      classId: this.state.class_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }\n    }), this.state.addTodo ? /*#__PURE__*/React.createElement(AddHomework, {\n      cancelModal: this.handleCancel,\n      listSubject: this.props.subjects,\n      classesList: this.state.classesList,\n      establishmentData: this.props.establishmentData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 33\n      }\n    }) : ''));\n  }\n\n}\n\nconst mapStateToProps = ({\n  toDo,\n  settings,\n  auth,\n  establishment,\n  classes,\n  subject,\n  alert\n}) => {\n  const {\n    width\n  } = settings;\n  const {\n    alertMessage,\n    showMessage,\n    currentTodo,\n    user,\n    toDos,\n    conversation,\n    toDosForParent,\n    toDosForAdmin\n  } = toDo;\n  const {\n    userProfile\n  } = auth;\n  const {\n    remoteEstablishments\n  } = establishment;\n  const {\n    remoteSubjects,\n    establishmentData\n  } = subject;\n  const {\n    error,\n    success,\n    message\n  } = alert;\n  return {\n    width,\n    getAllTodo,\n    alertMessage,\n    showMessage,\n    currentTodo,\n    user,\n    toDos,\n    conversation,\n    userProfile,\n    toDosForParent,\n    toDosForAdmin,\n    remoteEstablishments,\n    classes,\n    remoteSubjects,\n    error,\n    success,\n    message,\n    establishmentData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTodo,\n  getAllTodoForProfessor,\n  getAllTodoForAdmin,\n  getEstablishment,\n  getLevelByEstablishmentId,\n  getSubjectsByEstablishmentId,\n  getClassesByEstablishmentId,\n  getAllTodo,\n  cleanState\n})(Homework);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js"],"names":["React","ListHomework","_","roleIdProfessor","roleIdAdmin","roleIdParent","roleIdStudent","IntlMessages","getLevelByEstablishmentId","getSubjectsByEstablishmentId","subjectsByLevelBySection","AddHomework","getClassesByEstablishmentId","classService","getAllTodoForProfessor","getAllTodoForAdmin","fetchTodo","getAllTodo","cleanState","connect","getEstablishment","UncontrolledAlert","Can","RoleContext","Fab","AddIcon","CardBox","TextField","MenuItem","getName","IconWithTextCard","moment","countesHomeworkUncorrected","Homework","Component","constructor","props","handleChangeClass","name","event","data","state","classesList","find","item","id","target","value","homeworkFiltredByClassId","toDos","forEach","element","isEmpty","homeworkClass","class_id","push","setState","toDoData","levelId","level_id","subjects","subjectList","filter","userProfile","role_id","subjectsList","map","handleChangeSubject","homeworkFiltredBySubject","subject_id","establishment_id","addTodo","countesStudents","countesFiles","countesEducationalFiles","handleCancel","bind","filtreListToDo","getSubjectsStudent","getSubjectsParent","apiEndpoint","localStorage","token","get","then","response","subjectFiltred","remoteSubjects","head","student_parents","student","class","section_id","subjectId","componentDidUpdate","prevProps","studentHomework","classes","establishmentId","schoolYear","school_year_id","componentDidMount","profileId","count","res","uniqBy","componentWillUnmount","render","detailCards","cardColor","imageIcon","require","title","subTitle","length","console","log","establishmentData","index","role","classe","option","success","message","error","mapStateToProps","toDo","settings","auth","establishment","subject","alert","width","alertMessage","showMessage","currentTodo","user","conversation","toDosForParent","toDosForAdmin","remoteEstablishments"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ListHomework from './ListHomework';\nimport _ from 'lodash';\nimport { roleIdProfessor, roleIdAdmin, roleIdParent, roleIdStudent } from '../../../../../config/config';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { getLevelByEstablishmentId } from '../../../../../actions/classLevelAction';\nimport { getSubjectsByEstablishmentId, subjectsByLevelBySection } from '../../../../../actions/subjectAction';\nimport AddHomework from './AddHomework';\nimport { getClassesByEstablishmentId } from '../../../../../actions/classeAction'\nimport { classService } from \"../../../../../_services/class.service\";\nimport { getAllTodoForProfessor, getAllTodoForAdmin, fetchTodo, getAllTodo, cleanState } from '../../../../../actions/ToDo';\nimport { connect } from 'react-redux'\nimport { getEstablishment } from '../../../../../actions/establishmentAction';\nimport { UncontrolledAlert } from 'reactstrap';\nimport Can from '../../../../../can';\nimport { RoleContext } from \"../../../../../Context\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { getName } from \"../../../../../actions/countriesAction\";\nimport IconWithTextCard from \"./IconWithTextCard\";\nimport moment from 'moment'\n\nlet countesHomeworkUncorrected = [];\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      establishment_id: '',\n      classesList: [],\n      subjectList: [],\n      addTodo: false,\n      class_id: 0,\n      subject_id: 0,\n      subjects: [],\n      toDoData: [],\n      homeworkFiltredByClassId: [],\n      countesStudents: 0,\n      countesFiles: 0,\n      countesEducationalFiles: 0\n\n    }\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.filtreListToDo = this.filtreListToDo.bind(this);\n    this.getSubjectsStudent = this.getSubjectsStudent.bind(this);\n    this.getSubjectsParent = this.getSubjectsParent.bind(this);\n  }\n  getSubjectsParent() {\n    let apiEndpoint = `/parents/?access_token=${localStorage.token}&filter[where][profile_id]=${this.props.userProfile.id}&filter[include][student_parents][student][class]`;\n    classService.get(apiEndpoint)\n      .then(response => {\n        let subjectFiltred = subjectsByLevelBySection(this.props.remoteSubjects, _.head(response.data).student_parents[0].student.class.level_id, _.head(response.data).student_parents[0].student.class.section_id)\n        this.setState({ subjects: subjectFiltred })\n      })\n  }\n\n  getSubjectsStudent() {\n    let apiEndpoint = `/students/?access_token=${localStorage.token}&filter[where][profile_id]=${this.props.userProfile.id}&filter[include]=class`;\n    classService.get(apiEndpoint)\n      .then(response => {\n        let subjectFiltred = subjectsByLevelBySection(this.props.remoteSubjects, _.head(response.data).class.level_id, _.head(response.data).class.section_id)\n        this.setState({ subjects: subjectFiltred })\n      })\n  }\n\n  filtreListToDo(subjectId) {\n    this.setState({ subject_id: subjectId })\n  }\n\n  handleChangeClass = name => event => {\n\n    let data = this.state.classesList.find(item => item.id === event.target.value)    \n    let homeworkFiltredByClassId = [];\n    this.props.toDos.forEach(element => {\n      if (!_.isEmpty(element.homeworkClass)) {\n        _.forEach(element.homeworkClass, function (value) {\n          if (value.class_id === event.target.value) {\n            homeworkFiltredByClassId.push(element)\n          }\n        });\n      }\n    });\n    this.setState({ toDoData: homeworkFiltredByClassId, homeworkFiltredByClassId: homeworkFiltredByClassId })\n    let levelId = data.level_id;\n    let subjects = this.state.subjectList.filter(element => element.level_id === levelId)\n    if (this.props.userProfile.role_id === roleIdProfessor) {\n      let subjectsList = _.map(subjects, 'subject')\n      this.setState({ [name]: event.target.value, subjects: subjectsList });\n    } else if (this.props.userProfile.role_id === roleIdAdmin) {      \n      this.setState({ [name]: event.target.value, subjects: subjects });\n    }\n\n\n  };\n\n  handleChangeSubject = name => event => {\n    this.setState({ [name]: event.target.value });\n    let homeworkFiltredBySubject = []\n    if (!_.isEmpty(this.state.homeworkFiltredByClassId)) {\n      if (event.target.value === '0') {\n        this.setState({ toDoData: this.state.homeworkFiltredByClassId });\n      } else {\n        homeworkFiltredBySubject = this.state.homeworkFiltredByClassId.filter(element => element.subject_id === event.target.value)\n        this.setState({ toDoData: homeworkFiltredBySubject })\n      }\n\n    } else {\n      if (event.target.value === '0') {\n        this.setState({ toDoData: this.props.toDos });\n      } else {\n        homeworkFiltredBySubject = this.props.toDos.filter(element => element.subject_id === event.target.value)\n        this.setState({ toDoData: homeworkFiltredBySubject })\n      }\n    }\n  };\n\n  handleCancel() {\n    this.setState({ addTodo: false })\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.toDos !== this.props.toDos) {\n      this.props.toDos.map(item => item.studentHomework = false)\n      this.setState({ toDoData: this.props.toDos })\n    } if (prevProps.classes !== this.props.classes) {\n      this.setState({ classesList: this.props.classes })\n    }\n    if (prevProps.remoteSubjects !== this.props.remoteSubjects) {\n\n      if (this.props.userProfile.role_id === roleIdStudent) {\n        this.setState({ subjectList: this.props.remoteSubjects })\n        this.getSubjectsStudent()\n      } else if (this.props.userProfile.role_id === roleIdParent) {\n        this.setState({ subjectList: this.props.remoteSubjects })\n        this.getSubjectsParent()\n      }\n      else if (this.props.userProfile.role_id === roleIdAdmin) {\n        this.setState({ subjectList: this.props.remoteSubjects })\n      }\n    }\n    if (prevProps.userProfile !== this.props.userProfile)\n    {\n      const establishmentId = this.props.userProfile.establishment_id;\n      const schoolYear = this.props.userProfile.school_year_id;\n      this.props.getClassesByEstablishmentId(establishmentId, schoolYear);\n      this.props.getAllTodoForAdmin(establishmentId,schoolYear)\n    }\n  }\n\n  componentDidMount() {\n\n    let apiEndpoint = '';\n     const establishmentId = this.props.userProfile.establishment_id;\n    const schoolYear = this.props.userProfile.school_year_id;\n    const profileId = this.props.userProfile.id;\n    this.props.getLevelByEstablishmentId(establishmentId)\n    this.props.getSubjectsByEstablishmentId(establishmentId)\n    this.props.toDos.map(item => item.studentHomework = false)\n    this.setState({ toDoData: this.props.toDos })\n\n    apiEndpoint = `/profiles/count?access_token=${localStorage.token}&where={\"establishment_id\":${establishmentId},\"role_id\":${roleIdStudent}}`;\n    classService.get(apiEndpoint).then(response => {\n      if (response) {\n        this.setState({ countesStudents: response.data.count });\n      }\n    });\n\n    if (this.props.userProfile.role_id === roleIdProfessor) {\n      this.props.getAllTodoForProfessor(profileId)\n      apiEndpoint = `/professors/?access_token=${localStorage.token}&filter={\"where\":{\"profile_id\":` + profileId + `}}`;\n      classService.get(apiEndpoint)\n        .then(response => {\n          apiEndpoint = `/classes_professors/?access_token=${localStorage.token}&filter[include][class]&filter[where][professor_id]=` + response.data[0].id;\n          classService.get(apiEndpoint)\n            .then(res => {\n              this.setState({ classesList: _.uniqBy(_.map(res.data, 'class'), 'id') })\n            })\n          apiEndpoint = `/prof_subjects/?access_token=${localStorage.token}&filter[include][subject]&filter[where][professor_id]=` + response.data[0].id;\n          classService.get(apiEndpoint)\n            .then(res => {\n              this.setState({ subjectList: res.data })\n            })\n        })\n\n    }\n    else if (this.props.userProfile.role_id === roleIdAdmin) {\n      this.props.getClassesByEstablishmentId(establishmentId, schoolYear);\n      this.props.getAllTodoForAdmin(establishmentId,schoolYear)\n    }\n    else if (this.props.userProfile.role_id === roleIdParent) {\n      this.props.getAllTodo(this.props.userProfile.id, 'fetchHomeworkByProfileIdForParent');\n      this.getSubjectsParent()\n    }\n\n    else if (this.props.userProfile.role_id === roleIdStudent) {\n      this.props.getAllTodo(this.props.userProfile.id, 'fetchHomeworkByProfileIdForStudent');\n      this.getSubjectsStudent()\n    }\n\n  };\ncomponentWillUnmount(){\n  this.props.cleanState()\n}\n\n  render() {\n let detailCards = [];\n if(this.props.userProfile.role_id === roleIdAdmin || this.props.userProfile.role_id === roleIdProfessor){\n  //countesHomeworkUncorrected = this.props.toDos.filter(element => moment(element.homeworkClass[0].correction_date ).isAfter(moment().format()))\n     detailCards = [\n      {\n        cardColor: 'primary',\n        imageIcon: require('../../../../../assets/images/dashboard/teams-icon.png'),\n        title: this.state.countesStudents,\n        subTitle: <IntlMessages id=\"message.Numbers.of.students\" />\n      }, {\n        cardColor: 'secondary',\n        imageIcon: require('../../../../../assets/images/dashboard/tasks-icon.png'),\n        title: this.state.countesFiles,\n        subTitle: <IntlMessages id=\"homework.file\" />\n      }, {\n        cardColor: 'info',\n        imageIcon: require('../../../../../assets/images/dashboard/project-icon.png'),\n        title: countesHomeworkUncorrected.length,\n        title: '0',\n        subTitle: <IntlMessages id=\"homework.uncorrected\" />\n      }, {\n        cardColor: 'warning',\n        imageIcon: require('../../../../../assets/images/dashboard/files-icon.png'),\n        title: this.state.countesEducationalFiles,\n        subTitle: <IntlMessages id=\"homework.educational.files\" />\n      }\n    ]\n }\n \n    const { classesList, toDoData, subjects } = this.state;\n    console.log('====================================');\n    console.log(this.props.establishmentData);\n    console.log('====================================');\n    return (\n      <div className=\"app-wrapper bg-white\">\n        <div className=\"row\">\n          {detailCards.map((data, index) => <div key={index} className=\"col-xl-3 col-lg-3 col-md-3 col-sm-7 col-6\">\n            <IconWithTextCard data={data} />\n          </div>)\n          }\n\n        </div>\n        <RoleContext.Consumer>\n          {({ role }) => (\n            <Can\n              role={role}\n              perform=\"todo-filter:visit\"\n              yes={() => (\n                <CardBox styleName=\"col-lg-12 text-primary\">\n                  <div className=\"row\">\n                    <Can\n                      role={role}\n                      perform=\"todo-filter-class:visit\"\n                      yes={() => (\n\n                        <div className=\"col-md-2 text-left\">\n                          <TextField\n                            required\n                            name=\"class_id\"\n                            id=\"class_id\"\n                            select\n                            label={<IntlMessages id=\"components.student.formadd.classe\" />}\n                            value={this.state.class_id}\n                            onChange={this.handleChangeClass(\"class_id\")}\n                            SelectProps={{}}\n                            margin=\"normal\"\n                            fullWidth\n                          >\n                            {classesList.map(classe => (\n                              <MenuItem key={classe.id} value={classe.id}>\n                                {classe.name}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        </div>\n                      )}\n                    />\n                    <Can\n                      role={role}\n                      perform=\"todo-filter-subject:visit\"\n                      yes={() => (\n                        <div className=\"col-md-2 text-left\">\n                          <TextField\n                            required\n                            name=\"subject_id\"\n                            id=\"subject_id\"\n                            select\n                            label={<IntlMessages id=\"components.note.subject\" />}\n                            value={this.state.subject_id}\n                            onChange={this.handleChangeSubject('subject_id')}\n                            SelectProps={{}}\n                            margin=\"normal\"\n                            fullWidth >\n                            <MenuItem key=\"0\" value=\"0\">\n                              <IntlMessages id=\"all.subject\" />\n                            </MenuItem>\n                            {subjects.map(option => (\n                              < MenuItem key={option.id} value={option.id} >\n                                {getName(option)}\n                              </MenuItem>\n\n                            ))}\n\n                          </TextField>\n                        </div>\n\n                      )}\n                    />\n\n                    <Can\n                      role={role}\n                      perform=\"homework-button-add\"\n                      yes={() => (\n                        <div className=\"col-md-8 text-right \" >\n                          <Fab\n                            size=\"small\"\n                            color=\"primary\"\n                            aria-label=\"Add\"\n                            onClick={() => {\n                              this.setState({ addTodo: true })\n                            }}\n                          >\n                            <AddIcon />\n                          </Fab>\n\n                        </div>)}\n                    />\n                  </div>\n                </CardBox>\n\n\n              )}\n            />\n\n          )}\n        </RoleContext.Consumer>\n\n        {this.props.success ? (\n          <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\"> {<IntlMessages id={this.props.message} />} </span>\n          </UncontrolledAlert>\n        ) : (\n            ''\n          )}\n        {this.props.error ? (\n          <UncontrolledAlert className=\"alert-addon-card bg-danger bg-danger text-white shadow-lg\">\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\"> {<IntlMessages id={this.props.message} />} </span>\n          </UncontrolledAlert>\n        ) : (\n            ''\n          )}\n\n        <div className=\"col-lg-12 text-primary\">\n\n          <ListHomework\n            toDos={toDoData}\n            roleId={this.props.userProfile.role_id}\n            filtreListToDo={this.filtreListToDo}\n            classesList={this.state.classesList}\n            classId={this.state.class_id} />\n\n          {this.state.addTodo ? <AddHomework \n          cancelModal={this.handleCancel} \n          listSubject={this.props.subjects} \n          classesList={this.state.classesList}\n          establishmentData={this.props.establishmentData} /> : ''}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ toDo, settings, auth, establishment, classes, subject, alert }) => {\n  const { width } = settings;\n  const {\n    alertMessage,\n    showMessage,\n    currentTodo,\n    user,\n    toDos,\n    conversation,\n    toDosForParent,\n    toDosForAdmin,\n\n  } = toDo;\n  const { userProfile } = auth;\n  const { remoteEstablishments } = establishment;\n  const { remoteSubjects, establishmentData } = subject;\n  const { error, success, message } = alert;\n  return {\n    width,\n    getAllTodo,\n    alertMessage,\n    showMessage,\n    currentTodo,\n    user,\n    toDos,\n    conversation,\n    userProfile,\n    toDosForParent,\n    toDosForAdmin,\n    remoteEstablishments,\n    classes,\n    remoteSubjects,\n    error,\n    success,\n    message,\n    establishmentData\n  };\n\n};\nexport default connect(mapStateToProps, {\n  fetchTodo,\n  getAllTodoForProfessor,\n  getAllTodoForAdmin,\n  getEstablishment,\n  getLevelByEstablishmentId,\n  getSubjectsByEstablishmentId,\n  getClassesByEstablishmentId,\n  getAllTodo, \n  cleanState\n})(Homework);\n"]},"metadata":{},"sourceType":"module"}