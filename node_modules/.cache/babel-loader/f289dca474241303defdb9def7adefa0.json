{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/Learning/routes/BooksManagement/IntegrationAutosuggest.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nconst suggestions = [{\n  label: 'Afghanistan'\n}, {\n  label: 'Aland Islands'\n}, {\n  label: 'Albania'\n}, {\n  label: 'Algeria'\n}, {\n  label: 'American Samoa'\n}, {\n  label: 'Andorra'\n}, {\n  label: 'Angola'\n}, {\n  label: 'Anguilla'\n}, {\n  label: 'Antarctica'\n}, {\n  label: 'Antigua and Barbuda'\n}, {\n  label: 'Argentina'\n}, {\n  label: 'Armenia'\n}, {\n  label: 'Aruba'\n}, {\n  label: 'Australia'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Azerbaijan'\n}, {\n  label: 'Bahamas'\n}, {\n  label: 'Bahrain'\n}, {\n  label: 'Bangladesh'\n}, {\n  label: 'Barbados'\n}, {\n  label: 'Belarus'\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Belize'\n}, {\n  label: 'Benin'\n}, {\n  label: 'Bermuda'\n}, {\n  label: 'Bhutan'\n}, {\n  label: 'Bolivia, Plurinational State of'\n}, {\n  label: 'Bonaire, Sint Eustatius and Saba'\n}, {\n  label: 'Bosnia and Herzegovina'\n}, {\n  label: 'Botswana'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Brunei Darussalam'\n}];\n\nfunction renderInput(inputProps) {\n  const {\n    classes,\n    ref,\n    ...other\n  } = inputProps;\n  return /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    inputref: ref,\n    InputProps: {\n      classes: {\n        input: classes.input\n      },\n      ...other\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction renderSuggestion(suggestion, {\n  query,\n  isHighlighted\n}) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    selected: isHighlighted,\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, parts.map((part, index) => {\n    return part.highlight ? /*#__PURE__*/React.createElement(\"span\", {\n      key: String(index),\n      style: {\n        fontWeight: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, part.text) : /*#__PURE__*/React.createElement(\"strong\", {\n      key: String(index),\n      style: {\n        fontWeight: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, part.text);\n  })));\n}\n\nfunction renderSuggestionsContainer(options) {\n  const {\n    containerProps,\n    children\n  } = options;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-relative z-index-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, containerProps, {\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), children));\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nfunction getSuggestions(value) {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n  return inputLength === 0 ? [] : suggestions.filter(suggestion => {\n    const keep = count < 5 && suggestion.label.toLowerCase().slice(0, inputLength) === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nconst styles = theme => ({\n  container: {\n    flexGrow: 1,\n    position: 'relative',\n    height: 100,\n    width: '60%'\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit * 3,\n    left: 0,\n    right: 0,\n    zIndex: 10\n  },\n  suggestion: {\n    display: 'block'\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none'\n  }\n});\n\nclass IntegrationAutosuggest extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n\n    this.handleSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    this.handleSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.handleChange = (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Autosuggest, {\n      theme: {\n        container: classes.container,\n        suggestionsContainerOpen: classes.suggestionsContainerOpen,\n        suggestionsList: classes.suggestionsList,\n        suggestion: classes.suggestion\n      },\n      renderInputComponent: renderInput,\n      suggestions: this.state.suggestions,\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n      renderSuggestionsContainer: renderSuggestionsContainer,\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: {\n        classes,\n        placeholder: 'Recherche',\n        value: this.state.value,\n        onChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nIntegrationAutosuggest.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(IntegrationAutosuggest);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/Learning/routes/BooksManagement/IntegrationAutosuggest.js"],"names":["React","PropTypes","Autosuggest","match","parse","TextField","Paper","MenuItem","withStyles","suggestions","label","renderInput","inputProps","classes","ref","other","input","renderSuggestion","suggestion","query","isHighlighted","matches","parts","map","part","index","highlight","String","fontWeight","text","renderSuggestionsContainer","options","containerProps","children","getSuggestionValue","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","count","filter","keep","slice","styles","theme","container","flexGrow","position","height","width","suggestionsContainerOpen","marginTop","spacing","unit","marginBottom","left","right","zIndex","display","suggestionsList","margin","padding","listStyleType","IntegrationAutosuggest","Component","state","handleSuggestionsFetchRequested","setState","handleSuggestionsClearRequested","handleChange","event","newValue","render","props","placeholder","onChange","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst suggestions = [\n  {label: 'Afghanistan'},\n  {label: 'Aland Islands'},\n  {label: 'Albania'},\n  {label: 'Algeria'},\n  {label: 'American Samoa'},\n  {label: 'Andorra'},\n  {label: 'Angola'},\n  {label: 'Anguilla'},\n  {label: 'Antarctica'},\n  {label: 'Antigua and Barbuda'},\n  {label: 'Argentina'},\n  {label: 'Armenia'},\n  {label: 'Aruba'},\n  {label: 'Australia'},\n  {label: 'Austria'},\n  {label: 'Azerbaijan'},\n  {label: 'Bahamas'},\n  {label: 'Bahrain'},\n  {label: 'Bangladesh'},\n  {label: 'Barbados'},\n  {label: 'Belarus'},\n  {label: 'Belgium'},\n  {label: 'Belize'},\n  {label: 'Benin'},\n  {label: 'Bermuda'},\n  {label: 'Bhutan'},\n  {label: 'Bolivia, Plurinational State of'},\n  {label: 'Bonaire, Sint Eustatius and Saba'},\n  {label: 'Bosnia and Herzegovina'},\n  {label: 'Botswana'},\n  {label: 'Bouvet Island'},\n  {label: 'Brazil'},\n  {label: 'British Indian Ocean Territory'},\n  {label: 'Brunei Darussalam'},\n];\n\nfunction renderInput(inputProps) {\n  const {classes, ref, ...other} = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      inputref={ref}\n      InputProps={{\n        classes: {\n          input: classes.input,\n        },\n        ...other,\n      }}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestion, {query, isHighlighted}) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map((part, index) => {\n          return part.highlight ? (\n            <span key={String(index)} style={{fontWeight: 300}}>\n              {part.text}\n            </span>\n          ) : (\n            <strong key={String(index)} style={{fontWeight: 500}}>\n              {part.text}\n            </strong>\n          );\n        })}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction renderSuggestionsContainer(options) {\n  const {containerProps, children} = options;\n\n  return (\n    <div className=\"position-relative z-index-20\">\n      <Paper {...containerProps} square>\n        {children}\n      </Paper>\n    </div>\n  );\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nfunction getSuggestions(value) {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n      const keep =\n        count < 5 && suggestion.label.toLowerCase().slice(0, inputLength) === inputValue;\n\n      if (keep) {\n        count += 1;\n      }\n\n      return keep;\n    });\n}\n\nconst styles = theme => ({\n  container: {\n    flexGrow: 1,\n    position: 'relative',\n    height: 100,\n    width: '60%',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit * 3,\n    left: 0,\n    right: 0,\n    zIndex: 10,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n});\n\nclass IntegrationAutosuggest extends React.Component {\n  state = {\n    value: '',\n    suggestions: [],\n  };\n\n  handleSuggestionsFetchRequested = ({value}) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  handleSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  handleChange = (event, {newValue}) => {\n    this.setState({\n      value: newValue,\n    });\n  };\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n      <Autosuggest\n        theme={{\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion,\n        }}\n        renderInputComponent={renderInput}\n        suggestions={this.state.suggestions}\n        onSuggestionsFetchRequested={this.handleSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.handleSuggestionsClearRequested}\n        renderSuggestionsContainer={renderSuggestionsContainer}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        inputProps={{\n          classes,\n          placeholder: 'Recherche',\n          value: this.state.value,\n          onChange: this.handleChange,\n        }}\n      />\n    );\n  }\n}\n\nIntegrationAutosuggest.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntegrationAutosuggest);"]},"metadata":{},"sourceType":"module"}