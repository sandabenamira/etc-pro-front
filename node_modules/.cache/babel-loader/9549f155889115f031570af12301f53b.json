{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/LevelTest/Tests/Test.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport baseUrl from \"../../../../config/config\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport CardBox from \"../../../../components/CardBox/index\";\nimport Can from \"../../../../can\";\nimport { RoleContext } from \"../../../../Context\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TextField from \"@material-ui/core/TextField\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport RemoveSharpIcon from \"@material-ui/icons/RemoveSharp\";\nimport { connect } from \"react-redux\";\nimport { addServiceV2 } from \"../../../../actions/ServiceAction\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport TestItem from \"./TestItem\";\nimport AddLevelTest from \"./AddLevelTest\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass Tests extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n\n      if (name == \"filter_level_id\") {\n        let levelTestsFiltred = this.props.levelTests;\n\n        if (event.target.value != 0) {\n          levelTestsFiltred = levelTestsFiltred.filter(element => element.id_level == event.target.value);\n        }\n\n        this.setState({\n          filter_subject_id: \"\",\n          levelTestsFiltred\n        });\n      } else if (name == \"filter_subject_id\") {\n        let levelTestsFiltred = this.props.levelTests;\n\n        if (event.target.value != 0) {\n          levelTestsFiltred = levelTestsFiltred.filter(element => element.id_subject == event.target.value && element.id_level == this.state.filter_level_id);\n        } else {\n          levelTestsFiltred = levelTestsFiltred.filter(element => element.id_level == this.state.filter_level_id);\n        }\n\n        this.setState({\n          levelTestsFiltred\n        });\n      }\n    };\n\n    this.state = {\n      open: true,\n      addTest: false,\n      filter_level_id: \"\",\n      filter_subject_id: \"\",\n      levelTestsFiltred: []\n    };\n    this.openAddModal = this.openAddModal.bind(this);\n    this.openAddTest = this.openAddTest.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      levelTestsFiltred: this.props.levelTests\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.levelTests !== this.props.levelTests) {\n      this.setState({\n        levelTestsFiltred: this.props.levelTests\n      });\n    }\n  }\n\n  openAddTest() {\n    this.setState(previousState => ({\n      addTest: !previousState.addTest\n    }));\n  }\n\n  openAddModal() {\n    this.setState(previousState => ({\n      open: !previousState.open\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"add-test-level\",\n      yes: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-start align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"level.test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      })), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(Fab, {\n        size: \"small\",\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        onClick: this.openAddModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 23\n        }\n      }, this.state.open ? /*#__PURE__*/React.createElement(ArrowUpwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 27\n        }\n      }) : /*#__PURE__*/React.createElement(ArrowDownwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }), this.state.open ? /*#__PURE__*/React.createElement(React.Fragment, null, \" \", this.props.successStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n        className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"icon-addon alert-addon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-check zmdi-hc-fw zmdi-hc-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }\n      }, \" \", this.props.message, \" \")) : \"\", this.props.errorStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n        className: \"alert-addon-card bg-danger bg-danger text-white shadow-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"icon-addon alert-addon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-close-circle-o zmdi-hc-fw zmdi-hc-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      }, \" \", this.props.message)) : \"\", /*#__PURE__*/React.createElement(CardBox, {\n        CardBox: true,\n        styleName: \"col-lg-12 text-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row animated slideInUpTiny animation-duration-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row d-flex justify-content-start align-items-center col-md-12\",\n        style: {\n          paddingBottom: \"2%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"new.level.test.add.test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 33\n        }\n      })), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(Fab, {\n        size: \"small\",\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        onClick: this.openAddTest,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 31\n        }\n      }, this.state.addTest ? /*#__PURE__*/React.createElement(RemoveSharpIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 35\n        }\n      }) : /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 35\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12  d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 text-left \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        className: \"mt-0\",\n        required: true,\n        name: \"admin_class_id\",\n        id: \"student_class_id\",\n        select: true,\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.note.niveau\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 39\n          }\n        }),\n        onChange: this.handleChange(\"filter_level_id\"),\n        value: this.state.filter_level_id,\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        key: \"0\",\n        value: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 37\n        }\n      }, \"Tout les niveaux\"), this.props.classLevels.map(level => {\n        if (this.props.profLevels.indexOf(level.id) >= 0) {\n          return /*#__PURE__*/React.createElement(MenuItem, {\n            key: level.id,\n            value: level.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 43\n            }\n          }, level.name);\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 text-left \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        className: \"mt-0\",\n        required: true,\n        name: \"admin_class_id\",\n        id: \"student_class_id\",\n        select: true,\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.note.subject\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 39\n          }\n        }),\n        value: this.state.filter_subject_id,\n        onChange: this.handleChange(\"filter_subject_id\"),\n        SelectProps: {},\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 35\n        }\n      }, this.state.filter_level_id > 0 ? /*#__PURE__*/React.createElement(MenuItem, {\n        key: \"0\",\n        value: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"all.label.subject\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 41\n        }\n      })) : \"\", this.props.profSubjectList.map(subject => {\n        if (subject.level_id == this.state.filter_level_id) {\n          return /*#__PURE__*/React.createElement(MenuItem, {\n            key: subject.id,\n            value: subject.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 45\n            }\n          }, this.props.settings.languageId == \"tunisia\" ? subject.name_AR : this.props.settings.languageId == \"french\" ? subject.name_FR : subject.name_EN);\n        }\n      }))))), this.state.levelTestsFiltred.map((element, index) => {\n        return /*#__PURE__*/React.createElement(TestItem, {\n          key: index,\n          test: element,\n          professorClassesList: this.props.professorClassesList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 35\n          }\n        });\n      }))), this.state.addTest === true ? /*#__PURE__*/React.createElement(AddLevelTest, {\n        addIsopen: this.state.addTest,\n        handleCancel: this.openAddTest,\n        profLevels: this.props.profLevels,\n        profSubjectList: this.props.profSubjectList,\n        questions: this.props.questions,\n        professorClassesList: this.props.professorClassesList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 27\n        }\n      }) : \"\") : \"\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    settings: state.settings.locale,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message\n  };\n};\n\nexport default connect(mapStateToProps)(Tests);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/LevelTest/Tests/Test.js"],"names":["React","axios","baseUrl","IntlMessages","CardBox","Can","RoleContext","Fab","AddIcon","TextField","RadioGroup","Radio","FormControlLabel","Button","RemoveSharpIcon","connect","addServiceV2","FormHelperText","UncontrolledAlert","ArrowDownwardIcon","ArrowUpwardIcon","TestItem","AddLevelTest","MenuItem","Tests","Component","constructor","props","handleChange","name","event","setState","target","value","levelTestsFiltred","levelTests","filter","element","id_level","filter_subject_id","id_subject","state","filter_level_id","open","addTest","openAddModal","bind","openAddTest","componentWillMount","componentDidUpdate","prevProps","prevState","previousState","render","role","handleSubmit","successStatus","message","errorStatus","paddingBottom","classLevels","map","level","profLevels","indexOf","id","profSubjectList","subject","level_id","settings","languageId","name_AR","name_FR","name_EN","index","professorClassesList","questions","mapStateToProps","userProfile","auth","ClassLevels","remoteLevels","locale","alert","success","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport baseUrl from \"../../../../config/config\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport CardBox from \"../../../../components/CardBox/index\";\nimport Can from \"../../../../can\";\nimport { RoleContext } from \"../../../../Context\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TextField from \"@material-ui/core/TextField\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport RemoveSharpIcon from \"@material-ui/icons/RemoveSharp\";\nimport { connect } from \"react-redux\";\nimport { addServiceV2 } from \"../../../../actions/ServiceAction\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport TestItem from \"./TestItem\";\nimport AddLevelTest from \"./AddLevelTest\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass Tests extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: true,\n      addTest: false,\n      filter_level_id: \"\",\n      filter_subject_id: \"\",\n      levelTestsFiltred: [],\n    };\n    this.openAddModal = this.openAddModal.bind(this);\n    this.openAddTest = this.openAddTest.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentWillMount() {\n    this.setState({ levelTestsFiltred: this.props.levelTests });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.levelTests !== this.props.levelTests) {\n      this.setState({ levelTestsFiltred: this.props.levelTests });\n    }\n  }\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    if (name == \"filter_level_id\") {\n      let levelTestsFiltred = this.props.levelTests;\n      if (event.target.value != 0) {\n        levelTestsFiltred = levelTestsFiltred.filter(\n          (element) => element.id_level == event.target.value\n        );\n      }\n      this.setState({ filter_subject_id: \"\", levelTestsFiltred });\n    } else if (name == \"filter_subject_id\") {\n      let levelTestsFiltred = this.props.levelTests;\n      if (event.target.value != 0) {\n        levelTestsFiltred = levelTestsFiltred.filter(\n          (element) =>\n            element.id_subject == event.target.value &&\n            element.id_level == this.state.filter_level_id\n        );\n      } else {\n        levelTestsFiltred = levelTestsFiltred.filter(\n          (element) => element.id_level == this.state.filter_level_id\n        );\n      }\n      this.setState({ levelTestsFiltred });\n    }\n  };\n  openAddTest() {\n    this.setState((previousState) => ({\n      addTest: !previousState.addTest,\n    }));\n  }\n  openAddModal() {\n    this.setState((previousState) => ({\n      open: !previousState.open,\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"col-lg-12\">\n        <RoleContext.Consumer>\n          {({ role }) => (\n            <Can\n              role={role}\n              perform=\"add-test-level\"\n              yes={() => (\n                <div>\n                  <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n                    <div className=\"d-flex justify-content-start align-items-center\">\n                      <h1>\n                        <IntlMessages id=\"level.test\" />\n                      </h1>\n                      &nbsp;&nbsp;&nbsp;\n                      <Fab\n                        size=\"small\"\n                        color=\"primary\"\n                        aria-label=\"Add\"\n                        onClick={this.openAddModal}\n                      >\n                        {this.state.open ? (\n                          <ArrowUpwardIcon />\n                        ) : (\n                          <ArrowDownwardIcon />\n                        )}\n                      </Fab>\n                    </div>\n                    <br />\n                    {this.state.open ? (\n                      <>\n                        {\" \"}\n                        {this.props.successStatus ? (\n                          <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n                            <span className=\"icon-addon alert-addon\">\n                              <i className=\"zmdi zmdi-check zmdi-hc-fw zmdi-hc-lg\" />\n                            </span>\n                            <span className=\"d-inline-block\">\n                              {\" \"}\n                              {this.props.message}{\" \"}\n                            </span>\n                          </UncontrolledAlert>\n                        ) : (\n                          \"\"\n                        )}\n                        {this.props.errorStatus ? (\n                          <UncontrolledAlert className=\"alert-addon-card bg-danger bg-danger text-white shadow-lg\">\n                            <span className=\"icon-addon alert-addon\">\n                              <i className=\"zmdi zmdi-close-circle-o zmdi-hc-fw zmdi-hc-lg\" />\n                            </span>\n                            <span className=\"d-inline-block\">\n                              {\" \"}\n                              {this.props.message}\n                            </span>\n                          </UncontrolledAlert>\n                        ) : (\n                          \"\"\n                        )}\n                        <CardBox CardBox styleName=\"col-lg-12 text-primary\">\n                          <div className=\"row animated slideInUpTiny animation-duration-3\">\n                            <div\n                              className=\"row d-flex justify-content-start align-items-center col-md-12\"\n                              style={{ paddingBottom: \"2%\" }}\n                            >\n                              <h2>\n                                <IntlMessages id=\"new.level.test.add.test\" />\n                              </h2>\n                              &nbsp;&nbsp;&nbsp;\n                              <Fab\n                                size=\"small\"\n                                color=\"primary\"\n                                aria-label=\"Add\"\n                                onClick={this.openAddTest}\n                              >\n                                {this.state.addTest ? (\n                                  <RemoveSharpIcon />\n                                ) : (\n                                  <AddIcon />\n                                )}\n                              </Fab>\n                              <div className=\"col-md-12  d-flex justify-content-center\">\n                                <div className=\"col-md-3 text-left \">\n                                  <TextField\n                                    className=\"mt-0\"\n                                    required\n                                    name=\"admin_class_id\"\n                                    id=\"student_class_id\"\n                                    select\n                                    label={\n                                      <IntlMessages id=\"components.note.niveau\" />\n                                    }\n                                    onChange={this.handleChange(\n                                      \"filter_level_id\"\n                                    )}\n                                    value={this.state.filter_level_id}\n                                    margin=\"normal\"\n                                    fullWidth\n                                  >\n                                    <MenuItem key=\"0\" value=\"0\">\n                                      Tout les niveaux\n                                    </MenuItem>\n                                    {this.props.classLevels.map((level) => {\n                                      if (\n                                        this.props.profLevels.indexOf(\n                                          level.id\n                                        ) >= 0\n                                      ) {\n                                        return (\n                                          <MenuItem\n                                            key={level.id}\n                                            value={level.id}\n                                          >\n                                            {level.name}\n                                          </MenuItem>\n                                        );\n                                      }\n                                    })}\n                                  </TextField>\n                                </div>\n\n                                <div className=\"col-md-3 text-left \">\n                                  <TextField\n                                    className=\"mt-0\"\n                                    required\n                                    name=\"admin_class_id\"\n                                    id=\"student_class_id\"\n                                    select\n                                    label={\n                                      <IntlMessages id=\"components.note.subject\" />\n                                    }\n                                    value={this.state.filter_subject_id}\n                                    onChange={this.handleChange(\n                                      \"filter_subject_id\"\n                                    )}\n                                    SelectProps={{}}\n                                    margin=\"normal\"\n                                    fullWidth\n                                  >\n                                    {this.state.filter_level_id > 0 ? (\n                                      <MenuItem key=\"0\" value=\"0\">\n                                        <IntlMessages id=\"all.label.subject\" />\n                                      </MenuItem>\n                                    ) : (\n                                      \"\"\n                                    )}\n                                    {this.props.profSubjectList.map(\n                                      (subject) => {\n                                        if (\n                                          subject.level_id ==\n                                          this.state.filter_level_id\n                                        ) {\n                                          return (\n                                            <MenuItem\n                                              key={subject.id}\n                                              value={subject.id}\n                                            >\n                                              {this.props.settings.languageId ==\n                                              \"tunisia\"\n                                                ? subject.name_AR\n                                                : this.props.settings\n                                                    .languageId == \"french\"\n                                                ? subject.name_FR\n                                                : subject.name_EN}\n                                            </MenuItem>\n                                          );\n                                        }\n                                      }\n                                    )}\n                                  </TextField>\n                                </div>\n                              </div>\n                            </div>\n                            {this.state.levelTestsFiltred.map(\n                              (element, index) => {\n                                return (\n                                  <TestItem\n                                    key={index}\n                                    test={element}\n                                    professorClassesList={\n                                      this.props.professorClassesList\n                                    }\n                                  />\n                                );\n                              }\n                            )}\n                          </div>\n                        </CardBox>\n                        {this.state.addTest === true ? (\n                          <AddLevelTest\n                            addIsopen={this.state.addTest}\n                            handleCancel={this.openAddTest}\n                            profLevels={this.props.profLevels}\n                            profSubjectList={this.props.profSubjectList}\n                            questions={this.props.questions}\n                            professorClassesList={\n                              this.props.professorClassesList\n                            }\n                          />\n                        ) : (\n                          \"\"\n                        )}\n                      </>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              )}\n            />\n          )}\n        </RoleContext.Consumer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    settings: state.settings.locale,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n  };\n};\n\nexport default connect(mapStateToProps)(Tests);\n"]},"metadata":{},"sourceType":"module"}