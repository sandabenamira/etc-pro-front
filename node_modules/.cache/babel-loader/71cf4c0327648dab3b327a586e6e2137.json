{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nexport function getExam() {\n  return dispatch => {\n    let apiEndpoint = `/exams?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      dispatch({\n        type: \"DATA_LOADED_EXAM\",\n        payload: response.data\n      });\n    }).catch(error => {});\n  };\n}\n;\nexport function addExam(exam) {\n  let examData = {\n    type: exam.type,\n    period: exam.period,\n    coefficient: exam.coefficient,\n    subject_id: exam.subject_id,\n    establishment_id: exam.establishment_id,\n    class_id: exam.class_id,\n    status: true\n  };\n  return dispatch => {\n    let apiEndpoint = `/exams?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, examData).then(response => {\n      dispatch({\n        type: \"ADD_EXAM\",\n        payload: response.data\n      });\n      alert('L\\'ajout est effectué avec succès');\n    }).catch(error => {});\n  };\n}\nexport function deleteExam(idItem) {\n  return dispatch => {\n    let apiEndpoint = `/exams/` + idItem + `?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      const exam = response.data;\n      let examData = {\n        type: exam.type,\n        period: exam.period,\n        coefficient: exam.coefficient,\n        subject_id: exam.subject_id,\n        establishment_id: exam.establishment_id,\n        class_id: exam.class_id,\n        status: false\n      };\n      let apiEndpoint2 = `/exams/` + exam.id + `?access_token=${localStorage.token}`;\n      classService.put(apiEndpoint2, examData).then(response => {\n        dispatch({\n          type: \"DELETE_EXAM\",\n          payload: response.data\n        });\n      }).catch(error => {});\n    }).catch(error => {});\n  };\n}\nexport function editExam(data) {\n  let examData = {\n    type: data.type,\n    period: data.period,\n    coefficient: data.coefficient,\n    subject_id: data.subject_id,\n    status: true,\n    id: data.id,\n    establishment_id: data.establishment_id,\n    class_id: data.class_id\n  };\n  return dispatch => {\n    let apiEndpoint = `/exams/` + data.id + `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, examData).then(response => {\n      dispatch({\n        type: \"EDIT_EXAM\",\n        payload: response.data\n      });\n    }).catch(error => {});\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/actions/examAction.js"],"names":["classService","getExam","dispatch","apiEndpoint","localStorage","token","get","then","response","type","payload","data","catch","error","addExam","exam","examData","period","coefficient","subject_id","establishment_id","class_id","status","post","alert","deleteExam","idItem","apiEndpoint2","id","put","editExam"],"mappings":"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","sourcesContent":["import { classService } from \"../_services/class.service\";\n\nexport function getExam() {\n\n    return dispatch => {\n        let apiEndpoint = `/exams?access_token=${localStorage.token}`;\n        classService\n          .get(apiEndpoint)\n          .then(response => {\n            dispatch({ type: \"DATA_LOADED_EXAM\", payload: response.data });\n          }).catch(error => {\n          });\n  \n    };\n};\n\nexport function addExam(exam) {\n    let examData= {\n        type: exam.type,\n        period: exam.period,\n        coefficient: exam.coefficient,\n        subject_id: exam.subject_id,\n        establishment_id: exam.establishment_id,\n        class_id: exam.class_id,\n        status: true\n    }\n    return dispatch => {\n        let apiEndpoint = `/exams?access_token=${localStorage.token}`;\n        classService.post(apiEndpoint,examData)\n        .then(response => { \n            dispatch({ type: \"ADD_EXAM\", payload: response.data });\n            alert('L\\'ajout est effectué avec succès');\n        }).catch(error => {\n        });   \n    }\n}\n\nexport function deleteExam(idItem) {\n    return dispatch => {\n        let apiEndpoint =  `/exams/` + idItem + `?access_token=${localStorage.token}`;\n        classService\n        .get(apiEndpoint)\n        .then(response => { \n            const exam = response.data;\n            let examData ={\n                type: exam.type,\n                    period: exam.period,\n                    coefficient: exam.coefficient,\n                    subject_id: exam.subject_id,\n                    establishment_id: exam.establishment_id,\n                    class_id: exam.class_id,\n                    status: false\n            }\n            let apiEndpoint2 = `/exams/` +  exam.id + `?access_token=${localStorage.token}`;\n            classService.put(apiEndpoint2, examData)\n              .then(response => {\n                dispatch({ type: \"DELETE_EXAM\", payload: response.data });\n              })\n              .catch(error => {\n              });\n\n        }).catch(error => {\n        });\n    };\n}\n\nexport function editExam(data) {\n    let examData = {  type: data.type,\n        period: data.period,\n        coefficient: data.coefficient,\n        subject_id: data.subject_id,\n        status: true,\n        id: data.id,\n        establishment_id: data.establishment_id,\n        class_id: data.class_id,}\n    return dispatch => {\n        let apiEndpoint = `/exams/` + data.id+`?access_token=${localStorage.token}`;\n        classService.put(apiEndpoint, examData)\n        .then(response => { \n            dispatch({ type: \"EDIT_EXAM\", payload: response.data });\n        }).catch(error => {\n        });\n    };\n\n}"]},"metadata":{},"sourceType":"module"}