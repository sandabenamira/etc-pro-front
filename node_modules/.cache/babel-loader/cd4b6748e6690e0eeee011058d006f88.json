{"ast":null,"code":"import { GET_ASSIGNEMENT_COURSE, ADD_ASSIGNEMENT_COURSE, EDIT_ASSIGNEMENT_COURSE, DELETE_ASSIGNEMENT_COURSE, ARCHIVED_GET_ASSIGNEMENT_COURSE } from \"../constants/ActionTypes\";\nconst initialState = {\n  courseAssignment: [],\n  archivedCourseAssignment: []\n};\nexport default function (state = initialState, action) {\n  if (action.type === GET_ASSIGNEMENT_COURSE) {\n    return Object.assign({}, state, {\n      courseAssignment: action.payload\n    });\n  }\n\n  if (action.type === ARCHIVED_GET_ASSIGNEMENT_COURSE) {\n    return Object.assign({}, state, {\n      archivedCourseAssignment: action.payload\n    });\n  }\n\n  if (action.type === ADD_ASSIGNEMENT_COURSE) {\n    return Object.assign({}, state, {\n      courseAssignment: state.courseAssignment.concat(action.payload)\n    });\n  }\n\n  if (action.type === EDIT_ASSIGNEMENT_COURSE) {\n    return Object.assign({}, state, {\n      courseAssignment: [...state.courseAssignment.filter(element => element.id !== action.payload.id), action.payload]\n    });\n  }\n\n  if (action.type === DELETE_ASSIGNEMENT_COURSE) {\n    return Object.assign({}, state, {\n      courseAssignment: [...state.courseAssignment.filter(element => element.id !== action.payload.id)],\n      archivedCourseAssignment: state.archivedCourseAssignment.concat(action.payload)\n    });\n  }\n\n  return state;\n}\n;","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/reducers/AssignementReducer.js"],"names":["GET_ASSIGNEMENT_COURSE","ADD_ASSIGNEMENT_COURSE","EDIT_ASSIGNEMENT_COURSE","DELETE_ASSIGNEMENT_COURSE","ARCHIVED_GET_ASSIGNEMENT_COURSE","initialState","courseAssignment","archivedCourseAssignment","state","action","type","Object","assign","payload","concat","filter","element","id"],"mappings":"AAAA,SACEA,sBADF,EAEEC,sBAFF,EAGEC,uBAHF,EAIEC,yBAJF,EAKEC,+BALF,QAMO,0BANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,EADC;AAEnBC,EAAAA,wBAAwB,EAAE;AAFP,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACrD,MAAIA,MAAM,CAACC,IAAP,KAAgBV,sBAApB,EAA4C;AAC1C,WAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,gBAAgB,EAAEG,MAAM,CAACI;AADK,KAAzB,CAAP;AAID;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBN,+BAApB,EAAqD;AACnD,WAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BD,MAAAA,wBAAwB,EAAEE,MAAM,CAACI;AADH,KAAzB,CAAP;AAGD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBT,sBAApB,EAA4C;AAC1C,WAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,gBAAgB,EAAEE,KAAK,CAACF,gBAAN,CAAuBQ,MAAvB,CAA8BL,MAAM,CAACI,OAArC;AADY,KAAzB,CAAP;AAGD;;AAGD,MAAIJ,MAAM,CAACC,IAAP,KAAgBR,uBAApB,EAA6C;AAC3C,WAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,gBAAgB,EAAE,CAAC,GAAGE,KAAK,CAACF,gBAAN,CAAuBS,MAAvB,CAA8BC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAAvE,CAAJ,EAAgFR,MAAM,CAACI,OAAvF;AADY,KAAzB,CAAP;AAGD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBP,yBAApB,EAA+C;AAC7C,WAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,gBAAgB,EAAE,CAChB,GAAGE,KAAK,CAACF,gBAAN,CAAuBS,MAAvB,CACDC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EADxC,CADa,CADY;AAM9BV,MAAAA,wBAAwB,EAAEC,KAAK,CAACD,wBAAN,CAA+BO,MAA/B,CAAsCL,MAAM,CAACI,OAA7C;AANI,KAAzB,CAAP;AAUD;;AAGD,SAAOL,KAAP;AAED;AAAA","sourcesContent":["import {\n  GET_ASSIGNEMENT_COURSE,\n  ADD_ASSIGNEMENT_COURSE,\n  EDIT_ASSIGNEMENT_COURSE,\n  DELETE_ASSIGNEMENT_COURSE,\n  ARCHIVED_GET_ASSIGNEMENT_COURSE\n} from \"../constants/ActionTypes\";\n\nconst initialState = {\n  courseAssignment: [],\n  archivedCourseAssignment: [],\n\n};\n\nexport default function (state = initialState, action) {\n  if (action.type === GET_ASSIGNEMENT_COURSE) {\n    return Object.assign({}, state, {\n      courseAssignment: action.payload,\n\n    });\n  }\n  if (action.type === ARCHIVED_GET_ASSIGNEMENT_COURSE) {\n    return Object.assign({}, state, {\n      archivedCourseAssignment: action.payload\n    });\n  }\n\n  if (action.type === ADD_ASSIGNEMENT_COURSE) {\n    return Object.assign({}, state, {\n      courseAssignment: state.courseAssignment.concat(action.payload)\n    });\n  }\n\n\n  if (action.type === EDIT_ASSIGNEMENT_COURSE) {\n    return Object.assign({}, state, {\n      courseAssignment: [...state.courseAssignment.filter(element => element.id !== action.payload.id), action.payload]\n    });\n  }\n\n  if (action.type === DELETE_ASSIGNEMENT_COURSE) {\n    return Object.assign({}, state, {\n      courseAssignment: [\n        ...state.courseAssignment.filter(\n          element => element.id !== action.payload.id\n        )\n      ],\n      archivedCourseAssignment: state.archivedCourseAssignment.concat(action.payload)\n\n\n    });\n  }\n\n\n  return state;\n\n};\n\n"]},"metadata":{},"sourceType":"module"}