{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/HomeworkList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getSectionFromLevel } from '../../../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from '../../../../../actions/classLevelAction';\nimport axios from 'axios';\nimport baseUrl from '../../../../../config/config';\nimport { getClassesByEstablishmentId } from '../../../../../actions/classeAction';\nimport { roleIdAdmin } from '../../../../../config/config';\nimport { roleIdProfessor } from '../../../../../config/config';\nimport { roleIdParent } from '../../../../../config/config';\nimport { roleIdStudent } from '../../../../../config/config';\nimport _ from 'lodash';\nimport { privateStatus, publicStatus, allStatus } from '../../../../../config/config';\nimport moment from 'moment';\nimport HomeworkItem from './HomeworkItem';\nimport DeleteHomework from './DeleteHomework';\nimport { deleteHomework } from '../../../../../actions/HomeworkAction';\nimport EditHomework from './EditHomework';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { classService } from '../../../../../_services/class.service';\n\nclass HomeworkList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeSubject = selectedOption => {\n      this.setState({\n        subjectId: selectedOption.id,\n        subjectItem: selectedOption\n      });\n\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include]=class&filter[include]=course`;\n        classService.get(apiEndpoint).then(response => {\n          if (response) {\n            let classesSubjects = response.data.filter(element => element.status);\n            console.log(classesSubjects, 'classesSubjects');\n            let newList = [];\n            classesSubjects.map(element => {\n              let object = {};\n\n              if (!_.isEmpty(element.course)) {\n                object.label = element.class.name;\n                object.id = element.course[0].id;\n                object.value = element.course[0].id;\n                newList.push(object);\n              }\n            });\n            this.setState({\n              classes: newList\n            });\n          }\n        });\n      } else {\n        let apiEndpoint = `/assignment_class_subjects/${selectedOption.value}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n        classService.get(apiEndpoint).then(response => {\n          if (response) {\n            let element = response.data;\n\n            if (element.status) {\n              let object = {};\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n              this.setState({\n                classes: [object]\n              });\n            }\n          }\n        });\n      }\n    };\n\n    this.handleChangeHomeworkType = selectedOption => {\n      this.setState({\n        homeworkType: selectedOption\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      HomeworkTypes: [{\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.book.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 18\n          }\n        }),\n        value: 'book',\n        id: 1\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.series.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 18\n          }\n        }),\n        value: 'serie',\n        id: 2\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.other.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 18\n          }\n        }),\n        value: 'other',\n        id: 3\n      }],\n      classes: [],\n      subjects: [],\n      deleteIsopen: false,\n      itemIdDelete: '',\n      editIsopen: false,\n      itemEdit: {},\n      nameFile: '',\n      subjectId: null,\n      subjectItem: {},\n      classItem: {}\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleCancelDelete = this.handleCancelDelete.bind(this);\n    this.handleSubmitDelete = this.handleSubmitDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n  }\n\n  handleEdit(item) {\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${item.homework.fk_id_subject}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then(response => {\n        if (response) {\n          let classesSubjects = response.data.filter(element => element.status);\n          let newList = [];\n          classesSubjects.map(element => {\n            let object = {};\n\n            if (!_.isEmpty(element.course)) {\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n              newList.push(object);\n            }\n          });\n          console.log(newList, 'newList');\n          this.setState({\n            classes: newList\n          });\n        }\n      });\n    }\n\n    console.log(item, 'ediiiiit');\n    let homeworkType = this.state.HomeworkTypes.find(element => element.value == item.homework.homework_type);\n    let subjectItem = this.props.subjects.find(element => element.id == item.homework.fk_id_subject);\n    let classItem = {\n      label: item.className,\n      id: item.courseId,\n      value: item.courseId\n    };\n    this.setState({\n      editIsopen: true,\n      itemEdit: item,\n      nameFile: item.homework.title,\n      homeworkType,\n      subjects: this.props.subjects,\n      subjectItem,\n      classItem\n    });\n  }\n\n  handleSubmitDelete() {\n    this.setState({\n      deleteIsopen: false\n    });\n    this.props.dispatch(deleteHomework(this.state.itemIdDelete));\n  }\n\n  handleDelete(id) {\n    this.setState({\n      deleteIsopen: true,\n      itemIdDelete: id\n    });\n  }\n\n  handleCancelDelete() {\n    this.setState({\n      deleteIsopen: false,\n      itemIdDelete: ''\n    });\n  }\n\n  render() {\n    console.log('subjects', this.props.subjects);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-12 col-md-12 col-lg-12 col-sm-6 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"   price-tables row pt-default d-flex flex-wrap justify-content-start \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, this.props.homeworks.map((homeworkItem, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-lg-6 col-sm-6 col-xl-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HomeworkItem, {\n      key: index,\n      homeworkItem: homeworkItem,\n      handleDelete: this.handleDelete,\n      handleEdit: this.handleEdit,\n      archived: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    })))), this.state.editIsopen === true ? /*#__PURE__*/React.createElement(EditHomework, {\n      editIsopen: this.state.editIsopen,\n      values: this.state,\n      handleChange: this.handleChange,\n      handleChangeHomeworkType: this.handleChangeHomeworkType,\n      handleChangeSubject: this.handleChangeSubject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }) : '', this.state.deleteIsopen === true ? /*#__PURE__*/React.createElement(DeleteHomework, {\n      modal: this.state.deleteIsopen,\n      handleCancelDelete: this.handleCancelDelete,\n      handleSubmitDelete: this.handleSubmitDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }) : '');\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    ClassSettings: state.ClassSettingsReducer.classSettings\n  };\n}\n\nexport default connect(mapStateToProps)(HomeworkList);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/HomeworkList.js"],"names":["React","Component","connect","getSectionFromLevel","getLevelListFromEstabType","axios","baseUrl","getClassesByEstablishmentId","roleIdAdmin","roleIdProfessor","roleIdParent","roleIdStudent","_","privateStatus","publicStatus","allStatus","moment","HomeworkItem","DeleteHomework","deleteHomework","EditHomework","IntlMessages","classService","HomeworkList","constructor","props","handleChangeSubject","selectedOption","setState","subjectId","id","subjectItem","userProfile","role_id","apiEndpoint","localStorage","token","value","get","then","response","classesSubjects","data","filter","element","status","console","log","newList","map","object","isEmpty","course","label","class","name","push","classes","handleChangeHomeworkType","homeworkType","handleChange","event","target","state","HomeworkTypes","subjects","deleteIsopen","itemIdDelete","editIsopen","itemEdit","nameFile","classItem","handleDelete","bind","handleCancelDelete","handleSubmitDelete","handleEdit","item","homework","fk_id_subject","find","homework_type","className","courseId","title","dispatch","render","homeworks","homeworkItem","index","mapStateToProps","auth","ClassSettings","ClassSettingsReducer","classSettings"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { getSectionFromLevel } from '../../../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from '../../../../../actions/classLevelAction';\nimport axios from 'axios';\nimport baseUrl from '../../../../../config/config';\nimport { getClassesByEstablishmentId } from '../../../../../actions/classeAction';\nimport { roleIdAdmin } from '../../../../../config/config';\nimport { roleIdProfessor } from '../../../../../config/config';\nimport { roleIdParent } from '../../../../../config/config';\nimport { roleIdStudent } from '../../../../../config/config';\nimport _ from 'lodash';\nimport { privateStatus, publicStatus, allStatus } from '../../../../../config/config';\nimport moment from 'moment';\nimport HomeworkItem from './HomeworkItem';\nimport DeleteHomework from './DeleteHomework';\nimport { deleteHomework } from '../../../../../actions/HomeworkAction';\nimport EditHomework from './EditHomework';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { classService } from '../../../../../_services/class.service';\n\nclass HomeworkList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      HomeworkTypes: [\n        {\n          label: <IntlMessages id=\"toDo.book.exercise\" />,\n          value: 'book',\n          id: 1,\n        },\n        {\n          label: <IntlMessages id=\"toDo.series.exercise\" />,\n          value: 'serie',\n          id: 2,\n        },\n        {\n          label: <IntlMessages id=\"toDo.other.exercise\" />,\n          value: 'other',\n          id: 3,\n        },\n      ],\n      classes: [],\n      subjects: [],\n      deleteIsopen: false,\n      itemIdDelete: '',\n      editIsopen: false,\n      itemEdit: {},\n      nameFile: '',\n      subjectId: null,\n      subjectItem: {},\n      classItem: {},\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleCancelDelete = this.handleCancelDelete.bind(this);\n    this.handleSubmitDelete = this.handleSubmitDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n  }\n  handleChangeSubject = (selectedOption) => {\n    this.setState({\n      subjectId: selectedOption.id,\n      subjectItem: selectedOption,\n    });\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let classesSubjects = response.data.filter((element) => element.status);\n          console.log(classesSubjects, 'classesSubjects');\n          let newList = [];\n          classesSubjects.map((element) => {\n            let object = {};\n            if (!_.isEmpty(element.course)) {\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n\n              newList.push(object);\n            }\n          });\n          this.setState({ classes: newList });\n        }\n      });\n    } else {\n      let apiEndpoint = `/assignment_class_subjects/${selectedOption.value}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let element = response.data;\n          if (element.status) {\n            let object = {};\n            object.label = element.class.name;\n            object.id = element.course[0].id;\n            object.value = element.course[0].id;\n            this.setState({ classes: [object] });\n          }\n        }\n      });\n    }\n  };\n  handleChangeHomeworkType = (selectedOption) => {\n    this.setState({ homeworkType: selectedOption });\n  };\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n  handleEdit(item) {\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${item.homework.fk_id_subject}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let classesSubjects = response.data.filter((element) => element.status);\n          let newList = [];\n          classesSubjects.map((element) => {\n            let object = {};\n            if (!_.isEmpty(element.course)) {\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n\n              newList.push(object);\n            }\n          });\n          console.log(newList, 'newList');\n\n          this.setState({ classes: newList });\n        }\n      });\n    }\n    console.log(item, 'ediiiiit');\n    let homeworkType = this.state.HomeworkTypes.find(\n      (element) => element.value == item.homework.homework_type\n    );\n    let subjectItem = this.props.subjects.find(\n      (element) => element.id == item.homework.fk_id_subject\n    );\n    let classItem = {\n      label: item.className,\n      id: item.courseId,\n      value: item.courseId,\n    };\n    this.setState({\n      editIsopen: true,\n      itemEdit: item,\n      nameFile: item.homework.title,\n      homeworkType,\n      subjects: this.props.subjects,\n      subjectItem,\n      classItem,\n    });\n  }\n  handleSubmitDelete() {\n    this.setState({ deleteIsopen: false });\n    this.props.dispatch(deleteHomework(this.state.itemIdDelete));\n  }\n  handleDelete(id) {\n    this.setState({ deleteIsopen: true, itemIdDelete: id });\n  }\n\n  handleCancelDelete() {\n    this.setState({ deleteIsopen: false, itemIdDelete: '' });\n  }\n  render() {\n    console.log('subjects', this.props.subjects);\n    return (\n      <div className=\"col-xl-12 col-md-12 col-lg-12 col-sm-6 \">\n        <div className=\"   price-tables row pt-default d-flex flex-wrap justify-content-start \">\n          {this.props.homeworks.map((homeworkItem, index) => (\n            <div className=\"col-md-12 col-lg-6 col-sm-6 col-xl-3 \">\n              <HomeworkItem\n                key={index}\n                homeworkItem={homeworkItem}\n                handleDelete={this.handleDelete}\n                handleEdit={this.handleEdit}\n                archived={false}\n              />\n            </div>\n          ))}\n        </div>\n\n        {this.state.editIsopen === true ? (\n          <EditHomework\n            editIsopen={this.state.editIsopen}\n            values={this.state}\n            handleChange={this.handleChange}\n            handleChangeHomeworkType={this.handleChangeHomeworkType}\n            handleChangeSubject={this.handleChangeSubject}\n          />\n        ) : (\n          ''\n        )}\n\n        {this.state.deleteIsopen === true ? (\n          <DeleteHomework\n            modal={this.state.deleteIsopen}\n            handleCancelDelete={this.handleCancelDelete}\n            handleSubmitDelete={this.handleSubmitDelete}\n          ></DeleteHomework>\n        ) : (\n          ''\n        )}\n        {/* {this.state.call == true ? (\n          <JitsiComponent values={this.state} />\n        ) : (\n          <div></div>\n        )} */}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    ClassSettings: state.ClassSettingsReducer.classSettings,\n  };\n}\n\nexport default connect(mapStateToProps)(HomeworkList);\n"]},"metadata":{},"sourceType":"module"}