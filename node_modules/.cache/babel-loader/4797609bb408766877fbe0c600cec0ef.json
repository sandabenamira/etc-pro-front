{"ast":null,"code":"import { classService } from '../_services/class.service';\nimport baseUrl from '../config/config';\nimport { SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from '../constants/ActionTypes';\nimport axios from 'axios';\nexport const addNewHomework = (data, homeworkFiles) => {\n  return dispatch => {\n    let apiEndpoint = `/homeworks_v4/addAndAssignHomework?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then(response => {\n      if (response && homeworkFiles.length > 0) {\n        let homeworkId = response.data.homework.id; //  dispatch({ type: ADD_MATERIAL_COURSE, payload: response.data });\n\n        let formadata = new FormData();\n        homeworkFiles.map((element, index) => {\n          let homeworkFile = element;\n          const fileExtension = homeworkFile.name.replace(/^.*\\./, '');\n          const fileName = 'homework' + homeworkId + index + String(Date.now()).slice(-2) + '.' + fileExtension;\n          var object = {};\n          object.file = homeworkFile;\n          object.fileName = fileName;\n          const myNewFile = new File([object.file], fileName, {\n            type: object.file.type\n          });\n          formadata.append('file', myNewFile);\n        });\n        let filesURL = [];\n        const URLMaterailCourse = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n        axios({\n          url: URLMaterailCourse,\n          method: 'POST',\n          data: formadata\n        }).then(response => {\n          if (response) {\n            filesURL = response.data.result.files.file.map((urlFile, index) => {\n              return {\n                name: '',\n                url_file: urlFile.providerResponse.location,\n                status: true,\n                assignement_date: new Date(),\n                update_date: new Date(),\n                fk_id_homework: homeworkId\n              };\n            });\n            let apiEndpointFiles = `/homeworks_files_v4?access_token=${localStorage.token}`;\n            classService.post(apiEndpointFiles, filesURL).then(response => {\n              if (response) {\n                console.log('homeworks_files_v4', response);\n                dispatch({\n                  type: SHOW_SUCCESS_MESSAGE,\n                  payload: 'La création est effectuée avec succès'\n                });\n                setTimeout(() => {\n                  dispatch({\n                    type: HIDE_SUCCESS_MESSAGE\n                  });\n                }, 4000);\n              } else {\n                console.log(response.data, 'course_materials_files errerur');\n              }\n            });\n          }\n        }).catch(err => {});\n      } else if (!response) {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      } else if (response && homeworkFiles.length == 0) {\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'La création est effectuée avec succès'\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};\nexport const deleteHomework = idHomework => {\n  return dispatch => {\n    let apiEndpoint = `/homeworks_v4/` + idHomework + `?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, {\n      status: false\n    }).then(response => {\n      console.log(response.data, 'delete response');\n\n      if (response) {\n        // dispatch({ type: DELETE_MOOCS, payload: response.data.id });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"L'archivage est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/HomeworkAction.js"],"names":["classService","baseUrl","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","axios","addNewHomework","data","homeworkFiles","dispatch","apiEndpoint","localStorage","token","post","then","response","length","homeworkId","homework","id","formadata","FormData","map","element","index","homeworkFile","fileExtension","name","replace","fileName","String","Date","now","slice","object","file","myNewFile","File","type","append","filesURL","URLMaterailCourse","url","method","result","files","urlFile","url_file","providerResponse","location","status","assignement_date","update_date","fk_id_homework","apiEndpointFiles","console","log","payload","setTimeout","catch","err","deleteHomework","idHomework","patch"],"mappings":"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","sourcesContent":["import { classService } from '../_services/class.service';\nimport baseUrl from '../config/config';\nimport {\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n} from '../constants/ActionTypes';\nimport axios from 'axios';\n\nexport const addNewHomework = (data, homeworkFiles) => {\n  return (dispatch) => {\n    let apiEndpoint = `/homeworks_v4/addAndAssignHomework?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then((response) => {\n      if (response && homeworkFiles.length > 0) {\n        let homeworkId = response.data.homework.id;\n\n        //  dispatch({ type: ADD_MATERIAL_COURSE, payload: response.data });\n        let formadata = new FormData();\n        homeworkFiles.map((element, index) => {\n          let homeworkFile = element;\n          const fileExtension = homeworkFile.name.replace(/^.*\\./, '');\n          const fileName =\n            'homework' + homeworkId + index + String(Date.now()).slice(-2) + '.' + fileExtension;\n          var object = {};\n          object.file = homeworkFile;\n          object.fileName = fileName;\n          const myNewFile = new File([object.file], fileName, {\n            type: object.file.type,\n          });\n          formadata.append('file', myNewFile);\n        });\n\n        let filesURL = [];\n\n        const URLMaterailCourse = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n        axios({\n          url: URLMaterailCourse,\n          method: 'POST',\n          data: formadata,\n        })\n          .then((response) => {\n            if (response) {\n              filesURL = response.data.result.files.file.map((urlFile, index) => {\n                return {\n                  name: '',\n                  url_file: urlFile.providerResponse.location,\n                  status: true,\n                  assignement_date: new Date(),\n                  update_date: new Date(),\n                  fk_id_homework: homeworkId,\n                };\n              });\n              let apiEndpointFiles = `/homeworks_files_v4?access_token=${localStorage.token}`;\n              classService.post(apiEndpointFiles, filesURL).then((response) => {\n                if (response) {\n                  console.log('homeworks_files_v4', response);\n\n                  dispatch({\n                    type: SHOW_SUCCESS_MESSAGE,\n                    payload: 'La création est effectuée avec succès',\n                  });\n\n                  setTimeout(() => {\n                    dispatch({ type: HIDE_SUCCESS_MESSAGE });\n                  }, 4000);\n                } else {\n                  console.log(response.data, 'course_materials_files errerur');\n                }\n              });\n            }\n          })\n          .catch((err) => {});\n      } else if (!response) {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      } else if (response && homeworkFiles.length == 0) {\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'La création est effectuée avec succès',\n        });\n\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n\nexport const deleteHomework = (idHomework) => {\n  return (dispatch) => {\n    let apiEndpoint = `/homeworks_v4/` + idHomework + `?access_token=${localStorage.token}`;\n    classService\n      .patch(apiEndpoint, {\n        status: false,\n      })\n      .then((response) => {\n        console.log(response.data,'delete response');\n        if (response) {\n          // dispatch({ type: DELETE_MOOCS, payload: response.data.id });\n\n          dispatch({\n            type: SHOW_SUCCESS_MESSAGE,\n            payload: \"L'archivage est effectuée avec succès\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_SUCCESS_MESSAGE });\n          }, 4000);\n        } else {\n          dispatch({\n            type: SHOW_ERROR_MESSAGE,\n            payload:\n              \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_ERROR_MESSAGE });\n          }, 4000);\n        }\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}