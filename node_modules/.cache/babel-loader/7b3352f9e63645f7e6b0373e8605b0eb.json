{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/LevelTest/Tests/Exercices.js\";\nimport React from \"react\";\nimport Auxiliary from \"../../../../util/Auxiliary\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport CardBox from \"../../../../components/CardBox/index\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nclass Exercices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  } //   componentDidMount() {\n  //     console.log(\"====================================\");\n  //     console.log(this.props.openExercices, \"openExercices  componentDidMount\");\n  //     console.log(this.props.listeExercices, \"listeExercices componentDidMount\");\n  //     console.log(\"====================================\");\n  //   }\n\n\n  render() {\n    let test = this.props.test;\n    let listeExercices = this.props.listeExercices;\n    let score = this.props.score;\n    var linkIndice;\n    this.props.score <= 30 ? linkIndice = 0 : this.props.score <= 70 ? linkIndice = 1 : linkIndice = 2;\n    console.log(\"====================================\");\n    console.log(listeExercices, \"listeExercices\");\n    console.log(\"====================================\");\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.props.openExercices,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      className: \"modal-box-header bg-primary text-white\",\n      toggle: this.props.closeExerciceModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, test.subjects.name_FR), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, listeExercices.length > 0 ? /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12 text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }), listeExercices.map((element, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        style: ({\n          color: \"black\"\n        }, {\n          paddingTop: \"5%\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }\n      }, \"Exercice \", index + 1, \" :\", /*#__PURE__*/React.createElement(\"div\", {\n        style: ({\n          color: \"black\"\n        }, {\n          padding: \"1em\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, element.exercice_desc), element.links.map((link, i) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: ({\n            color: \"black\"\n          }, {\n            paddingLeft: \"5%\"\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex flex-row  col-md-12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          fullWidth: true,\n          style: {\n            // backgroundColor: \"#4C19A9\",\n            marginBottom: \"5px\",\n            fontSize: \"10px\",\n            width: \"100%\"\n          },\n          href: link,\n          target: \"_blank\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"normal\",\n            paddingLeft: \"-10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 37\n          }\n        }, \"lien \", i + 1)))));\n      }));\n    }))) : \"Pas d'exercices disponibles pour le moment, Veuillez essayer ultérièrement\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    settings: state.settings.locale\n  };\n}\n\nexport default connect(mapStateToProps, {})(Exercices);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/LevelTest/Tests/Exercices.js"],"names":["React","Auxiliary","Modal","ModalBody","ModalHeader","connect","IntlMessages","CardBox","Button","Table","TableBody","TableCell","TableHead","TableRow","Exercices","Component","constructor","props","state","render","test","listeExercices","score","linkIndice","console","log","openExercices","closeExerciceModal","subjects","name_FR","length","map","element","index","color","paddingTop","padding","exercice_desc","links","link","i","paddingLeft","marginBottom","fontSize","width","fontWeight","mapStateToProps","userProfile","auth","settings","locale"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Auxiliary from \"../../../../util/Auxiliary\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport CardBox from \"../../../../components/CardBox/index\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nclass Exercices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //   componentDidMount() {\n  //     console.log(\"====================================\");\n  //     console.log(this.props.openExercices, \"openExercices  componentDidMount\");\n\n  //     console.log(this.props.listeExercices, \"listeExercices componentDidMount\");\n  //     console.log(\"====================================\");\n  //   }\n\n  render() {\n    let test = this.props.test;\n    let listeExercices = this.props.listeExercices;\n    let score = this.props.score;\n    var linkIndice;\n    this.props.score <= 30\n      ? (linkIndice = 0)\n      : this.props.score <= 70\n      ? (linkIndice = 1)\n      : (linkIndice = 2);\n    console.log(\"====================================\");\n    console.log(listeExercices, \"listeExercices\");\n    console.log(\"====================================\");\n    return (\n      <Auxiliary>\n        <Modal isOpen={this.props.openExercices}>\n          <ModalHeader\n            className=\"modal-box-header bg-primary text-white\"\n            toggle={this.props.closeExerciceModal}\n          >\n            {test.subjects.name_FR}\n          </ModalHeader>\n          <br />\n          <ModalBody>\n            {listeExercices.length > 0 ? (\n              <CardBox styleName=\"col-lg-12 text-primary\">\n                <>\n                  <br />\n                  {listeExercices.map((element, index) => {\n                    return (\n                      <div\n                        key={index}\n                        style={({ color: \"black\" }, { paddingTop: \"5%\" })}\n                      >\n                        Exercice {index + 1} :\n                        <div style={({ color: \"black\" }, { padding: \"1em\" })}>\n                          {element.exercice_desc}\n                        </div>\n                        {element.links.map((link, i) => {\n                          return (\n                            <div key={i}>\n                              <div\n                                style={\n                                  ({ color: \"black\" }, { paddingLeft: \"5%\" })\n                                }\n                              >\n                                <div className=\"d-flex flex-row  col-md-12\">\n                                  <Button\n                                    variant=\"contained\"\n                                    fullWidth={true}\n                                    style={{\n                                      // backgroundColor: \"#4C19A9\",\n                                      marginBottom: \"5px\",\n                                      fontSize: \"10px\",\n                                      width: \"100%\",\n                                    }}\n                                    href={link}\n                                    target=\"_blank\"\n                                  >\n                                    <span\n                                      style={{\n                                        fontWeight: \"normal\",\n                                        paddingLeft: \"-10px\",\n                                      }}\n                                    >\n                                      lien {i + 1}\n                                    </span>\n                                  </Button>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    );\n                  })}\n                </>\n              </CardBox>\n            ) : (\n              \"Pas d'exercices disponibles pour le moment, Veuillez essayer ultérièrement\"\n            )}\n          </ModalBody>\n        </Modal>\n      </Auxiliary>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    settings: state.settings.locale,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Exercices);\n"]},"metadata":{},"sourceType":"module"}