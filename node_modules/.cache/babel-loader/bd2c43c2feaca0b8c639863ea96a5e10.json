{"ast":null,"code":"import { getName } from './countriesAction';\nimport { classService } from \"../_services/class.service\";\n\nfunction getEstabTypeByID(estabTypes, id) {\n  let typeName = estabTypes.map(element => {\n    if (element.id === id) {\n      return element.name;\n    } else {\n      return null;\n    }\n  });\n  return typeName;\n}\n\nfunction getEstabTypes() {\n  return dispatch => {\n    let apiEndpoint = `/estab_types?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      let estabTypes = [];\n      response.data.forEach(element => {\n        estabTypes.push({\n          \"id\": element.id,\n          \"name\": getName(element)\n        });\n      });\n      dispatch({\n        type: \"DATA_LOADED_ESTAB_TYPES\",\n        payload: estabTypes\n      });\n    }).catch(error => {});\n  };\n}\n\nexport { getEstabTypes, getEstabTypeByID };","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/estabTypeAction.js"],"names":["getName","classService","getEstabTypeByID","estabTypes","id","typeName","map","element","name","getEstabTypes","dispatch","apiEndpoint","localStorage","token","get","then","response","data","forEach","push","type","payload","catch","error"],"mappings":"AACA,SAASA,OAAT,QAAwB,mBAAxB;AACA,SAASC,YAAT,QAA6B,4BAA7B;;AAEA,SAASC,gBAAT,CAA0BC,UAA1B,EAAsCC,EAAtC,EAA0C;AACtC,MAAIC,QAAQ,GAAGF,UAAU,CAACG,GAAX,CAAeC,OAAO,IAAI;AACrC,QAAIA,OAAO,CAACH,EAAR,KAAeA,EAAnB,EAAuB;AAAE,aAAOG,OAAO,CAACC,IAAf;AAAqB,KAA9C,MAAoD;AAAE,aAAO,IAAP;AAAa;AACtE,GAFc,CAAf;AAGA,SAAOH,QAAP;AACH;;AAED,SAASI,aAAT,GAAyB;AAErB,SAAOC,QAAQ,IAAI;AACf,QAAIC,WAAW,GAAI,6BAA4BC,YAAY,CAACC,KAAM,EAAlE;AACAZ,IAAAA,YAAY,CACTa,GADH,CACOH,WADP,EAEGI,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAIb,UAAU,GAAG,EAAjB;AACAa,MAAAA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBX,OAAO,IAAI;AAC7BJ,QAAAA,UAAU,CAACgB,IAAX,CAAgB;AAAE,gBAAMZ,OAAO,CAACH,EAAhB;AAAoB,kBAAQJ,OAAO,CAACO,OAAD;AAAnC,SAAhB;AACH,OAFD;AAGAG,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAE,yBAAR;AAAmCC,QAAAA,OAAO,EAAElB;AAA5C,OAAD,CAAR;AACD,KARH,EAQKmB,KARL,CAQWC,KAAK,IAAI,CACjB,CATH;AAWH,GAbD;AAcH;;AAED,SAASd,aAAT,EAAwBP,gBAAxB","sourcesContent":["\nimport { getName } from './countriesAction';\nimport { classService } from \"../_services/class.service\";\n\nfunction getEstabTypeByID(estabTypes, id) {\n    let typeName = estabTypes.map(element => {\n        if (element.id === id) { return element.name } else { return null }\n    })\n    return typeName\n}\n\nfunction getEstabTypes() {\n\n    return dispatch => {\n        let apiEndpoint = `/estab_types?access_token=${localStorage.token}`;\n        classService\n          .get(apiEndpoint)\n          .then(response => {\n            let estabTypes = [];\n            response.data.forEach(element => {\n                estabTypes.push({ \"id\": element.id, \"name\": getName(element) })\n            });\n            dispatch({ type: \"DATA_LOADED_ESTAB_TYPES\", payload: estabTypes });\n          }).catch(error => {\n          });\n\n    };\n}\n\nexport { getEstabTypes, getEstabTypeByID }"]},"metadata":{},"sourceType":"module"}