{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/Community/routes/InternalMail/Mail.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport mails from \"./mails\";\nimport folders from \"./folders\";\nimport filters from \"./filters\";\nimport labels from \"./labels\";\nimport options from \"./options\";\nimport MailList from \"./MailList\";\nimport ComposeMail from \"./Compose\";\nimport AppModuleHeader from \"./AppModuleHeader\";\nimport MailDetail from \"./MailDetail\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport CustomScrollbars from \"./CustomScrollbars\";\n\nclass Mail extends Component {\n  constructor() {\n    super();\n\n    this.MailSideBar = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-side-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-email mr-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"mail.mailbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-side-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CustomScrollbars, {\n        className: \"module-side-scroll scrollbar\",\n        style: {\n          height: this.props.width >= 1200 ? \"calc(100vh - 200px)\" : \"calc(100vh - 80px)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-add-task\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"btn-block\",\n        onClick: () => {\n          this.setState({\n            composeMail: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-edit zmdi-hc-fw\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"mail.compose\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }), \" \")), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"module-nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, this.getNavFolders(), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"mail.filters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      })), this.getNavFilters(), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"mail.labels\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      })), this.getNavLabels()))));\n    };\n\n    this.onDeleteMail = () => {\n      const mails = this.state.allMail.map(mail => mail.selected && mail.folder === this.state.selectedFolder ? { ...mail,\n        folder: 4,\n        selected: false\n      } : mail);\n      this.setState({\n        alertMessage: \"Mail Deleted Successfully\",\n        showMessage: true,\n        selectedMails: 0,\n        allMail: mails,\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.getNavFolders = () => {\n      return folders.map((folder, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          const filterMails = this.state.allMail.filter(mail => mail.folder === folder.id);\n          this.setState({\n            selectedFolder: folder.id,\n            noContentFoundMessage: \"No mail found in selected folder\",\n            currentMail: null,\n            loader: true,\n            folderMails: filterMails\n          });\n          setTimeout(() => {\n            this.setState({\n              loader: false\n            });\n          }, 1500);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: `jr-link ${this.state.selectedFolder === folder.id ? \"active\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `zmdi zmdi-${folder.icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, folder.title))));\n    };\n\n    this.onFolderMenuItemSelect = folderId => {\n      this.handleRequestClose();\n      const mails = this.state.allMail.map(mail => mail.selected && mail.folder === this.state.selectedFolder ? { ...mail,\n        folder: folderId,\n        selected: false\n      } : mail);\n      this.setState({\n        selectedMails: 0,\n        allMail: mails,\n        noContentFoundMessage: \"No mail found in selected folder\",\n        alertMessage: \"Mail has been moved successfully\",\n        showMessage: true,\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.onLabelMenuItemSelect = label => {\n      this.handleRequestClose();\n      const mails = this.state.allMail.map(mail => {\n        if (mail.selected && mail.folder === this.state.selectedFolder) {\n          if (mail.labels.includes(label.id)) {\n            return { ...mail,\n              labels: this.removeLabel(mail, label.id)\n            };\n          } else {\n            return { ...mail,\n              labels: this.addLabel(mail, label.id)\n            };\n          }\n        } else {\n          return mail;\n        }\n      });\n      this.setState({\n        noContentFoundMessage: \"No mail found in selected label\",\n        alertMessage: \"Label Updated Successfully\",\n        showMessage: true,\n        allMail: mails,\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.handleRequestClose = () => {\n      this.setState({\n        composeMail: false,\n        showMessage: false,\n        folderMenuState: false,\n        labelMenuState: false,\n        optionMenuState: false\n      });\n    };\n\n    this.getNavFilters = () => {\n      return filters.map((filter, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          const filterMails = this.state.allMail.filter(mail => {\n            if (filter.id === 0 && mail.starred) {\n              return mail;\n            } else if (filter.id === 1 && mail.important) {\n              return mail;\n            }\n\n            return null;\n          });\n          this.setState({\n            noContentFoundMessage: \"No mail found in selected filter\",\n            loader: true,\n            folderMails: filterMails\n          });\n          setTimeout(() => {\n            this.setState({\n              loader: false\n            });\n          }, 1500);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"jr-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `zmdi zmdi-${filter.icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }, filter.title))));\n    };\n\n    this.onFolderSelect = event => {\n      this.setState({\n        anchorEl: event.currentTarget,\n        folderMenuState: !this.state.folderMenuState\n      });\n    };\n\n    this.onLabelSelect = event => {\n      this.setState({\n        anchorEl: event.currentTarget,\n        labelMenuState: !this.state.labelMenuState\n      });\n    };\n\n    this.onOptionMenuSelect = event => {\n      this.setState({\n        anchorEl: event.currentTarget,\n        optionMenuState: !this.state.optionMenuState\n      });\n    };\n\n    this.onOptionMenuItemSelect = option => {\n      switch (option.title) {\n        case \"All\":\n          this.handleRequestClose();\n          this.getAllMail();\n          break;\n\n        case \"None\":\n          this.handleRequestClose();\n          this.getUnselectedAllMail();\n          break;\n\n        case \"Read\":\n          this.handleRequestClose();\n          this.getReadMail();\n          break;\n\n        case \"Unread\":\n          this.handleRequestClose();\n          this.getUnreadMail();\n          break;\n\n        case \"Starred\":\n          this.handleRequestClose();\n          this.getStarredMail();\n          break;\n\n        case \"Unstarred\":\n          this.handleRequestClose();\n          this.getUnStarredMail();\n          break;\n\n        case \"Important\":\n          this.handleRequestClose();\n          this.getImportantMail();\n          break;\n\n        case \"Unimportant\":\n          this.handleRequestClose();\n          this.getUnimportantMail();\n          break;\n\n        default:\n          this.handleRequestClose();\n          this.getAllMail();\n      }\n    };\n\n    this.getAllMail = () => {\n      let mails = this.state.allMail.map(mail => mail.folder === this.state.selectedFolder ? { ...mail,\n        selected: true\n      } : mail);\n      this.setState({\n        selectedMails: mails.length,\n        allMail: mails,\n        optionName: \"All\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.getUnselectedAllMail = () => {\n      let mails = this.state.allMail.map(mail => mail.folder === this.state.selectedFolder ? { ...mail,\n        selected: false\n      } : mail);\n      this.setState({\n        selectedMails: 0,\n        allMail: mails,\n        optionName: \"None\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.getReadMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (mail.read) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: \"Read\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getUnreadMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (!mail.read) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: \"Unread\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getStarredMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (mail.starred) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: \"Starred\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getUnStarredMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (!mail.starred) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: \"UnStarred\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getImportantMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (mail.important) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: \"Important\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getUnimportantMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (!mail.important) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        optionName: \"Unimportant\",\n        allMail: mails,\n        noContentFoundMessage: \"No Mail found in selected Label\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getNavLabels = () => {\n      return labels.map((label, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          const filterMails = this.state.allMail.filter(mail => mail.labels.includes(label.id));\n          this.setState({\n            loader: true,\n            noContentFoundMessage: \"No mail found in selected label\",\n            folderMails: filterMails\n          });\n          setTimeout(() => {\n            this.setState({\n              loader: false\n            });\n          }, 1500);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"jr-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `zmdi zmdi-circle text-${label.color}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }\n      }, label.title))));\n    };\n\n    this.searchMail = searchText => {\n      if (searchText === \"\") {\n        this.setState({\n          folderMails: this.state.allMail.filter(mail => !mail.deleted)\n        });\n      } else {\n        const searchMails = this.state.allMail.filter(mail => !mail.deleted && mail.subject.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n        this.setState({\n          folderMails: searchMails\n        });\n      }\n    };\n\n    this.displayMail = (currentMail, folderMails, noContentFoundMessage) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-box-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 7\n        }\n      }, currentMail === null ? folderMails.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        style: {\n          height: this.props.width >= 1200 ? \"calc(100vh - 265px)\" : \"calc(100vh - 245px)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }\n      }, noContentFoundMessage) : /*#__PURE__*/React.createElement(MailList, {\n        mails: folderMails,\n        onStartSelect: this.onStartSelect.bind(this),\n        onMailSelect: this.onMailSelect.bind(this),\n        width: this.props.width,\n        onMailChecked: this.onMailChecked.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(MailDetail, {\n        mail: currentMail,\n        onStartSelect: this.onStartSelect.bind(this),\n        width: this.props.width,\n        onImportantSelect: this.onImportantSelect.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }\n      }));\n    };\n\n    this.getMailActions = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.onFolderSelect.bind(this),\n        className: \"icon-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-folder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.onDeleteMail.bind(this),\n        className: \"icon-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.onLabelSelect.bind(this),\n        className: \"icon-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-label-alt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    this.state = {\n      searchMail: \"\",\n      noContentFoundMessage: \"No mail found in selected folder\",\n      alertMessage: \"\",\n      showMessage: false,\n      drawerState: false,\n      optionName: \"None\",\n      anchorEl: null,\n      allMail: mails,\n      loader: true,\n      currentMail: null,\n      user: {\n        name: \"Robert Johnson\",\n        email: \"robert@example.com\",\n        avatar: \"https://via.placeholder.com/150x150\"\n      },\n      selectedMails: 0,\n      selectedFolder: 0,\n      composeMail: false,\n      labelMenuState: false,\n      folderMenuState: false,\n      optionMenuState: false,\n      folderMails: mails.filter(mail => mail.folder === 0)\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        loader: false\n      });\n    }, 1500);\n  }\n\n  onMailChecked(data) {\n    data.selected = !data.selected;\n    let selectedMail = 0;\n    const mails = this.state.folderMails.map(mail => {\n      if (mail.selected) {\n        selectedMail++;\n      }\n\n      if (mail.id === data.id) {\n        if (mail.selected) {\n          selectedMail++;\n        }\n\n        return data;\n      } else {\n        return mail;\n      }\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      folderMails: mails\n    });\n  }\n\n  onAllMailSelect() {\n    const selectAll = this.state.selectedMails <= this.state.folderMails.length;\n\n    if (selectAll) {\n      this.getAllMail();\n    } else {\n      this.getUnselectedAllMail();\n    }\n  }\n\n  removeLabel(mail, label) {\n    mail.labels.splice(mail.labels.indexOf(label), 1);\n\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\n      this.setState({\n        currentMail: { ...mail,\n          labels: mail.labels\n        }\n      });\n    }\n\n    return mail.labels;\n  }\n\n  onStartSelect(data) {\n    data.starred = !data.starred;\n    this.setState({\n      alertMessage: data.starred ? \"Mail Mark as Star\" : \"Mail Remove as Star\",\n      showMessage: true,\n      folderMails: this.state.folderMails.map(mail => mail.id === data.id ? data : mail)\n    });\n  }\n\n  onImportantSelect(data) {\n    data.important = !data.important;\n    this.setState({\n      alertMessage: data.important ? \"Mail Mark as Important\" : \"Mail Remove as Important\",\n      showMessage: true,\n      folderMails: this.state.folderMails.map(mail => mail.id === data.id ? data : mail)\n    });\n  }\n\n  onMailSend(data) {\n    this.setState({\n      alertMessage: \"Mail Sent Successfully\",\n      showMessage: true,\n      folderMails: this.state.allMail.concat(data),\n      allMail: this.state.allMail.concat(data)\n    });\n  }\n\n  onMailSelect(mail) {\n    this.setState({\n      loader: true,\n      currentMail: mail\n    });\n    setTimeout(() => {\n      this.setState({\n        loader: false\n      });\n    }, 1500);\n  }\n\n  addLabel(mail, label) {\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\n      this.setState({\n        currentMail: { ...mail,\n          labels: mail.labels.concat(label)\n        }\n      });\n    }\n\n    return mail.labels.concat(label);\n  }\n\n  updateSearch(evt) {\n    this.setState({\n      searchMail: evt.target.value\n    });\n    this.searchMail(evt.target.value);\n  }\n\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState\n    });\n  }\n\n  render() {\n    const {\n      selectedMails,\n      loader,\n      currentMail,\n      folderMails,\n      composeMail,\n      user,\n      alertMessage,\n      showMessage,\n      noContentFoundMessage\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated slideInUpTiny animation-duration-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-module\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-block d-xl-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Drawer, {\n      open: this.state.drawerState,\n      onClose: this.onToggleDrawer.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 15\n      }\n    }, this.MailSideBar())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-module-sidenav d-none d-xl-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 13\n      }\n    }, this.MailSideBar()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-box-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: \"drawer-btn d-block d-xl-none\",\n      \"aria-label\": \"Menu\",\n      onClick: this.onToggleDrawer.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(AppModuleHeader, {\n      placeholder: \"Search mails\",\n      user: this.state.user,\n      onChange: this.updateSearch.bind(this),\n      value: this.state.searchMail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-box-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-box-topbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 17\n      }\n    }, this.state.currentMail === null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      indeterminate: selectedMails > 0 && selectedMails < folderMails.length,\n      checked: selectedMails > 0,\n      onChange: this.onAllMailSelect.bind(this),\n      value: \"SelectMail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      onClick: this.onOptionMenuSelect.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"px-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 25\n      }\n    }, \" \", this.state.optionName), /*#__PURE__*/React.createElement(IconButton, {\n      className: \"icon-btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-caret-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 27\n      }\n    })))) : /*#__PURE__*/React.createElement(IconButton, {\n      className: \"icon-btn\",\n      onClick: () => {\n        this.setState({\n          currentMail: null\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-arrow-back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 23\n      }\n    })), selectedMails > 0 && this.getMailActions(), /*#__PURE__*/React.createElement(Menu, {\n      id: \"option-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.state.optionMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 19\n      }\n    }, options.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.title,\n      onClick: this.onOptionMenuItemSelect.bind(this, option),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 23\n      }\n    }, option.title))), /*#__PURE__*/React.createElement(Menu, {\n      id: \"folder-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.state.folderMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 19\n      }\n    }, folders.map(folder => /*#__PURE__*/React.createElement(MenuItem, {\n      key: folder.id,\n      onClick: this.onFolderMenuItemSelect.bind(this, folder.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 23\n      }\n    }, folder.title))), /*#__PURE__*/React.createElement(Menu, {\n      id: \"label-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.state.labelMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 19\n      }\n    }, labels.map(label => /*#__PURE__*/React.createElement(MenuItem, {\n      key: label.id,\n      onClick: this.onLabelMenuItemSelect.bind(this, label),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 23\n      }\n    }, label.title)))), loader ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader-view\",\n      style: {\n        height: this.props.width >= 1200 ? \"calc(100vh - 265px)\" : \"calc(100vh - 245px)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 21\n      }\n    })) : this.displayMail(currentMail, folderMails, noContentFoundMessage), /*#__PURE__*/React.createElement(ComposeMail, {\n      open: composeMail,\n      user: user,\n      onClose: this.handleRequestClose.bind(this),\n      onMailSend: this.onMailSend.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: showMessage,\n      autoHideDuration: 3000,\n      onClose: this.handleRequestClose,\n      ContentProps: {\n        \"aria-describedby\": \"message-id\"\n      },\n      message: /*#__PURE__*/React.createElement(\"span\", {\n        id: \"message-id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 22\n        }\n      }, alertMessage),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message\n  };\n};\n\nexport default connect(mapStateToProps)(Mail);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/Community/routes/InternalMail/Mail.js"],"names":["React","Component","Button","Drawer","Checkbox","Snackbar","connect","IconButton","Menu","MenuItem","CircularProgress","mails","folders","filters","labels","options","MailList","ComposeMail","AppModuleHeader","MailDetail","IntlMessages","CustomScrollbars","Mail","constructor","MailSideBar","height","props","width","setState","composeMail","getNavFolders","getNavFilters","getNavLabels","onDeleteMail","state","allMail","map","mail","selected","folder","selectedFolder","alertMessage","showMessage","selectedMails","folderMails","filter","index","filterMails","id","noContentFoundMessage","currentMail","loader","setTimeout","icon","title","onFolderMenuItemSelect","folderId","handleRequestClose","onLabelMenuItemSelect","label","includes","removeLabel","addLabel","folderMenuState","labelMenuState","optionMenuState","starred","important","onFolderSelect","event","anchorEl","currentTarget","onLabelSelect","onOptionMenuSelect","onOptionMenuItemSelect","option","getAllMail","getUnselectedAllMail","getReadMail","getUnreadMail","getStarredMail","getUnStarredMail","getImportantMail","getUnimportantMail","length","optionName","selectedMail","read","color","searchMail","searchText","deleted","searchMails","subject","toLowerCase","indexOf","displayMail","onStartSelect","bind","onMailSelect","onMailChecked","onImportantSelect","getMailActions","drawerState","user","name","email","avatar","componentDidMount","data","onAllMailSelect","selectAll","splice","onMailSend","concat","updateSearch","evt","target","value","onToggleDrawer","render","style","vertical","horizontal","mapStateToProps","userProfile","auth","successStatus","alert","success","errorStatus","error","message"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport mails from \"./mails\";\nimport folders from \"./folders\";\nimport filters from \"./filters\";\nimport labels from \"./labels\";\nimport options from \"./options\";\nimport MailList from \"./MailList\";\n\nimport ComposeMail from \"./Compose\";\nimport AppModuleHeader from \"./AppModuleHeader\";\nimport MailDetail from \"./MailDetail\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport CustomScrollbars from \"./CustomScrollbars\";\n\nclass Mail extends Component {\n  MailSideBar = () => {\n    return (\n      <div className=\"module-side\">\n        <div className=\"module-side-header\">\n          <div className=\"module-logo\">\n            <i className=\"zmdi zmdi-email mr-3\" />\n            <span>\n              <IntlMessages id=\"mail.mailbox\" />\n            </span>\n          </div>\n        </div>\n\n        <div className=\"module-side-content\">\n          <CustomScrollbars\n            className=\"module-side-scroll scrollbar\"\n            style={{\n              height:\n                this.props.width >= 1200\n                  ? \"calc(100vh - 200px)\"\n                  : \"calc(100vh - 80px)\",\n            }}\n          >\n            <div className=\"module-add-task\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"btn-block\"\n                onClick={() => {\n                  this.setState({ composeMail: true });\n                }}\n              >\n                <i className=\"zmdi zmdi-edit zmdi-hc-fw\" />\n                <IntlMessages id=\"mail.compose\" />{\" \"}\n              </Button>\n            </div>\n\n            <ul className=\"module-nav\">\n              {this.getNavFolders()}\n\n              <li className=\"module-nav-label\">\n                <IntlMessages id=\"mail.filters\" />\n              </li>\n\n              {this.getNavFilters()}\n\n              <li className=\"module-nav-label\">\n                <IntlMessages id=\"mail.labels\" />\n              </li>\n\n              {this.getNavLabels()}\n            </ul>\n          </CustomScrollbars>\n        </div>\n      </div>\n    );\n  };\n\n  onDeleteMail = () => {\n    const mails = this.state.allMail.map((mail) =>\n      mail.selected && mail.folder === this.state.selectedFolder\n        ? { ...mail, folder: 4, selected: false }\n        : mail\n    );\n    this.setState({\n      alertMessage: \"Mail Deleted Successfully\",\n      showMessage: true,\n      selectedMails: 0,\n      allMail: mails,\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n  };\n  getNavFolders = () => {\n    return folders.map((folder, index) => (\n      <li\n        key={index}\n        onClick={() => {\n          const filterMails = this.state.allMail.filter(\n            (mail) => mail.folder === folder.id\n          );\n          this.setState({\n            selectedFolder: folder.id,\n            noContentFoundMessage: \"No mail found in selected folder\",\n            currentMail: null,\n            loader: true,\n            folderMails: filterMails,\n          });\n          setTimeout(() => {\n            this.setState({ loader: false });\n          }, 1500);\n        }}\n      >\n        <span\n          className={`jr-link ${\n            this.state.selectedFolder === folder.id ? \"active\" : \"\"\n          }`}\n        >\n          <i className={`zmdi zmdi-${folder.icon}`} />\n          <span>{folder.title}</span>\n        </span>\n      </li>\n    ));\n  };\n  onFolderMenuItemSelect = (folderId) => {\n    this.handleRequestClose();\n    const mails = this.state.allMail.map((mail) =>\n      mail.selected && mail.folder === this.state.selectedFolder\n        ? { ...mail, folder: folderId, selected: false }\n        : mail\n    );\n    this.setState({\n      selectedMails: 0,\n      allMail: mails,\n      noContentFoundMessage: \"No mail found in selected folder\",\n      alertMessage: \"Mail has been moved successfully\",\n      showMessage: true,\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n  };\n  onLabelMenuItemSelect = (label) => {\n    this.handleRequestClose();\n    const mails = this.state.allMail.map((mail) => {\n      if (mail.selected && mail.folder === this.state.selectedFolder) {\n        if (mail.labels.includes(label.id)) {\n          return { ...mail, labels: this.removeLabel(mail, label.id) };\n        } else {\n          return { ...mail, labels: this.addLabel(mail, label.id) };\n        }\n      } else {\n        return mail;\n      }\n    });\n    this.setState({\n      noContentFoundMessage: \"No mail found in selected label\",\n      alertMessage: \"Label Updated Successfully\",\n      showMessage: true,\n      allMail: mails,\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n  };\n  handleRequestClose = () => {\n    this.setState({\n      composeMail: false,\n      showMessage: false,\n      folderMenuState: false,\n      labelMenuState: false,\n      optionMenuState: false,\n    });\n  };\n  getNavFilters = () => {\n    return filters.map((filter, index) => (\n      <li\n        key={index}\n        onClick={() => {\n          const filterMails = this.state.allMail.filter((mail) => {\n            if (filter.id === 0 && mail.starred) {\n              return mail;\n            } else if (filter.id === 1 && mail.important) {\n              return mail;\n            }\n            return null;\n          });\n          this.setState({\n            noContentFoundMessage: \"No mail found in selected filter\",\n            loader: true,\n            folderMails: filterMails,\n          });\n          setTimeout(() => {\n            this.setState({ loader: false });\n          }, 1500);\n        }}\n      >\n        <span className=\"jr-link\">\n          <i className={`zmdi zmdi-${filter.icon}`} />\n          <span>{filter.title}</span>\n        </span>\n      </li>\n    ));\n  };\n  onFolderSelect = (event) => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      folderMenuState: !this.state.folderMenuState,\n    });\n  };\n  onLabelSelect = (event) => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      labelMenuState: !this.state.labelMenuState,\n    });\n  };\n  onOptionMenuSelect = (event) => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      optionMenuState: !this.state.optionMenuState,\n    });\n  };\n  onOptionMenuItemSelect = (option) => {\n    switch (option.title) {\n      case \"All\":\n        this.handleRequestClose();\n        this.getAllMail();\n        break;\n      case \"None\":\n        this.handleRequestClose();\n        this.getUnselectedAllMail();\n        break;\n      case \"Read\":\n        this.handleRequestClose();\n        this.getReadMail();\n        break;\n      case \"Unread\":\n        this.handleRequestClose();\n        this.getUnreadMail();\n        break;\n      case \"Starred\":\n        this.handleRequestClose();\n        this.getStarredMail();\n        break;\n      case \"Unstarred\":\n        this.handleRequestClose();\n        this.getUnStarredMail();\n        break;\n      case \"Important\":\n        this.handleRequestClose();\n        this.getImportantMail();\n        break;\n      case \"Unimportant\":\n        this.handleRequestClose();\n        this.getUnimportantMail();\n        break;\n      default:\n        this.handleRequestClose();\n        this.getAllMail();\n    }\n  };\n  getAllMail = () => {\n    let mails = this.state.allMail.map((mail) =>\n      mail.folder === this.state.selectedFolder\n        ? {\n            ...mail,\n            selected: true,\n          }\n        : mail\n    );\n    this.setState({\n      selectedMails: mails.length,\n      allMail: mails,\n      optionName: \"All\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n  };\n  getUnselectedAllMail = () => {\n    let mails = this.state.allMail.map((mail) =>\n      mail.folder === this.state.selectedFolder\n        ? {\n            ...mail,\n            selected: false,\n          }\n        : mail\n    );\n    this.setState({\n      selectedMails: 0,\n      allMail: mails,\n      optionName: \"None\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n  };\n  getReadMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(\n      (mail) => mail.folder === this.state.selectedFolder\n    );\n    mails = mails.map((mail) => {\n      if (mail.read) {\n        selectedMail++;\n        return { ...mail, selected: true };\n      }\n      return { ...mail, selected: false };\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: \"Read\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n    return mails;\n  };\n  getUnreadMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(\n      (mail) => mail.folder === this.state.selectedFolder\n    );\n    mails = mails.map((mail) => {\n      if (!mail.read) {\n        selectedMail++;\n        return { ...mail, selected: true };\n      }\n      return { ...mail, selected: false };\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: \"Unread\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n    return mails;\n  };\n  getStarredMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(\n      (mail) => mail.folder === this.state.selectedFolder\n    );\n    mails = mails.map((mail) => {\n      if (mail.starred) {\n        selectedMail++;\n        return { ...mail, selected: true };\n      }\n      return { ...mail, selected: false };\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: \"Starred\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n    return mails;\n  };\n  getUnStarredMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(\n      (mail) => mail.folder === this.state.selectedFolder\n    );\n    mails = mails.map((mail) => {\n      if (!mail.starred) {\n        selectedMail++;\n        return { ...mail, selected: true };\n      }\n      return { ...mail, selected: false };\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: \"UnStarred\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n    return mails;\n  };\n  getImportantMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(\n      (mail) => mail.folder === this.state.selectedFolder\n    );\n    mails = mails.map((mail) => {\n      if (mail.important) {\n        selectedMail++;\n        return { ...mail, selected: true };\n      }\n      return { ...mail, selected: false };\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: \"Important\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n    return mails;\n  };\n  getUnimportantMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(\n      (mail) => mail.folder === this.state.selectedFolder\n    );\n    mails = mails.map((mail) => {\n      if (!mail.important) {\n        selectedMail++;\n        return { ...mail, selected: true };\n      }\n      return { ...mail, selected: false };\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      optionName: \"Unimportant\",\n      allMail: mails,\n      noContentFoundMessage: \"No Mail found in selected Label\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n    return mails;\n  };\n  getNavLabels = () => {\n    return labels.map((label, index) => (\n      <li\n        key={index}\n        onClick={() => {\n          const filterMails = this.state.allMail.filter((mail) =>\n            mail.labels.includes(label.id)\n          );\n          this.setState({\n            loader: true,\n            noContentFoundMessage: \"No mail found in selected label\",\n            folderMails: filterMails,\n          });\n          setTimeout(() => {\n            this.setState({ loader: false });\n          }, 1500);\n        }}\n      >\n        <span className=\"jr-link\">\n          <i className={`zmdi zmdi-circle text-${label.color}`} />\n          <span>{label.title}</span>\n        </span>\n      </li>\n    ));\n  };\n  searchMail = (searchText) => {\n    if (searchText === \"\") {\n      this.setState({\n        folderMails: this.state.allMail.filter((mail) => !mail.deleted),\n      });\n    } else {\n      const searchMails = this.state.allMail.filter(\n        (mail) =>\n          !mail.deleted &&\n          mail.subject.toLowerCase().indexOf(searchText.toLowerCase()) > -1\n      );\n      this.setState({\n        folderMails: searchMails,\n      });\n    }\n  };\n  displayMail = (currentMail, folderMails, noContentFoundMessage) => {\n    return (\n      <div className=\"module-box-column\">\n        {currentMail === null ? (\n          folderMails.length === 0 ? (\n            <div\n              className=\"d-flex align-items-center justify-content-center\"\n              style={{\n                height:\n                  this.props.width >= 1200\n                    ? \"calc(100vh - 265px)\"\n                    : \"calc(100vh - 245px)\",\n              }}\n            >\n              {noContentFoundMessage}\n            </div>\n          ) : (\n            <MailList\n              mails={folderMails}\n              onStartSelect={this.onStartSelect.bind(this)}\n              onMailSelect={this.onMailSelect.bind(this)}\n              width={this.props.width}\n              onMailChecked={this.onMailChecked.bind(this)}\n            />\n          )\n        ) : (\n          <MailDetail\n            mail={currentMail}\n            onStartSelect={this.onStartSelect.bind(this)}\n            width={this.props.width}\n            onImportantSelect={this.onImportantSelect.bind(this)}\n          />\n        )}\n      </div>\n    );\n  };\n  getMailActions = () => {\n    return (\n      <div>\n        <IconButton\n          onClick={this.onFolderSelect.bind(this)}\n          className=\"icon-btn\"\n        >\n          <i className=\"zmdi zmdi-folder\" />\n        </IconButton>\n\n        <IconButton onClick={this.onDeleteMail.bind(this)} className=\"icon-btn\">\n          <i className=\"zmdi zmdi-delete\" />\n        </IconButton>\n\n        <IconButton\n          onClick={this.onLabelSelect.bind(this)}\n          className=\"icon-btn\"\n        >\n          <i className=\"zmdi zmdi-label-alt\" />\n        </IconButton>\n      </div>\n    );\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      searchMail: \"\",\n      noContentFoundMessage: \"No mail found in selected folder\",\n      alertMessage: \"\",\n      showMessage: false,\n      drawerState: false,\n      optionName: \"None\",\n      anchorEl: null,\n      allMail: mails,\n      loader: true,\n      currentMail: null,\n      user: {\n        name: \"Robert Johnson\",\n        email: \"robert@example.com\",\n        avatar: \"https://via.placeholder.com/150x150\",\n      },\n      selectedMails: 0,\n      selectedFolder: 0,\n      composeMail: false,\n      labelMenuState: false,\n      folderMenuState: false,\n      optionMenuState: false,\n      folderMails: mails.filter((mail) => mail.folder === 0),\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ loader: false });\n    }, 1500);\n  }\n\n  onMailChecked(data) {\n    data.selected = !data.selected;\n    let selectedMail = 0;\n    const mails = this.state.folderMails.map((mail) => {\n      if (mail.selected) {\n        selectedMail++;\n      }\n      if (mail.id === data.id) {\n        if (mail.selected) {\n          selectedMail++;\n        }\n        return data;\n      } else {\n        return mail;\n      }\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      folderMails: mails,\n    });\n  }\n\n  onAllMailSelect() {\n    const selectAll = this.state.selectedMails <= this.state.folderMails.length;\n    if (selectAll) {\n      this.getAllMail();\n    } else {\n      this.getUnselectedAllMail();\n    }\n  }\n\n  removeLabel(mail, label) {\n    mail.labels.splice(mail.labels.indexOf(label), 1);\n    if (\n      this.state.currentMail !== null &&\n      mail.id === this.state.currentMail.id\n    ) {\n      this.setState({\n        currentMail: { ...mail, labels: mail.labels },\n      });\n    }\n    return mail.labels;\n  }\n\n  onStartSelect(data) {\n    data.starred = !data.starred;\n    this.setState({\n      alertMessage: data.starred ? \"Mail Mark as Star\" : \"Mail Remove as Star\",\n      showMessage: true,\n      folderMails: this.state.folderMails.map((mail) =>\n        mail.id === data.id ? data : mail\n      ),\n    });\n  }\n\n  onImportantSelect(data) {\n    data.important = !data.important;\n    this.setState({\n      alertMessage: data.important\n        ? \"Mail Mark as Important\"\n        : \"Mail Remove as Important\",\n      showMessage: true,\n      folderMails: this.state.folderMails.map((mail) =>\n        mail.id === data.id ? data : mail\n      ),\n    });\n  }\n\n  onMailSend(data) {\n    this.setState({\n      alertMessage: \"Mail Sent Successfully\",\n      showMessage: true,\n      folderMails: this.state.allMail.concat(data),\n      allMail: this.state.allMail.concat(data),\n    });\n  }\n\n  onMailSelect(mail) {\n    this.setState({\n      loader: true,\n      currentMail: mail,\n    });\n    setTimeout(() => {\n      this.setState({ loader: false });\n    }, 1500);\n  }\n\n  addLabel(mail, label) {\n    if (\n      this.state.currentMail !== null &&\n      mail.id === this.state.currentMail.id\n    ) {\n      this.setState({\n        currentMail: { ...mail, labels: mail.labels.concat(label) },\n      });\n    }\n    return mail.labels.concat(label);\n  }\n\n  updateSearch(evt) {\n    this.setState({\n      searchMail: evt.target.value,\n    });\n    this.searchMail(evt.target.value);\n  }\n\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState,\n    });\n  }\n\n  render() {\n    const {\n      selectedMails,\n      loader,\n      currentMail,\n      folderMails,\n      composeMail,\n      user,\n      alertMessage,\n      showMessage,\n      noContentFoundMessage,\n    } = this.state;\n    return (\n      <div className=\"app-wrapper\">\n        <div className=\"animated slideInUpTiny animation-duration-3\">\n          <div className=\"app-module\">\n            <div className=\"d-block d-xl-none\">\n              <Drawer\n                open={this.state.drawerState}\n                onClose={this.onToggleDrawer.bind(this)}\n              >\n                {this.MailSideBar()}\n              </Drawer>\n            </div>\n            <div className=\"app-module-sidenav d-none d-xl-flex\">\n              {this.MailSideBar()}\n            </div>\n\n            <div className=\"module-box\">\n              <div className=\"module-box-header\">\n                <IconButton\n                  className=\"drawer-btn d-block d-xl-none\"\n                  aria-label=\"Menu\"\n                  onClick={this.onToggleDrawer.bind(this)}\n                >\n                  <i className=\"zmdi zmdi-menu\" />\n                </IconButton>\n                <AppModuleHeader\n                  placeholder=\"Search mails\"\n                  user={this.state.user}\n                  onChange={this.updateSearch.bind(this)}\n                  value={this.state.searchMail}\n                />\n              </div>\n\n              <div className=\"module-box-content\">\n                <div className=\"module-box-topbar\">\n                  {this.state.currentMail === null ? (\n                    <div className=\"d-flex\">\n                      <Checkbox\n                        color=\"primary\"\n                        indeterminate={\n                          selectedMails > 0 &&\n                          selectedMails < folderMails.length\n                        }\n                        checked={selectedMails > 0}\n                        onChange={this.onAllMailSelect.bind(this)}\n                        value=\"SelectMail\"\n                      />\n                      <div\n                        className=\"d-flex align-items-center\"\n                        onClick={this.onOptionMenuSelect.bind(this)}\n                      >\n                        <span className=\"px-2\"> {this.state.optionName}</span>\n                        <IconButton className=\"icon-btn-sm\">\n                          <i className=\"zmdi zmdi-caret-down\" />\n                        </IconButton>\n                      </div>\n                    </div>\n                  ) : (\n                    <IconButton\n                      className=\"icon-btn\"\n                      onClick={() => {\n                        this.setState({\n                          currentMail: null,\n                        });\n                      }}\n                    >\n                      <i className=\"zmdi zmdi-arrow-back\" />\n                    </IconButton>\n                  )}\n\n                  {selectedMails > 0 && this.getMailActions()}\n\n                  <Menu\n                    id=\"option-menu\"\n                    anchorEl={this.state.anchorEl}\n                    open={this.state.optionMenuState}\n                    onClose={this.handleRequestClose}\n                    MenuListProps={{\n                      style: {\n                        width: 150,\n                      },\n                    }}\n                  >\n                    {options.map((option) => (\n                      <MenuItem\n                        key={option.title}\n                        onClick={this.onOptionMenuItemSelect.bind(this, option)}\n                      >\n                        {option.title}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n\n                  <Menu\n                    id=\"folder-menu\"\n                    anchorEl={this.state.anchorEl}\n                    open={this.state.folderMenuState}\n                    onClose={this.handleRequestClose}\n                    MenuListProps={{\n                      style: {\n                        width: 150,\n                      },\n                    }}\n                  >\n                    {folders.map((folder) => (\n                      <MenuItem\n                        key={folder.id}\n                        onClick={this.onFolderMenuItemSelect.bind(\n                          this,\n                          folder.id\n                        )}\n                      >\n                        {folder.title}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                  <Menu\n                    id=\"label-menu\"\n                    anchorEl={this.state.anchorEl}\n                    open={this.state.labelMenuState}\n                    onClose={this.handleRequestClose}\n                    MenuListProps={{\n                      style: {\n                        width: 150,\n                      },\n                    }}\n                  >\n                    {labels.map((label) => (\n                      <MenuItem\n                        key={label.id}\n                        onClick={this.onLabelMenuItemSelect.bind(this, label)}\n                      >\n                        {label.title}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                </div>\n\n                {loader ? (\n                  <div\n                    className=\"loader-view\"\n                    style={{\n                      height:\n                        this.props.width >= 1200\n                          ? \"calc(100vh - 265px)\"\n                          : \"calc(100vh - 245px)\",\n                    }}\n                  >\n                    <CircularProgress />\n                  </div>\n                ) : (\n                  this.displayMail(\n                    currentMail,\n                    folderMails,\n                    noContentFoundMessage\n                  )\n                )}\n\n                <ComposeMail\n                  open={composeMail}\n                  user={user}\n                  onClose={this.handleRequestClose.bind(this)}\n                  onMailSend={this.onMailSend.bind(this)}\n                />\n              </div>\n            </div>\n          </div>\n          <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            open={showMessage}\n            autoHideDuration={3000}\n            onClose={this.handleRequestClose}\n            ContentProps={{\n              \"aria-describedby\": \"message-id\",\n            }}\n            message={<span id=\"message-id\">{alertMessage}</span>}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n  };\n};\nexport default connect(mapStateToProps)(Mail);\n"]},"metadata":{},"sourceType":"module"}