{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/AddHomework.js\";\nimport React from 'react';\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Auxiliary from \"../../../../../util/Auxiliary\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from \"react-redux\";\nimport { addAndAssignHomework, fetchProfessorBySubject } from '../../../../../actions/ToDo';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { classService } from \"../../../../../_services/class.service\";\nimport CardBox from '../../../../../components/CardBox/index'; // import { getSectionsByLevelId } from \"../../../../../actions/sectionAction\";\n\nimport { subjectsByLevelBySection } from '../../../../../actions/subjectAction';\nimport { roleIdProfessor, roleIdAdmin } from '../../../../../config/config';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/moment';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport _ from \"lodash\";\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { element } from 'prop-types';\nimport moment from 'moment';\n\nclass AddHomework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeProfessor = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange = name => event => {\n      if (name === 'educationTypeId') {\n        let educationType = this.props.establishmentData.filter(element => element.id === event.target.value);\n        this.setState({\n          levels: educationType[0].levels\n        });\n      } else {\n        this.setState({\n          [name]: event.target.value\n        });\n      }\n    };\n\n    this.handleChangeLevel = name => event => {\n      let level = this.state.levels.filter(element => element.id === event.target.value);\n      let classes = this.props.classes.filter(element => element.fk_id_level_v3 === event.target.value);\n      this.setState({\n        sections: level[0].sections,\n        subjects: level[0].subjectsLevelsSections,\n        classes\n      });\n\n      if (!_.isEmpty(level[0].sections)) {\n        this.setState({\n          sectionsDisable: false,\n          [name]: event.target.value\n        });\n      } else {\n        this.setState({\n          sectionsDisable: true\n        });\n      } // let classes = this.state.classes.filter(element => element.level_id === event.target.value)\n      // let sections = this.props.sections.filter(element => element.fk_id_level_v3 === event.target.value)\n      // this.setState({ classes, sections })\n      // let levelId = event.target.value;\n      // if (this.props.userProfile.role_id === roleIdProfessor) {\n      //     let data = this.state.subjectsAffectedToProf;\n      //     let listSubject = subjectsByLevelBySection(this.props.subjects, levelId, 0);\n      //     let dataSubjectsFiltred = []\n      //     data.forEach(item => {\n      //         let dataFiltred = listSubject.filter(element => element.id === item)\n      //         if (!_.isEmpty(dataFiltred[0])) {\n      //             dataSubjectsFiltred.push(dataFiltred[0])\n      //         }\n      //         this.setState({ subjects: dataSubjectsFiltred, levelId: levelId });\n      //     });\n      // } else {\n      //     this.setState({ levelId: levelId, professor_id: 0 });\n      // }\n\n    };\n\n    this.handleChangeSection = name => event => {\n      let section = this.state.sections.filter(element => element.id === event.target.value);\n      let classes = this.props.classes.filter(element => element.fk_id_level_v3 === this.state.levelId && element.fk_id_section_v3 === event.target.value);\n      this.setState({\n        subjects: section[0].subjectsLevelsSection,\n        classes\n      }); // let sectionId = event.target.value;\n      // if (this.props.userProfile.role_id === roleIdProfessor) {\n      //     let data = this.state.subjectsAffectedToProf;\n      //     let listSubject = subjectsByLevelBySection(this.props.subjects, this.state.levelId, sectionId);\n      //     let dataSubjectsFiltred = []\n      //     data.forEach(item => {\n      //         let dataFiltred = listSubject.filter(element => element.id === item)\n      //         if (!_.isEmpty(dataFiltred[0])) {\n      //             dataSubjectsFiltred.push(dataFiltred[0])\n      //         }\n      //         this.setState({ subjects: dataSubjectsFiltred });\n      //     });\n      // } else {\n      //     this.setState({ subjects: subjectsByLevelBySection(this.props.subjects, this.state.levelId, sectionId) })\n      // }\n    };\n\n    this.handleChangeSubject = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        let professors = this.props.subjectsProfessors.filter(element => element.subject_id === event.target.value);\n        this.setState({\n          professor_id: 0,\n          professors\n        });\n      }\n    };\n\n    this.assignCorrectionDate = name => event => {\n      this.setState({\n        [name]: event._d\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.subject_id === '') {\n        this.setState({\n          subjectError: true\n        });\n      } else if (this.state.professor_id === 0 && this.props.userProfile.role_id === roleIdAdmin) {\n        this.setState({\n          professorError: true\n        });\n      } else {\n        const data = {\n          title: this.state.title,\n          description: this.state.description,\n          date_creation: new Date(),\n          professor_id: this.state.professor_id,\n          subject_id: this.state.subject_id,\n          establishment_id: this.props.userProfile.establishment_id,\n          files_name: this.state.inputText,\n          classId: this.state.classId,\n          correctionDate: this.state.correctionDate\n        };\n        this.props.dispatch(addAndAssignHomework(data, this.state.fileList));\n        this.setState({\n          title: '',\n          subject_id: 0,\n          description: '',\n          professor_id: 0,\n          classId: null,\n          correctionDate: null\n        });\n        this.props.cancelModal();\n      }\n    };\n\n    this.onDrop = e => {\n      let file = e.target.files[0];\n      this.setState({\n        fileList: file,\n        inputText: file.name\n      });\n    };\n\n    this.state = {\n      previewVisible: true,\n      levels: [],\n      sections: [],\n      subjects: [],\n      professors: [],\n      classes: [],\n      title: '',\n      subject_id: '',\n      levelId: null,\n      classId: null,\n      description: '',\n      correctionDate: new Date(),\n      professor_id: 0,\n      sectionsDisable: true,\n      modal: false,\n      pictures: [],\n      file: null,\n      fileList: null,\n      inputText: '',\n      assignHomeworkList: [{\n        id: 0\n      }],\n      subjectsAffectedToProf: [],\n      subjectError: false,\n      professorError: false,\n      educationTypeId: null\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.handleChangeLevel = this.handleChangeLevel.bind(this);\n    this.handleChangeSection = this.handleChangeSection.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.assignCorrectionDate = this.assignCorrectionDate.bind(this);\n    this.handleChangeProfessor = this.handleChangeProfessor.bind(this);\n  }\n\n  componentDidMount() {\n    // let levelsAffectedToProf = []\n    if (this.props.userProfile.role_id === roleIdProfessor) {// let apiEndpoint = `/professors?access_token=${localStorage.token}&filter[where][profile_id]=` + this.props.userProfile.id + `&filter[include][profSubjects][subject]`\n      // classService.get(apiEndpoint)\n      //     .then(res => {\n      //         if (res) {\n      //             const professorsData = res.data;\n      //             let subjectsAffectedToProf = _.map(professorsData[0].profSubjects, 'subject_id')\n      //             let levelsId = _.uniqBy(_.map(professorsData[0].profSubjects, 'level_id'))\n      //             _.forEach(levelsId, function (value) {\n      //                 levelsAffectedToProf.push({ 'id': value })\n      //             });\n      //             let levels = _.intersectionBy(this.props.levels, levelsAffectedToProf, 'id');\n      //             this.setState({\n      //                 subject: professorsData[0].profSubjects, professor_id: professorsData[0].profSubjects[0].professor_id, subjectsAffectedToProf: subjectsAffectedToProf,\n      //                 levels: levels\n      //             })\n      //         }\n      //     });\n      // this.setState({ classes: this.props.classesList })\n    } else {\n      this.props.dispatch(fetchProfessorBySubject(this.props.userProfile.establishment_id));\n    }\n  }\n\n  handleCancel() {\n    this.props.cancelModal();\n  }\n\n  render() {\n    let {\n      sectionsDisable,\n      subjects,\n      professors,\n      classes,\n      levels,\n      sections\n    } = this.state;\n    let {\n      establishmentData\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.previewVisible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      className: \"modal-box-header bg-primary text-white\",\n      toggle: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"modal.addToDo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 29\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"homework-filter:visit\",\n      yes: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(CardBox, {\n        styleName: \"col-lg-12 text-primary\",\n        heading: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"component.etablishments.info.general\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 102\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"educationTypeId\",\n        name: \"educationTypeId\",\n        select: true,\n        defaultValue: \" \",\n        onChange: this.handleChange(\"educationTypeId\"),\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"educational.system\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 72\n          }\n        }),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 61\n        }\n      }, establishmentData.map(educationType => /*#__PURE__*/React.createElement(MenuItem, {\n        key: educationType.id,\n        value: educationType.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 69\n        }\n      }, educationType.name)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"levelId\",\n        name: \"levelId\",\n        select: true,\n        defaultValue: \" \",\n        onChange: this.handleChangeLevel(\"levelId\"),\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.note.niveau\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 72\n          }\n        }),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 61\n        }\n      }, levels.map(level => /*#__PURE__*/React.createElement(MenuItem, {\n        key: level.id,\n        value: level.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 69\n        }\n      }, level.name)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"section_id\",\n        name: \"section_id\",\n        select: true,\n        onChange: this.handleChangeSection(),\n        disabled: sectionsDisable,\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.class.level.input.label.section\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 72\n          }\n        }),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 61\n        }\n      }, sections.map(section => /*#__PURE__*/React.createElement(MenuItem, {\n        key: section.id,\n        value: section.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 69\n        }\n      }, section.name)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        select: true,\n        id: \"subject_id\",\n        name: \"subject_id\",\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"sidebar.subjects\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 72\n          }\n        }),\n        error: this.state.subjectError,\n        value: this.state.subject_id,\n        onChange: this.handleChangeSubject('subject_id'),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 61\n        }\n      }, subjects.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n        key: item.subject.id,\n        value: item.subject.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 69\n        }\n      }, item.subject.name))), /*#__PURE__*/React.createElement(FormHelperText, {\n        error: this.state.subjectError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 61\n        }\n      }, this.state.subjectError ? /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"message.seclect.subject\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 71\n        }\n      }) : '')), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"title\",\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.titre\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 72\n          }\n        }),\n        value: this.state.title,\n        onChange: this.handleChange('title'),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"homework-filter-professor:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          id: \"professor_id\",\n          name: \"professor_id\",\n          select: true,\n          label: /*#__PURE__*/React.createElement(IntlMessages, {\n            id: \"toDo.professor\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 80\n            }\n          }),\n          error: this.state.professorError,\n          value: this.state.professor_id,\n          onChange: this.handleChangeProfessor('professor_id'),\n          SelectProps: {},\n          margin: \"normal\",\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 69\n          }\n        }, professors.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n          key: option.professor.id,\n          value: option.professor.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 77\n          }\n        }, option.professor.profile.user.name + ' ' + option.professor.profile.user.surname))), /*#__PURE__*/React.createElement(FormHelperText, {\n          error: this.state.professorError,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 69\n          }\n        }, this.state.professorError ? /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"message.error.seclect.professor\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 79\n          }\n        }) : '')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        name: \"description\",\n        variant: \"outlined\",\n        multiline: true,\n        rows: 3,\n        id: \"description\",\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"room.description\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 72\n          }\n        }),\n        onChange: this.handleChange('description'),\n        value: this.state.description,\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 61\n        }\n      })))), /*#__PURE__*/React.createElement(CardBox, {\n        styleName: \"col-lg-12 text-primary\",\n        heading: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"stuppUser.formadd.file\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 102\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"name-multiple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.homework.task\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 98\n        }\n      })), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 159\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"files\",\n        className: \"btn\",\n        style: {\n          cursor: \"pointer\",\n          color: \"white\",\n          fontWeight: \"bold\",\n          backgroundColor: '#4B58B9',\n          borderRadius: '4rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 217\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"stuppUser.formadd.file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 226\n        }\n      }))), \" \", /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"files\",\n        className: \"btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 289\n        }\n      }, this.state.inputText), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"files\",\n        type: \"file\",\n        style: {\n          visibility: \"hidden\"\n        },\n        onChange: e => this.onDrop(e),\n        accept: \"application/pdf,image/*, application/txt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 61\n        }\n      })))), /*#__PURE__*/React.createElement(CardBox, {\n        styleName: \"col-12\",\n        heading: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"modal.assign_homework\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 86\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: \"w-100 mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"age-simple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"sidebar.classes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 99\n        }\n      })), /*#__PURE__*/React.createElement(Select, {\n        required: true,\n        native: true,\n        onChange: this.handleChange(\"classId\"),\n        name: \"classId\",\n        value: this.state.classId,\n        inputProps: {\n          id: 'classId-native-required'\n        },\n        input: /*#__PURE__*/React.createElement(Input, {\n          id: \"classe\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 76\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 69\n        }\n      }), classes.map(itemClass => /*#__PURE__*/React.createElement(\"option\", {\n        key: itemClass.id,\n        value: itemClass.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 73\n        }\n      }, itemClass.name))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.correctionDate\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 76\n          }\n        }),\n        fullWidth: true,\n        name: \"correctionDate\",\n        value: this.state.correctionDate,\n        onChange: this.assignCorrectionDate(\"correctionDate\"),\n        format: \"dddd DD MMMM Y\",\n        autoOk: true,\n        minDate: new Date(),\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 65\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 pt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"font\", {\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 57\n        }\n      }, \"*\"), \" \", /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"component.required_fields\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 85\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12 text-left \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"jr-btn bg-indigo text-white \",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.establishments.formadd.buttonAdd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 138\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"jr-btn bg-grey text-white \",\n        onClick: this.handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.establishments.formadd.buttonCancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 149\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 37\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    levels: state.levelsReducer.levels,\n    // subjects: state.subject.subjects,\n    sections: state.SectionsReducer.Section,\n    classes: state.ClassSettingsReducer.classSettings,\n    subjectsProfessors: state.toDo.subjectsProfessors\n  };\n};\n\nexport default connect(mapStateToProps)(AddHomework);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/AddHomework.js"],"names":["React","Modal","ModalBody","ModalHeader","IntlMessages","TextField","Button","Auxiliary","MenuItem","connect","addAndAssignHomework","fetchProfessorBySubject","InputLabel","classService","CardBox","subjectsByLevelBySection","roleIdProfessor","roleIdAdmin","KeyboardDatePicker","MuiPickersUtilsProvider","DateFnsUtils","Can","RoleContext","_","Input","FormControl","Select","FormHelperText","element","moment","AddHomework","Component","constructor","props","handleChangeProfessor","name","event","setState","target","value","handleChange","educationType","establishmentData","filter","id","levels","handleChangeLevel","level","state","classes","fk_id_level_v3","sections","subjects","subjectsLevelsSections","isEmpty","sectionsDisable","handleChangeSection","section","levelId","fk_id_section_v3","subjectsLevelsSection","handleChangeSubject","userProfile","role_id","professors","subjectsProfessors","subject_id","professor_id","assignCorrectionDate","_d","handleSubmit","e","preventDefault","subjectError","professorError","data","title","description","date_creation","Date","establishment_id","files_name","inputText","classId","correctionDate","dispatch","fileList","cancelModal","onDrop","file","files","previewVisible","modal","pictures","assignHomeworkList","subjectsAffectedToProf","educationTypeId","handleCancel","bind","componentDidMount","render","role","map","item","subject","option","professor","profile","user","surname","cursor","color","fontWeight","backgroundColor","borderRadius","visibility","itemClass","mapStateToProps","auth","levelsReducer","SectionsReducer","Section","ClassSettingsReducer","classSettings","toDo"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Auxiliary from \"../../../../../util/Auxiliary\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from \"react-redux\";\nimport { addAndAssignHomework, fetchProfessorBySubject } from '../../../../../actions/ToDo';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { classService } from \"../../../../../_services/class.service\";\nimport CardBox from '../../../../../components/CardBox/index';\n// import { getSectionsByLevelId } from \"../../../../../actions/sectionAction\";\nimport { subjectsByLevelBySection } from '../../../../../actions/subjectAction'\nimport { roleIdProfessor, roleIdAdmin } from '../../../../../config/config';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/moment';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport _ from \"lodash\";\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { element } from 'prop-types';\nimport moment from 'moment'\n\n\nclass AddHomework extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            previewVisible: true,\n            levels: [],\n            sections: [],\n            subjects: [],\n            professors: [],\n            classes: [],\n            title: '',\n            subject_id: '',\n            levelId: null,\n            classId: null,\n            description: '',\n            correctionDate: new Date(),\n\n\n            professor_id: 0,\n            sectionsDisable: true,\n            modal: false,\n            pictures: [],\n            file: null,\n            fileList: null,\n            inputText: '',\n            assignHomeworkList: [{ id: 0 }],\n\n            subjectsAffectedToProf: [],\n            subjectError: false,\n            professorError: false,\n            educationTypeId: null\n        };\n        this.handleCancel = this.handleCancel.bind(this);\n        this.handleChangeSubject = this.handleChangeSubject.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.handleChangeLevel = this.handleChangeLevel.bind(this);\n        this.handleChangeSection = this.handleChangeSection.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.assignCorrectionDate = this.assignCorrectionDate.bind(this);\n        this.handleChangeProfessor = this.handleChangeProfessor.bind(this);\n    };\n\n    handleChangeProfessor = name => event => {\n        this.setState({ [name]: event.target.value });\n    }\n\n    handleChange = name => event => {\n        if (name === 'educationTypeId') {\n            let educationType = this.props.establishmentData.filter(element => element.id === event.target.value)\n            this.setState({ levels: educationType[0].levels });\n        } else { this.setState({ [name]: event.target.value, })}\n    }\n\n    handleChangeLevel = name => event => {\n        let level = this.state.levels.filter(element => element.id === event.target.value)\n        let classes = this.props.classes.filter(element => element.fk_id_level_v3 === event.target.value)\n        this.setState({ sections: level[0].sections, subjects: level[0].subjectsLevelsSections, classes })\n        if (!_.isEmpty(level[0].sections)) {\n            this.setState({ sectionsDisable: false, [name]: event.target.value })\n        } else {\n            this.setState({ sectionsDisable: true })\n        }\n\n        // let classes = this.state.classes.filter(element => element.level_id === event.target.value)\n        // let sections = this.props.sections.filter(element => element.fk_id_level_v3 === event.target.value)\n        // this.setState({ classes, sections })\n        // let levelId = event.target.value;\n\n        // if (this.props.userProfile.role_id === roleIdProfessor) {\n        //     let data = this.state.subjectsAffectedToProf;\n        //     let listSubject = subjectsByLevelBySection(this.props.subjects, levelId, 0);\n        //     let dataSubjectsFiltred = []\n        //     data.forEach(item => {\n        //         let dataFiltred = listSubject.filter(element => element.id === item)\n        //         if (!_.isEmpty(dataFiltred[0])) {\n        //             dataSubjectsFiltred.push(dataFiltred[0])\n        //         }\n        //         this.setState({ subjects: dataSubjectsFiltred, levelId: levelId });\n        //     });\n\n        // } else {\n        //     this.setState({ levelId: levelId, professor_id: 0 });\n        // }\n\n\n    }\n\n    handleChangeSection = name => event => {\n        let section = this.state.sections.filter(element => element.id === event.target.value)\n        let classes = this.props.classes.filter(element => element.fk_id_level_v3 === this.state.levelId && element.fk_id_section_v3 === event.target.value)\n        this.setState({ subjects: section[0].subjectsLevelsSection, classes })\n        \n        // let sectionId = event.target.value;\n        // if (this.props.userProfile.role_id === roleIdProfessor) {\n        //     let data = this.state.subjectsAffectedToProf;\n        //     let listSubject = subjectsByLevelBySection(this.props.subjects, this.state.levelId, sectionId);\n        //     let dataSubjectsFiltred = []\n        //     data.forEach(item => {\n        //         let dataFiltred = listSubject.filter(element => element.id === item)\n        //         if (!_.isEmpty(dataFiltred[0])) {\n        //             dataSubjectsFiltred.push(dataFiltred[0])\n        //         }\n        //         this.setState({ subjects: dataSubjectsFiltred });\n        //     });\n        // } else {\n        //     this.setState({ subjects: subjectsByLevelBySection(this.props.subjects, this.state.levelId, sectionId) })\n        // }\n    }\n    handleChangeSubject = name => event => {\n        this.setState({ [name]: event.target.value });\n        if (this.props.userProfile.role_id === roleIdAdmin) {\n            let professors = this.props.subjectsProfessors.filter(element => element.subject_id === event.target.value)\n            this.setState({ professor_id: 0, professors })\n        }\n    };\n\n    componentDidMount() {\n        // let levelsAffectedToProf = []\n        if (this.props.userProfile.role_id === roleIdProfessor) {\n            // let apiEndpoint = `/professors?access_token=${localStorage.token}&filter[where][profile_id]=` + this.props.userProfile.id + `&filter[include][profSubjects][subject]`\n            // classService.get(apiEndpoint)\n            //     .then(res => {\n            //         if (res) {\n            //             const professorsData = res.data;\n\n            //             let subjectsAffectedToProf = _.map(professorsData[0].profSubjects, 'subject_id')\n            //             let levelsId = _.uniqBy(_.map(professorsData[0].profSubjects, 'level_id'))\n            //             _.forEach(levelsId, function (value) {\n            //                 levelsAffectedToProf.push({ 'id': value })\n            //             });\n            //             let levels = _.intersectionBy(this.props.levels, levelsAffectedToProf, 'id');\n            //             this.setState({\n            //                 subject: professorsData[0].profSubjects, professor_id: professorsData[0].profSubjects[0].professor_id, subjectsAffectedToProf: subjectsAffectedToProf,\n            //                 levels: levels\n            //             })\n            //         }\n            //     });\n\n            // this.setState({ classes: this.props.classesList })\n        } else {\n            this.props.dispatch(fetchProfessorBySubject(this.props.userProfile.establishment_id));\n\n        }\n\n    }\n\n    handleCancel() {\n        this.props.cancelModal();\n    };\n\n    assignCorrectionDate = name => event => {\n        this.setState({ [name]: event._d })\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.subject_id === '') {\n            this.setState({ subjectError: true })\n        } else if (this.state.professor_id === 0 && this.props.userProfile.role_id === roleIdAdmin) {\n            this.setState({ professorError: true })\n        } else {\n            const data = {\n                 title:this.state.title,\n                 description: this.state.description, \n                 date_creation: new Date(), \n                 professor_id: this.state.professor_id, \n                 subject_id: this.state.subject_id,\n                 establishment_id: this.props.userProfile.establishment_id,\n                 files_name: this.state.inputText,\n                 classId: this.state.classId,\n                 correctionDate : this.state.correctionDate,\n                };\n             this.props.dispatch(addAndAssignHomework(data, this.state.fileList));\n            \n            this.setState({\n                title: '',\n                subject_id: 0,\n                description: '',\n                professor_id: 0,\n                classId: null,\n                correctionDate: null,\n            });\n            this.props.cancelModal();\n        }\n    };\n    onDrop = e => {\n        let file = e.target.files[0]\n        this.setState({\n            fileList: file,\n            inputText: file.name\n        });\n    };\n    render() {\n\n        let { sectionsDisable, subjects, professors, classes, levels, sections } = this.state;\n        let { establishmentData } = this.props\n        return (\n            <Auxiliary>\n                <Modal isOpen={this.state.previewVisible}>\n                    <ModalHeader className=\"modal-box-header bg-primary text-white\"\n                        toggle={this.handleCancel}\n                    >\n                        {<IntlMessages id=\"modal.addToDo\" />}\n                    </ModalHeader>\n                    <ModalBody>\n                        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n                            <RoleContext.Consumer>\n                                {({ role }) => (\n                                    <Can\n                                        role={role}\n                                        perform=\"homework-filter:visit\"\n                                        yes={() => (\n                                            <div>\n                                                <CardBox styleName=\"col-lg-12 text-primary\" heading={<IntlMessages id=\"component.etablishments.info.general\" />} >\n                                                    <div className=\"row\">\n                                                        <div className=\"col-md-4\">\n\n                                                            <TextField\n                                                                id=\"educationTypeId\"\n                                                                name=\"educationTypeId\"\n                                                                select\n                                                                defaultValue=\" \"\n                                                                onChange={this.handleChange(\"educationTypeId\")}\n                                                                SelectProps={{}}\n                                                                label={<IntlMessages id=\"educational.system\" />}\n                                                                margin=\"normal\"\n                                                                fullWidth\n                                                            >\n\n                                                                {establishmentData.map((educationType) => (\n                                                                    <MenuItem key={educationType.id} value={educationType.id}>\n                                                                        {educationType.name}\n                                                                    </MenuItem>\n                                                                ))}\n                                                            </TextField>\n\n                                                        </div>\n                                                        <div className=\"col-md-4\">\n\n                                                            <TextField\n                                                                id=\"levelId\"\n                                                                name=\"levelId\"\n                                                                select\n                                                                defaultValue=\" \"\n                                                                onChange={this.handleChangeLevel(\"levelId\")}\n                                                                SelectProps={{}}\n                                                                label={<IntlMessages id=\"components.note.niveau\" />}\n                                                                margin=\"normal\"\n                                                                fullWidth\n                                                            >\n\n                                                                {levels.map((level) => (\n                                                                    <MenuItem key={level.id} value={level.id}>\n                                                                        {level.name}\n                                                                    </MenuItem>\n                                                                ))}\n                                                            </TextField>\n\n                                                        </div>\n                                                        <div className=\"col-md-4\">\n\n                                                            <TextField\n                                                                id=\"section_id\"\n                                                                name=\"section_id\"\n                                                                select\n                                                                onChange={this.handleChangeSection()}\n                                                                disabled={sectionsDisable}\n                                                                SelectProps={{}}\n                                                                label={<IntlMessages id=\"components.class.level.input.label.section\" />}\n                                                                margin=\"normal\"\n                                                                fullWidth\n                                                            >\n                                                                {sections.map((section) => (\n                                                                    <MenuItem key={section.id} value={section.id}>\n                                                                        {section.name}\n                                                                    </MenuItem>\n                                                                ))}\n                                                            </TextField>\n\n                                                        </div>\n                                                        <div className=\"col-sm-6\">\n                                                            <TextField\n                                                                required\n                                                                select\n                                                                id=\"subject_id\"\n                                                                name='subject_id'\n                                                                label={<IntlMessages id=\"sidebar.subjects\" />}\n                                                                error={this.state.subjectError}\n                                                                value={this.state.subject_id}\n                                                                onChange={this.handleChangeSubject('subject_id')}\n                                                                margin=\"normal\"\n                                                                fullWidth\n                                                            >\n                                                                {subjects.map(item => (\n                                                                    <MenuItem key={item.subject.id} value={item.subject.id}>\n                                                                        {item.subject.name}\n                                                                    </MenuItem>\n                                                                ))}\n                                                            </TextField>\n                                                            <FormHelperText error={this.state.subjectError}>\n                                                                {this.state.subjectError\n                                                                    ? <IntlMessages id=\"message.seclect.subject\" />\n                                                                    : ''}\n                                                            </FormHelperText>\n                                                        </div>\n                                                        <div className=\"col-sm-6\">\n                                                            <TextField\n                                                                required\n                                                                id=\"title\"\n                                                                label={<IntlMessages id=\"toDo.titre\" />}\n                                                                value={this.state.title}\n                                                                onChange={this.handleChange('title')}\n                                                                margin=\"normal\"\n                                                                fullWidth />\n\n\n                                                        </div>\n                                                        <Can\n                                                            role={role}\n                                                            perform=\"homework-filter-professor:visit\"\n                                                            yes={() => (\n                                                                <div className=\"col-md-6\">\n\n                                                                    <TextField\n                                                                        id=\"professor_id\"\n                                                                        name=\"professor_id\"\n                                                                        select\n                                                                        label={<IntlMessages id=\"toDo.professor\" />}\n                                                                        error={this.state.professorError}\n                                                                        value={this.state.professor_id}\n                                                                        onChange={this.handleChangeProfessor('professor_id')}\n                                                                        SelectProps={{}}\n                                                                        margin=\"normal\"\n                                                                        fullWidth\n                                                                    >\n                                                                        {professors.map((option) => (\n                                                                            <MenuItem\n                                                                                key={option.professor.id}\n                                                                                value={option.professor.id}\n                                                                            >\n                                                                                {option.professor.profile.user.name +\n                                                                                    ' ' +\n                                                                                    option.professor.profile.user.surname}\n                                                                            </MenuItem>\n                                                                        ))}\n                                                                    </TextField>\n                                                                    <FormHelperText error={this.state.professorError}>\n                                                                        {this.state.professorError\n                                                                            ? <IntlMessages id=\"message.error.seclect.professor\" />\n                                                                            : ''}\n                                                                    </FormHelperText>\n\n                                                                </div>\n\n                                                            )}\n                                                        />\n\n                                                        <div className=\"col-sm-12\">\n                                                            <TextField\n                                                                name='description'\n                                                                variant=\"outlined\"\n                                                                multiline\n                                                                rows={3}\n                                                                id=\"description\"\n                                                                label={<IntlMessages id=\"room.description\" />}\n                                                                onChange={this.handleChange('description')}\n                                                                value={this.state.description}\n                                                                margin=\"normal\"\n                                                                fullWidth\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </CardBox>\n\n                                                <CardBox styleName=\"col-lg-12 text-primary\" heading={<IntlMessages id=\"stuppUser.formadd.file\" />} >\n\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-12 pt-3\">\n                                                            <InputLabel htmlFor=\"name-multiple\">{<IntlMessages id=\"components.homework.task\" />}</InputLabel> <br />\n                                                            <label htmlFor=\"files\" className=\"btn\" style={{ cursor: \"pointer\", color: \"white\", fontWeight: \"bold\", backgroundColor: '#4B58B9', borderRadius: '4rem' }} ><strong>{<IntlMessages id=\"stuppUser.formadd.file\" />}</strong></label> <label htmlFor=\"files\" className=\"btn\">{this.state.inputText}</label>\n                                                            <input id=\"files\" type=\"file\" style={{ visibility: \"hidden\" }} onChange={(e) => this.onDrop(e)} accept=\"application/pdf,image/*, application/txt\" />\n                                                        </div>\n                                                    </div>\n                                                </CardBox>\n                                                <CardBox styleName=\"col-12\" heading={<IntlMessages id=\"modal.assign_homework\" />} >\n\n\n                                                    <div className=\"row\" >\n                                                        <div className=\"col-sm-6\">\n\n                                                            <FormControl className=\"w-100 mb-2\">\n                                                                <InputLabel htmlFor=\"age-simple\">{<IntlMessages id=\"sidebar.classes\" />}</InputLabel>\n                                                                <Select\n                                                                    required\n                                                                    native\n                                                                    onChange={this.handleChange(\"classId\")}\n                                                                    name=\"classId\"\n                                                                    value={this.state.classId}\n                                                                    inputProps={{\n                                                                        id: 'classId-native-required',\n                                                                    }}\n                                                                    input={<Input id=\"classe\" />}\n                                                                >\n                                                                    <option></option>\n                                                                    {classes.map(itemClass => (\n                                                                        <option key={itemClass.id} value={itemClass.id}>\n                                                                            {itemClass.name}\n                                                                        </option>\n                                                                    ))}\n                                                                </Select>\n                                                            </FormControl>\n                                                        </div>\n                                                        <div className=\"col-sm-6\">\n\n                                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                                <KeyboardDatePicker\n                                                                    label={<IntlMessages id=\"toDo.correctionDate\" />}\n                                                                    fullWidth\n                                                                    name=\"correctionDate\"\n                                                                    value={this.state.correctionDate}\n                                                                    onChange={this.assignCorrectionDate(\"correctionDate\")}\n                                                                    format='dddd DD MMMM Y'\n                                                                    autoOk\n                                                                    minDate={new Date()}\n                                                                    required\n                                                                />\n                                                            </MuiPickersUtilsProvider>\n                                                        </div>\n                                                    </div>\n\n\n\n                                                </CardBox>\n                                                <div className=\"col-sm-12 pt-4\">\n                                                    <h4><font color=\"red\">*</font> {<IntlMessages id=\"component.required_fields\" />}</h4>\n                                                </div>\n                                                <div className=\"col-md-12 text-left \">\n                                                    <Button variant=\"contained\" className=\"jr-btn bg-indigo text-white \" type=\"submit\" >{<IntlMessages id=\"components.establishments.formadd.buttonAdd\" />}</Button>\n                                                    <Button variant=\"contained\" className=\"jr-btn bg-grey text-white \" onClick={this.handleCancel}>{<IntlMessages id=\"components.establishments.formadd.buttonCancel\" />}</Button>\n                                                </div>\n                                            </div>\n\n                                        )}\n                                    />\n                                )}\n                            </RoleContext.Consumer>\n                        </form>\n                    </ModalBody>\n\n                </Modal>\n            </Auxiliary>\n        )\n    };\n}\nconst mapStateToProps = (state) => {\n    return {\n        userProfile: state.auth.userProfile,\n        levels: state.levelsReducer.levels,\n        // subjects: state.subject.subjects,\n        sections: state.SectionsReducer.Section,\n        classes: state.ClassSettingsReducer.classSettings,\n        subjectsProfessors: state.toDo.subjectsProfessors,\n    }\n}\nexport default connect(mapStateToProps)(AddHomework);"]},"metadata":{},"sourceType":"module"}