{"ast":null,"code":"import { FETECHED_ALL_EVENTS, EDIT_EVENT, GET_EVENTS_call_REGISTER, REMOVE_EVENT, UPDATE_EVENT, GET_EVENTS_CLASS, ADD_EVENT } from \"../constants/ActionTypes\";\nconst initialState = {\n  events: [],\n  callRegisterEvents: [],\n  alertMessage: '',\n  showMessageEvent: false,\n  professorsClass: [],\n  test: false\n};\nexport default function planningReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETECHED_ALL_EVENTS:\n      return Object.assign({}, state, {\n        events: action.payload\n      });\n\n    case GET_EVENTS_call_REGISTER:\n      {\n        return Object.assign({}, state, {\n          callRegisterEvents: action.payload\n        });\n      }\n\n    case GET_EVENTS_CLASS:\n      {\n        return Object.assign({}, state, {\n          events: action.payload\n        });\n      }\n\n    case ADD_EVENT:\n      {\n        return Object.assign({}, state, {\n          events: state.events.concat(action.payload)\n        });\n      }\n\n    case REMOVE_EVENT:\n      return state.filter(classe => classe.id !== action.payload.id);\n\n    case UPDATE_EVENT:\n      return state.map(classItem => {\n        // const { id, professors, students, name, niveau, establishment, capacity, start_date, end_date, description } = action.payload;\n        if (classItem.id === action.payload.id) {\n          return { ...classItem,\n            name: action.payload.name,\n            level_class: action.payload.level_class,\n            student_id: action.payload.student_id,\n            professor_id: action.payload.professor_id,\n            establishment_id: action.payload.establishment_id,\n            capacity: action.payload.capacity,\n            start_date: action.payload.start_date,\n            end_date: action.payload.end_date,\n            description: action.payload.description,\n            students_number: action.payload.students_number\n          };\n        } else return classItem;\n      });\n\n    case 'GET_PROFESSORS_BY_CLASS':\n      return Object.assign({}, state, {\n        professorsClass: action.payload\n      });\n\n    case 'GET_EVENTS_BY_STUDENT':\n      return Object.assign({}, state, {\n        events: action.payload\n      });\n\n    case 'ADD_EVENT_NOT_ALLOWED':\n      return { ...state,\n        showMessageEvent: true,\n        alertMessage: action.payload\n      };\n\n    case 'HANDLE_EVENT_REQUEST_CLOSE':\n      return { ...state,\n        showMessageEvent: false\n      };\n\n    case 'GET_EVENTS_STUDENT':\n      return Object.assign({}, state, {\n        events: action.payload\n      });\n\n    case 'GET_EVENTS_BY_CLASS':\n      return Object.assign({}, state, {\n        events: action.payload\n      });\n\n    case 'GET_EVENTS_PROFESSOR':\n      return { ...state,\n        events: action.payload\n      };\n\n    case 'REMOVE_EVENTS_LIST':\n      return { ...state,\n        events: []\n      };\n\n    case EDIT_EVENT:\n      {\n        return Object.assign({}, state, {\n          events: [...state.events.filter(element => element.id !== action.payload.id), action.payload]\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/reducers/planningReducer.js"],"names":["FETECHED_ALL_EVENTS","EDIT_EVENT","GET_EVENTS_call_REGISTER","REMOVE_EVENT","UPDATE_EVENT","GET_EVENTS_CLASS","ADD_EVENT","initialState","events","callRegisterEvents","alertMessage","showMessageEvent","professorsClass","test","planningReducer","state","action","type","Object","assign","payload","concat","filter","classe","id","map","classItem","name","level_class","student_id","professor_id","establishment_id","capacity","start_date","end_date","description","students_number","element"],"mappings":"AAAA,SAAUA,mBAAV,EAA8BC,UAA9B,EAA0CC,wBAA1C,EACGC,YADH,EACiBC,YADjB,EAC+BC,gBAD/B,EACgDC,SADhD,QACiE,0BADjE;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,kBAAkB,EAAC,EAFA;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,gBAAgB,EAAE,KAJC;AAKnBC,EAAAA,eAAe,EAAE,EALE;AAMnBC,EAAAA,IAAI,EAAE;AANa,CAArB;AAWA,eAAe,SAASC,eAAT,CAAyBC,KAAK,GAAGR,YAAjC,EAA+CS,MAA/C,EAAuD;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,mBAAL;AACE,aAAOkB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BP,QAAAA,MAAM,EAAEQ,MAAM,CAACI;AADe,OAAzB,CAAP;;AAGF,SAAKlB,wBAAL;AACE;AACE,eAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BN,UAAAA,kBAAkB,EAAEO,MAAM,CAACI;AADG,SAAzB,CAAP;AAGD;;AACD,SAAKf,gBAAL;AACE;AACE,eAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BP,UAAAA,MAAM,EAAEQ,MAAM,CAACI;AADe,SAAzB,CAAP;AAGD;;AACD,SAAKd,SAAL;AAAe;AACf,eAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BP,UAAAA,MAAM,EAAEO,KAAK,CAACP,MAAN,CAAaa,MAAb,CAAoBL,MAAM,CAACI,OAA3B;AADsB,SAAzB,CAAP;AAGH;;AAED,SAAKjB,YAAL;AACE,aAAOY,KAAK,CAACO,MAAN,CAAcC,MAAD,IAAYA,MAAM,CAACC,EAAP,KAAcR,MAAM,CAACI,OAAP,CAAeI,EAAtD,CAAP;;AAEF,SAAKpB,YAAL;AACE,aAAOW,KAAK,CAACU,GAAN,CAAWC,SAAD,IAAe;AAC9B;AACA,YAAIA,SAAS,CAACF,EAAV,KAAiBR,MAAM,CAACI,OAAP,CAAeI,EAApC,EAAwC;AACtC,iBAAO,EACL,GAAGE,SADE;AAELC,YAAAA,IAAI,EAAEX,MAAM,CAACI,OAAP,CAAeO,IAFhB;AAGLC,YAAAA,WAAW,EAAEZ,MAAM,CAACI,OAAP,CAAeQ,WAHvB;AAILC,YAAAA,UAAU,EAAEb,MAAM,CAACI,OAAP,CAAeS,UAJtB;AAKLC,YAAAA,YAAY,EAAEd,MAAM,CAACI,OAAP,CAAeU,YALxB;AAMLC,YAAAA,gBAAgB,EAAEf,MAAM,CAACI,OAAP,CAAeW,gBAN5B;AAOLC,YAAAA,QAAQ,EAAEhB,MAAM,CAACI,OAAP,CAAeY,QAPpB;AAQLC,YAAAA,UAAU,EAAEjB,MAAM,CAACI,OAAP,CAAea,UARtB;AASLC,YAAAA,QAAQ,EAAElB,MAAM,CAACI,OAAP,CAAec,QATpB;AAULC,YAAAA,WAAW,EAAEnB,MAAM,CAACI,OAAP,CAAee,WAVvB;AAWLC,YAAAA,eAAe,EAAEpB,MAAM,CAACI,OAAP,CAAegB;AAX3B,WAAP;AAaD,SAdD,MAcO,OAAOV,SAAP;AACR,OAjBM,CAAP;;AAkBF,SAAK,yBAAL;AACE,aAAOR,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BH,QAAAA,eAAe,EAAEI,MAAM,CAACI;AADM,OAAzB,CAAP;;AAGF,SAAK,uBAAL;AACE,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BP,QAAAA,MAAM,EAAEQ,MAAM,CAACI;AADe,OAAzB,CAAP;;AAGF,SAAK,uBAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,gBAAgB,EAAE,IAFb;AAGLD,QAAAA,YAAY,EAAEM,MAAM,CAACI;AAHhB,OAAP;;AAKF,SAAK,4BAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,gBAAgB,EAAE;AAFb,OAAP;;AAIF,SAAK,oBAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BP,QAAAA,MAAM,EAAEQ,MAAM,CAACI;AADe,OAAzB,CAAP;;AAGF,SAAK,qBAAL;AACE,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BP,QAAAA,MAAM,EAAEQ,MAAM,CAACI;AADe,OAAzB,CAAP;;AAIF,SAAK,sBAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELP,QAAAA,MAAM,EAAEQ,MAAM,CAACI;AAFV,OAAP;;AAKA,SAAK,oBAAL;AACA,aAAO,EACL,GAAGL,KADE;AAELP,QAAAA,MAAM,EAAE;AAFH,OAAP;;AAKA,SAAKP,UAAL;AAAgB;AACd,eAAOiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BP,UAAAA,MAAM,EAAE,CACN,GAAGO,KAAK,CAACP,MAAN,CAAac,MAAb,CACAe,OAAD,IAAaA,OAAO,CAACb,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAD1C,CADG,EAINR,MAAM,CAACI,OAJD;AADsB,SAAzB,CAAP;AAQH;;AAED;AACE,aAAOL,KAAP;AAjGJ;AAmGD","sourcesContent":["import {  FETECHED_ALL_EVENTS,EDIT_EVENT, GET_EVENTS_call_REGISTER,\n   REMOVE_EVENT, UPDATE_EVENT, GET_EVENTS_CLASS,ADD_EVENT } from \"../constants/ActionTypes\";\n\nconst initialState = {\n  events: [],\n  callRegisterEvents:[],\n  alertMessage: '',\n  showMessageEvent: false,\n  professorsClass: [],\n  test: false\n\n\n};\n\nexport default function planningReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETECHED_ALL_EVENTS:\n      return Object.assign({}, state, {\n        events: action.payload\n      });\n    case GET_EVENTS_call_REGISTER:\n      {\n        return Object.assign({}, state, {\n          callRegisterEvents: action.payload\n        });\n      }\n      case GET_EVENTS_CLASS:\n        {\n          return Object.assign({}, state, {\n            events: action.payload\n          });\n        }\n        case ADD_EVENT:{\n        return Object.assign({}, state, {\n          events: state.events.concat(action.payload),\n        });\n    }\n\n    case REMOVE_EVENT:\n      return state.filter((classe) => classe.id !== action.payload.id);\n\n    case UPDATE_EVENT:\n      return state.map((classItem) => {\n        // const { id, professors, students, name, niveau, establishment, capacity, start_date, end_date, description } = action.payload;\n        if (classItem.id === action.payload.id) {\n          return {\n            ...classItem,\n            name: action.payload.name,\n            level_class: action.payload.level_class,\n            student_id: action.payload.student_id,\n            professor_id: action.payload.professor_id,\n            establishment_id: action.payload.establishment_id,\n            capacity: action.payload.capacity,\n            start_date: action.payload.start_date,\n            end_date: action.payload.end_date,\n            description: action.payload.description,\n            students_number: action.payload.students_number,\n          }\n        } else return classItem;\n      });\n    case 'GET_PROFESSORS_BY_CLASS':\n      return Object.assign({}, state, {\n        professorsClass: action.payload\n      });\n    case 'GET_EVENTS_BY_STUDENT':\n      return Object.assign({}, state, {\n        events: action.payload\n      });\n    case 'ADD_EVENT_NOT_ALLOWED':\n      return {\n        ...state,\n        showMessageEvent: true,\n        alertMessage: action.payload\n      }\n    case 'HANDLE_EVENT_REQUEST_CLOSE':\n      return {\n        ...state,\n        showMessageEvent: false,\n      }\n    case 'GET_EVENTS_STUDENT':\n      return Object.assign({}, state, {\n        events: action.payload\n      });\n    case 'GET_EVENTS_BY_CLASS':\n      return Object.assign({}, state, {\n        events: action.payload\n      });\n\n    case 'GET_EVENTS_PROFESSOR':\n      return {\n        ...state,\n        events: action.payload,\n      }\n\n      case 'REMOVE_EVENTS_LIST':\n      return {\n        ...state,\n        events: [],\n      }\n      \n      case EDIT_EVENT:{\n        return Object.assign({}, state, {\n          events: [\n            ...state.events.filter(\n              (element) => element.id !== action.payload.id\n            ),\n            action.payload,\n          ],\n        });\n    }\n\n    default:\n      return state\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}