{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport { SHOW_SUCCESS_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, GET_LEVELS, ADD_LEVELS, EDIT_LEVELS, DELETE_LEVELS, ARCHIVED_GET_LEVELS } from \"../constants/ActionTypes\";\nexport function addlevel(data) {\n  return dispatch => {\n    let apiEndpoint = `/level_v4?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then(response => {\n      if (response) {\n        dispatch({\n          type: ADD_LEVELS,\n          payload: response.data\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n}\nexport function editLevel(data) {\n  return dispatch => {\n    let apiEndpoint = `/level_v4/${data.id}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, data).then(response => {\n      if (response) {\n        dispatch({\n          type: EDIT_LEVELS,\n          payload: response.data\n        });\n      }\n    });\n  };\n}\nexport function getLevel(establishementId, schoolYearId) {\n  return dispatch => {\n    let apiEndpoint = `/level_v4?access_token=${localStorage.token}&filter[where][fk_id_school_year]=${schoolYearId}&filter[include][educationType]`;\n    classService.get(apiEndpoint).then(response => {\n      if (response) {\n        let levelsListByEstab = [];\n        response.data.forEach(element => {\n          if (element.educationType.fk_id_establishment == establishementId) {\n            levelsListByEstab.push(element);\n          }\n        });\n        const list = levelsListByEstab;\n        const LevelList = list.filter(element => element.status);\n        const ArchivedLevelsList = list.filter(element => element.status == false);\n        dispatch({\n          type: GET_LEVELS,\n          payload: LevelList\n        });\n        dispatch({\n          type: ARCHIVED_GET_LEVELS,\n          payload: ArchivedLevelsList\n        });\n      }\n    });\n  };\n}\nexport function deletelevel(itemId) {\n  return dispatch => {\n    let apiEndpoint = `/level_v4/` + itemId.id + `?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=${localStorage.establishment_id}&filter[where][and][1][fk_id_school_year]=${localStorage.school_year_id}`;\n    classService.patch(apiEndpoint, {\n      status: false\n    }).then(response => {\n      dispatch({\n        type: DELETE_LEVELS,\n        payload: response.data\n      });\n    }).catch(function (error) {});\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/LevelAction.js"],"names":["classService","SHOW_SUCCESS_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","GET_LEVELS","ADD_LEVELS","EDIT_LEVELS","DELETE_LEVELS","ARCHIVED_GET_LEVELS","addlevel","data","dispatch","apiEndpoint","localStorage","token","post","then","response","type","payload","setTimeout","editLevel","id","patch","getLevel","establishementId","schoolYearId","get","levelsListByEstab","forEach","element","educationType","fk_id_establishment","push","list","LevelList","filter","status","ArchivedLevelsList","deletelevel","itemId","establishment_id","school_year_id","catch","error"],"mappings":"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","sourcesContent":["import { classService } from \"../_services/class.service\";\nimport {\n  SHOW_SUCCESS_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  GET_LEVELS,\n  ADD_LEVELS,\n  EDIT_LEVELS,\n  DELETE_LEVELS,\n  ARCHIVED_GET_LEVELS,\n} from \"../constants/ActionTypes\";\n\nexport function addlevel(data) {\n  return (dispatch) => {\n    let apiEndpoint = `/level_v4?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then((response) => {\n      if (response) {\n        dispatch({ type: ADD_LEVELS, payload: response.data });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectuée avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n}\n\nexport function editLevel(data) {\n  return (dispatch) => {\n    let apiEndpoint = `/level_v4/${data.id}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, data).then((response) => {\n      if (response) {\n        dispatch({ type: EDIT_LEVELS, payload: response.data });\n      }\n    });\n  };\n}\n\nexport function getLevel(establishementId, schoolYearId) {\n  return (dispatch) => {\n    let apiEndpoint = `/level_v4?access_token=${localStorage.token}&filter[where][fk_id_school_year]=${schoolYearId}&filter[include][educationType]`;\n    classService.get(apiEndpoint).then((response) => {\n      if (response) {\n        let levelsListByEstab = [];\n        response.data.forEach((element) => {\n          if (element.educationType.fk_id_establishment == establishementId) {\n            levelsListByEstab.push(element);\n          }\n        });\n        const list = levelsListByEstab;\n        const LevelList = list.filter((element) => element.status);\n        const ArchivedLevelsList = list.filter(\n          (element) => element.status == false\n        );\n        dispatch({ type: GET_LEVELS, payload: LevelList });\n        dispatch({ type: ARCHIVED_GET_LEVELS, payload: ArchivedLevelsList });\n      }\n    });\n  };\n}\n\nexport function deletelevel(itemId) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/level_v4/` +\n      itemId.id +\n      `?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=${localStorage.establishment_id}&filter[where][and][1][fk_id_school_year]=${localStorage.school_year_id}`;\n    classService\n      .patch(apiEndpoint, {\n        status: false,\n      })\n      .then((response) => {\n        dispatch({ type: DELETE_LEVELS, payload: response.data });\n      })\n      .catch(function(error) {});\n  };\n}\n"]},"metadata":{},"sourceType":"module"}