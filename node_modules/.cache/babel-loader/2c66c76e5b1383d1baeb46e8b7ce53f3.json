{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/GradesMenu/routes/Exams/ExamList.js\";\nimport React from \"react\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { getSectionFromLevel } from \"../../../../../actions/sectionAction\";\nimport { connect } from \"react-redux\";\nconst typeExam = [{\n  value: \"DS\",\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Components.bulletin.test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  })\n}, {\n  value: \"Examen\",\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"components.note.exam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  })\n}, {\n  value: \"Travaux Pratique\",\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"Components.bulletin.practical.work\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  })\n}];\nconst periodExam = [{\n  value: \"1er Trimestre\",\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"first.trimester\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  })\n}, {\n  value: \"2eme Trimestre\",\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"second.trimester\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  })\n}, {\n  value: \"3eme Trimestre\",\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"third.trimester\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  })\n}];\n\nfunction mapStateToProps(state) {\n  return {\n    settings: state.settings.locale,\n    userProfile: state.auth.userProfile\n  };\n}\n\nclass ExamList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangefilter = name => event => {\n      if (name === \"level_id\") {\n        if (event.target.value > 10) {\n          this.setState({\n            [name]: event.target.value,\n            Disable_section: false,\n            class_id: \"\",\n            section_id: 0\n          });\n        } else {\n          this.setState({\n            [name]: event.target.value,\n            Disable_section: true,\n            class_id: \"\",\n            section_id: 0\n          });\n        }\n      } else if (name === \"section_id\") {\n        let classList = [];\n\n        if (this.state.level_id > 10) {\n          classList = this.props.listClasses.filter(option => option.level_id === this.state.level_id && option.section_id === event.target.value && option.status);\n        } else {\n          classList = this.props.listClasses.filter(option => option.level_id === this.state.level_id && option.status);\n        }\n\n        this.setState({\n          class_id: \"\",\n          [name]: event.target.value,\n          classList\n        });\n      } else if (name === \"class_id\") {\n        this.setState({\n          [name]: event.target.value\n        });\n      } else {\n        this.setState({\n          [name]: event.target.value\n        });\n      }\n    };\n\n    this.handleChange = name => event => {\n      console.log(\"====================================\");\n      console.log(event.target.value !== 0, \"event.target.value\");\n      console.log(\"====================================\");\n\n      if (name === \"class_id\") {\n        let listExamsFiltred = this.props.listExams;\n\n        if (event.target.value !== 0) {\n          listExamsFiltred = this.props.listExams.filter(option => option.class_id === event.target.value);\n        }\n\n        if (this.state.period !== 0) {\n          listExamsFiltred = listExamsFiltred.filter(option => option.period === this.state.period);\n        }\n\n        if (this.state.type !== 0) {\n          listExamsFiltred = listExamsFiltred.filter(option => option.type === this.state.type);\n        }\n\n        this.setState({\n          listExamsFiltred\n        });\n      } else if (name === \"period\") {\n        let listExamsFiltred = this.props.listExams;\n\n        if (event.target.value !== 0) {\n          listExamsFiltred = this.props.listExams.filter(option => option.period === event.target.value);\n        }\n\n        if (this.state.class_id !== 0) {\n          listExamsFiltred = listExamsFiltred.filter(option => option.class_id === this.state.class_id);\n        }\n\n        if (this.state.type !== 0) {\n          listExamsFiltred = listExamsFiltred.filter(option => option.type === this.state.type);\n        }\n\n        this.setState({\n          listExamsFiltred\n        });\n      } else if (name === \"type\") {\n        let listExamsFiltred = this.props.listExams;\n\n        if (event.target.value !== 0) {\n          listExamsFiltred = this.props.listExams.filter(option => option.type === event.target.value);\n        }\n\n        if (this.state.class_id !== 0) {\n          listExamsFiltred = listExamsFiltred.filter(option => option.class_id === this.state.class_id);\n        }\n\n        if (this.state.period !== 0) {\n          listExamsFiltred = listExamsFiltred.filter(option => option.period === this.state.period);\n        }\n\n        this.setState({\n          listExamsFiltred\n        });\n      }\n\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.onOptionMenuSelect = event => {\n      this.setState({\n        menuState: true,\n        anchorEl: event.currentTarget,\n        itemId: event.currentTarget.value\n      });\n    };\n\n    this.handleRequestClose = () => {\n      this.setState({\n        menuState: false\n      });\n    };\n\n    this.state = {\n      anchorEl: undefined,\n      menuState: false,\n      refresh: false,\n      level_id: \"\",\n      section_id: \"\",\n      class_id: 0,\n      classList: [],\n      type: 0,\n      period: 0,\n      listExamsFiltred: [],\n      itemId: 0\n    };\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleRequestDelete = this.handleRequestDelete.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangefilter = this.handleChangefilter.bind(this);\n  }\n\n  handleEdit(e) {\n    e.preventDefault();\n    this.props.editExam(this.state.itemId);\n    this.setState({\n      menuState: false\n    });\n  }\n\n  handleRequestDelete(e) {\n    e.preventDefault();\n    this.props.requestDeleteExam(this.state.itemId);\n    this.setState({\n      menuState: false\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      listExamsFiltred: this.props.listExams\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.listExams !== this.props.listExams) {\n      this.setState({\n        listExamsFiltred: this.props.listExams\n      });\n    }\n  }\n\n  render() {\n    const {\n      anchorEl,\n      menuState\n    } = this.state;\n    const listExams = this.props.listExams;\n    const listSubject = this.props.listSubject;\n    const listEstablishment = this.props.listEstablishment;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap col-sm-12 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"class\",\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.exam.form.class\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 22\n        }\n      }),\n      value: this.state.class_id,\n      onChange: this.handleChange(\"class_id\"),\n      SelectProps: {},\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"0\",\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"all.label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    })), this.props.listClasses.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, this.props.settings.languageId == \"tunisia\" ? option.ar_name : option.name, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"period\",\n      id: \"period\",\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.exam.form.period\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 22\n        }\n      }),\n      onChange: this.handleChange(\"period\"),\n      value: this.state.period,\n      SelectProps: {},\n      fullWidth: true,\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"0\",\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"all.exam\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    })), periodExam.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, option.label)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"type\",\n      id: \"type\",\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.exam.form.type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 22\n        }\n      }),\n      onChange: this.handleChange(\"type\"),\n      value: this.state.type,\n      SelectProps: {},\n      fullWidth: true,\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"0\",\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"all.exam\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    })), typeExam.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, option.label))))), /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive-material\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"default-table table-unbordered table table-sm table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      className: \"th-border-b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.note.class\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.exam.subject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.exam.type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.exam.period\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.exam.coefficient\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 15\n      }\n    }, this.state.listExamsFiltred.map(Exam => {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: Exam.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }\n      }, this.props.listClasses.map((classItem, index) => {\n        if (classItem.id === Exam.class_id) {\n          return /*#__PURE__*/React.createElement(TableCell, {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }\n          }, classItem.name);\n        }\n      }), listSubject.map((subject, index) => {\n        if (subject.id === Exam.subject_id) {\n          return /*#__PURE__*/React.createElement(TableCell, {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }\n          }, this.props.settings.languageId == \"tunisia\" ? subject.name_AR : this.props.settings.languageId == \"french\" ? subject.name_FR : subject.name_EN);\n        }\n      }), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 23\n        }\n      }, typeExam.map((option, index) => {\n        if (option.value == Exam.type) {\n          return /*#__PURE__*/React.createElement(TableCell, {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 31\n            }\n          }, option.label);\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 23\n        }\n      }, Exam.period), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 23\n        }\n      }, Exam.coefficient), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.onOptionMenuSelect.bind(this),\n        value: Exam.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-more-vert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(Menu, {\n        id: \"long-menu\",\n        anchorEl: anchorEl,\n        open: menuState,\n        onClose: this.handleRequestClose.bind(this),\n        MenuListProps: {\n          style: {\n            width: 150,\n            paddingTop: 0,\n            paddingBottom: 0\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        onClick: this.handleEdit,\n        value: Exam.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"button.modify\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 30\n        }\n      })), /*#__PURE__*/React.createElement(MenuItem, {\n        onClick: this.handleRequestDelete,\n        value: Exam.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"button.delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 30\n        }\n      })))));\n    }))))));\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  getSectionFromLevel\n})(ExamList);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/GradesMenu/routes/Exams/ExamList.js"],"names":["React","IntlMessages","Table","TableBody","TableCell","TableHead","TableRow","CardBox","IconButton","Menu","MenuItem","TextField","getSectionFromLevel","connect","typeExam","value","label","periodExam","mapStateToProps","state","settings","locale","userProfile","auth","ExamList","Component","constructor","props","handleChangefilter","name","event","target","setState","Disable_section","class_id","section_id","classList","level_id","listClasses","filter","option","status","handleChange","console","log","listExamsFiltred","listExams","period","type","onOptionMenuSelect","menuState","anchorEl","currentTarget","itemId","handleRequestClose","undefined","refresh","handleEdit","bind","handleRequestDelete","e","preventDefault","editExam","requestDeleteExam","componentDidMount","componentDidUpdate","prevProps","prevState","render","listSubject","listEstablishment","map","id","languageId","ar_name","Exam","classItem","index","subject","subject_id","name_AR","name_FR","name_EN","coefficient","style","width","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { getSectionFromLevel } from \"../../../../../actions/sectionAction\";\nimport { connect } from \"react-redux\";\nconst typeExam = [\n  {\n    value: \"DS\",\n    label: <IntlMessages id=\"Components.bulletin.test\" />,\n  },\n  {\n    value: \"Examen\",\n    label: <IntlMessages id=\"components.note.exam\" />,\n  },\n  {\n    value: \"Travaux Pratique\",\n    label: <IntlMessages id=\"Components.bulletin.practical.work\" />,\n  },\n];\nconst periodExam = [\n  {\n    value: \"1er Trimestre\",\n    label: <IntlMessages id=\"first.trimester\" />,\n  },\n  {\n    value: \"2eme Trimestre\",\n    label: <IntlMessages id=\"second.trimester\" />,\n  },\n  {\n    value: \"3eme Trimestre\",\n    label: <IntlMessages id=\"third.trimester\" />,\n  },\n];\nfunction mapStateToProps(state) {\n  return {\n    settings: state.settings.locale,\n    userProfile: state.auth.userProfile,\n  };\n}\nclass ExamList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: undefined,\n      menuState: false,\n      refresh: false,\n      level_id: \"\",\n      section_id: \"\",\n      class_id: 0,\n      classList: [],\n      type: 0,\n      period: 0,\n      listExamsFiltred: [],\n       itemId: 0\n    };\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleRequestDelete = this.handleRequestDelete.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangefilter = this.handleChangefilter.bind(this);\n  }\n  handleChangefilter = (name) => (event) => {\n    if (name === \"level_id\") {\n      if (event.target.value > 10) {\n        this.setState({\n          [name]: event.target.value,\n          Disable_section: false,\n          class_id: \"\",\n          section_id: 0,\n        });\n      } else {\n        this.setState({\n          [name]: event.target.value,\n          Disable_section: true,\n          class_id: \"\",\n          section_id: 0,\n        });\n      }\n    } else if (name === \"section_id\") {\n      let classList = [];\n      if (this.state.level_id > 10) {\n        classList = this.props.listClasses.filter(\n          (option) =>\n            option.level_id === this.state.level_id &&\n            option.section_id === event.target.value &&\n            option.status\n        );\n      } else {\n        classList = this.props.listClasses.filter(\n          (option) => option.level_id === this.state.level_id && option.status\n        );\n      }\n\n      this.setState({\n        class_id: \"\",\n        [name]: event.target.value,\n        classList,\n      });\n    } else if (name === \"class_id\") {\n      this.setState({\n        [name]: event.target.value,\n      });\n    } else {\n      this.setState({ [name]: event.target.value });\n    }\n  };\n  handleChange = (name) => (event) => {\n    console.log(\"====================================\");\n    console.log(event.target.value !== 0, \"event.target.value\");\n    console.log(\"====================================\");\n    if (name === \"class_id\") {\n      let listExamsFiltred = this.props.listExams;\n      if (event.target.value !== 0) {\n        listExamsFiltred = this.props.listExams.filter(\n          (option) => option.class_id === event.target.value\n        );\n      }\n      if (this.state.period !== 0) {\n        listExamsFiltred = listExamsFiltred.filter(\n          (option) => option.period === this.state.period\n        );\n      }\n      if (this.state.type !== 0) {\n        listExamsFiltred = listExamsFiltred.filter(\n          (option) => option.type === this.state.type\n        );\n      }\n\n      this.setState({ listExamsFiltred });\n    } else if (name === \"period\") {\n      let listExamsFiltred = this.props.listExams;\n      if (event.target.value !== 0) {\n        listExamsFiltred = this.props.listExams.filter(\n          (option) => option.period === event.target.value\n        );\n      }\n\n      if (this.state.class_id !== 0) {\n        listExamsFiltred = listExamsFiltred.filter(\n          (option) => option.class_id === this.state.class_id\n        );\n      }\n      if (this.state.type !== 0) {\n        listExamsFiltred = listExamsFiltred.filter(\n          (option) => option.type === this.state.type\n        );\n      }\n      this.setState({ listExamsFiltred });\n    } else if (name === \"type\") {\n      let listExamsFiltred = this.props.listExams;\n      if (event.target.value !== 0) {\n        listExamsFiltred = this.props.listExams.filter(\n          (option) => option.type === event.target.value\n        );\n      }\n\n      if (this.state.class_id !== 0) {\n        listExamsFiltred = listExamsFiltred.filter(\n          (option) => option.class_id === this.state.class_id\n        );\n      }\n      if (this.state.period !== 0) {\n        listExamsFiltred = listExamsFiltred.filter(\n          (option) => option.period === this.state.period\n        );\n      }\n      this.setState({ listExamsFiltred });\n    }\n\n    this.setState({ [name]: event.target.value });\n  };\n\n  onOptionMenuSelect = (event) => {\n    this.setState({ menuState: true, anchorEl: event.currentTarget,itemId: event.currentTarget.value });\n  };\n  handleRequestClose = () => {\n    this.setState({ menuState: false });\n  };\n  \n\n\n\n  \n  handleEdit(e) {\n    e.preventDefault();  \n     \n    this.props.editExam(this.state.itemId);\n    this.setState({ menuState: false });\n  }\n\n  handleRequestDelete(e) {\n       e.preventDefault();\n \n    this.props.requestDeleteExam(this.state.itemId);\n    this.setState({ menuState: false });\n  }\n  componentDidMount() {\n    this.setState({ listExamsFiltred: this.props.listExams });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.listExams !== this.props.listExams) {\n      this.setState({ listExamsFiltred: this.props.listExams });\n    }\n  }\n\n  render() {\n    const { anchorEl, menuState } = this.state;\n    const listExams = this.props.listExams;\n    const listSubject = this.props.listSubject;\n    const listEstablishment = this.props.listEstablishment;\n\n    return (\n      <div className=\"app-wrapper\">\n        <div className=\"d-flex flex-wrap col-sm-12 \">\n          <div className=\"col-sm-4\">\n            <TextField\n              required\n              id=\"class\"\n              select\n              label={<IntlMessages id=\"components.exam.form.class\" />}\n              value={this.state.class_id}\n              onChange={this.handleChange(\"class_id\")}\n              SelectProps={{}}\n              margin=\"normal\"\n              fullWidth\n            >\n              <MenuItem key=\"0\" value={0}>\n                <IntlMessages id=\"all.label\" />\n              </MenuItem>\n              {this.props.listClasses.map((option) => (\n                <MenuItem key={option.id} value={option.id}>\n                  {this.props.settings.languageId == \"tunisia\"\n                    ? option.ar_name\n                    : option.name}{\" \"}\n                </MenuItem>\n              ))}\n            </TextField>\n          </div>\n          <div className=\"col-sm-4\">\n            <TextField\n              required\n              name=\"period\"\n              id=\"period\"\n              select\n              label={<IntlMessages id=\"components.exam.form.period\" />}\n              onChange={this.handleChange(\"period\")}\n              value={this.state.period}\n              SelectProps={{}}\n              fullWidth\n              margin=\"normal\"\n            >\n              <MenuItem key=\"0\" value={0}>\n                <IntlMessages id=\"all.exam\" />\n              </MenuItem>\n              {periodExam.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n          </div>\n          <div className=\"col-sm-4\">\n            <TextField\n              required\n              name=\"type\"\n              id=\"type\"\n              select\n              label={<IntlMessages id=\"components.exam.form.type\" />}\n              onChange={this.handleChange(\"type\")}\n              value={this.state.type}\n              SelectProps={{}}\n              fullWidth\n              margin=\"normal\"\n            >\n              <MenuItem key=\"0\" value={0}>\n                <IntlMessages id=\"all.exam\" />\n              </MenuItem>\n              {typeExam.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n          </div>\n        </div>\n        <CardBox styleName=\"col-lg-12\">\n          <div className=\"table-responsive-material\">\n            <Table className=\"default-table table-unbordered table table-sm table-hover\">\n              <TableHead className=\"th-border-b\">\n                <TableRow>\n                  <TableCell>\n                    {<IntlMessages id=\"components.note.class\" />}\n                  </TableCell>\n                  <TableCell>\n                    {<IntlMessages id=\"components.exam.subject\" />}\n                  </TableCell>\n                  <TableCell>\n                    {<IntlMessages id=\"components.exam.type\" />}\n                  </TableCell>\n                  <TableCell>\n                    {<IntlMessages id=\"components.exam.period\" />}\n                  </TableCell>\n                  <TableCell>\n                    {<IntlMessages id=\"components.exam.coefficient\" />}\n                  </TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.listExamsFiltred.map(Exam => {\n                   return (\n                    <TableRow key={Exam.id}>\n                      {this.props.listClasses.map((classItem, index) => {\n                        if (classItem.id === Exam.class_id) {\n                          return (\n                            <TableCell key={index}>{classItem.name}</TableCell>\n                          );\n                        }\n                      })}\n                      {listSubject.map((subject, index) => {\n                        if (subject.id === Exam.subject_id) {\n                          return (\n                            <TableCell key={index}>\n                              {this.props.settings.languageId == \"tunisia\"\n                                ? subject.name_AR\n                                : this.props.settings.languageId == \"french\"\n                                ? subject.name_FR\n                                : subject.name_EN}\n                            </TableCell>\n                          );\n                        }\n                      })}\n                      <TableCell>\n                        {typeExam.map((option, index) => {\n                          if (option.value == Exam.type) {\n                            return (\n                              <TableCell key={index}>{option.label}</TableCell>\n                            );\n                          }\n                        })}\n\n                        {/* {Exam.type} */}\n                      </TableCell>\n\n                      <TableCell>{Exam.period}</TableCell>\n                      <TableCell>{Exam.coefficient}</TableCell>\n\n                      <TableCell>\n                        <IconButton\n                          onClick={this.onOptionMenuSelect.bind(this)}\n                          value={Exam.id}\n                        >\n                          <i className=\"zmdi zmdi-more-vert\" />\n                        </IconButton>\n                        <Menu\n                          id=\"long-menu\"\n                          anchorEl={anchorEl}\n                          open={menuState}\n                          onClose={this.handleRequestClose.bind(this)}\n                          MenuListProps={{\n                            style: {\n                              width: 150,\n                              paddingTop: 0,\n                              paddingBottom: 0,\n                            },\n                          }}\n                        >\n                          <MenuItem onClick={this.handleEdit} value={Exam.id}>\n                            {<IntlMessages id=\"button.modify\" />}\n                          </MenuItem>\n                          <MenuItem\n                            onClick={this.handleRequestDelete}\n                            value={Exam.id}\n                          >\n                            {<IntlMessages id=\"button.delete\" />}\n                          </MenuItem>\n                        </Menu>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </div>\n        </CardBox>\n      </div>\n    );\n  }\n}\nexport default connect(\n  mapStateToProps,\n  { getSectionFromLevel }\n)(ExamList);\n"]},"metadata":{},"sourceType":"module"}