{"ast":null,"code":"import { getName } from './countriesAction';\nimport { classService } from \"../_services/class.service\";\nimport { ADD_TYPE_EDUCATION, EDIT_TYPE_EDUCATION, GET_EDUCATION_TYPES, DELETE_TYPE_EDUCATION, SHOW_SUCCESS_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE } from '../constants/ActionTypes';\n\nfunction getEstabTypeByID(estabTypes, id) {\n  let typeName = estabTypes.map(element => {\n    if (element.id === id) {\n      return element.name;\n    } else {\n      return null;\n    }\n  });\n  return typeName;\n}\n\nfunction getEstabTypes() {\n  return dispatch => {\n    let apiEndpoint = `/estab_types?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      let estabTypes = [];\n      response.data.forEach(element => {\n        estabTypes.push({\n          \"id\": element.id,\n          \"name\": getName(element)\n        });\n      });\n      dispatch({\n        type: \"DATA_LOADED_ESTAB_TYPES\",\n        payload: estabTypes\n      });\n    }).catch(error => {});\n  };\n}\n\nexport function addEducationType(data) {\n  return dispatch => {\n    let apiEndpoint = `/education_type_v4?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then(response => {\n      if (response) {\n        dispatch({\n          type: ADD_TYPE_EDUCATION,\n          payload: response.data\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n}\nexport function getEducationType() {\n  return dispatch => {\n    let apiEndpoint = `/education_type_v4?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=${localStorage.establishment_id}&filter[where][and][1][fk_id_school_year]=${localStorage.school_year_id}`;\n    classService.get(apiEndpoint).then(response => {\n      if (response) {\n        dispatch({\n          type: GET_EDUCATION_TYPES,\n          payload: response.data\n        });\n      }\n    });\n  };\n}\nexport function editTypeEducation(data, idItem) {\n  return dispatch => {\n    let apiEndpoint = `/education_type_v4/${idItem}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, data).then(response => {\n      if (response) {\n        dispatch({\n          type: EDIT_TYPE_EDUCATION,\n          payload: response.data\n        });\n      }\n    });\n  };\n}\nexport function deleteEducationType(itemId) {\n  return dispatch => {\n    let apiEndpoint = `/education_type_v4/${itemId.id}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, {\n      status: false\n    }).then(response => {\n      if (response) {\n        dispatch({\n          type: DELETE_TYPE_EDUCATION,\n          payload: response.data\n        });\n      }\n    });\n  };\n}\nexport { getEstabTypes, getEstabTypeByID };","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/estabTypeAction.js"],"names":["getName","classService","ADD_TYPE_EDUCATION","EDIT_TYPE_EDUCATION","GET_EDUCATION_TYPES","DELETE_TYPE_EDUCATION","SHOW_SUCCESS_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","getEstabTypeByID","estabTypes","id","typeName","map","element","name","getEstabTypes","dispatch","apiEndpoint","localStorage","token","get","then","response","data","forEach","push","type","payload","catch","error","addEducationType","post","setTimeout","getEducationType","establishment_id","school_year_id","editTypeEducation","idItem","patch","deleteEducationType","itemId","status"],"mappings":"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","sourcesContent":["import { getName } from './countriesAction';\nimport { classService } from \"../_services/class.service\";\nimport {\n    ADD_TYPE_EDUCATION,\n    EDIT_TYPE_EDUCATION,\n    GET_EDUCATION_TYPES,\n    DELETE_TYPE_EDUCATION,\n    SHOW_SUCCESS_MESSAGE,\n    HIDE_SUCCESS_MESSAGE,\n    SHOW_ERROR_MESSAGE,\n    HIDE_ERROR_MESSAGE\n} from '../constants/ActionTypes'\n\nfunction getEstabTypeByID(estabTypes, id) {\n    let typeName = estabTypes.map(element => {\n        if (element.id === id) { return element.name } else { return null }\n    })\n    return typeName\n}\n\nfunction getEstabTypes() {\n\n    return dispatch => {\n        let apiEndpoint = `/estab_types?access_token=${localStorage.token}`;\n        classService\n            .get(apiEndpoint)\n            .then(response => {\n                let estabTypes = [];\n                response.data.forEach(element => {\n                    estabTypes.push({ \"id\": element.id, \"name\": getName(element) })\n                });\n                dispatch({ type: \"DATA_LOADED_ESTAB_TYPES\", payload: estabTypes });\n            }).catch(error => {\n            });\n\n    };\n}\n\nexport function addEducationType(data) {\n    return (dispatch) => {\n\n        let apiEndpoint = `/education_type_v4?access_token=${localStorage.token}`;\n        classService.post(apiEndpoint, data)\n            .then((response) => {\n                if (response) {\n                    dispatch({ type: ADD_TYPE_EDUCATION, payload: response.data });\n                    dispatch({ type: SHOW_SUCCESS_MESSAGE, payload: \"La création est effectuée avec succès\" })\n                    setTimeout(() => {\n                        dispatch({ type: HIDE_SUCCESS_MESSAGE });\n                    }, 4000);\n                } else {\n                    dispatch({ type: SHOW_ERROR_MESSAGE, payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\" });\n                    setTimeout(() => {\n                        dispatch({ type: HIDE_ERROR_MESSAGE });\n                    }, 4000);\n                }\n            })\n    };\n}\n\nexport function getEducationType() {\n    return dispatch => {\n        let apiEndpoint = `/education_type_v4?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=${localStorage.establishment_id}&filter[where][and][1][fk_id_school_year]=${localStorage.school_year_id}`;\n        classService.get(apiEndpoint)\n            .then(response => {\n                if (response) {\n                    dispatch({ type: GET_EDUCATION_TYPES, payload: response.data });\n                }\n            })\n    };\n}\n\nexport function editTypeEducation(data, idItem) {\n    return (dispatch) => {\n        let apiEndpoint = `/education_type_v4/${idItem}?access_token=${localStorage.token}`;\n        classService.patch(apiEndpoint, data).then((response) => {\n            if (response) {\n                dispatch({ type: EDIT_TYPE_EDUCATION, payload: response.data });\n            }\n        });\n    };\n}\n\nexport function deleteEducationType(itemId) {\n    return (dispatch) => {\n        let apiEndpoint = `/education_type_v4/${itemId.id}?access_token=${localStorage.token}`;\n        classService.patch(apiEndpoint, { status: false })\n            .then((response) => {\n                if (response) {\n                    dispatch({ type: DELETE_TYPE_EDUCATION, payload: response.data });\n                }\n            })\n    };\n}\n\nexport { getEstabTypes, getEstabTypeByID }"]},"metadata":{},"sourceType":"module"}