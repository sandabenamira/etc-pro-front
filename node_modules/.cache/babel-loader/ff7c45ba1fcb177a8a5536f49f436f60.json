{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/LevelTest/Tests/LevelTestSuiviProf.js\";\nimport React from \"react\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport Auxiliary from \"../../../../util/Auxiliary\";\nimport { connect } from \"react-redux\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport moment from \"moment\";\n\nclass LevelTestSuiviProf extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = name => event => {\n      let listStudentTest = this.props.listStudentTest.filter(element => element.students.students[0].class_id == event.target.value);\n      this.setState({\n        [name]: event.target.value,\n        listStudentTest\n      });\n    };\n\n    this.state = {\n      class_id: \"\",\n      listStudentTest: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      listStudentTest: this.props.listStudentTest\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.listStudentTest !== this.props.listStudentTest) {\n      this.setState({\n        listStudentTest: this.props.listStudentTest\n      });\n    }\n  }\n\n  render() {\n    let test = this.props.test; // console.log(\"====================================\");\n    // console.log(this.props.listStudentTest, \"listStudentTest props\");\n    // console.log(this.state.listStudentTest, \"listClassTest\");\n    // console.log(this.props.listClassTest, \"listClassTest   \");\n    // console.log(this.state.class_id, \" class_id\");\n    // console.log(\"====================================\");\n\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.props.openTestSuivi,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.props.cancelModal,\n      className: \"modal-box-header bg-primary text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"level.test.Suivi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, this.state.listStudentTest.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 text-left \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: \"mt-0\",\n      required: true,\n      name: \"class_id\",\n      id: \"class_id\",\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.note.class\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 28\n        }\n      }),\n      value: this.state.class_id,\n      onChange: this.handleChange(\"class_id\"),\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, this.props.listClassTest.map(item => {\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: item.id_class,\n        value: item.id_class,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, item.classes.name);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive-material\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"default-table table-unbordered table table-sm table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      className: \"th-border-b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"level.test.StudentName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 36\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.note.class\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 36\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"level.test.passedDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 36\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"level.test.score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 36\n      }\n    })))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, this.state.listStudentTest.map(element => {\n      let color;\n\n      if (element.score > 70) {\n        color = \"success\";\n      } else {\n        if (element.score > 30) {\n          color = \"warning\";\n        } else {\n          color = \"danger\";\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }\n      }, \" \", element.students.students[0].profile.user.name, \" \", element.students.students[0].profile.user.surname), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }, this.props.professorClassesList.map(classe => {\n        if (classe.id == element.students.students[0].class_id) {\n          return /*#__PURE__*/React.createElement(MenuItem, {\n            key: classe.id,\n            value: classe.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 37\n            }\n          }, classe.name);\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }, moment(element.passed_date).format(\"MMMM Do-YYYY, h:mm \")), /*#__PURE__*/React.createElement(TableCell, {\n        className: `text-uppercase text-white bg-${color}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }\n      }, \" \", element.score, \" %\", \" \"));\n    }))))) : \"Aucun élève a passé ce test jusqu'a présent \")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    settings: state.settings.locale,\n    classes: state.classes\n  };\n}\n\nexport default connect(mapStateToProps, {})(LevelTestSuiviProf);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/LevelTest/Tests/LevelTestSuiviProf.js"],"names":["React","IntlMessages","Auxiliary","connect","Modal","ModalBody","ModalHeader","Table","TableBody","TableCell","TableHead","TableRow","TextField","MenuItem","moment","LevelTestSuiviProf","Component","constructor","props","handleChange","name","event","listStudentTest","filter","element","students","class_id","target","value","setState","state","bind","componentDidMount","componentDidUpdate","prevProps","prevState","render","test","openTestSuivi","cancelModal","length","listClassTest","map","item","id_class","classes","color","score","profile","user","surname","professorClassesList","classe","id","passed_date","format","mapStateToProps","userProfile","auth","settings","locale"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport Auxiliary from \"../../../../util/Auxiliary\";\nimport { connect } from \"react-redux\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport moment from \"moment\";\n\nclass LevelTestSuiviProf extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      class_id: \"\",\n      listStudentTest: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    this.setState({ listStudentTest: this.props.listStudentTest });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.listStudentTest !== this.props.listStudentTest) {\n      this.setState({ listStudentTest: this.props.listStudentTest });\n    }\n  }\n\n  handleChange = (name) => (event) => {\n    let listStudentTest = this.props.listStudentTest.filter(\n      (element) => element.students.students[0].class_id == event.target.value\n    );\n    this.setState({ [name]: event.target.value, listStudentTest });\n  };\n  render() {\n    let test = this.props.test;\n    // console.log(\"====================================\");\n    // console.log(this.props.listStudentTest, \"listStudentTest props\");\n    // console.log(this.state.listStudentTest, \"listClassTest\");\n    // console.log(this.props.listClassTest, \"listClassTest   \");\n\n    // console.log(this.state.class_id, \" class_id\");\n    // console.log(\"====================================\");\n    return (\n      <Auxiliary>\n        <Modal isOpen={this.props.openTestSuivi}>\n          <ModalHeader\n            toggle={this.props.cancelModal}\n            className=\"modal-box-header bg-primary text-white\"\n          >\n            <IntlMessages id=\"level.test.Suivi\" />\n          </ModalHeader>\n          <br />\n          <ModalBody>\n            {this.state.listStudentTest.length > 0 ? (\n              <>\n                <div className=\"col-md-4 text-left \">\n                  <TextField\n                    className=\"mt-0\"\n                    required\n                    name=\"class_id\"\n                    id=\"class_id\"\n                    select\n                    label={<IntlMessages id=\"components.note.class\" />}\n                    value={this.state.class_id}\n                    onChange={this.handleChange(\"class_id\")}\n                    margin=\"normal\"\n                    fullWidth\n                  >\n                    {this.props.listClassTest.map((item) => {\n                      return (\n                        <MenuItem key={item.id_class} value={item.id_class}>\n                          {item.classes.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </TextField>\n                </div>\n                <div className=\"table-responsive-material\">\n                  <Table className=\"default-table table-unbordered table table-sm table-hover\">\n                    <TableHead className=\"th-border-b\">\n                      <TableRow>\n                        <TableCell><IntlMessages id=\"level.test.StudentName\" /></TableCell>\n                        <TableCell><IntlMessages id=\"components.note.class\" /></TableCell>\n                        <TableCell><IntlMessages id=\"level.test.passedDate\" /></TableCell>\n                        <TableCell><IntlMessages id=\"level.test.score\" /></TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {this.state.listStudentTest.map((element) => {\n                        let color;\n                        if (element.score > 70) {\n                          color = \"success\";\n                        } else {\n                          if (element.score > 30) {\n                            color = \"warning\";\n                          } else {\n                            color = \"danger\";\n                          }\n                        }\n                        return (\n                          <TableRow>\n                            <TableCell>\n                              {\" \"}\n                              {element.students.students[0].profile.user.name} {element.students.students[0].profile.user.surname}\n                            </TableCell>\n                            <TableCell>\n                              {this.props.professorClassesList.map((classe) => {\n                                if (\n                                  classe.id ==\n                                  element.students.students[0].class_id\n                                ) {\n                                  return (\n                                    <MenuItem key={classe.id} value={classe.id}>\n                                      {classe.name}\n                                    </MenuItem>\n                                  );\n                                }\n                              })}\n                            </TableCell>\n                            <TableCell>\n                              {moment(element.passed_date).format(\n                                \"MMMM Do-YYYY, h:mm \"\n                              )}\n                            </TableCell>\n                            <TableCell\n                              className={`text-uppercase text-white bg-${color}`}\n                            >\n                              {\" \"}\n                              {element.score} %{\" \"}\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                    </TableBody>\n                  </Table>\n                </div>\n              </>\n            ) : (\n              \"Aucun élève a passé ce test jusqu'a présent \"\n            )}\n          </ModalBody>\n        </Modal>\n      </Auxiliary>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    settings: state.settings.locale,\n    classes: state.classes,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(LevelTestSuiviProf);\n"]},"metadata":{},"sourceType":"module"}