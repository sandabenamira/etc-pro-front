{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport axios from \"axios\";\nimport baseUrl from \"../config/config\";\nimport { GET_ALL_LESSON, ADD_LESSON, DELETE_LESSON, EDIT_LESSON, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from \"../constants/ActionTypes\";\nexport const getLessons = establishmentId => {\n  return dispatch => {\n    let apiEndpoint = `/courses?access_token=${localStorage.token}&filter[include][classProfSubject][class]`;\n    classService.get(apiEndpoint).then(response => {\n      var filtredLessons = response.data.filter(element => element.status === true && element.classProfSubject.class.establishment_id === establishmentId);\n      dispatch({\n        type: GET_ALL_LESSON,\n        payload: filtredLessons\n      });\n    });\n  };\n};\nexport const getLessonByClassId = classId => {\n  return dispatch => {\n    let apiEndpoint = `/courses/getLessonsByClassId/${classId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      var filtredLessons = response.data.lessons.filter(element => element.status === true);\n      dispatch({\n        type: GET_ALL_LESSON,\n        payload: filtredLessons\n      });\n    });\n  };\n};\nexport const addLesson = (itemLesson, files, establishmentID) => {\n  //1\n  return dispatch => {\n    let apiEndpoint = `/courses?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, itemLesson).then(response => {\n      if (response) {\n        var course_id = response.data.id;\n        const courseObject = response.data;\n        axios.get(`${baseUrl.baseUrl}/establishments/` + establishmentID + `?access_token=${localStorage.token}`).then(res => {\n          var establishmentName = res.data.name;\n          let arrayItemCourseFiles = [];\n          var formadata = new FormData();\n\n          if (files.length > 0) {\n            for (const key of Object.keys(files)) {\n              const fileExtension = files[key].name.replace(/^.*\\./, \"\");\n              const fileName = \"Course_\" + courseObject.id + \".\" + key + \".\" + fileExtension;\n              var itemCourseFiles = {};\n              itemCourseFiles.file_name = fileName;\n              itemCourseFiles.course_id = course_id;\n              arrayItemCourseFiles.push(itemCourseFiles);\n              var object = {};\n              object.file = files[key];\n              object.fileName = fileName;\n              object.establishmentName = establishmentName;\n              object.courseObject = response.data;\n              dispatch(uploadCourseMedia(object));\n            }\n\n            classService.post(`/course_files?access_token=${localStorage.token}`, arrayItemCourseFiles);\n            dispatch({\n              type: ADD_LESSON,\n              payload: courseObject\n            });\n            dispatch({\n              type: SHOW_SUCCESS_MESSAGE,\n              payload: \"La création est effectuée avec succès\"\n            });\n            setTimeout(() => {\n              dispatch({\n                type: HIDE_SUCCESS_MESSAGE\n              });\n            }, 4000);\n          } else {\n            dispatch({\n              type: SHOW_ERROR_MESSAGE,\n              payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n            });\n            setTimeout(() => {\n              dispatch({\n                type: HIDE_ERROR_MESSAGE\n              });\n            }, 4000);\n\n            if (course_id) {\n              axios.delete(`${baseUrl.baseUrl}/courses/` + course_id + `?access_token=${localStorage.token}`);\n            }\n          }\n        });\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};\nexport function uploadCourseMedia(data) {\n  const fileName = data.fileName;\n  const myNewFile = new File([data.file], fileName, {\n    type: data.file.type\n  });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function (dispatch) {\n    const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + data.establishmentName + `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata\n    }).then(response => {// dispatch({ type: ADD_LESSON, payload: data.courseObject });\n      // dispatch({\n      //   type: SHOW_SUCCESS_MESSAGE,\n      //   payload: 'La création est effectuée avec succès',\n      // });\n      // setTimeout(() => {\n      //   dispatch({ type: HIDE_SUCCESS_MESSAGE });\n      // }, 4000);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\nexport function deleteLesson(itemId) {\n  return dispatch => {\n    axios.patch(`${baseUrl.baseUrl}/courses/` + itemId + `?access_token=${localStorage.token}`, {\n      status: false\n    }).then(response => {\n      console.log(\"delete ghasssen \", response.data);\n      dispatch({\n        type: DELETE_LESSON,\n        payload: response.data\n      });\n      dispatch({\n        type: SHOW_SUCCESS_MESSAGE,\n        payload: \"La suppression est effectuée avec succès\"\n      });\n      setTimeout(() => {\n        dispatch({\n          type: HIDE_SUCCESS_MESSAGE\n        });\n      }, 3000);\n    }).catch(function (error) {\n      console.log(\"error\", error);\n      dispatch({\n        type: SHOW_ERROR_MESSAGE,\n        payload: \"Une erreur est survenue lors de la suppression merci d'essayer à nouveau\"\n      });\n    });\n  };\n}\nexport function editLesson(dataLesson) {\n  return dispatch => {\n    let apiEndpoint = `/courses/` + dataLesson.id + `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, dataLesson).then(response => {\n      dispatch({\n        type: EDIT_LESSON,\n        payload: response.data\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/LessonAction.js"],"names":["classService","axios","baseUrl","GET_ALL_LESSON","ADD_LESSON","DELETE_LESSON","EDIT_LESSON","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","getLessons","establishmentId","dispatch","apiEndpoint","localStorage","token","get","then","response","filtredLessons","data","filter","element","status","classProfSubject","class","establishment_id","type","payload","getLessonByClassId","classId","lessons","addLesson","itemLesson","files","establishmentID","post","course_id","id","courseObject","res","establishmentName","name","arrayItemCourseFiles","formadata","FormData","length","key","Object","keys","fileExtension","replace","fileName","itemCourseFiles","file_name","push","object","file","uploadCourseMedia","setTimeout","delete","myNewFile","File","append","establishLogoUrl","url","method","catch","err","console","log","deleteLesson","itemId","patch","error","editLesson","dataLesson","put"],"mappings":"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","sourcesContent":["import { classService } from \"../_services/class.service\";\nimport axios from \"axios\";\nimport baseUrl from \"../config/config\";\n\nimport {\n  GET_ALL_LESSON,\n  ADD_LESSON,\n  DELETE_LESSON,\n  EDIT_LESSON,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n} from \"../constants/ActionTypes\";\n\nexport const getLessons = (establishmentId) => {\n  return (dispatch) => {\n    let apiEndpoint = `/courses?access_token=${localStorage.token}&filter[include][classProfSubject][class]`;\n    classService.get(apiEndpoint).then((response) => {\n      var filtredLessons = response.data.filter(\n        (element) =>\n          element.status === true &&\n          element.classProfSubject.class.establishment_id === establishmentId\n      );\n      dispatch({ type: GET_ALL_LESSON, payload: filtredLessons });\n    });\n  };\n};\n\nexport const getLessonByClassId = (classId) => {\n  return (dispatch) => {\n    let apiEndpoint = `/courses/getLessonsByClassId/${classId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then((response) => {\n      var filtredLessons = response.data.lessons.filter(\n        (element) => element.status === true\n      );\n\n      dispatch({ type: GET_ALL_LESSON, payload: filtredLessons });\n    });\n  };\n};\nexport const addLesson = (itemLesson, files, establishmentID) => {\n  //1\n  return (dispatch) => {\n    let apiEndpoint = `/courses?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, itemLesson).then((response) => {\n      if (response) {\n        var course_id = response.data.id;\n        const courseObject = response.data;\n        axios\n          .get(\n            `${baseUrl.baseUrl}/establishments/` +\n              establishmentID +\n              `?access_token=${localStorage.token}`\n          )\n          .then((res) => {\n            var establishmentName = res.data.name;\n            let arrayItemCourseFiles = [];\n            var formadata = new FormData();\n            if (files.length > 0) {\n              for (const key of Object.keys(files)) {\n                const fileExtension = files[key].name.replace(/^.*\\./, \"\");\n                const fileName =\n                  \"Course_\" + courseObject.id + \".\" + key + \".\" + fileExtension;\n\n                var itemCourseFiles = {};\n                itemCourseFiles.file_name = fileName;\n                itemCourseFiles.course_id = course_id;\n                arrayItemCourseFiles.push(itemCourseFiles);\n\n                var object = {};\n                object.file = files[key];\n                object.fileName = fileName;\n                object.establishmentName = establishmentName;\n                object.courseObject = response.data;\n                dispatch(uploadCourseMedia(object));\n              }\n              classService.post(\n                `/course_files?access_token=${localStorage.token}`,\n                arrayItemCourseFiles\n              );\n              dispatch({ type: ADD_LESSON, payload: courseObject });\n              dispatch({\n                type: SHOW_SUCCESS_MESSAGE,\n                payload: \"La création est effectuée avec succès\",\n              });\n              setTimeout(() => {\n                dispatch({ type: HIDE_SUCCESS_MESSAGE });\n              }, 4000);\n            } else {\n              dispatch({\n                type: SHOW_ERROR_MESSAGE,\n                payload:\n                  \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n              });\n              setTimeout(() => {\n                dispatch({ type: HIDE_ERROR_MESSAGE });\n              }, 4000);\n              if (course_id) {\n                axios.delete(\n                  `${baseUrl.baseUrl}/courses/` +\n                    course_id +\n                    `?access_token=${localStorage.token}`\n                );\n              }\n            }\n          });\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n\nexport function uploadCourseMedia(data) {\n  const fileName = data.fileName;\n  const myNewFile = new File([data.file], fileName, { type: data.file.type });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function(dispatch) {\n    const establishLogoUrl =\n      `${baseUrl.baseUrl}/containers/` +\n      data.establishmentName +\n      `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata,\n    })\n      .then((response) => {\n        // dispatch({ type: ADD_LESSON, payload: data.courseObject });\n        // dispatch({\n        //   type: SHOW_SUCCESS_MESSAGE,\n        //   payload: 'La création est effectuée avec succès',\n        // });\n        // setTimeout(() => {\n        //   dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        // }, 4000);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n}\n\nexport function deleteLesson(itemId) {\n  return (dispatch) => {\n    axios\n      .patch(\n        `${baseUrl.baseUrl}/courses/` +\n          itemId +\n          `?access_token=${localStorage.token}`,\n        {\n          status: false,\n        }\n      )\n      .then((response) => {\n        console.log(\"delete ghasssen \", response.data);\n        dispatch({ type: DELETE_LESSON, payload: response.data });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La suppression est effectuée avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 3000);\n      })\n      .catch(function(error) {\n        console.log(\"error\", error);\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la suppression merci d'essayer à nouveau\",\n        });\n      });\n  };\n}\n\nexport function editLesson(dataLesson) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/courses/` + dataLesson.id + `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, dataLesson).then((response) => {\n      dispatch({ type: EDIT_LESSON, payload: response.data });\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}