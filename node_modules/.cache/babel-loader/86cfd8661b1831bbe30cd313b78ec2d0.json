{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport baseUrl from \"../config/config\";\nimport axios from \"axios\";\nexport function addExam(exam) {\n  let examData = {\n    type: exam.type,\n    period: exam.period,\n    coefficient: exam.coefficient,\n    subject_id: exam.subject_id,\n    establishment_id: exam.establishment_id,\n    class_id: exam.class_id,\n    status: true\n  };\n  return dispatch => {\n    let apiEndpoint = `/exams?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, examData).then(response => {\n      console.log(response, \"rrrrrr\");\n      dispatch({\n        type: \"ADD_EXAM\",\n        payload: response.data\n      });\n    }).catch(error => {});\n  };\n}\nexport function getExam(establishmentId) {\n  return dispatch => {\n    let apiEndpoint = `/exams?access_token=${localStorage.token}&filter[where][establishment_id]=` + establishmentId;\n    classService.get(apiEndpoint).then(response => {\n      let listExams = [];\n      listExams = response.data.filter(option => option.status);\n      dispatch({\n        type: \"DATA_LOADED_EXAM\",\n        payload: listExams\n      });\n    }).catch(error => {});\n  };\n}\nexport function deleteExam(idItem) {\n  return dispatch => {\n    let apiEndpoint = `/exams/` + idItem + `?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, {\n      status: false\n    }).then(response => {\n      dispatch({\n        type: \"DELETE_EXAM\",\n        payload: response.data\n      });\n    }).catch(function (error) {\n      console.log(\"error\", error);\n    });\n  };\n}\nexport function editExam(data) {\n  let examData = {\n    type: data.type,\n    period: data.period,\n    coefficient: data.coefficient,\n    subject_id: data.subject_id,\n    status: true,\n    id: data.id,\n    establishment_id: data.establishment_id,\n    class_id: data.class_id\n  };\n  return dispatch => {\n    let apiEndpoint = `/exams/` + data.id + `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, examData).then(response => {\n      dispatch({\n        type: \"EDIT_EXAM\",\n        payload: response.data\n      });\n    }).catch(error => {});\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/examAction.js"],"names":["classService","baseUrl","axios","addExam","exam","examData","type","period","coefficient","subject_id","establishment_id","class_id","status","dispatch","apiEndpoint","localStorage","token","post","then","response","console","log","payload","data","catch","error","getExam","establishmentId","get","listExams","filter","option","deleteExam","idItem","patch","editExam","id","put"],"mappings":"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","sourcesContent":["import { classService } from \"../_services/class.service\";\nimport baseUrl from \"../config/config\";\nimport axios from \"axios\";\nexport function addExam(exam) {\n  let examData = {\n    type: exam.type,\n    period: exam.period,\n    coefficient: exam.coefficient,\n    subject_id: exam.subject_id,\n    establishment_id: exam.establishment_id,\n    class_id: exam.class_id,\n    status: true,\n  };\n  return (dispatch) => {\n    let apiEndpoint = `/exams?access_token=${localStorage.token}`;\n    classService\n      .post(apiEndpoint, examData)\n      .then((response) => {\n        console.log(response, \"rrrrrr\");\n        dispatch({ type: \"ADD_EXAM\", payload: response.data });\n      })\n      .catch((error) => {});\n  };\n}\nexport function getExam(establishmentId) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/exams?access_token=${localStorage.token}&filter[where][establishment_id]=` +\n      establishmentId;\n\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        let listExams = [];\n        listExams = response.data.filter((option) => option.status);\n        dispatch({ type: \"DATA_LOADED_EXAM\", payload: listExams });\n      })\n      .catch((error) => {});\n  };\n}\n\nexport function deleteExam(idItem) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/exams/` + idItem + `?access_token=${localStorage.token}`;\n    classService\n      .patch(apiEndpoint, {\n        status: false,\n      })\n      .then((response) => {\n        dispatch({ type: \"DELETE_EXAM\", payload: response.data });\n      })\n      .catch(function(error) {\n        console.log(\"error\", error);\n      });\n  };\n}\n\nexport function editExam(data) {\n  let examData = {\n    type: data.type,\n    period: data.period,\n    coefficient: data.coefficient,\n    subject_id: data.subject_id,\n    status: true,\n    id: data.id,\n    establishment_id: data.establishment_id,\n    class_id: data.class_id,\n  };\n  return (dispatch) => {\n    let apiEndpoint =\n      `/exams/` + data.id + `?access_token=${localStorage.token}`;\n    classService\n      .put(apiEndpoint, examData)\n      .then((response) => {\n        dispatch({ type: \"EDIT_EXAM\", payload: response.data });\n      })\n      .catch((error) => {});\n  };\n}\n"]},"metadata":{},"sourceType":"module"}