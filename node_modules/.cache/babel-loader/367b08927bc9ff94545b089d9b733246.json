{"ast":null,"code":"import { classService } from '../_services/class.service';\nimport { FETECHED_ALL_ADMINISTRATION, ADD_ADMINISTRATION, EDIT_ADMINISTRATION, DELETE_ADMINISTRATION, HANDLE_REQUEST_CLOSE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from '../constants/ActionTypes';\nimport baseUrl from '../config/config';\nimport axios from 'axios';\nexport const addAdministration = itemClass => {\n  //1\n  console.log('Iremmmmm', itemClass);\n  return dispatch => {\n    let apiEndpoint = `/countries_v2?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, itemClass).then(response => {\n      if (response) {\n        console.log('RESSSSS', response.data);\n        dispatch({\n          type: ADD_ADMINISTRATION,\n          payload: response.data\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'La création est effectuée avec succès'\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};\nexport const getCountries = () => {\n  return dispatch => {\n    let apiEndpoint = `/countries_v2?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      console.log('get daattttaaaa', response.data);\n      const list = response.data;\n      const ClassVirtualList = list.filter(element => element.status);\n      dispatch({\n        type: FETECHED_ALL_ADMINISTRATION,\n        payload: ClassVirtualList\n      });\n    }).catch(err => {});\n  };\n};\nexport const getAdministrationDataByEstablishmentId = establishmentId => {\n  return dispatch => {\n    let apiEndpoint = `/virtual_classes?access_token=${localStorage.token}&filter[where][establishment_id]=` + establishmentId;\n    classService.get(apiEndpoint).then(response => {\n      const list = response.data;\n      const ClassVirtualList = list.filter(element => element.status);\n      dispatch({\n        type: FETECHED_ALL_ADMINISTRATION,\n        payload: ClassVirtualList\n      });\n    }).catch(err => {});\n  };\n};\nexport function deleteAdministrationData(itemId) {\n  return dispatch => {\n    axios.patch(`${baseUrl.baseUrl}/virtual_classes/` + itemId + `?access_token=${localStorage.token}`, {\n      status: false\n    }).then(response => {\n      dispatch({\n        type: DELETE_ADMINISTRATION,\n        payload: response.data\n      });\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  };\n}\nexport function editAdministrationData(dataClassVirtual) {\n  return dispatch => {\n    let apiEndpoint = `/virtual_classes/` + dataClassVirtual.id + `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, dataClassVirtual).then(response => {\n      dispatch({\n        type: EDIT_ADMINISTRATION,\n        payload: response.data\n      });\n      dispatch({\n        type: SHOW_SUCCESS_MESSAGE,\n        payload: 'La modification est effectuée avec succès'\n      });\n      setTimeout(() => {\n        dispatch({\n          type: HIDE_SUCCESS_MESSAGE\n        });\n      }, 4000);\n    });\n  };\n}\nexport const serviceAction = {\n  addAdministration,\n  getCountries\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/SuperadministrationAction.js"],"names":["classService","FETECHED_ALL_ADMINISTRATION","ADD_ADMINISTRATION","EDIT_ADMINISTRATION","DELETE_ADMINISTRATION","HANDLE_REQUEST_CLOSE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","baseUrl","axios","addAdministration","itemClass","console","log","dispatch","apiEndpoint","localStorage","token","post","then","response","data","type","payload","setTimeout","getCountries","get","list","ClassVirtualList","filter","element","status","catch","err","getAdministrationDataByEstablishmentId","establishmentId","deleteAdministrationData","itemId","patch","error","editAdministrationData","dataClassVirtual","id","put","serviceAction"],"mappings":"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","sourcesContent":["import { classService } from '../_services/class.service';\nimport {\n  FETECHED_ALL_ADMINISTRATION,\n  ADD_ADMINISTRATION,\n  EDIT_ADMINISTRATION,\n  DELETE_ADMINISTRATION,\n  HANDLE_REQUEST_CLOSE,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n} from '../constants/ActionTypes';\nimport baseUrl from '../config/config';\nimport axios from 'axios';\nexport const addAdministration = (itemClass) => {\n  //1\n  console.log('Iremmmmm',itemClass)\n  return (dispatch) => {\n    let apiEndpoint = `/countries_v2?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, itemClass).then((response) => {\n      if (response) {\n        console.log('RESSSSS',response.data)\n        dispatch({ type: ADD_ADMINISTRATION, payload: response.data });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'La création est effectuée avec succès',\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n\nexport const getCountries= () => {\n  return (dispatch) => {\n    let apiEndpoint = `/countries_v2?access_token=${localStorage.token}`;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        console.log('get daattttaaaa',response.data)\n        const list = response.data;\n        const ClassVirtualList = list.filter((element) => element.status);\n        dispatch({\n          type: FETECHED_ALL_ADMINISTRATION,\n          payload: ClassVirtualList,\n        });\n      })\n      .catch((err) => {});\n  };\n};\n\nexport const getAdministrationDataByEstablishmentId = (establishmentId) => {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/virtual_classes?access_token=${localStorage.token}&filter[where][establishment_id]=` +\n      establishmentId;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        const list = response.data;\n        const ClassVirtualList = list.filter((element) => element.status);\n\n        dispatch({\n          type: FETECHED_ALL_ADMINISTRATION,\n          payload: ClassVirtualList,\n        });\n      })\n      .catch((err) => {});\n  };\n};\n\nexport function deleteAdministrationData(itemId) {\n  return (dispatch) => {\n    axios\n      .patch(\n        `${baseUrl.baseUrl}/virtual_classes/` +\n          itemId +\n          `?access_token=${localStorage.token}`,\n        {\n          status: false,\n        }\n      )\n      .then((response) => {\n        dispatch({ type: DELETE_ADMINISTRATION, payload: response.data });\n      })\n      .catch(function(error) {\n        console.log('error', error);\n      });\n  };\n}\n\nexport function editAdministrationData(dataClassVirtual) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/virtual_classes/` +\n      dataClassVirtual.id +\n      `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, dataClassVirtual).then((response) => {\n      dispatch({ type: EDIT_ADMINISTRATION, payload: response.data });\n      dispatch({\n        type: SHOW_SUCCESS_MESSAGE,\n        payload: 'La modification est effectuée avec succès',\n      });\n      setTimeout(() => {\n        dispatch({ type: HIDE_SUCCESS_MESSAGE });\n      }, 4000);\n    });\n  };\n}\n\nexport const serviceAction = {\n    addAdministration,\n    getCountries\n\n};\n"]},"metadata":{},"sourceType":"module"}