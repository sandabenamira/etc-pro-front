{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/UsersManagement/UsersList.js\";\nimport React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport EditUsers from './EditUsers';\nimport _ from 'lodash';\nimport UsersListItem from './UsersListItem';\nimport DeleteUsersItem from './DeleteUsers';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport { roleIdSuperAdmin, roleIdAdmin, roleIdProfessor, roleIdStudent, roleIdDirector, roleIdParent, roleIdSupervisor } from '../../../../../config/config';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ModalDetailsUser from './ModalDetailsUser';\nconst listRole = [// { id: 0, label: <IntlMessages id={`permission.role.all`} /> },\n{\n  id: roleIdAdmin,\n  label: 'Admin'\n}, {\n  id: roleIdDirector,\n  label: 'Director'\n}, {\n  id: roleIdProfessor,\n  label: 'Formateur'\n}, {\n  id: roleIdStudent,\n  label: 'Participant'\n}, {\n  id: roleIdParent,\n  label: 'Responsable formation'\n}];\nconst fonctionList = [{\n  label: \"Agent d'entretien\",\n  id: 1,\n  value: 1\n}, {\n  label: 'Infirmière',\n  id: 2,\n  value: 2\n}, {\n  label: 'Cuisinier(e)',\n  id: 3,\n  value: 3\n}, {\n  label: 'Gardien',\n  id: 4,\n  value: 4\n}, {\n  label: 'surveillant',\n  id: 5,\n  value: 5\n}, {\n  label: 'surveillant général',\n  id: 6,\n  value: 6\n}];\n\nclass UsersList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = (item, event) => {\n      event.preventDefault();\n      this.setState({\n        deleteIsopen: true,\n        deleteItem: item\n      });\n    };\n\n    this.handleChangeRole = name => event => {\n      this.setState({\n        [name]: event.target.value,\n        usersList: this.props.usersList,\n        filterSubjectProfId: 0,\n        filterClassProfId: 0,\n        filterLevelStudentId: 0,\n        filterClassStudentId: 0\n      });\n    };\n\n    this.handleChangeFilterProf = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      let classIdFilter = this.state.filterClassProfId;\n      let subjectIdFilter = this.state.filterSubjectProfId;\n\n      function filterClassProf(item) {\n        let listClass = [];\n\n        if (subjectIdFilter == 0) {\n          if (event.target.value == 0) {\n            return true;\n          } else {\n            listClass = item.inforamtionsProf.filter(element => element.ClassId == event.target.value);\n          }\n        } else {\n          if (event.target.value == 0) {\n            listClass = item.inforamtionsProf.filter(element => element.subjectId == subjectIdFilter);\n          } else {\n            listClass = item.inforamtionsProf.filter(element => element.ClassId == event.target.value && element.subjectId == subjectIdFilter);\n          }\n        }\n\n        return listClass.length > 0;\n      }\n\n      function filterSubjectProf(item) {\n        let listClass = [];\n\n        if (classIdFilter == 0) {\n          if (event.target.value == 0) {\n            return true;\n          } else {\n            listClass = item.inforamtionsProf.filter(element => element.subjectId == event.target.value);\n          }\n        } else {\n          if (event.target.value == 0) {\n            listClass = item.inforamtionsProf.filter(element => element.ClassId == classIdFilter);\n          } else {\n            listClass = item.inforamtionsProf.filter(element => element.subjectId == event.target.value && element.ClassId == classIdFilter);\n          }\n        }\n\n        return listClass.length > 0;\n      }\n\n      if (name === 'filterClassProfId') {\n        let classFiltred = _.filter(this.props.usersList.professors, filterClassProf);\n\n        let newUserList = { ...this.props.usersList,\n          professors: classFiltred\n        };\n        this.setState({\n          usersList: newUserList\n        });\n      }\n\n      if (name === 'filterSubjectProfId') {\n        let subjectFiltred = _.filter(this.props.usersList.professors, filterSubjectProf);\n\n        let newUserList = { ...this.props.usersList,\n          professors: subjectFiltred\n        };\n        this.setState({\n          usersList: newUserList\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.handleCancel();\n    };\n\n    this.handleChangeFilterStudent = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n\n      if (name === 'filterLevelStudentId') {\n        if (event.target.value == 0) {\n          this.setState({\n            usersList: this.props.usersList,\n            filterClassStudentId: 0,\n            classStudentFilter: [],\n            filterGroupStudentId: 0,\n            listGroupFilter: []\n          });\n        } else {\n          let classStudentFilter = this.props.listClassFilter.filter(element => element.levelId == event.target.value);\n          let studentByLevel = this.props.usersList.students.filter(element => element.inforamtionsStudent.classInformation.levelId == event.target.value);\n          let newUserList = { ...this.props.usersList,\n            students: studentByLevel\n          };\n          this.setState({\n            usersList: newUserList,\n            classStudentFilter,\n            filterClassStudentId: 0,\n            filterGroupStudentId: 0,\n            listGroupFilter: []\n          });\n        }\n      }\n\n      if (name === 'filterClassStudentId') {\n        this.setState({\n          filterGroupStudentId: 0\n        });\n\n        if (event.target.value == 0) {\n          this.setState({\n            listGroupFilter: []\n          });\n\n          if (this.state.filterLevelStudentId == 0) {\n            this.setState({\n              usersList: this.props.usersList\n            });\n          } else {\n            let studentByLevel = this.props.usersList.students.filter(element => element.inforamtionsStudent.classInformation.levelId == this.state.filterLevelStudentId);\n            let newUserList = { ...this.props.usersList,\n              students: studentByLevel\n            };\n            this.setState({\n              usersList: newUserList\n            });\n          }\n        } else {\n          let studentByLevel = this.props.usersList.students.filter(element => element.inforamtionsStudent.classInformation.classId == event.target.value);\n          let classSelected = this.state.classStudentFilter.find(element => element.id == event.target.value);\n          let listGroupFilter;\n\n          if (classSelected != undefined) {\n            listGroupFilter = classSelected.groups.filter(element => element.status);\n          }\n\n          let newUserList = { ...this.props.usersList,\n            students: studentByLevel\n          };\n          this.setState({\n            usersList: newUserList,\n            listGroupFilter\n          });\n        }\n      }\n\n      if (name === 'filterGroupStudentId') {\n        if (event.target.value == 0) {\n          let studentByClass = this.props.usersList.students.filter(element => element.inforamtionsStudent.classInformation.classId == this.state.filterClassStudentId);\n          let newUserList = { ...this.props.usersList,\n            students: studentByClass\n          };\n          this.setState({\n            usersList: newUserList\n          });\n        } else {\n          let studentByGroup = this.props.usersList.students.filter(element => element.inforamtionsStudent.classInformation.groupId == event.target.value);\n          let newUserList = { ...this.props.usersList,\n            students: studentByGroup\n          };\n          this.setState({\n            usersList: newUserList\n          });\n        }\n      }\n    };\n\n    this.state = {\n      isOpen: false,\n      item: {},\n      deleteIsopen: false,\n      deleteItem: {},\n      // satate for filtre\n      roleIdFilter: 0,\n      filterClassProfId: 0,\n      filterSubjectProfId: 0,\n      filterLevelStudentId: 0,\n      filterClassStudentId: 0,\n      usersList: {\n        users: [],\n        students: [],\n        parents: [],\n        professors: [],\n        admins: [],\n        directors: [],\n        supervisors: []\n      },\n      classStudentFilter: [],\n      listGroupFilter: [],\n      filterGroupStudentId: 0,\n      // satate for edit\n      roleItemEdit: {},\n      schoolyearEdit: {},\n      establishmentEdit: {},\n      userNameEdit: '',\n      userLastNameEdit: '',\n      userGenderEdit: '',\n      birthdayDateEdit: '',\n      birthdayPlaceEdit: '',\n      userNationnalityEdit: '',\n      userMailEdit: '',\n      userPhoneNumberEdit: '',\n      userCinEdit: '',\n      userIdentifierEdit: '',\n      userAdressEdit: '',\n      userZipCodeEdit: '',\n      userCountryEdit: {},\n      photoText: '',\n      usefulInformationEdit: '',\n      nameFiles: [],\n      /// student state\n      listParentEdit: [],\n      studentClassEdit: {},\n      listGroupClass: [],\n      studentGroupEdit: {},\n      /// prof state\n      listOfSubjectsEdit: [{\n        id: 0,\n        classId: 0,\n        subjectId: 0,\n        subjects: [],\n        isAdded: false\n      }],\n      // state parent\n      listStudentEdit: []\n    };\n    this.handleAnnule = this.handleAnnule.bind(this);\n    this.handleChangeRole = this.handleChangeRole.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChangeFilterProf = this.handleChangeFilterProf.bind(this);\n    this.handleChangeFilterStudent = this.handleChangeFilterStudent.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      usersList: this.props.usersList\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.usersList !== this.props.usersList) {\n      this.setState({\n        usersList: this.props.usersList\n      });\n    }\n  }\n\n  handleCancel() {\n    this.setState({\n      isOpen: false,\n      deleteIsopen: false,\n      openEdit: false,\n      itemEdit: {}\n    });\n  }\n\n  handleEdit(item) {\n    let nameFiles = [];\n    let listParentEdit = [];\n    let listStudentEdit = [];\n    let studentClassEdit = {};\n    let listGroupClass = [];\n    let studentGroupEdit = {};\n    let listOfSubjectsEdit = [];\n    let fonctionEdit = {};\n    let schoolyearEdit = this.props.usefulData.listSchoolYears.find(element => element.id == item.schoolYearId);\n    let establishmentEdit = this.props.usefulData.establishmentsList.find(element => element.id == item.establishmentId);\n    let userCountryEdit = this.props.usefulData.countriesList.find(element => element.id == item.country);\n\n    if (item.paperFiles == null) {\n      nameFiles = [];\n    } else {\n      nameFiles = item.paperFiles.map(element => element.slice(59));\n    }\n\n    if (item.roleId == roleIdStudent) {\n      listParentEdit = item.inforamtionsStudent.parentsInformation.map(element => {\n        var parentItem = {};\n        parentItem.label = element.parentName + ' ' + element.parentLastName;\n        parentItem.id = element.parenttId;\n        parentItem.value = element.parenttId;\n        return parentItem;\n      });\n      studentClassEdit = this.props.usefulData.classForStudent.find(element => element.id == item.inforamtionsStudent.classInformation.classId);\n\n      if (studentClassEdit !== undefined) {\n        studentClassEdit.groups.map(element => {\n          if (element.status) {\n            var object = {};\n            object.label = element.name;\n            object.id = element.id;\n            object.value = element.id;\n            listGroupClass.push(object);\n          }\n\n          if (element.status && element.id == item.inforamtionsStudent.classInformation.groupId) {\n            studentGroupEdit = object;\n          }\n        });\n      }\n    }\n\n    if (item.roleId == roleIdProfessor) {\n      console.log(this.props.courseAssignment, 'this.props.courseAssignment');\n      item.inforamtionsProf.map((profItem, index) => {\n        let subjectsList = [];\n        let subjectSelected = {};\n        this.props.courseAssignment.map(element => {\n          if (element.fk_id_class_v4 === profItem.ClassId) {\n            var object = {};\n            object.label = element.subject.name;\n            object.id = element.id;\n            object.value = element.id;\n            subjectsList.push(object);\n\n            if (element.id == profItem.idAssignnement) {\n              subjectSelected = object;\n            }\n          }\n        }); // let subjectSelected = subjectsList.find(\n        //   (subjectItem) => subjectItem.id == profItem.idAssignnement\n        // );\n\n        console.log(subjectsList, 'subjectsList   subjectsList');\n        listOfSubjectsEdit.push({\n          id: index,\n          classId: profItem.ClassId,\n          subjectId: profItem.idAssignnement,\n          subjects: subjectsList,\n          subjectSelected: subjectSelected,\n          isAdded: !index == item.inforamtionsProf.length - 1\n        });\n      });\n    }\n\n    if (item.roleId == roleIdParent) {\n      listStudentEdit = item.inforamtionsParent.map(element => {\n        var studentItem = {};\n        studentItem.label = element.studentName + ' ' + element.studentLastName;\n        studentItem.id = element.studentId;\n        studentItem.value = element.studentId;\n        return studentItem;\n      });\n    }\n\n    if (item.roleId == roleIdSupervisor) {\n      fonctionEdit = fonctionList.find(element => element.label == item.functionName);\n    }\n\n    this.setState({\n      openEdit: true,\n      itemEdit: item,\n      roleItemEdit: {\n        id: item.roleId,\n        label: item.roleName,\n        value: item.roleId\n      },\n      establishmentEdit,\n      schoolyearEdit,\n      userNameEdit: item.name,\n      userLastNameEdit: item.surname,\n      userGenderEdit: item.gender,\n      birthdayDateEdit: item.dateOfBirth,\n      birthdayPlaceEdit: item.placeOfBirth,\n      userNationnalityEdit: item.nationality,\n      userMailEdit: item.email,\n      userPhoneNumberEdit: '+' + item.phone,\n      userCinEdit: item.cin,\n      userIdentifierEdit: item.uniqueIdentifier,\n      userAdressEdit: item.address,\n      userZipCodeEdit: item.zipCode,\n      userCountryEdit,\n      photoText: item.urlPhoto == null ? '' : item.urlPhoto.slice(59),\n      usefulInformationEdit: item.usefulInformation,\n      nameFiles,\n      listParentEdit,\n      studentClassEdit: studentClassEdit != undefined ? studentClassEdit : {},\n      listGroupClass,\n      studentGroupEdit: studentGroupEdit != undefined ? studentGroupEdit : {},\n      listOfSubjectsEdit,\n      listStudentEdit,\n      fonctionEdit\n    });\n    console.log('ediiiiiiiit', item);\n  }\n\n  handleAnnule() {\n    this.handleCancel();\n  }\n\n  handleToggle() {\n    this.handleCancel();\n  }\n\n  render() {\n    const {\n      usefulData\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive-material\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"users.list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 15\n      }\n    })), ' ')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap flex-row bd-highlight mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 bd-highlight col-lg-2 col-md-4 col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"filterRoleId\",\n      name: \"filterRoleId\",\n      select: true,\n      value: this.state.roleIdFilter,\n      onChange: this.handleChangeRole('roleIdFilter'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `stuppUser.steps.role`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 22\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `permission.role.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }\n    })), listRole.map(role => /*#__PURE__*/React.createElement(MenuItem, {\n      key: role.id,\n      value: role.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }\n    }, role.label)))), this.state.roleIdFilter == roleIdProfessor ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"idClasse\",\n      name: \"idClasse\",\n      select: true,\n      value: this.state.filterClassProfId,\n      onChange: this.handleChangeFilterProf('filterClassProfId'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.note.class`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 26\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `extraPages.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 21\n      }\n    })), this.props.listClassFilter.map(classeItem => /*#__PURE__*/React.createElement(MenuItem, {\n      key: classeItem.id,\n      value: classeItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 21\n      }\n    }, classeItem.label)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"idSubject\",\n      name: \"idSubject\",\n      select: true,\n      value: this.state.filterSubjectProfId,\n      onChange: this.handleChangeFilterProf('filterSubjectProfId'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.note.subject`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 26\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `extraPages.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 21\n      }\n    })), this.props.subjects.map(subjectItem => /*#__PURE__*/React.createElement(MenuItem, {\n      key: subjectItem.id,\n      value: subjectItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 21\n      }\n    }, subjectItem.name))))) : '', this.state.roleIdFilter == roleIdStudent ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"idLevel\",\n      name: \"idLevel\",\n      select: true,\n      value: this.state.filterLevelStudentId,\n      onChange: this.handleChangeFilterStudent('filterLevelStudentId'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.note.niveau`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 26\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `extraPages.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 21\n      }\n    })), this.props.levels.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 21\n      }\n    }, option.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"idClasse\",\n      name: \"idClasse\",\n      select: true,\n      value: this.state.filterClassStudentId,\n      onChange: this.handleChangeFilterStudent('filterClassStudentId'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.note.class`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 26\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `extraPages.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 21\n      }\n    })), this.state.classStudentFilter.map(classeItem => /*#__PURE__*/React.createElement(MenuItem, {\n      key: classeItem.id,\n      value: classeItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 21\n      }\n    }, classeItem.label))))) : ''), /*#__PURE__*/React.createElement(Table, {\n      className: \"default-table table-unbordered table table-sm table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      className: \"th-border-b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.last.name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 17\n      }\n    })), this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"role.user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 19\n      }\n    })) : null, this.state.roleIdFilter == roleIdProfessor ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `components.note.subject`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 19\n      }\n    })) : null, this.state.roleIdFilter == roleIdProfessor ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `components.note.class`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 19\n      }\n    })) : null, this.state.roleIdFilter == roleIdStudent ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `components.note.class`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 19\n      }\n    })) : null, this.state.roleIdFilter == roleIdStudent ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 17\n      }\n    }, \"Parent\") : null, this.state.roleIdFilter == roleIdParent ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 19\n      }\n    }, \"enfant \")) : null, this.state.roleIdFilter == roleIdParent ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 17\n      }\n    }, ' ', /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `components.note.class`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 19\n      }\n    })) : null, this.state.roleIdFilter == roleIdAdmin || this.state.roleIdFilter == roleIdDirector || this.state.roleIdFilter == roleIdSupervisor || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 19\n      }\n    })) : null, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.phone.number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 11\n      }\n    }, this.state.roleIdFilter == roleIdAdmin || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-admin',\n        permissionList: this.props.permissionList\n      },\n      yes: () => this.state.usersList.admins.map(element => {\n        return /*#__PURE__*/React.createElement(UsersListItem, {\n          user: element,\n          handleEdit: this.handleEdit,\n          handleDelete: this.handleDelete,\n          archived: false,\n          roleIdFilter: this.state.roleIdFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 27\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdSupervisor || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-school-life',\n        permissionList: this.props.permissionList\n      },\n      yes: () => this.state.usersList.supervisors.map(element => {\n        return /*#__PURE__*/React.createElement(UsersListItem, {\n          user: element,\n          handleEdit: this.handleEdit,\n          handleDelete: this.handleDelete,\n          archived: false,\n          roleIdFilter: this.state.roleIdFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 27\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdDirector || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-direction-membre',\n        permissionList: this.props.permissionList\n      },\n      yes: () => this.state.usersList.directors.map(element => {\n        return /*#__PURE__*/React.createElement(UsersListItem, {\n          user: element,\n          handleEdit: this.handleEdit,\n          handleDelete: this.handleDelete,\n          archived: false,\n          roleIdFilter: this.state.roleIdFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 27\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdProfessor || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-prof',\n        permissionList: this.props.permissionList\n      },\n      yes: () => this.state.usersList.professors.map(element => {\n        return /*#__PURE__*/React.createElement(UsersListItem, {\n          user: element,\n          handleEdit: this.handleEdit,\n          handleDelete: this.handleDelete,\n          archived: false,\n          roleIdFilter: this.state.roleIdFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 27\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdParent || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-parent',\n        permissionList: this.props.permissionList\n      },\n      yes: () => this.state.usersList.parents.map(element => {\n        return /*#__PURE__*/React.createElement(UsersListItem, {\n          roleIdFilter: this.state.roleIdFilter,\n          user: element,\n          handleEdit: this.handleEdit,\n          handleDelete: this.handleDelete,\n          archived: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 27\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdStudent || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-student',\n        permissionList: this.props.permissionList\n      },\n      yes: () => this.state.usersList.students.map(element => {\n        return /*#__PURE__*/React.createElement(UsersListItem, {\n          roleIdFilter: this.state.roleIdFilter,\n          user: element,\n          handleEdit: this.handleEdit,\n          handleDelete: this.handleDelete,\n          archived: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 27\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 19\n      }\n    })) : '')), this.state.openEdit ? /*#__PURE__*/React.createElement(EditUsers, {\n      usefulData: usefulData,\n      schoolSession: this.state.item,\n      closeModal: this.handleCancel,\n      values: this.state,\n      handleAnnule: this.handleAnnule,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      handleToggle: this.handleToggle,\n      handleChangeDateStart: this.handleChangeDateStart,\n      handleChangeDateEnd: this.handleChangeDateEnd,\n      handleChangeStartDate: this.handleChangeStartDate,\n      handleChangeEndDate: this.handleChangeEndDate,\n      educationTypes: this.props.educationTypes,\n      handleChangeEducationType: this.handleChangeEducationType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 11\n      }\n    }) : '', this.state.deleteIsopen === true ? /*#__PURE__*/React.createElement(DeleteUsersItem, {\n      handleDeleteSchoolSession: this.handleDeleteSchoolSession,\n      deleteItem: this.state.deleteItem,\n      handleCancel: this.handleCancel,\n      deleteIsopen: this.state.deleteIsopen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 11\n      }\n    }) : '');\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    subjects: state.subject.subjects,\n    levels: state.levelsReducer.levels,\n    courseAssignment: state.AssignementReducer.courseAssignment\n  };\n}\n\nexport default connect(mapStateToProps, {})(UsersList);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/UsersManagement/UsersList.js"],"names":["React","Table","TableBody","TableCell","TableHead","TableRow","IntlMessages","EditUsers","_","UsersListItem","DeleteUsersItem","connect","TextField","Can","RoleContext","roleIdSuperAdmin","roleIdAdmin","roleIdProfessor","roleIdStudent","roleIdDirector","roleIdParent","roleIdSupervisor","MenuItem","ModalDetailsUser","listRole","id","label","fonctionList","value","UsersList","Component","constructor","props","handleDelete","item","event","preventDefault","setState","deleteIsopen","deleteItem","handleChangeRole","name","target","usersList","filterSubjectProfId","filterClassProfId","filterLevelStudentId","filterClassStudentId","handleChangeFilterProf","classIdFilter","state","subjectIdFilter","filterClassProf","listClass","inforamtionsProf","filter","element","ClassId","subjectId","length","filterSubjectProf","classFiltred","professors","newUserList","subjectFiltred","handleSubmit","e","handleCancel","handleChangeFilterStudent","classStudentFilter","filterGroupStudentId","listGroupFilter","listClassFilter","levelId","studentByLevel","students","inforamtionsStudent","classInformation","classId","classSelected","find","undefined","groups","status","studentByClass","studentByGroup","groupId","isOpen","roleIdFilter","users","parents","admins","directors","supervisors","roleItemEdit","schoolyearEdit","establishmentEdit","userNameEdit","userLastNameEdit","userGenderEdit","birthdayDateEdit","birthdayPlaceEdit","userNationnalityEdit","userMailEdit","userPhoneNumberEdit","userCinEdit","userIdentifierEdit","userAdressEdit","userZipCodeEdit","userCountryEdit","photoText","usefulInformationEdit","nameFiles","listParentEdit","studentClassEdit","listGroupClass","studentGroupEdit","listOfSubjectsEdit","subjects","isAdded","listStudentEdit","handleAnnule","bind","handleToggle","handleEdit","componentDidMount","componentDidUpdate","prevProps","openEdit","itemEdit","fonctionEdit","usefulData","listSchoolYears","schoolYearId","establishmentsList","establishmentId","countriesList","country","paperFiles","map","slice","roleId","parentsInformation","parentItem","parentName","parentLastName","parenttId","classForStudent","object","push","console","log","courseAssignment","profItem","index","subjectsList","subjectSelected","fk_id_class_v4","subject","idAssignnement","inforamtionsParent","studentItem","studentName","studentLastName","studentId","functionName","roleName","surname","gender","dateOfBirth","placeOfBirth","nationality","email","phone","cin","uniqueIdentifier","address","zipCode","urlPhoto","usefulInformation","render","disableUnderline","role","classeItem","subjectItem","levels","option","permission","permissionList","handleChange","handleChangeDateStart","handleChangeDateEnd","handleChangeStartDate","handleChangeEndDate","educationTypes","handleChangeEducationType","handleDeleteSchoolSession","mapStateToProps","levelsReducer","AssignementReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport EditUsers from './EditUsers';\nimport _ from 'lodash';\nimport UsersListItem from './UsersListItem';\nimport DeleteUsersItem from './DeleteUsers';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport {\n  roleIdSuperAdmin,\n  roleIdAdmin,\n  roleIdProfessor,\n  roleIdStudent,\n  roleIdDirector,\n  roleIdParent,\n  roleIdSupervisor,\n} from '../../../../../config/config';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport ModalDetailsUser from './ModalDetailsUser';\nconst listRole = [\n  // { id: 0, label: <IntlMessages id={`permission.role.all`} /> },\n  { id: roleIdAdmin, label: 'Admin' },\n  { id: roleIdDirector, label: 'Director' },\n  { id: roleIdProfessor, label: 'Formateur' },\n  { id: roleIdStudent, label: 'Participant' },\n  { id: roleIdParent, label: 'Responsable formation' },\n];\nconst fonctionList = [\n  { label: \"Agent d'entretien\", id: 1, value: 1 },\n  { label: 'Infirmière', id: 2, value: 2 },\n  { label: 'Cuisinier(e)', id: 3, value: 3 },\n  { label: 'Gardien', id: 4, value: 4 },\n  { label: 'surveillant', id: 5, value: 5 },\n  { label: 'surveillant général', id: 6, value: 6 },\n];\nclass UsersList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      item: {},\n      deleteIsopen: false,\n      deleteItem: {},\n      // satate for filtre\n      roleIdFilter: 0,\n      filterClassProfId: 0,\n      filterSubjectProfId: 0,\n      filterLevelStudentId: 0,\n      filterClassStudentId: 0,\n      usersList: {\n        users: [],\n        students: [],\n        parents: [],\n        professors: [],\n        admins: [],\n        directors: [],\n        supervisors: [],\n      },\n      classStudentFilter: [],\n      listGroupFilter: [],\n      filterGroupStudentId: 0,\n      // satate for edit\n      roleItemEdit: {},\n      schoolyearEdit: {},\n      establishmentEdit: {},\n      userNameEdit: '',\n      userLastNameEdit: '',\n      userGenderEdit: '',\n      birthdayDateEdit: '',\n      birthdayPlaceEdit: '',\n      userNationnalityEdit: '',\n      userMailEdit: '',\n      userPhoneNumberEdit: '',\n      userCinEdit: '',\n      userIdentifierEdit: '',\n      userAdressEdit: '',\n      userZipCodeEdit: '',\n      userCountryEdit: {},\n      photoText: '',\n      usefulInformationEdit: '',\n      nameFiles: [],\n      /// student state\n      listParentEdit: [],\n      studentClassEdit: {},\n      listGroupClass: [],\n      studentGroupEdit: {},\n      /// prof state\n      listOfSubjectsEdit: [\n        {\n          id: 0,\n          classId: 0,\n          subjectId: 0,\n          subjects: [],\n          isAdded: false,\n        },\n      ],\n      // state parent\n      listStudentEdit: [],\n    };\n    this.handleAnnule = this.handleAnnule.bind(this);\n    this.handleChangeRole = this.handleChangeRole.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChangeFilterProf = this.handleChangeFilterProf.bind(this);\n    this.handleChangeFilterStudent = this.handleChangeFilterStudent.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ usersList: this.props.usersList });\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.usersList !== this.props.usersList) {\n      this.setState({ usersList: this.props.usersList });\n    }\n  }\n\n  handleCancel() {\n    this.setState({ isOpen: false, deleteIsopen: false, openEdit: false, itemEdit: {} });\n  }\n  handleEdit(item) {\n    let nameFiles = [];\n    let listParentEdit = [];\n    let listStudentEdit = [];\n    let studentClassEdit = {};\n    let listGroupClass = [];\n    let studentGroupEdit = {};\n    let listOfSubjectsEdit = [];\n    let fonctionEdit = {};\n    let schoolyearEdit = this.props.usefulData.listSchoolYears.find(\n      (element) => element.id == item.schoolYearId\n    );\n    let establishmentEdit = this.props.usefulData.establishmentsList.find(\n      (element) => element.id == item.establishmentId\n    );\n    let userCountryEdit = this.props.usefulData.countriesList.find(\n      (element) => element.id == item.country\n    );\n    if (item.paperFiles == null) {\n      nameFiles = [];\n    } else {\n      nameFiles = item.paperFiles.map((element) => element.slice(59));\n    }\n    if (item.roleId == roleIdStudent) {\n      listParentEdit = item.inforamtionsStudent.parentsInformation.map((element) => {\n        var parentItem = {};\n        parentItem.label = element.parentName + ' ' + element.parentLastName;\n        parentItem.id = element.parenttId;\n        parentItem.value = element.parenttId;\n        return parentItem;\n      });\n      studentClassEdit = this.props.usefulData.classForStudent.find(\n        (element) => element.id == item.inforamtionsStudent.classInformation.classId\n      );\n      if (studentClassEdit !== undefined) {\n        studentClassEdit.groups.map((element) => {\n          if (element.status) {\n            var object = {};\n            object.label = element.name;\n            object.id = element.id;\n            object.value = element.id;\n            listGroupClass.push(object);\n          }\n          if (element.status && element.id == item.inforamtionsStudent.classInformation.groupId) {\n            studentGroupEdit = object;\n          }\n        });\n      }\n    }\n    if (item.roleId == roleIdProfessor) {\n      console.log(this.props.courseAssignment, 'this.props.courseAssignment');\n      item.inforamtionsProf.map((profItem, index) => {\n        let subjectsList = [];\n        let subjectSelected = {};\n        this.props.courseAssignment.map((element) => {\n          if (element.fk_id_class_v4 === profItem.ClassId) {\n            var object = {};\n            object.label = element.subject.name;\n            object.id = element.id;\n            object.value = element.id;\n            subjectsList.push(object);\n            if (element.id == profItem.idAssignnement) {\n              subjectSelected = object;\n            }\n          }\n        });\n        // let subjectSelected = subjectsList.find(\n        //   (subjectItem) => subjectItem.id == profItem.idAssignnement\n        // );\n        console.log(subjectsList, 'subjectsList   subjectsList');\n        listOfSubjectsEdit.push({\n          id: index,\n          classId: profItem.ClassId,\n          subjectId: profItem.idAssignnement,\n          subjects: subjectsList,\n          subjectSelected: subjectSelected,\n          isAdded: !index == item.inforamtionsProf.length - 1,\n        });\n      });\n    }\n    if (item.roleId == roleIdParent) {\n      listStudentEdit = item.inforamtionsParent.map((element) => {\n        var studentItem = {};\n        studentItem.label = element.studentName + ' ' + element.studentLastName;\n        studentItem.id = element.studentId;\n        studentItem.value = element.studentId;\n        return studentItem;\n      });\n    }\n    if (item.roleId == roleIdSupervisor) {\n      fonctionEdit = fonctionList.find((element) => element.label == item.functionName);\n    }\n    this.setState({\n      openEdit: true,\n      itemEdit: item,\n      roleItemEdit: {\n        id: item.roleId,\n        label: item.roleName,\n        value: item.roleId,\n      },\n      establishmentEdit,\n      schoolyearEdit,\n      userNameEdit: item.name,\n      userLastNameEdit: item.surname,\n      userGenderEdit: item.gender,\n      birthdayDateEdit: item.dateOfBirth,\n      birthdayPlaceEdit: item.placeOfBirth,\n      userNationnalityEdit: item.nationality,\n      userMailEdit: item.email,\n      userPhoneNumberEdit: '+' + item.phone,\n      userCinEdit: item.cin,\n      userIdentifierEdit: item.uniqueIdentifier,\n      userAdressEdit: item.address,\n      userZipCodeEdit: item.zipCode,\n      userCountryEdit,\n      photoText: item.urlPhoto == null ? '' : item.urlPhoto.slice(59),\n      usefulInformationEdit: item.usefulInformation,\n      nameFiles,\n      listParentEdit,\n      studentClassEdit: studentClassEdit != undefined ? studentClassEdit : {},\n      listGroupClass,\n      studentGroupEdit: studentGroupEdit != undefined ? studentGroupEdit : {},\n      listOfSubjectsEdit,\n      listStudentEdit,\n      fonctionEdit,\n    });\n    console.log('ediiiiiiiit', item);\n  }\n  handleDelete = (item, event) => {\n    event.preventDefault();\n    this.setState({ deleteIsopen: true, deleteItem: item });\n  };\n\n  handleAnnule() {\n    this.handleCancel();\n  }\n\n  handleChangeRole = (name) => (event) => {\n    this.setState({\n      [name]: event.target.value,\n      usersList: this.props.usersList,\n      filterSubjectProfId: 0,\n      filterClassProfId: 0,\n      filterLevelStudentId: 0,\n      filterClassStudentId: 0,\n    });\n  };\n  handleChangeFilterProf = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    let classIdFilter = this.state.filterClassProfId;\n    let subjectIdFilter = this.state.filterSubjectProfId;\n    function filterClassProf(item) {\n      let listClass = [];\n\n      if (subjectIdFilter == 0) {\n        if (event.target.value == 0) {\n          return true;\n        } else {\n          listClass = item.inforamtionsProf.filter(\n            (element) => element.ClassId == event.target.value\n          );\n        }\n      } else {\n        if (event.target.value == 0) {\n          listClass = item.inforamtionsProf.filter(\n            (element) => element.subjectId == subjectIdFilter\n          );\n        } else {\n          listClass = item.inforamtionsProf.filter(\n            (element) =>\n              element.ClassId == event.target.value && element.subjectId == subjectIdFilter\n          );\n        }\n      }\n      return listClass.length > 0;\n    }\n\n    function filterSubjectProf(item) {\n      let listClass = [];\n      if (classIdFilter == 0) {\n        if (event.target.value == 0) {\n          return true;\n        } else {\n          listClass = item.inforamtionsProf.filter(\n            (element) => element.subjectId == event.target.value\n          );\n        }\n      } else {\n        if (event.target.value == 0) {\n          listClass = item.inforamtionsProf.filter((element) => element.ClassId == classIdFilter);\n        } else {\n          listClass = item.inforamtionsProf.filter(\n            (element) => element.subjectId == event.target.value && element.ClassId == classIdFilter\n          );\n        }\n      }\n      return listClass.length > 0;\n    }\n\n    if (name === 'filterClassProfId') {\n      let classFiltred = _.filter(this.props.usersList.professors, filterClassProf);\n      let newUserList = { ...this.props.usersList, professors: classFiltred };\n      this.setState({ usersList: newUserList });\n    }\n    if (name === 'filterSubjectProfId') {\n      let subjectFiltred = _.filter(this.props.usersList.professors, filterSubjectProf);\n      let newUserList = { ...this.props.usersList, professors: subjectFiltred };\n      this.setState({ usersList: newUserList });\n    }\n  };\n  handleToggle() {\n    this.handleCancel();\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.handleCancel();\n  };\n  handleChangeFilterStudent = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    if (name === 'filterLevelStudentId') {\n      if (event.target.value == 0) {\n        this.setState({\n          usersList: this.props.usersList,\n          filterClassStudentId: 0,\n          classStudentFilter: [],\n          filterGroupStudentId: 0,\n          listGroupFilter: [],\n        });\n      } else {\n        let classStudentFilter = this.props.listClassFilter.filter(\n          (element) => element.levelId == event.target.value\n        );\n        let studentByLevel = this.props.usersList.students.filter(\n          (element) => element.inforamtionsStudent.classInformation.levelId == event.target.value\n        );\n        let newUserList = { ...this.props.usersList, students: studentByLevel };\n        this.setState({\n          usersList: newUserList,\n          classStudentFilter,\n          filterClassStudentId: 0,\n          filterGroupStudentId: 0,\n          listGroupFilter: [],\n        });\n      }\n    }\n    if (name === 'filterClassStudentId') {\n      this.setState({ filterGroupStudentId: 0 });\n      if (event.target.value == 0) {\n        this.setState({ listGroupFilter: [] });\n\n        if (this.state.filterLevelStudentId == 0) {\n          this.setState({ usersList: this.props.usersList });\n        } else {\n          let studentByLevel = this.props.usersList.students.filter(\n            (element) =>\n              element.inforamtionsStudent.classInformation.levelId ==\n              this.state.filterLevelStudentId\n          );\n          let newUserList = { ...this.props.usersList, students: studentByLevel };\n          this.setState({ usersList: newUserList });\n        }\n      } else {\n        let studentByLevel = this.props.usersList.students.filter(\n          (element) => element.inforamtionsStudent.classInformation.classId == event.target.value\n        );\n        let classSelected = this.state.classStudentFilter.find(\n          (element) => element.id == event.target.value\n        );\n        let listGroupFilter;\n        if (classSelected != undefined) {\n          listGroupFilter = classSelected.groups.filter((element) => element.status);\n        }\n        let newUserList = { ...this.props.usersList, students: studentByLevel };\n        this.setState({ usersList: newUserList, listGroupFilter });\n      }\n    }\n    if (name === 'filterGroupStudentId') {\n      if (event.target.value == 0) {\n        let studentByClass = this.props.usersList.students.filter(\n          (element) =>\n            element.inforamtionsStudent.classInformation.classId == this.state.filterClassStudentId\n        );\n        let newUserList = { ...this.props.usersList, students: studentByClass };\n\n        this.setState({ usersList: newUserList });\n      } else {\n        let studentByGroup = this.props.usersList.students.filter(\n          (element) => element.inforamtionsStudent.classInformation.groupId == event.target.value\n        );\n        let newUserList = { ...this.props.usersList, students: studentByGroup };\n\n        this.setState({ usersList: newUserList });\n      }\n    }\n  };\n  render() {\n    const { usefulData } = this.props;\n\n    return (\n      <div className=\"table-responsive-material\">\n        <div>\n          <h1>\n            <b>\n              <IntlMessages id=\"users.list\" />\n            </b>{' '}\n          </h1>\n        </div>\n        <div className=\"d-flex flex-wrap flex-row bd-highlight mb-3\">\n          <div className=\"p-2 bd-highlight col-lg-2 col-md-4 col-sm-2\">\n            <TextField\n              id=\"filterRoleId\"\n              name=\"filterRoleId\"\n              select\n              value={this.state.roleIdFilter}\n              onChange={this.handleChangeRole('roleIdFilter')}\n              SelectProps={{}}\n              label={<IntlMessages id={`stuppUser.steps.role`} />}\n              InputProps={{ disableUnderline: true }}\n              margin=\"normal\"\n              fullWidth\n            >\n              <MenuItem key={0} value={0}>\n                <IntlMessages id={`permission.role.all`} />\n              </MenuItem>\n              {listRole.map((role) => (\n                <MenuItem key={role.id} value={role.id}>\n                  {role.label}\n                </MenuItem>\n              ))}\n            </TextField>\n          </div>\n          {this.state.roleIdFilter == roleIdProfessor ? (\n            <>\n              <div className=\"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\">\n                <TextField\n                  id=\"idClasse\"\n                  name=\"idClasse\"\n                  select\n                  value={this.state.filterClassProfId}\n                  onChange={this.handleChangeFilterProf('filterClassProfId')}\n                  SelectProps={{}}\n                  label={<IntlMessages id={`components.note.class`} />}\n                  InputProps={{ disableUnderline: true }}\n                  margin=\"normal\"\n                  fullWidth\n                >\n                  <MenuItem key={0} value={0}>\n                    <IntlMessages id={`extraPages.all`} />\n                  </MenuItem>\n                  {this.props.listClassFilter.map((classeItem) => (\n                    <MenuItem key={classeItem.id} value={classeItem.id}>\n                      {classeItem.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </div>\n              <div className=\"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\">\n                <TextField\n                  id=\"idSubject\"\n                  name=\"idSubject\"\n                  select\n                  value={this.state.filterSubjectProfId}\n                  onChange={this.handleChangeFilterProf('filterSubjectProfId')}\n                  SelectProps={{}}\n                  label={<IntlMessages id={`components.note.subject`} />}\n                  InputProps={{ disableUnderline: true }}\n                  margin=\"normal\"\n                  fullWidth\n                >\n                  <MenuItem key={0} value={0}>\n                    <IntlMessages id={`extraPages.all`} />\n                  </MenuItem>\n                  {this.props.subjects.map((subjectItem) => (\n                    <MenuItem key={subjectItem.id} value={subjectItem.id}>\n                      {subjectItem.name}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </div>\n            </>\n          ) : (\n            ''\n          )}\n          {this.state.roleIdFilter == roleIdStudent ? (\n            <>\n              <div className=\"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\">\n                <TextField\n                  id=\"idLevel\"\n                  name=\"idLevel\"\n                  select\n                  value={this.state.filterLevelStudentId}\n                  onChange={this.handleChangeFilterStudent('filterLevelStudentId')}\n                  SelectProps={{}}\n                  label={<IntlMessages id={`components.note.niveau`} />}\n                  InputProps={{ disableUnderline: true }}\n                  margin=\"normal\"\n                  fullWidth\n                >\n                  <MenuItem key={0} value={0}>\n                    <IntlMessages id={`extraPages.all`} />\n                  </MenuItem>\n                  {this.props.levels.map((option) => (\n                    <MenuItem key={option.id} value={option.id}>\n                      {option.name}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </div>\n              <div className=\"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\">\n                <TextField\n                  id=\"idClasse\"\n                  name=\"idClasse\"\n                  select\n                  value={this.state.filterClassStudentId}\n                  onChange={this.handleChangeFilterStudent('filterClassStudentId')}\n                  SelectProps={{}}\n                  label={<IntlMessages id={`components.note.class`} />}\n                  InputProps={{ disableUnderline: true }}\n                  margin=\"normal\"\n                  fullWidth\n                >\n                  <MenuItem key={0} value={0}>\n                    <IntlMessages id={`extraPages.all`} />\n                  </MenuItem>\n                  {this.state.classStudentFilter.map((classeItem) => (\n                    <MenuItem key={classeItem.id} value={classeItem.id}>\n                      {classeItem.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </div>\n              {/* <div className=\"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\">\n                <TextField\n                  id=\"idClasseStudent\"\n                  name=\"idClasseStudent\"\n                  select\n                  value={this.state.filterGroupStudentId}\n                  onChange={this.handleChangeFilterStudent('filterGroupStudentId')}\n                  SelectProps={{}}\n                  label={<IntlMessages id=\"stuppUser.formadd.groupe\" />}\n                  InputProps={{ disableUnderline: true }}\n                  margin=\"normal\"\n                  fullWidth\n                >\n                  <MenuItem key={0} value={0}>\n                    <IntlMessages id={`extraPages.all`} />\n                  </MenuItem>\n                  {this.state.listGroupFilter.map((groupItem) => (\n                    <MenuItem key={groupItem.id} value={groupItem.id}>\n                      {groupItem.name}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </div> */}\n            </>\n          ) : (\n            ''\n          )}\n        </div>\n        <Table className=\"default-table table-unbordered table table-sm table-hover\">\n          <TableHead className=\"th-border-b\">\n            <TableRow>\n              <TableCell align=\"left\">\n                <IntlMessages id=\"user.photo\" />\n              </TableCell>\n              {/* <TableCell align=\"left\">\n                <IntlMessages id=\"user.id\" />\n              </TableCell> */}\n              <TableCell align=\"left\">\n                <IntlMessages id=\"user.name\" />\n              </TableCell>\n              <TableCell align=\"left\">\n                <IntlMessages id=\"user.last.name\" />\n              </TableCell>\n\n              {this.state.roleIdFilter == 0 ? (\n                <TableCell align=\"left\">\n                  <IntlMessages id=\"role.user\" />\n                </TableCell>\n              ) : null}\n              {/* ------------     affichage classe et matiére pour prof -------------------------------------------*/}\n\n              {this.state.roleIdFilter == roleIdProfessor ? (\n                <TableCell align=\"left\">\n                  <IntlMessages id={`components.note.subject`} />\n                </TableCell>\n              ) : null}\n              {this.state.roleIdFilter == roleIdProfessor ? (\n                <TableCell align=\"left\">\n                  <IntlMessages id={`components.note.class`} />\n                </TableCell>\n              ) : null}\n              {/* ------------     affichage classe et parent pour student -------------------------------------------*/}\n              {this.state.roleIdFilter == roleIdStudent ? (\n                <TableCell align=\"left\">\n                  <IntlMessages id={`components.note.class`} />\n                </TableCell>\n              ) : null}\n              {this.state.roleIdFilter == roleIdStudent ? (\n                <TableCell align=\"left\">Parent</TableCell>\n              ) : null}\n              {/* ------------     affichage enfant et classe pour parent -------------------------------------------*/}\n              {this.state.roleIdFilter == roleIdParent ? (\n                <TableCell align=\"left\">\n                  <TableCell align=\"left\">enfant </TableCell>\n                </TableCell>\n              ) : null}\n              {this.state.roleIdFilter == roleIdParent ? (\n                <TableCell align=\"left\">\n                  {' '}\n                  <IntlMessages id={`components.note.class`} />\n                </TableCell>\n              ) : null}\n              {/* ------------     éliminer colonne email  -------------------------------------------*/}\n\n              {this.state.roleIdFilter == roleIdAdmin ||\n              this.state.roleIdFilter == roleIdDirector ||\n              this.state.roleIdFilter == roleIdSupervisor ||\n              this.state.roleIdFilter == 0 ? (\n                <TableCell>\n                  <IntlMessages id=\"user.mail\" />\n                </TableCell>\n              ) : null}\n\n              <TableCell>\n                <IntlMessages id=\"user.phone.number\" />\n              </TableCell>\n              <TableCell align=\"center\">\n                <IntlMessages id=\"user.options\" />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.roleIdFilter == roleIdAdmin || this.state.roleIdFilter == 0 ? (\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-admin',\n                      permissionList: this.props.permissionList,\n                    }}\n                    yes={() =>\n                      this.state.usersList.admins.map((element) => {\n                        return (\n                          <UsersListItem\n                            user={element}\n                            handleEdit={this.handleEdit}\n                            handleDelete={this.handleDelete}\n                            archived={false}\n                            roleIdFilter={this.state.roleIdFilter}\n                          />\n                        );\n                      })\n                    }\n                  />\n                )}\n              </RoleContext.Consumer>\n            ) : (\n              ''\n            )}\n            {this.state.roleIdFilter == roleIdSupervisor || this.state.roleIdFilter == 0 ? (\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-school-life',\n                      permissionList: this.props.permissionList,\n                    }}\n                    yes={() =>\n                      this.state.usersList.supervisors.map((element) => {\n                        return (\n                          <UsersListItem\n                            user={element}\n                            handleEdit={this.handleEdit}\n                            handleDelete={this.handleDelete}\n                            archived={false}\n                            roleIdFilter={this.state.roleIdFilter}\n                          />\n                        );\n                      })\n                    }\n                  />\n                )}\n              </RoleContext.Consumer>\n            ) : (\n              ''\n            )}\n            {this.state.roleIdFilter == roleIdDirector || this.state.roleIdFilter == 0 ? (\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-direction-membre',\n                      permissionList: this.props.permissionList,\n                    }}\n                    yes={() =>\n                      this.state.usersList.directors.map((element) => {\n                        return (\n                          <UsersListItem\n                            user={element}\n                            handleEdit={this.handleEdit}\n                            handleDelete={this.handleDelete}\n                            archived={false}\n                            roleIdFilter={this.state.roleIdFilter}\n                          />\n                        );\n                      })\n                    }\n                  />\n                )}\n              </RoleContext.Consumer>\n            ) : (\n              ''\n            )}\n            {this.state.roleIdFilter == roleIdProfessor || this.state.roleIdFilter == 0 ? (\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-prof',\n                      permissionList: this.props.permissionList,\n                    }}\n                    yes={() =>\n                      this.state.usersList.professors.map((element) => {\n                        return (\n                          <UsersListItem\n                            user={element}\n                            handleEdit={this.handleEdit}\n                            handleDelete={this.handleDelete}\n                            archived={false}\n                            roleIdFilter={this.state.roleIdFilter}\n                          />\n                        );\n                      })\n                    }\n                  />\n                )}\n              </RoleContext.Consumer>\n            ) : (\n              ''\n            )}\n            {this.state.roleIdFilter == roleIdParent || this.state.roleIdFilter == 0 ? (\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-parent',\n                      permissionList: this.props.permissionList,\n                    }}\n                    yes={() =>\n                      this.state.usersList.parents.map((element) => {\n                        return (\n                          <UsersListItem\n                            roleIdFilter={this.state.roleIdFilter}\n                            user={element}\n                            handleEdit={this.handleEdit}\n                            handleDelete={this.handleDelete}\n                            archived={false}\n                          />\n                        );\n                      })\n                    }\n                  />\n                )}\n              </RoleContext.Consumer>\n            ) : (\n              ''\n            )}\n            {this.state.roleIdFilter == roleIdStudent || this.state.roleIdFilter == 0 ? (\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-student',\n                      permissionList: this.props.permissionList,\n                    }}\n                    yes={() =>\n                      this.state.usersList.students.map((element) => {\n                        return (\n                          <UsersListItem\n                            roleIdFilter={this.state.roleIdFilter}\n                            user={element}\n                            handleEdit={this.handleEdit}\n                            handleDelete={this.handleDelete}\n                            archived={false}\n                          />\n                        );\n                      })\n                    }\n                  />\n                )}\n              </RoleContext.Consumer>\n            ) : (\n              ''\n            )}\n          </TableBody>\n        </Table>\n        {this.state.openEdit ? (\n          <EditUsers\n            usefulData={usefulData}\n            schoolSession={this.state.item}\n            closeModal={this.handleCancel}\n            values={this.state}\n            handleAnnule={this.handleAnnule}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            handleToggle={this.handleToggle}\n            handleChangeDateStart={this.handleChangeDateStart}\n            handleChangeDateEnd={this.handleChangeDateEnd}\n            handleChangeStartDate={this.handleChangeStartDate}\n            handleChangeEndDate={this.handleChangeEndDate}\n            educationTypes={this.props.educationTypes}\n            handleChangeEducationType={this.handleChangeEducationType}\n          />\n        ) : (\n          ''\n        )}\n\n        {this.state.deleteIsopen === true ? (\n          <DeleteUsersItem\n            handleDeleteSchoolSession={this.handleDeleteSchoolSession}\n            deleteItem={this.state.deleteItem}\n            handleCancel={this.handleCancel}\n            deleteIsopen={this.state.deleteIsopen}\n          />\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    subjects: state.subject.subjects,\n    levels: state.levelsReducer.levels,\n    courseAssignment: state.AssignementReducer.courseAssignment,\n  };\n}\n\nexport default connect(mapStateToProps, {})(UsersList);\n"]},"metadata":{},"sourceType":"module"}