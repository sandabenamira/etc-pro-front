{"ast":null,"code":"import { SHOW_SUCCESS_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, GET_GROUPS, ADD_GROUPS, EDIT_GROUPS, DELETE_GROUPS, ARCHIVED_GET_GROUPS } from \"../constants/ActionTypes\";\nconst initialState = {\n  groupsList: [],\n  archivedgroupsList: []\n};\nexport default function (state = initialState, action) {\n  if (action.type === GET_GROUPS) {\n    return Object.assign({}, state, {\n      groupsList: action.payload\n    });\n  }\n\n  if (action.type === ARCHIVED_GET_GROUPS) {\n    return Object.assign({}, state, {\n      archivedgroupsList: action.payload\n    });\n  }\n\n  if (action.type === ADD_GROUPS) {\n    return Object.assign({}, state, {\n      groupsList: state.groupsList.concat(action.payload)\n    });\n  }\n\n  if (action.type === EDIT_GROUPS) {\n    return Object.assign({}, state, {\n      groupsList: [...state.groupsList.filter(element => element.id !== action.payload.id), action.payload]\n    });\n  }\n\n  if (action.type === DELETE_GROUPS) {\n    return Object.assign({}, state, {\n      groupsList: [...state.groupsList.filter(element => element.id !== action.payload.id)],\n      archivedgroupsList: state.archivedgroupsList.concat(action.payload)\n    });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/reducers/GroupsReducer.js"],"names":["SHOW_SUCCESS_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","GET_GROUPS","ADD_GROUPS","EDIT_GROUPS","DELETE_GROUPS","ARCHIVED_GET_GROUPS","initialState","groupsList","archivedgroupsList","state","action","type","Object","assign","payload","concat","filter","element","id"],"mappings":"AAAA,SACIA,oBADJ,EAEIC,oBAFJ,EAGIC,kBAHJ,EAIIC,kBAJJ,EAKIC,UALJ,EAMIC,UANJ,EAOIC,WAPJ,EAQIC,aARJ,EASIC,mBATJ,QAUS,0BAVT;AAYE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,kBAAkB,EAAE;AAFD,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgBV,UAApB,EAAgC;AAC9B,WAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,UAAU,EAAEG,MAAM,CAACI;AADW,KAAzB,CAAP;AAGD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBN,mBAApB,EAAyC;AACvC,WAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BD,MAAAA,kBAAkB,EAAEE,MAAM,CAACI;AADG,KAAzB,CAAP;AAGD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBT,UAApB,EAAgC;AAC9B,WAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,CAAiBQ,MAAjB,CAAwBL,MAAM,CAACI,OAA/B;AADkB,KAAzB,CAAP;AAGD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBR,WAApB,EAAiC;AAC/B,WAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,UAAU,EAAE,CACV,GAAGE,KAAK,CAACF,UAAN,CAAiBS,MAAjB,CAAyBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAAnE,CADO,EAEVR,MAAM,CAACI,OAFG;AADkB,KAAzB,CAAP;AAMD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBP,aAApB,EAAmC;AACjC,WAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,UAAU,EAAE,CACV,GAAGE,KAAK,CAACF,UAAN,CAAiBS,MAAjB,CAAyBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAAnE,CADO,CADkB;AAI9BV,MAAAA,kBAAkB,EAAEC,KAAK,CAACD,kBAAN,CAAyBO,MAAzB,CAAgCL,MAAM,CAACI,OAAvC;AAJU,KAAzB,CAAP;AAMD;;AAED,SAAOL,KAAP;AACD","sourcesContent":["import {\n    SHOW_SUCCESS_MESSAGE,\n    HIDE_SUCCESS_MESSAGE,\n    SHOW_ERROR_MESSAGE,\n    HIDE_ERROR_MESSAGE,\n    GET_GROUPS,\n    ADD_GROUPS,\n    EDIT_GROUPS,\n    DELETE_GROUPS,\n    ARCHIVED_GET_GROUPS,\n  } from \"../constants/ActionTypes\";\n  \n  const initialState = {\n    groupsList: [],\n    archivedgroupsList: [],\n   \n  };\n  \n  export default function(state = initialState, action) {\n    if (action.type === GET_GROUPS) {\n      return Object.assign({}, state, {\n        groupsList: action.payload,\n      });\n    }\n    if (action.type === ARCHIVED_GET_GROUPS) {\n      return Object.assign({}, state, {\n        archivedgroupsList: action.payload,\n      });\n    }\n  \n    if (action.type === ADD_GROUPS) {\n      return Object.assign({}, state, {\n        groupsList: state.groupsList.concat(action.payload),\n      });\n    }\n  \n    if (action.type === EDIT_GROUPS) {\n      return Object.assign({}, state, {\n        groupsList: [\n          ...state.groupsList.filter((element) => element.id !== action.payload.id),\n          action.payload,\n        ],\n      });\n    }\n  \n    if (action.type === DELETE_GROUPS) {\n      return Object.assign({}, state, {\n        groupsList: [\n          ...state.groupsList.filter((element) => element.id !== action.payload.id),\n        ],\n        archivedgroupsList: state.archivedgroupsList.concat(action.payload),\n      });\n    }\n  \n    return state;\n  }\n  "]},"metadata":{},"sourceType":"module"}