{"ast":null,"code":"import { callService } from '../_services/call.service';\nimport _ from 'lodash';\nimport { GET_PERMISSION_SETTING, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE, GET_USER_PERMISSION } from '../constants/ActionTypes';\nexport const getPermissionSetting = estabId => {\n  let id = parseInt(estabId, 10);\n  return dispatch => {\n    let apiEndpoint = `/establishments/${id}/permission?access_token=${localStorage.token}`;\n    callService.get(apiEndpoint).then(response => {\n      if (response) {\n        dispatch({\n          type: GET_PERMISSION_SETTING,\n          payload: response.data.permissionList\n        });\n      }\n    });\n  };\n};\nexport const getUserPermissions = (estabId, roleId) => {\n  return dispatch => {\n    let apiEndpoint = `/etab_role_permissions?access_token=${localStorage.token}&filter[where][and][0][fk_id_etab]=` + estabId + `&filter[where][and][1][fk_id_role]=` + roleId + `&filter[include]=permission`;\n    callService.get(apiEndpoint).then(response => {\n      if (response) {\n        console.log(response.data, 'userrrrr permission');\n        dispatch({\n          type: GET_USER_PERMISSION,\n          payload: response.data\n        });\n      }\n    });\n  };\n};\nexport const applyPermissionSetting = (data, establishmentId, roleId) => {\n  let permissionList = {\n    permissionRoleEtab: data\n  };\n  return dispatch => {\n    let apiEndpoint = `/permissions/attributePermission?access_token=${localStorage.token}`;\n    callService.put(apiEndpoint, permissionList).then(response => {\n      if (response) {\n        dispatch(getUserPermissions(establishmentId, roleId));\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"L'affectation est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de l'affectation merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/PermissionAction.js"],"names":["callService","_","GET_PERMISSION_SETTING","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","GET_USER_PERMISSION","getPermissionSetting","estabId","id","parseInt","dispatch","apiEndpoint","localStorage","token","get","then","response","type","payload","data","permissionList","getUserPermissions","roleId","console","log","applyPermissionSetting","establishmentId","permissionRoleEtab","put","setTimeout"],"mappings":"AAAA,SAASA,WAAT,QAA4B,2BAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SACEC,sBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,mBANF,QAOO,0BAPP;AASA,OAAO,MAAMC,oBAAoB,GAAIC,OAAD,IAAa;AAC/C,MAAIC,EAAE,GAAGC,QAAQ,CAACF,OAAD,EAAU,EAAV,CAAjB;AACA,SAAQG,QAAD,IAAc;AACnB,QAAIC,WAAW,GAAI,mBAAkBH,EAAG,4BAA2BI,YAAY,CAACC,KAAM,EAAtF;AAEAf,IAAAA,WAAW,CAACgB,GAAZ,CAAgBH,WAAhB,EAA6BI,IAA7B,CAAmCC,QAAD,IAAc;AAC9C,UAAIA,QAAJ,EAAc;AACZN,QAAAA,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAEjB,sBAAR;AAAgCkB,UAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAAvD,SAAD,CAAR;AACD;AACF,KAJD;AAKD,GARD;AASD,CAXM;AAYP,OAAO,MAAMC,kBAAkB,GAAG,CAACd,OAAD,EAAUe,MAAV,KAAqB;AACrD,SAAQZ,QAAD,IAAc;AACnB,QAAIC,WAAW,GACZ,uCAAsCC,YAAY,CAACC,KAAM,qCAA1D,GACAN,OADA,GAEC,qCAFD,GAGAe,MAHA,GAIC,6BALH;AAOAxB,IAAAA,WAAW,CAACgB,GAAZ,CAAgBH,WAAhB,EAA6BI,IAA7B,CAAmCC,QAAD,IAAc;AAC9C,UAAIA,QAAJ,EAAc;AACZO,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACG,IAArB,EAA2B,qBAA3B;AACAT,QAAAA,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAEZ,mBAAR;AAA6Ba,UAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA/C,SAAD,CAAR;AACD;AACF,KALD;AAMD,GAdD;AAeD,CAhBM;AAiBP,OAAO,MAAMM,sBAAsB,GAAG,CAACN,IAAD,EAAOO,eAAP,EAAwBJ,MAAxB,KAAmC;AACvE,MAAIF,cAAc,GAAG;AAAEO,IAAAA,kBAAkB,EAAER;AAAtB,GAArB;AACA,SAAQT,QAAD,IAAc;AACnB,QAAIC,WAAW,GAAI,iDAAgDC,YAAY,CAACC,KAAM,EAAtF;AAEAf,IAAAA,WAAW,CAAC8B,GAAZ,CAAgBjB,WAAhB,EAA6BS,cAA7B,EAA6CL,IAA7C,CAAmDC,QAAD,IAAc;AAC9D,UAAIA,QAAJ,EAAc;AACZN,QAAAA,QAAQ,CAACW,kBAAkB,CAACK,eAAD,EAAkBJ,MAAlB,CAAnB,CAAR;AACAZ,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAEb,oBADC;AAEPc,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAIAW,QAAAA,UAAU,CAAC,MAAM;AACfnB,UAAAA,QAAQ,CAAC;AAAEO,YAAAA,IAAI,EAAEd;AAAR,WAAD,CAAR;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OATD,MASO;AACLO,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAEhB,kBADC;AAEPiB,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAIAW,QAAAA,UAAU,CAAC,MAAM;AACfnB,UAAAA,QAAQ,CAAC;AAAEO,YAAAA,IAAI,EAAEf;AAAR,WAAD,CAAR;AACD,SAFS,EAEP,IAFO,CAAV;AAGD;AACF,KAnBD;AAoBD,GAvBD;AAwBD,CA1BM","sourcesContent":["import { callService } from '../_services/call.service';\nimport _ from 'lodash';\nimport {\n  GET_PERMISSION_SETTING,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n  GET_USER_PERMISSION,\n} from '../constants/ActionTypes';\n\nexport const getPermissionSetting = (estabId) => {\n  let id = parseInt(estabId, 10);\n  return (dispatch) => {\n    let apiEndpoint = `/establishments/${id}/permission?access_token=${localStorage.token}`;\n\n    callService.get(apiEndpoint).then((response) => {\n      if (response) {\n        dispatch({ type: GET_PERMISSION_SETTING, payload: response.data.permissionList });\n      }\n    });\n  };\n};\nexport const getUserPermissions = (estabId, roleId) => {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/etab_role_permissions?access_token=${localStorage.token}&filter[where][and][0][fk_id_etab]=` +\n      estabId +\n      `&filter[where][and][1][fk_id_role]=` +\n      roleId +\n      `&filter[include]=permission`;\n\n    callService.get(apiEndpoint).then((response) => {\n      if (response) {\n        console.log(response.data, 'userrrrr permission');\n        dispatch({ type: GET_USER_PERMISSION, payload: response.data });\n      }\n    });\n  };\n};\nexport const applyPermissionSetting = (data, establishmentId, roleId) => {\n  let permissionList = { permissionRoleEtab: data };\n  return (dispatch) => {\n    let apiEndpoint = `/permissions/attributePermission?access_token=${localStorage.token}`;\n\n    callService.put(apiEndpoint, permissionList).then((response) => {\n      if (response) {\n        dispatch(getUserPermissions(establishmentId, roleId));\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"L'affectation est effectuée avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de l'affectation merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}