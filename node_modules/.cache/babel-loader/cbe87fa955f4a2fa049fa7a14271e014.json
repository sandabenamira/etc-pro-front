{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/LevelTest/Tests/LevelTestStudent.js\";\nimport React from \"react\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport CardBox from \"../../../../components/CardBox/index\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport TestStudentItem from \"./TestStudentItem\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport _ from \"lodash\";\nconst roleIdParent = 4;\nconst roleIdStudent = 5;\n\nclass levelTestStudent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeSubject = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      let levelTests = this.props.levelTests;\n\n      if (this.state.passed == \"all\") {\n        if (event.target.value > 0) {\n          levelTests = this.props.levelTests.filter(element => element.tests.id_subject == event.target.value);\n        } else {\n          levelTests = this.props.levelTests;\n        }\n      } else if (this.state.passed) {\n        if (event.target.value > 0) {\n          levelTests = this.props.levelTests.filter(element => element.passed == this.state.passed && element.tests.id_subject == event.target.value);\n        } else {\n          levelTests = this.props.levelTests.filter(element => element.passed == this.state.passed);\n        }\n      } else {\n        if (event.target.value > 0) {\n          levelTests = this.props.levelTests.filter(element => element.passed == undefined && element.tests.id_subject == event.target.value);\n        } else {\n          levelTests = this.props.levelTests.filter(element => element.passed == undefined);\n        }\n      }\n\n      this.setState({\n        levelTests\n      });\n    };\n\n    this.handleChangeStudent = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      let levelTests;\n      let levelTestsFiltred = this.props.levelTests.filter(element => element.studentData.id == event.target.value);\n\n      if (this.state.passed === true) {\n        levelTests = levelTestsFiltred.filter(element => element.passed == this.state.passed);\n      } else if (!this.state.passed) {\n        levelTests = levelTestsFiltred.filter(element => element.passed == undefined);\n      } else {\n        levelTests = levelTestsFiltred;\n      }\n\n      this.setState({\n        levelTests\n      });\n    };\n\n    this.handleChangeFilterStatus = name => event => {\n      let levelTests = [];\n\n      if (this.props.userProfile.role_id == roleIdStudent) {\n        if (this.state.subject_id == 0) {\n          if (event.target.value === true) {\n            levelTests = this.props.levelTests.filter(element => element.passed == event.target.value);\n            this.setState({\n              [name]: event.target.value,\n              levelTests\n            });\n          } else if (!event.target.value) {\n            levelTests = this.props.levelTests.filter(element => element.passed == undefined);\n            this.setState({\n              [name]: event.target.value,\n              levelTests\n            });\n          } else if (event.target.value == \"all\") {\n            levelTests = this.props.levelTests;\n            this.setState({\n              [name]: \"all\",\n              levelTests\n            });\n          }\n        } else {\n          if (event.target.value === true) {\n            levelTests = this.props.levelTests.filter(element => element.passed == event.target.value && element.tests.id_subject == this.state.subject_id);\n            this.setState({\n              [name]: event.target.value,\n              levelTests\n            });\n          } else if (!event.target.value) {\n            levelTests = this.props.levelTests.filter(element => element.passed == undefined && element.tests.id_subject == this.state.subject_id);\n            this.setState({\n              [name]: event.target.value,\n              levelTests\n            });\n          } else if (event.target.value == \"all\") {\n            levelTests = this.props.levelTests.filter(element => element.tests.id_subject == this.state.subject_id);\n            this.setState({\n              [name]: \"all\",\n              levelTests\n            });\n          }\n        }\n      } else {\n        if (event.target.value === true) {\n          levelTests = this.props.levelTests.filter(element => element.passed == event.target.value && element.studentData.id == this.state.student_id);\n          this.setState({\n            [name]: event.target.value,\n            levelTests\n          });\n        } else if (!event.target.value) {\n          levelTests = this.props.levelTests.filter(element => element.passed == undefined && element.studentData.id == this.state.student_id);\n          this.setState({\n            [name]: event.target.value,\n            levelTests\n          });\n        } else if (event.target.value == \"all\") {\n          levelTests = this.props.levelTests.filter(element => element.studentData.id == this.state.student_id);\n          this.setState({\n            [name]: \"all\",\n            levelTests\n          });\n        }\n      }\n    };\n\n    this.state = {\n      open: true,\n      levelTests: [],\n      student_id: \"\",\n      subject_id: 0,\n      passed: \"all\",\n      studentLevels: []\n    };\n    this.handleChangeStudent = this.handleChangeStudent.bind(this);\n    this.handleChangeFilterStatus = this.handleChangeFilterStatus.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n  }\n\n  componentDidMount() {\n    let studentLevels = this.props.levelTests.map(element => element.tests.subjects);\n\n    let studentLevelsUniq = _.uniqBy(studentLevels, \"id\");\n\n    this.setState({\n      levelTests: this.props.levelTests,\n      studentLevels: studentLevelsUniq\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.userProfile.role_id == roleIdParent) {\n      if (prevProps.listStudentOfParent !== this.props.listStudentOfParent || prevProps.levelTests !== this.props.levelTests) {\n        let firstStudent = this.props.listStudentOfParent[0].id;\n        let levelTests = this.props.levelTests.filter(element => element.studentData.id == firstStudent);\n        this.setState({\n          student_id: firstStudent,\n          levelTests\n        });\n      }\n    } else {\n      if (prevProps.levelTests !== this.props.levelTests) {\n        let studentLevels = this.props.levelTests.map(element => element.tests.subjects);\n\n        let studentLevelsUniq = _.uniqBy(studentLevels, \"id\");\n\n        this.setState({\n          studentLevels: studentLevelsUniq,\n          levelTests: this.props.levelTests\n        });\n      }\n    }\n  }\n\n  render() {\n    let levelTests = this.state.levelTests;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.successStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, \" \", this.props.message, \" \")) : \"\", /*#__PURE__*/React.createElement(CardBox, {\n      CardBox: true,\n      styleName: \"col-lg-12 text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row animated slideInUpTiny animation-duration-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex justify-content-start align-items-center col-md-12\",\n      style: {\n        paddingBottom: \"2%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12  d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 text-left \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, this.props.userProfile.role_id == roleIdParent ? /*#__PURE__*/React.createElement(TextField, {\n      className: \"mt-0\",\n      required: true,\n      name: \"student\",\n      id: \"student\",\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"level.test.StudentName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 30\n        }\n      }),\n      value: this.state.student_id,\n      onChange: this.handleChangeStudent(\"student_id\"),\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, this.props.listStudentOfParent.map(student => {\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: student.id,\n        value: student.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 27\n        }\n      }, student.user.name);\n    })) : \"\", this.props.userProfile.role_id == roleIdStudent ? /*#__PURE__*/React.createElement(TextField, {\n      className: \"mt-0\",\n      required: true,\n      name: \"subject\",\n      id: \"subject\",\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.note.subject\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 30\n        }\n      }),\n      value: this.state.subject_id,\n      onChange: this.handleChangeSubject(\"subject_id\"),\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"level.test.all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 25\n      }\n    })), this.state.studentLevels.map(subject => {\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: subject.id,\n        value: subject.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 27\n        }\n      }, subject.name_FR);\n    })) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 text-left \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: \"mt-0\",\n      required: true,\n      name: \"passed\",\n      id: \"passed\",\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"level.test.state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 28\n        }\n      }),\n      margin: \"normal\",\n      fullWidth: true,\n      onChange: this.handleChangeFilterStatus(\"passed\"),\n      value: this.state.passed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: \"all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"level.test.all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(MenuItem, {\n      key: 1,\n      value: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"level.test.Passed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(MenuItem, {\n      key: 2,\n      value: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"level.test.NoPassed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 23\n      }\n    })))))), levelTests.map((element, index) => {\n      return /*#__PURE__*/React.createElement(TestStudentItem, {\n        key: index,\n        test: element.tests,\n        passed_date: element.passed_date,\n        score: element.score,\n        studentData: element.studentData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      });\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    settings: state.settings.locale\n  };\n}\n\nexport default connect(mapStateToProps)(levelTestStudent);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/LevelTest/Tests/LevelTestStudent.js"],"names":["React","IntlMessages","CardBox","TextField","connect","TestStudentItem","MenuItem","UncontrolledAlert","_","roleIdParent","roleIdStudent","levelTestStudent","Component","constructor","props","handleChangeSubject","name","event","setState","target","value","levelTests","state","passed","filter","element","tests","id_subject","undefined","handleChangeStudent","levelTestsFiltred","studentData","id","handleChangeFilterStatus","userProfile","role_id","subject_id","student_id","open","studentLevels","bind","componentDidMount","map","subjects","studentLevelsUniq","uniqBy","componentDidUpdate","prevProps","prevState","listStudentOfParent","firstStudent","render","successStatus","message","paddingBottom","student","user","subject","name_FR","index","passed_date","score","mapStateToProps","auth","alert","success","errorStatus","error","settings","locale"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport CardBox from \"../../../../components/CardBox/index\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport TestStudentItem from \"./TestStudentItem\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport _ from \"lodash\";\n\nconst roleIdParent = 4;\nconst roleIdStudent = 5;\nclass levelTestStudent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: true,\n      levelTests: [],\n      student_id: \"\",\n      subject_id: 0,\n      passed: \"all\",\n      studentLevels: [],\n    };\n    this.handleChangeStudent = this.handleChangeStudent.bind(this);\n    this.handleChangeFilterStatus = this.handleChangeFilterStatus.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n  }\n  handleChangeSubject = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    let levelTests = this.props.levelTests;\n    if (this.state.passed == \"all\") {\n      if (event.target.value > 0) {\n        levelTests = this.props.levelTests.filter(\n          (element) => element.tests.id_subject == event.target.value\n        );\n      } else {\n        levelTests = this.props.levelTests;\n      }\n    } else if (this.state.passed) {\n      if (event.target.value > 0) {\n        levelTests = this.props.levelTests.filter(\n          (element) =>\n            element.passed == this.state.passed &&\n            element.tests.id_subject == event.target.value\n        );\n      } else {\n        levelTests = this.props.levelTests.filter(\n          (element) => element.passed == this.state.passed\n        );\n      }\n    } else {\n      if (event.target.value > 0) {\n        levelTests = this.props.levelTests.filter(\n          (element) =>\n            element.passed == undefined &&\n            element.tests.id_subject == event.target.value\n        );\n      } else {\n        levelTests = this.props.levelTests.filter(\n          (element) => element.passed == undefined\n        );\n      }\n    }\n    this.setState({ levelTests });\n  };\n  handleChangeStudent = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    let levelTests;\n    let levelTestsFiltred = this.props.levelTests.filter(\n      (element) => element.studentData.id == event.target.value\n    );\n    if (this.state.passed === true) {\n      levelTests = levelTestsFiltred.filter(\n        (element) => element.passed == this.state.passed\n      );\n    } else if (!this.state.passed) {\n      levelTests = levelTestsFiltred.filter(\n        (element) => element.passed == undefined\n      );\n    } else {\n      levelTests = levelTestsFiltred;\n    }\n\n    this.setState({ levelTests });\n  };\n  handleChangeFilterStatus = (name) => (event) => {\n    let levelTests = [];\n    if (this.props.userProfile.role_id == roleIdStudent) {\n      if (this.state.subject_id == 0) {\n        if (event.target.value === true) {\n          levelTests = this.props.levelTests.filter(\n            (element) => element.passed == event.target.value\n          );\n          this.setState({ [name]: event.target.value, levelTests });\n        } else if (!event.target.value) {\n          levelTests = this.props.levelTests.filter(\n            (element) => element.passed == undefined\n          );\n          this.setState({ [name]: event.target.value, levelTests });\n        } else if (event.target.value == \"all\") {\n          levelTests = this.props.levelTests;\n          this.setState({ [name]: \"all\", levelTests });\n        }\n      } else {\n        if (event.target.value === true) {\n          levelTests = this.props.levelTests.filter(\n            (element) =>\n              element.passed == event.target.value &&\n              element.tests.id_subject == this.state.subject_id\n          );\n          this.setState({ [name]: event.target.value, levelTests });\n        } else if (!event.target.value) {\n          levelTests = this.props.levelTests.filter(\n            (element) =>\n              element.passed == undefined &&\n              element.tests.id_subject == this.state.subject_id\n          );\n          this.setState({ [name]: event.target.value, levelTests });\n        } else if (event.target.value == \"all\") {\n          levelTests = this.props.levelTests.filter(\n            (element) => element.tests.id_subject == this.state.subject_id\n          );\n          this.setState({ [name]: \"all\", levelTests });\n        }\n      }\n    } else {\n      if (event.target.value === true) {\n        levelTests = this.props.levelTests.filter(\n          (element) =>\n            element.passed == event.target.value &&\n            element.studentData.id == this.state.student_id\n        );\n        this.setState({ [name]: event.target.value, levelTests });\n      } else if (!event.target.value) {\n        levelTests = this.props.levelTests.filter(\n          (element) =>\n            element.passed == undefined &&\n            element.studentData.id == this.state.student_id\n        );\n        this.setState({ [name]: event.target.value, levelTests });\n      } else if (event.target.value == \"all\") {\n        levelTests = this.props.levelTests.filter(\n          (element) => element.studentData.id == this.state.student_id\n        );\n        this.setState({ [name]: \"all\", levelTests });\n      }\n    }\n  };\n  componentDidMount() {\n    let studentLevels = this.props.levelTests.map(\n      (element) => element.tests.subjects\n    );\n    let studentLevelsUniq = _.uniqBy(studentLevels, \"id\");\n    this.setState({\n      levelTests: this.props.levelTests,\n      studentLevels: studentLevelsUniq,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.userProfile.role_id == roleIdParent) {\n      if (\n        prevProps.listStudentOfParent !== this.props.listStudentOfParent ||\n        prevProps.levelTests !== this.props.levelTests\n      ) {\n        let firstStudent = this.props.listStudentOfParent[0].id;\n        let levelTests = this.props.levelTests.filter(\n          (element) => element.studentData.id == firstStudent\n        );\n        this.setState({\n          student_id: firstStudent,\n          levelTests,\n        });\n      }\n    } else {\n      if (prevProps.levelTests !== this.props.levelTests) {\n        let studentLevels = this.props.levelTests.map(\n          (element) => element.tests.subjects\n        );\n        let studentLevelsUniq = _.uniqBy(studentLevels, \"id\");\n\n        this.setState({\n          studentLevels: studentLevelsUniq,\n          levelTests: this.props.levelTests,\n        });\n      }\n    }\n  }\n\n  render() {\n    let levelTests = this.state.levelTests;\n\n    return (\n      <>\n        {this.props.successStatus ? (\n          <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\"> {this.props.message} </span>\n          </UncontrolledAlert>\n        ) : (\n          \"\"\n        )}\n        <CardBox CardBox styleName=\"col-lg-12 text-primary\">\n          <div className=\"row animated slideInUpTiny animation-duration-3\">\n            <div\n              className=\"row d-flex justify-content-start align-items-center col-md-12\"\n              style={{ paddingBottom: \"2%\" }}\n            >\n              <div className=\"col-md-12  d-flex justify-content-center\">\n                <div className=\"col-md-2 text-left \">\n                  {this.props.userProfile.role_id == roleIdParent ? (\n                    <TextField\n                      className=\"mt-0\"\n                      required\n                      name=\"student\"\n                      id=\"student\"\n                      select\n                      label={<IntlMessages id=\"level.test.StudentName\" />}\n                      value={this.state.student_id}\n                      onChange={this.handleChangeStudent(\"student_id\")}\n                      margin=\"normal\"\n                      fullWidth\n                    >\n                      {this.props.listStudentOfParent.map((student) => {\n                        return (\n                          <MenuItem key={student.id} value={student.id}>\n                            {student.user.name}\n                          </MenuItem>\n                        );\n                      })}\n                    </TextField>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.userProfile.role_id == roleIdStudent ? (\n                    <TextField\n                      className=\"mt-0\"\n                      required\n                      name=\"subject\"\n                      id=\"subject\"\n                      select\n                      label={<IntlMessages id=\"components.note.subject\" />}\n                      value={this.state.subject_id}\n                      onChange={this.handleChangeSubject(\"subject_id\")}\n                      margin=\"normal\"\n                      fullWidth\n                    >\n                      <MenuItem key={0} value={0}>\n                        <IntlMessages id=\"level.test.all\" />\n                      </MenuItem>\n                      {this.state.studentLevels.map((subject) => {\n                        return (\n                          <MenuItem key={subject.id} value={subject.id}>\n                            {subject.name_FR}\n                          </MenuItem>\n                        );\n                      })}\n                    </TextField>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n                <div className=\"col-md-2 text-left \">\n                  <TextField\n                    className=\"mt-0\"\n                    required\n                    name=\"passed\"\n                    id=\"passed\"\n                    select\n                    label={<IntlMessages id=\"level.test.state\" />}\n                    margin=\"normal\"\n                    fullWidth\n                    onChange={this.handleChangeFilterStatus(\"passed\")}\n                    value={this.state.passed}\n                  >\n                    <MenuItem key={0} value={\"all\"}>\n                      <IntlMessages id=\"level.test.all\" />\n                    </MenuItem>\n                    <MenuItem key={1} value={true}>\n                      <IntlMessages id=\"level.test.Passed\" />\n                    </MenuItem>\n                    <MenuItem key={2} value={false}>\n                      <IntlMessages id=\"level.test.NoPassed\" />\n                    </MenuItem>\n                  </TextField>\n                </div>\n              </div>\n            </div>\n            {levelTests.map((element, index) => {\n              return (\n                <TestStudentItem\n                  key={index}\n                  test={element.tests}\n                  passed_date={element.passed_date}\n                  score={element.score}\n                  studentData={element.studentData}\n                />\n              );\n            })}\n          </div>\n        </CardBox>\n      </>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    settings: state.settings.locale,\n  };\n}\n\nexport default connect(mapStateToProps)(levelTestStudent);\n"]},"metadata":{},"sourceType":"module"}