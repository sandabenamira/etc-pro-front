{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/VirtualClasses/VirtualClasses.js\";\nimport React from 'react';\nimport ContainerHeader from '../../../../../components/ContainerHeader/index';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport AddVirtualClass from './AddVirtualClass';\nimport VirtualClassList from './VirtualClassList';\nimport { addClassVirtual } from '../../../../../actions/VirtualClassAction';\nimport { getClassesVirtual } from '../../../../../actions/VirtualClassAction';\nimport { getClassVirtualByEstablishmentId } from '../../../../../actions/VirtualClassAction';\nimport { connect } from 'react-redux';\nimport { getSectionFromLevel } from '../../../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from '../../../../../actions/classLevelAction';\nimport axios from 'axios';\nimport baseUrl from '../../../../../config/config';\nimport { getSections } from '../../../../../actions/sectionAction';\nimport { getLevels } from '../../../../../actions/classLevelAction';\nimport { getClassesByEstablishmentId } from '../../../../../actions/classeAction';\n\nclass VirtualClasses extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addVirtualClass = () => {\n      var data = {};\n      data.object = this.state.class_object;\n      data.class_id = this.state.class_id;\n      data.subject_id = this.state.subject_id;\n      data.class_url = this.state.class_url;\n      data.password = this.state.class_password;\n      data.date_virtual_class = this.state.class_date;\n      data.start_time_class = this.state.startTime;\n      data.end_time_class = this.state.endTime;\n      data.professor_id = this.state.professor_id;\n      data.status = true;\n      data.establishment_id = this.props.userProfile.establishment_id;\n      data.virtual_class_status = 'programÃ©e';\n      this.props.addClassVirtual(data);\n      this.setState({\n        addIsopen: false,\n        editIsopen: false,\n        deleteIsopen: false,\n        showIsopen: false,\n        class_object: '',\n        level_id: '',\n        section_id: '',\n        professor_id: '',\n        class_id: '',\n        subject_id: '',\n        class_url: '',\n        class_password: '',\n        class_date: '',\n        selectedStartTime: new Date(),\n        selectedEndTime: new Date(),\n        startTime: '',\n        endTime: '',\n        studentsectionByLevels: [],\n        Disable_studentsection: true,\n        levelsbyestablishment: [],\n        studentClassesByLevelSectionID: [],\n        subjectList: [],\n        establishmentProfessor: []\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeProfessor = name => event => {\n      this.setState({\n        professor_id: event.target.value\n      });\n    };\n\n    this.handleChangeDate = date => {\n      this.setState({\n        class_date: date\n      });\n    };\n\n    this.handleStartTimeChange = time => {\n      this.setState({\n        selectedStartTime: time,\n        startTime: time.format('LT')\n      });\n    };\n\n    this.handleEndTimeChange = time => {\n      this.setState({\n        selectedEndTime: time,\n        endTime: time.format('LT')\n      });\n    };\n\n    this.addClassShowModal = () => {\n      this.setState({\n        addIsopen: true\n      });\n    };\n\n    this.editClassShowModal = () => {\n      this.setState({\n        editIsopen: true\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        addIsopen: false,\n        editIsopen: false,\n        deleteIsopen: false,\n        showIsopen: false\n      });\n    };\n\n    this.handleChangeSubject = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      let apiEndpoint = `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][subject_id]=` + event.target.value + `&filter[include][professor][profile][user]`;\n      axios.get(apiEndpoint).then(res => {\n        this.setState({\n          establishmentProfessor: res.data\n        });\n      });\n    };\n\n    this.handleChangestudentSection = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      const levelID = this.state.level_id;\n      const sectionID = event.target.value;\n      var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.section_id === sectionID && classe.status);\n      this.setState({\n        studentClassesByLevelSectionID: studentfiltredClasses\n      });\n    };\n\n    this.handleChangestudentLevel = name => event => {\n      this.setState({\n        section_id: 0,\n        class_id: 0\n      });\n\n      if (event.target.value > 10) {\n        this.setState({\n          [name]: event.target.value\n        });\n        this.setState({\n          Disable_studentsection: false\n        });\n        var studentSectionbyLevel = getSectionFromLevel(this.props.classSections, event.target.value);\n        this.setState({\n          studentsectionByLevels: studentSectionbyLevel\n        });\n      } else {\n        this.setState({\n          level_id: event.target.value,\n          Disable_studentsection: true,\n          section_id: 0\n        });\n        const levelID = event.target.value;\n        var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.status);\n        this.setState({\n          studentClassesByLevelSectionID: studentfiltredClasses\n        });\n      }\n    };\n\n    this.handleChangeClass = name => event => {\n      if (this.props.userProfile.role_id === 2) {\n        this.setState({\n          establishment_id: this.props.userProfile.establishment_id\n        });\n      }\n\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: true,\n      class_object: '',\n      level_id: '',\n      section_id: '',\n      professor_id: '',\n      class_id: '',\n      subject_id: '',\n      class_url: '',\n      class_password: '',\n      class_date: '',\n      selectedStartTime: new Date(),\n      selectedEndTime: new Date(),\n      startTime: '',\n      endTime: '',\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: []\n    };\n    this.addClassShowModal = this.addClassShowModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStartTimeChange = this.handleStartTimeChange.bind(this);\n    this.handleEndTimeChange = this.handleEndTimeChange.bind(this);\n    this.addVirtualClass = this.addVirtualClass.bind(this);\n    this.handleChangestudentSection = this.handleChangestudentSection.bind(this);\n    this.handleChangestudentLevel = this.handleChangestudentLevel.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeProfessor = this.handleChangeProfessor.bind(this);\n  }\n\n  componentWillMount() {\n    if (this.props.userProfile.role_id === 1) {\n      this.props.getClassesVirtual();\n    } else {\n      this.props.getClassVirtualByEstablishmentId(this.props.userProfile.establishment_id);\n    }\n\n    this.props.getSections();\n    this.props.getLevels();\n    this.props.getClassesByEstablishmentId(this.props.userProfile.establishment_id);\n    axios.get(`${baseUrl.baseUrl}/establishments/` + this.props.userProfile.establishment_id + `?access_token=${localStorage.token}`).then(res => {\n      var levelsbyestablishment = getLevelListFromEstabType(this.props.classLevels, res.data.estab_type_id);\n      this.setState({\n        estabType: res.data.estab_type_id,\n        levelsbyestablishment: levelsbyestablishment\n      });\n      axios.get(`${baseUrl.baseUrl}/subjects?access_token=${localStorage.token}`).then(res => {\n        const subjectList = res.data;\n        this.setState({\n          subjectList\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ContainerHeader, {\n      match: this.props.match,\n      title: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"sidebar.components.virtual_classes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 18\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }\n    }), this.props.userProfile.role_id === 1 || this.props.userProfile.role_id === 2 || this.props.userProfile.role_id === 7 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 text-right \",\n      style: {\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"Add\",\n      onClick: this.addClassShowModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }))) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 text-right \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(VirtualClassList, {\n      classVirtual: this.props.classVirtual,\n      subjectList: this.state.subjectList,\n      editClassShowModal: this.editClassShowModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    })), this.state.addIsopen === true ? /*#__PURE__*/React.createElement(AddVirtualClass, {\n      values: this.state,\n      addIsopen: this.state.addIsopen,\n      handleCancel: this.handleCancel,\n      handleChangeDate: this.handleChangeDate,\n      handleChange: this.handleChange,\n      handleStartTimeChange: this.handleStartTimeChange,\n      handleEndTimeChange: this.handleEndTimeChange,\n      addVirtualClass: this.addVirtualClass,\n      handleChangestudentSection: this.handleChangestudentSection,\n      handleChangestudentLevel: this.handleChangestudentLevel,\n      handleChangeClass: this.handleChangeClass,\n      handleChangeSubject: this.handleChangeSubject,\n      handleChangeProfessor: this.handleChangeProfessor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }\n    }) : '');\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    classSections: state.classSections.remoteSections,\n    classes: state.classes,\n    classVirtual: state.classVirtualReducer.remoteClassVirtual\n  };\n}\n\nexport default connect(mapStateToProps, {\n  addClassVirtual,\n  getSections,\n  getLevels,\n  getClassesByEstablishmentId,\n  getClassesVirtual,\n  getClassVirtualByEstablishmentId\n})(VirtualClasses);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/VirtualClasses/VirtualClasses.js"],"names":["React","ContainerHeader","IntlMessages","Fab","AddIcon","AddVirtualClass","VirtualClassList","addClassVirtual","getClassesVirtual","getClassVirtualByEstablishmentId","connect","getSectionFromLevel","getLevelListFromEstabType","axios","baseUrl","getSections","getLevels","getClassesByEstablishmentId","VirtualClasses","Component","constructor","props","addVirtualClass","data","object","state","class_object","class_id","subject_id","class_url","password","class_password","date_virtual_class","class_date","start_time_class","startTime","end_time_class","endTime","professor_id","status","establishment_id","userProfile","virtual_class_status","setState","addIsopen","editIsopen","deleteIsopen","showIsopen","level_id","section_id","selectedStartTime","Date","selectedEndTime","studentsectionByLevels","Disable_studentsection","levelsbyestablishment","studentClassesByLevelSectionID","subjectList","establishmentProfessor","handleChange","name","event","target","value","handleChangeProfessor","handleChangeDate","date","handleStartTimeChange","time","format","handleEndTimeChange","addClassShowModal","editClassShowModal","handleCancel","handleChangeSubject","apiEndpoint","localStorage","token","get","then","res","handleChangestudentSection","levelID","sectionID","studentfiltredClasses","classes","filter","classe","handleChangestudentLevel","studentSectionbyLevel","classSections","handleChangeClass","role_id","bind","componentWillMount","classLevels","estab_type_id","estabType","render","match","marginBottom","classVirtual","mapStateToProps","auth","ClassLevels","remoteLevels","remoteSections","classVirtualReducer","remoteClassVirtual"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ContainerHeader from '../../../../../components/ContainerHeader/index';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport AddVirtualClass from './AddVirtualClass';\nimport VirtualClassList from './VirtualClassList';\nimport { addClassVirtual } from '../../../../../actions/VirtualClassAction';\nimport { getClassesVirtual } from '../../../../../actions/VirtualClassAction';\nimport { getClassVirtualByEstablishmentId } from '../../../../../actions/VirtualClassAction';\n\nimport { connect } from 'react-redux';\nimport { getSectionFromLevel } from '../../../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from '../../../../../actions/classLevelAction';\nimport axios from 'axios';\nimport baseUrl from '../../../../../config/config';\n\nimport { getSections } from '../../../../../actions/sectionAction';\nimport { getLevels } from '../../../../../actions/classLevelAction';\nimport { getClassesByEstablishmentId } from '../../../../../actions/classeAction';\n\nclass VirtualClasses extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: true,\n      class_object: '',\n      level_id: '',\n      section_id: '',\n      professor_id: '',\n      class_id: '',\n      subject_id: '',\n      class_url: '',\n      class_password: '',\n      class_date: '',\n      selectedStartTime: new Date(),\n      selectedEndTime: new Date(),\n      startTime: '',\n      endTime: '',\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: [],\n    };\n    this.addClassShowModal = this.addClassShowModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStartTimeChange = this.handleStartTimeChange.bind(this);\n    this.handleEndTimeChange = this.handleEndTimeChange.bind(this);\n    this.addVirtualClass = this.addVirtualClass.bind(this);\n    this.handleChangestudentSection = this.handleChangestudentSection.bind(\n      this\n    );\n    this.handleChangestudentLevel = this.handleChangestudentLevel.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeProfessor = this.handleChangeProfessor.bind(this);\n  }\n\n  addVirtualClass = () => {\n    var data = {};\n    data.object = this.state.class_object;\n    data.class_id = this.state.class_id;\n    data.subject_id = this.state.subject_id;\n    data.class_url = this.state.class_url;\n    data.password = this.state.class_password;\n    data.date_virtual_class = this.state.class_date;\n    data.start_time_class = this.state.startTime;\n    data.end_time_class = this.state.endTime;\n    data.professor_id = this.state.professor_id;\n    data.status = true;\n    data.establishment_id = this.props.userProfile.establishment_id;\n    data.virtual_class_status = 'programÃ©e';\n\n    this.props.addClassVirtual(data);\n    this.setState({\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: false,\n      class_object: '',\n      level_id: '',\n      section_id: '',\n      professor_id: '',\n      class_id: '',\n      subject_id: '',\n      class_url: '',\n      class_password: '',\n      class_date: '',\n      selectedStartTime: new Date(),\n      selectedEndTime: new Date(),\n      startTime: '',\n      endTime: '',\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: [],\n    });\n  };\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n  handleChangeProfessor = name => event => {\n    this.setState({ professor_id: event.target.value });\n  };\n\n  handleChangeDate = (date) => {\n    this.setState({ class_date: date });\n  };\n  handleStartTimeChange = (time) => {\n    this.setState({ selectedStartTime: time, startTime: time.format('LT') });\n  };\n\n  handleEndTimeChange = (time) => {\n    this.setState({ selectedEndTime: time, endTime: time.format('LT') });\n  };\n\n  addClassShowModal = () => {\n    this.setState({ addIsopen: true });\n  };\n\n  editClassShowModal = () => {\n    this.setState({ editIsopen: true });\n  };\n  handleCancel = () => {\n    this.setState({\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: false,\n    });\n  };\n\n  handleChangeSubject = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n\n    let apiEndpoint =\n      `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][subject_id]=` +\n      event.target.value +\n      `&filter[include][professor][profile][user]`;\n    axios.get(apiEndpoint).then((res) => {\n      this.setState({ establishmentProfessor: res.data });\n    });\n  };\n\n  handleChangestudentSection = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    const levelID = this.state.level_id;\n    const sectionID = event.target.value;\n    var studentfiltredClasses = this.props.classes.filter(\n      (classe) =>\n        classe.level_id === levelID &&\n        classe.section_id === sectionID &&\n        classe.status\n    );\n    this.setState({ studentClassesByLevelSectionID: studentfiltredClasses });\n  };\n  handleChangestudentLevel = (name) => (event) => {\n    this.setState({ section_id: 0, class_id: 0 });\n    if (event.target.value > 10) {\n      this.setState({ [name]: event.target.value });\n      this.setState({ Disable_studentsection: false });\n      var studentSectionbyLevel = getSectionFromLevel(\n        this.props.classSections,\n        event.target.value\n      );\n      this.setState({ studentsectionByLevels: studentSectionbyLevel });\n    } else {\n      this.setState({\n        level_id: event.target.value,\n        Disable_studentsection: true,\n        section_id: 0,\n      });\n      const levelID = event.target.value;\n      var studentfiltredClasses = this.props.classes.filter(\n        (classe) => classe.level_id === levelID && classe.status\n      );\n      this.setState({ studentClassesByLevelSectionID: studentfiltredClasses });\n    }\n  };\n\n  handleChangeClass = (name) => (event) => {\n    if (this.props.userProfile.role_id === 2) {\n      this.setState({\n        establishment_id: this.props.userProfile.establishment_id,\n      });\n    }\n    this.setState({ [name]: event.target.value });\n  };\n\n  componentWillMount() {\nif(this.props.userProfile.role_id===1){\n  this.props.getClassesVirtual();\n\n\n}\nelse{\n  this.props.getClassVirtualByEstablishmentId(this.props.userProfile.establishment_id);\n\n}\n\n\n    this.props.getSections();\n    this.props.getLevels();\n    this.props.getClassesByEstablishmentId(\n      this.props.userProfile.establishment_id\n    );\n\n    axios\n      .get(\n        `${baseUrl.baseUrl}/establishments/` +\n          this.props.userProfile.establishment_id +\n          `?access_token=${localStorage.token}`\n      )\n      .then((res) => {\n        var levelsbyestablishment = getLevelListFromEstabType(\n          this.props.classLevels,\n          res.data.estab_type_id\n        );\n        this.setState({\n          estabType: res.data.estab_type_id,\n          levelsbyestablishment: levelsbyestablishment,\n        });\n\n        axios\n          .get(`${baseUrl.baseUrl}/subjects?access_token=${localStorage.token}`)\n          .then((res) => {\n            const subjectList = res.data;\n            this.setState({ subjectList });\n          });\n      });\n  }\n  render() {\n    return (\n      <div className=\"app-wrapper\">\n        <ContainerHeader\n          match={this.props.match}\n          title={<IntlMessages id=\"sidebar.components.virtual_classes\" />}\n        />\n        <br />\n        {\n          (this.props.userProfile.role_id===1 || this.props.userProfile.role_id===2 || this.props.userProfile.role_id===7) ?\n          <div className=\"col-md-12 text-right \" style={{ marginBottom: 20 }}>\n          <Fab\n            size=\"small\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            onClick={this.addClassShowModal}\n          >\n            <AddIcon />\n          </Fab>\n        </div> :\"\"\n        }\n      \n        <div className=\"col-md-12 text-right \">\n          <VirtualClassList\n            classVirtual={this.props.classVirtual}\n            subjectList={this.state.subjectList}\n            editClassShowModal={this.editClassShowModal}\n          />\n        </div>\n\n        {this.state.addIsopen === true ? (\n          <AddVirtualClass\n            values={this.state}\n            addIsopen={this.state.addIsopen}\n            handleCancel={this.handleCancel}\n            handleChangeDate={this.handleChangeDate}\n            handleChange={this.handleChange}\n            handleStartTimeChange={this.handleStartTimeChange}\n            handleEndTimeChange={this.handleEndTimeChange}\n            addVirtualClass={this.addVirtualClass}\n            handleChangestudentSection={this.handleChangestudentSection}\n            handleChangestudentLevel={this.handleChangestudentLevel}\n            handleChangeClass={this.handleChangeClass}\n            handleChangeSubject={this.handleChangeSubject}\n            handleChangeProfessor={this.handleChangeProfessor}\n          />\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    classSections: state.classSections.remoteSections,\n    classes: state.classes,\n    classVirtual: state.classVirtualReducer.remoteClassVirtual,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    addClassVirtual,\n    getSections,\n    getLevels,\n    getClassesByEstablishmentId,\n    getClassesVirtual,\n    getClassVirtualByEstablishmentId\n  }\n)(VirtualClasses);\n"]},"metadata":{},"sourceType":"module"}