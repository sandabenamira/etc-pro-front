{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js\";\nimport React from \"react\";\nimport IconWithTextCard from \"../../../CommonComponents/IconWithTextCard\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport HomeworkInProgress from \"./HomeworkInProgress\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport RemoveSharpIcon from \"@material-ui/icons/RemoveSharp\";\nimport { connect } from \"react-redux\";\nimport AddHomework from \"./AddHomework\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport { classService } from \"../../../../../_services/class.service\";\nimport HomeworkList from \"./HomeworkList\";\nimport _ from \"lodash\";\nimport { addNewHomework } from \"../../../../../actions/HomeworkAction\";\nimport ArchivedHomework from \"./ArchivedHomework\";\nimport Can from \"../../../../../can\";\nimport { RoleContext } from \"../../../../../Context\";\nimport TextField from \"@material-ui/core/TextField\";\nimport moment from \"moment\";\n\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeClassList = selectedOption => {\n      if (selectedOption != null) {\n        let classesId = _.map(selectedOption, \"id\");\n\n        this.setState({\n          classesId,\n          isEmptylistClass: false\n        });\n      } else {\n        this.setState({\n          classesId: []\n        });\n      }\n    };\n\n    this.handleChangeDate = name => date => {\n      this.setState({\n        [name]: date\n      });\n      let publicationDateError, correctionDateError, renderingDateError;\n\n      if (name === \"publicationDate\") {\n        publicationDateError = moment(date._d).isAfter(this.state.correctionDate) || moment(date._d).isAfter(this.state.renderingDate);\n      } else if (name === \"correctionDate\") {\n        correctionDateError = moment(date._d).isAfter(this.state.renderingDate) || moment(date._d).isBefore(this.state.publicationDate);\n      } else {\n        renderingDateError = moment(date._d).isBefore(this.state.publicationDate) || moment(date._d).isBefore(this.state.correctionDate);\n      }\n\n      this.setState({\n        publicationDateError,\n        correctionDateError,\n        renderingDateError\n      });\n    };\n\n    this.handleChangePostTime = time => {\n      this.setState({\n        postTime: time._d\n      });\n    };\n\n    this.handleChangeSubject = selectedOption => {\n      this.setState({\n        subjectId: selectedOption.value,\n        subjectColor: selectedOption.color,\n        errorClass: false\n      });\n      let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include][class]`;\n      classService.get(apiEndpoint).then(response => {\n        if (response) {\n          let classesSubjects = response.data.filter(element => element.status);\n          let newList = classesSubjects.map(element => {\n            console.log(\"element\", element);\n            let object = {};\n            object.label = element.class.name;\n            object.id = element.fk_id_class_v4;\n            object.value = element.fk_id_class_v4;\n            return object;\n          });\n          this.setState({\n            classes: newList\n          });\n        }\n      });\n    };\n\n    this.handleChangeHomeworkType = selectedOption => {\n      this.setState({\n        homeworkType: selectedOption.value\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      isOpenAddModal: false,\n      openArchive: false,\n      nameFile: \"\",\n      HomeworkTypes: [{\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.book.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 18\n          }\n        }),\n        value: \"book\",\n        id: 1\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.series.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 18\n          }\n        }),\n        value: \"serie\",\n        id: 2\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.other.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 18\n          }\n        }),\n        value: \"other\",\n        id: 3\n      }],\n      homeworkType: \"\",\n      subjectId: null,\n      subjectColor: \"\",\n      description: \"\",\n      courseUrl: \"\",\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: \"\",\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      publicationDateError: false,\n      correctionDateError: false,\n      renderingDateError: false,\n      isEmptylistClass: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.addNewHomework = this.addNewHomework.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.openArchive = this.openArchive.bind(this);\n  }\n\n  cancelModal() {\n    this.setState({\n      isOpenAddModal: false,\n      nameFile: \"\",\n      homeworkType: \"\",\n      subjectId: null,\n      subjectColor: \"\",\n      description: \"\",\n      courseUrl: \"\",\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      eventChecked: \"\",\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      publicationDateError: false,\n      correctionDateError: false,\n      renderingDateError: false,\n      isEmptylistClass: false\n    });\n  }\n\n  addNewHomework(e) {\n    e.preventDefault();\n\n    if (this.state.subjectId === null) {\n      this.setState({\n        errorClass: true\n      });\n    } else if (_.isEmpty(this.state.classesId)) {\n      this.setState({\n        isEmptylistClass: true\n      });\n    } else {\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType = this.state.homeworkType;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      dataHomework.correctionDate = this.state.correctionDate;\n      dataHomework.renderingDate = this.state.renderingDate;\n      this.props.dispatch(addNewHomework(dataHomework, this.state.homeworkFiles));\n      this.cancelModal();\n    }\n  }\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter(element => element != filename);\n    let homeworkFiles = this.state.homeworkFiles.filter(element => element.name != filename);\n    this.setState({\n      nameFiles,\n      homeworkFiles\n    });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map(element => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({\n        homeworkFiles: oldFiles,\n        nameFiles\n      });\n    } else {\n      this.setState({\n        messageAlerte: \"Vous avez dÃ©passer 5 fichiers\",\n        alerteStatus: true\n      });\n      setTimeout(() => {\n        this.setState({\n          messageAlerte: \"\",\n          alerteStatus: false\n        });\n      }, 4000);\n    }\n  }\n\n  openAddModal() {\n    this.setState({\n      isOpenAddModal: !this.state.isOpenAddModal\n    });\n  }\n\n  openArchive() {\n    this.setState(previousState => ({\n      openArchive: !previousState.openArchive\n    }));\n  }\n\n  UNSAFE_componentWillMount() {\n    console.log(\"UNSAFE_componentWillMount\");\n    let subjects = createListSubject(this.props.subjects);\n    this.setState({\n      subjects\n    });\n  }\n\n  componentDidUpdate(previouProps) {\n    if (previouProps.subjects !== this.props.subjects) {\n      console.log(\"componentDidUpdate\");\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({\n        subjects\n      });\n    }\n  }\n\n  render() {\n    let detailCards = [{\n      cardColor: \"primary\",\n      imageIcon: require(\"../../../../../assets/images/dashboard/teams-icon.png\"),\n      // title: this.props.virtualClasses.length,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `message.Numbers.of.students`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: \"secondary\",\n      imageIcon: require(\"../../../../../assets/images/dashboard/tasks-icon.png\"),\n      // title: this.state.prog,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.file`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: \"info\",\n      imageIcon: require(\"../../../../../assets/images/dashboard/project-icon.png\"),\n      // title: this.state.encours,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.uncorrected`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: \"success\",\n      imageIcon: require(\"../../../../../assets/images/dashboard/files-icon.png\"),\n      // title: this.state.encours,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.educational.files`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 19\n        }\n      })\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper col-lg-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md- col-sm-12  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }\n    }, detailCards.map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconWithTextCard, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }\n    }, this.state.alerteStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, \" \", this.state.messageAlerte, \" \")), this.props.errorStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger   text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \")), this.props.successStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-auto \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(HomeworkInProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      size: \"small\",\n      color: \"secondary\",\n      \"aria-label\": \"Add\",\n      onClick: this.openAddModal.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }\n    }, this.state.isOpenAddModal ? /*#__PURE__*/React.createElement(RemoveSharpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2\",\n      style: {\n        fontFamily: \"Roboto\",\n        fontSize: \"17px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"modal.addToDo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-5 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      size: \"small\",\n      \"aria-label\": \"Add\",\n      style: {\n        backgroundColor: \"#ffbb33\",\n        color: \"#ffffff\"\n      },\n      onClick: this.openArchive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2\",\n      style: {\n        fontFamily: \"Roboto\",\n        fontSize: \"17px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"icon.archives\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }\n    })))), this.state.isOpenAddModal && /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AddHomework, {\n      values: this.state,\n      handleChange: this.handleChange,\n      handleChangeHomeworkType: this.handleChangeHomeworkType,\n      subjects: this.state.subjects,\n      handleChangeSubject: this.handleChangeSubject,\n      attachFile: this.attachFile,\n      deleteFile: this.deleteFile,\n      handleChangePostTime: this.handleChangePostTime,\n      handleChangeDate: this.handleChangeDate,\n      handleChangeClassList: this.handleChangeClassList,\n      addNewHomework: this.addNewHomework,\n      cancelModal: this.cancelModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"add-service\",\n      yes: () => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-wrap flex-row bd-highlight mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"idClasse\",\n        name: \"idClasse\",\n        select: true // value={this.state.filterClassId}\n        // onChange={this.handleChangeFilter('filterClassId')}\n        ,\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.note.class`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 31\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 25\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"idClasse\",\n        name: \"idClasse\",\n        select: true // value={this.state.filterClassId}\n        // onChange={this.handleChangeFilter('filterClassId')}\n        ,\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.todo.etat`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 36\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 25\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"idClasse\",\n        name: \"idClasse\",\n        select: true // value={this.state.filterClassId}\n        // onChange={this.handleChangeFilter('filterClassId')}\n        ,\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.todo.type`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 36\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 25\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5  bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.todo.date`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 27\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"add-service\",\n      yes: () => /*#__PURE__*/React.createElement(React.Fragment, null, this.state.openArchive ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArchivedHomework // listMoocsArchived={this.props.listMoocsArchived}\n      , {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 29\n        }\n      })) : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 19\n      }\n    })), !this.state.openArchive ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HomeworkList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 19\n      }\n    })) : \"\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    subjects: state.subject.subjects\n  };\n};\n\nexport default connect(mapStateToProps)(Homework);\n\nfunction createListSubject(subjects) {\n  let newList = subjects.map(element => {\n    let object = {};\n    object.label = element.name;\n    object.id = element.id;\n    object.value = element.id;\n    object.color = element.color;\n    return object;\n  });\n  return newList;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js"],"names":["React","IconWithTextCard","IntlMessages","HomeworkInProgress","CardBox","AddIcon","Fab","DeleteOutlineIcon","RemoveSharpIcon","connect","AddHomework","UncontrolledAlert","classService","HomeworkList","_","addNewHomework","ArchivedHomework","Can","RoleContext","TextField","moment","Homework","Component","constructor","props","handleChangeClassList","selectedOption","classesId","map","setState","isEmptylistClass","handleChangeDate","name","date","publicationDateError","correctionDateError","renderingDateError","_d","isAfter","state","correctionDate","renderingDate","isBefore","publicationDate","handleChangePostTime","time","postTime","handleChangeSubject","subjectId","value","subjectColor","color","errorClass","apiEndpoint","localStorage","token","get","then","response","classesSubjects","data","filter","element","status","newList","console","log","object","label","class","id","fk_id_class_v4","classes","handleChangeHomeworkType","homeworkType","handleChange","event","target","isOpenAddModal","openArchive","nameFile","HomeworkTypes","description","courseUrl","homeworkFiles","nameFiles","Date","subjects","eventChecked","bind","attachFile","deleteFile","cancelModal","e","preventDefault","isEmpty","dataHomework","title","publicationTime","dispatch","filename","oldFiles","files","Object","values","undefined","length","push","messageAlerte","alerteStatus","setTimeout","openAddModal","previousState","UNSAFE_componentWillMount","createListSubject","componentDidUpdate","previouProps","render","detailCards","cardColor","imageIcon","require","subTitle","index","errorStatus","message","successStatus","fontFamily","fontSize","backgroundColor","role","disableUnderline","mapStateToProps","userProfile","auth","alert","success","error","subject"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IconWithTextCard from \"../../../CommonComponents/IconWithTextCard\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport HomeworkInProgress from \"./HomeworkInProgress\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport RemoveSharpIcon from \"@material-ui/icons/RemoveSharp\";\nimport { connect } from \"react-redux\";\nimport AddHomework from \"./AddHomework\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport { classService } from \"../../../../../_services/class.service\";\nimport HomeworkList from \"./HomeworkList\";\nimport _ from \"lodash\";\nimport { addNewHomework } from \"../../../../../actions/HomeworkAction\";\nimport ArchivedHomework from \"./ArchivedHomework\";\nimport Can from \"../../../../../can\";\nimport { RoleContext } from \"../../../../../Context\";\nimport TextField from \"@material-ui/core/TextField\";\nimport moment from \"moment\";\n\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenAddModal: false,\n      openArchive: false,\n      nameFile: \"\",\n      HomeworkTypes: [\n        {\n          label: <IntlMessages id=\"toDo.book.exercise\" />,\n          value: \"book\",\n          id: 1,\n        },\n        {\n          label: <IntlMessages id=\"toDo.series.exercise\" />,\n          value: \"serie\",\n          id: 2,\n        },\n        {\n          label: <IntlMessages id=\"toDo.other.exercise\" />,\n          value: \"other\",\n          id: 3,\n        },\n      ],\n      homeworkType: \"\",\n      subjectId: null,\n      subjectColor: \"\",\n      description: \"\",\n      courseUrl: \"\",\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: \"\",\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      publicationDateError: false,\n      correctionDateError: false,\n      renderingDateError: false,\n      isEmptylistClass: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.addNewHomework = this.addNewHomework.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.openArchive = this.openArchive.bind(this);\n  }\n\n  cancelModal() {\n    this.setState({\n      isOpenAddModal: false,\n      nameFile: \"\",\n      homeworkType: \"\",\n      subjectId: null,\n      subjectColor: \"\",\n      description: \"\",\n      courseUrl: \"\",\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      eventChecked: \"\",\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      publicationDateError: false,\n      correctionDateError: false,\n      renderingDateError: false,\n      isEmptylistClass: false,\n    });\n  }\n\n  addNewHomework(e) {\n    e.preventDefault();\n    if (this.state.subjectId === null) {\n      this.setState({ errorClass: true });\n    } else if (_.isEmpty(this.state.classesId)) {\n      this.setState({ isEmptylistClass: true });\n    } else {\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType = this.state.homeworkType;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      dataHomework.correctionDate = this.state.correctionDate;\n      dataHomework.renderingDate = this.state.renderingDate;\n      this.props.dispatch(\n        addNewHomework(dataHomework, this.state.homeworkFiles)\n      );\n      this.cancelModal();\n    }\n  }\n\n  handleChangeClassList = (selectedOption) => {\n    if (selectedOption != null) {\n      let classesId = _.map(selectedOption, \"id\");\n      this.setState({ classesId, isEmptylistClass: false });\n    } else {\n      this.setState({ classesId: [] });\n    }\n  };\n\n  handleChangeDate = (name) => (date) => {\n    this.setState({ [name]: date });\n    let publicationDateError, correctionDateError, renderingDateError;\n    if (name === \"publicationDate\") {\n      publicationDateError =\n        moment(date._d).isAfter(this.state.correctionDate) ||\n        moment(date._d).isAfter(this.state.renderingDate);\n    } else if (name === \"correctionDate\") {\n      correctionDateError =\n        moment(date._d).isAfter(this.state.renderingDate) ||\n        moment(date._d).isBefore(this.state.publicationDate);\n    } else {\n      renderingDateError =\n        moment(date._d).isBefore(this.state.publicationDate) ||\n        moment(date._d).isBefore(this.state.correctionDate);\n    }\n    this.setState({\n      publicationDateError,\n      correctionDateError,\n      renderingDateError,\n    });\n  };\n\n  handleChangePostTime = (time) => {\n    this.setState({ postTime: time._d });\n  };\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter(\n      (element) => element != filename\n    );\n\n    let homeworkFiles = this.state.homeworkFiles.filter(\n      (element) => element.name != filename\n    );\n\n    this.setState({ nameFiles, homeworkFiles });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map((element) => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({ homeworkFiles: oldFiles, nameFiles });\n    } else {\n      this.setState({\n        messageAlerte: \"Vous avez dÃ©passer 5 fichiers\",\n        alerteStatus: true,\n      });\n      setTimeout(() => {\n        this.setState({ messageAlerte: \"\", alerteStatus: false });\n      }, 4000);\n    }\n  }\n\n  handleChangeSubject = (selectedOption) => {\n    this.setState({\n      subjectId: selectedOption.value,\n      subjectColor: selectedOption.color,\n      errorClass: false,\n    });\n    let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include][class]`;\n    classService.get(apiEndpoint).then((response) => {\n      if (response) {\n        let classesSubjects = response.data.filter((element) => element.status);\n        let newList = classesSubjects.map((element) => {\n          console.log(\"element\", element);\n          let object = {};\n          object.label = element.class.name;\n          object.id = element.fk_id_class_v4;\n          object.value = element.fk_id_class_v4;\n\n          return object;\n        });\n        this.setState({ classes: newList });\n      }\n    });\n  };\n\n  handleChangeHomeworkType = (selectedOption) => {\n    this.setState({ homeworkType: selectedOption.value });\n  };\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  openAddModal() {\n    this.setState({ isOpenAddModal: !this.state.isOpenAddModal });\n  }\n  openArchive() {\n    this.setState((previousState) => ({\n      openArchive: !previousState.openArchive,\n    }));\n  }\n\n  UNSAFE_componentWillMount() {\n    console.log(\"UNSAFE_componentWillMount\");\n    let subjects = createListSubject(this.props.subjects);\n    this.setState({ subjects });\n  }\n  componentDidUpdate(previouProps) {\n    if (previouProps.subjects !== this.props.subjects) {\n      console.log(\"componentDidUpdate\");\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({ subjects });\n    }\n  }\n\n  render() {\n    let detailCards = [\n      {\n        cardColor: \"primary\",\n        imageIcon: require(\"../../../../../assets/images/dashboard/teams-icon.png\"),\n\n        // title: this.props.virtualClasses.length,\n        subTitle: <IntlMessages id={`message.Numbers.of.students`} />,\n      },\n      {\n        cardColor: \"secondary\",\n        imageIcon: require(\"../../../../../assets/images/dashboard/tasks-icon.png\"),\n        // title: this.state.prog,\n        subTitle: <IntlMessages id={`homework.file`} />,\n      },\n      {\n        cardColor: \"info\",\n        imageIcon: require(\"../../../../../assets/images/dashboard/project-icon.png\"),\n        // title: this.state.encours,\n        subTitle: <IntlMessages id={`homework.uncorrected`} />,\n      },\n      {\n        cardColor: \"success\",\n        imageIcon: require(\"../../../../../assets/images/dashboard/files-icon.png\"),\n        // title: this.state.encours,\n        subTitle: <IntlMessages id={`homework.educational.files`} />,\n      },\n    ];\n    return (\n      <div className=\"app-wrapper col-lg-12 col-md-12\">\n        <div className=\"d-flex flex-column mb-3\">\n          <div className=\"row col-lg-12 col-md- col-sm-12  \">\n            {detailCards.map((data, index) => (\n              <div\n                key={index}\n                className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\"\n              >\n                <IconWithTextCard data={data} />\n              </div>\n            ))}\n          </div>\n          <div>\n            {this.state.alerteStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-danger bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\">\n                  {\" \"}\n                  {this.state.messageAlerte}{\" \"}\n                </span>\n              </UncontrolledAlert>\n            )}\n\n            {this.props.errorStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-danger   text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            )}\n            {this.props.successStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            )}\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-md-auto \">\n              <CardBox styleName=\"row\">\n                <HomeworkInProgress />\n              </CardBox>\n            </div>\n\n            <div className=\"col \">\n              <CardBox styleName=\"col-lg-12 \">\n                <div className=\"row\">\n                  <div>\n                    <Fab\n                      size=\"small\"\n                      color=\"secondary\"\n                      aria-label=\"Add\"\n                      onClick={this.openAddModal.bind(this)}\n                    >\n                      {this.state.isOpenAddModal ? (\n                        <RemoveSharpIcon />\n                      ) : (\n                        <AddIcon />\n                      )}\n                    </Fab>\n                  </div>\n                  <div\n                    className=\"p-2\"\n                    style={{ fontFamily: \"Roboto\", fontSize: \"17px\" }}\n                  >\n                    <IntlMessages id=\"modal.addToDo\" />\n                  </div>\n\n                  <div className=\"pl-5 \">\n                    <Fab\n                      size=\"small\"\n                      aria-label=\"Add\"\n                      style={{ backgroundColor: \"#ffbb33\", color: \"#ffffff\" }}\n                      onClick={this.openArchive}\n                    >\n                      {/* {this.props.values.isOpen ? (\n                          <RemoveSharpIcon />\n                        ) : ( */}\n                      <DeleteOutlineIcon />\n                      {/* )} */}\n                    </Fab>\n                  </div>\n                  <div\n                    className=\"p-2\"\n                    style={{ fontFamily: \"Roboto\", fontSize: \"17px\" }}\n                  >\n                    <IntlMessages id=\"icon.archives\" />\n                  </div>\n                </div>\n              </CardBox>\n\n              {this.state.isOpenAddModal && (\n                <CardBox styleName=\"col-lg-12\">\n                  <AddHomework\n                    values={this.state}\n                    handleChange={this.handleChange}\n                    handleChangeHomeworkType={this.handleChangeHomeworkType}\n                    subjects={this.state.subjects}\n                    handleChangeSubject={this.handleChangeSubject}\n                    attachFile={this.attachFile}\n                    deleteFile={this.deleteFile}\n                    handleChangePostTime={this.handleChangePostTime}\n                    handleChangeDate={this.handleChangeDate}\n                    handleChangeClassList={this.handleChangeClassList}\n                    addNewHomework={this.addNewHomework}\n                    cancelModal={this.cancelModal}\n                  />\n                </CardBox>\n              )}\n\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"add-service\"\n                    yes={() => (\n                      <div className=\"d-flex flex-wrap flex-row bd-highlight mb-3\">\n                        <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-5\">\n                          <TextField\n                            id=\"idClasse\"\n                            name=\"idClasse\"\n                            select\n                            // value={this.state.filterClassId}\n                            // onChange={this.handleChangeFilter('filterClassId')}\n                            SelectProps={{}}\n                            label={\n                              <IntlMessages id={`components.note.class`} />\n                            }\n                            InputProps={{ disableUnderline: true }}\n                            margin=\"normal\"\n                            fullWidth\n                          >\n                            {/* {this.state.filterClasses.length > 0 ? (\n                            this.state.filterClasses.map((option) => (\n                              <MenuItem key={option.id} value={option.id}>\n                                {option.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            <MenuItem key={0} value={0}>\n                              Pas de classe\n                            </MenuItem>\n                          )} */}\n                          </TextField>\n                        </div>\n                        <div className=\"pt-5 bd-highlight\">|</div>\n\n                        <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                          <TextField\n                            id=\"idClasse\"\n                            name=\"idClasse\"\n                            select\n                            // value={this.state.filterClassId}\n                            // onChange={this.handleChangeFilter('filterClassId')}\n                            SelectProps={{}}\n                            label={<IntlMessages id={`components.todo.etat`} />}\n                            InputProps={{ disableUnderline: true }}\n                            margin=\"normal\"\n                            fullWidth\n                          >\n                            {/* {this.state.filterClasses.length > 0 ? (\n                            this.state.filterClasses.map((option) => (\n                              <MenuItem key={option.id} value={option.id}>\n                                {option.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            <MenuItem key={0} value={0}>\n                              Pas de classe\n                            </MenuItem>\n                          )} */}\n                          </TextField>\n                        </div>\n                        <div className=\"pt-5 bd-highlight\">|</div>\n                        <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                          <TextField\n                            id=\"idClasse\"\n                            name=\"idClasse\"\n                            select\n                            // value={this.state.filterClassId}\n                            // onChange={this.handleChangeFilter('filterClassId')}\n                            SelectProps={{}}\n                            label={<IntlMessages id={`components.todo.type`} />}\n                            InputProps={{ disableUnderline: true }}\n                            margin=\"normal\"\n                            fullWidth\n                          >\n                            {/* {this.state.filterClasses.length > 0 ? (\n                            this.state.filterClasses.map((option) => (\n                              <MenuItem key={option.id} value={option.id}>\n                                {option.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            <MenuItem key={0} value={0}>\n                              Pas de classe\n                            </MenuItem>\n                          )} */}\n                          </TextField>\n                        </div>\n                        <div className=\"pt-5 bd-highlight\">|</div>\n                        <div className=\"pt-5  bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                          <IntlMessages id={`components.todo.date`} />\n                        </div>\n                      </div>\n                    )}\n                  />\n                )}\n              </RoleContext.Consumer>\n\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"add-service\"\n                    yes={() => (\n                      <>\n                        {this.state.openArchive ? (\n                          <div>\n                            <ArchivedHomework\n                            // listMoocsArchived={this.props.listMoocsArchived}\n                            />\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n                      </>\n                    )}\n                  />\n                )}\n              </RoleContext.Consumer>\n\n              {!this.state.openArchive ? (\n                <div>\n                  <HomeworkList />\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    subjects: state.subject.subjects,\n  };\n};\nexport default connect(mapStateToProps)(Homework);\n\nfunction createListSubject(subjects) {\n  let newList = subjects.map((element) => {\n    let object = {};\n    object.label = element.name;\n    object.id = element.id;\n    object.value = element.id;\n    object.color = element.color;\n    return object;\n  });\n  return newList;\n}\n"]},"metadata":{},"sourceType":"module"}