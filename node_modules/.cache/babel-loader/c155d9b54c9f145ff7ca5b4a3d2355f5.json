{"ast":null,"code":"import { FETCH_ALL_ROLE, ADD_USER, GET_ALL_USERS_FOR_ADMIN, GET_ALL_USERS_FOR_SUPER_ADMIN, EDIT_USER, DELETE_USER, ARCHIVED_USERS } from \"../constants/ActionTypes\";\nimport { roleIdSuperAdmin, roleIdAdmin, roleIdProfessor, roleIdStudent, roleIdDirector, roleIdParent, roleIdSupervisor } from \"../config/config\";\nconst initialState = {\n  roles: [],\n  users: [],\n  archivedUsers: [],\n  allUsers: [],\n  students: [],\n  parents: [],\n  professors: []\n};\nexport default function (state = initialState, action) {\n  if (action.type === FETCH_ALL_ROLE) {\n    return Object.assign({}, state, {\n      roles: action.payload\n    });\n  }\n\n  if (action.type === GET_ALL_USERS_FOR_ADMIN) {\n    let parents = action.payload.filter(element => element.roleId === roleIdParent);\n    let students = action.payload.filter(element => element.roleId === roleIdStudent);\n    let professors = action.payload.filter(element => element.roleId === roleIdProfessor);\n    return Object.assign({}, state, {\n      users: action.payload,\n      parents: parents,\n      students: students,\n      professors: professors\n    });\n  }\n\n  if (action.type === GET_ALL_USERS_FOR_SUPER_ADMIN) {\n    return Object.assign({}, state, {\n      allUsers: action.payload\n    });\n  }\n\n  if (action.type === ADD_USER) {\n    return Object.assign({}, state, {\n      users: state.users.concat(action.payload)\n    });\n  }\n\n  if (action.type === EDIT_USER) {\n    return Object.assign({}, state, {\n      users: [...state.users.filter(element => element.id !== action.payload.id), action.payload]\n    });\n  }\n\n  if (action.type === DELETE_USER) {\n    return Object.assign({}, state, {\n      users: [...state.users.filter(element => element.id !== action.payload.id)],\n      archivedUsers: state.archivedUsers.concat(action.payload)\n    });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/reducers/usersReducer.js"],"names":["FETCH_ALL_ROLE","ADD_USER","GET_ALL_USERS_FOR_ADMIN","GET_ALL_USERS_FOR_SUPER_ADMIN","EDIT_USER","DELETE_USER","ARCHIVED_USERS","roleIdSuperAdmin","roleIdAdmin","roleIdProfessor","roleIdStudent","roleIdDirector","roleIdParent","roleIdSupervisor","initialState","roles","users","archivedUsers","allUsers","students","parents","professors","state","action","type","Object","assign","payload","filter","element","roleId","concat","id"],"mappings":"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","sourcesContent":["import {\n  FETCH_ALL_ROLE,\n  ADD_USER,\n  GET_ALL_USERS_FOR_ADMIN,\n  GET_ALL_USERS_FOR_SUPER_ADMIN,\n  EDIT_USER,\n  DELETE_USER,\n  ARCHIVED_USERS\n} from \"../constants/ActionTypes\";\nimport {\n  roleIdSuperAdmin,\n  roleIdAdmin,\n  roleIdProfessor,\n  roleIdStudent,\n  roleIdDirector,\n  roleIdParent,\n  roleIdSupervisor,\n} from \"../config/config\";\nconst initialState = {\n  roles:[],\n  users: [],\n  archivedUsers: [],\n  allUsers:[],\n  students:[],\n  parents:[],\n  professors:[]\n};\n\nexport default function(state = initialState, action) {\n  if (action.type === FETCH_ALL_ROLE) {\n    return Object.assign({}, state, {\n      roles: action.payload,\n    });\n  }\n  if (action.type === GET_ALL_USERS_FOR_ADMIN) {\n    let parents=action.payload.filter(element => element.roleId===roleIdParent)\n    let students=action.payload.filter(element => element.roleId===roleIdStudent)\n    let professors=action.payload.filter(element => element.roleId===roleIdProfessor)\n    return Object.assign({}, state, {\n      users: action.payload,\n      parents:parents,\n      students:students,\n      professors:professors\n    });\n  }\n  if (action.type === GET_ALL_USERS_FOR_SUPER_ADMIN) {\n    return Object.assign({}, state, {\n      allUsers: action.payload,\n    });\n  }\n  if (action.type === ADD_USER) {\n    return Object.assign({}, state, {\n      users: state.users.concat(action.payload),\n    });\n  }\n\n  if (action.type === EDIT_USER) {\n    return Object.assign({}, state, {\n      users: [\n        ...state.users.filter((element) => element.id !== action.payload.id),\n        action.payload,\n      ],\n    });\n  }\n\n  if (action.type === DELETE_USER) {\n    return Object.assign({}, state, {\n      users: [\n        ...state.users.filter((element) => element.id !== action.payload.id),\n      ],\n      archivedUsers: state.archivedUsers.concat(action.payload),\n    });\n  }\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}