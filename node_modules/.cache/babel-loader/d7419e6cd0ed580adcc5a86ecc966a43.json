{"ast":null,"code":"import { classService } from '../_services/class.service';\nimport { ADD_CLASS_SETTINGS, SHOW_SUCCESS_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, GET_CLASS_SETTINGS, EDIT_CLASS_SETTINGS, DELETE_CLASS_SETTINGS, ARCHIVED_GET_CLASS_SETTINGS } from '../constants/ActionTypes';\nexport function addClassSetting(data) {\n  return dispatch => {\n    let apiEndpoint = `/class_v4?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then(response => {\n      if (response) {\n        dispatch({\n          type: ADD_CLASS_SETTINGS,\n          payload: response.data\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'La création est effectuée avec succès'\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n}\nexport function editClassSettings(data, id) {\n  return dispatch => {\n    let apiEndpoint = `/class_v4/${id}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, data).then(response => {\n      if (response) {\n        dispatch({\n          type: EDIT_CLASS_SETTINGS,\n          payload: response.data\n        });\n      }\n    });\n  };\n}\nexport function getClassSettings(establishementId, schoolYearId) {\n  return dispatch => {\n    let apiEndpoint = `/class_v4?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=${establishementId}&filter[where][and][1][fk_id_school_year]=${schoolYearId}`;\n    classService.get(apiEndpoint).then(response => {\n      if (response) {\n        const list = response.data;\n        const SubjectModuleList = list.filter(element => element.status);\n        const ArchivedSubjectModuleList = list.filter(element => element.status == false);\n        dispatch({\n          type: GET_CLASS_SETTINGS,\n          payload: SubjectModuleList\n        });\n        dispatch({\n          type: ARCHIVED_GET_CLASS_SETTINGS,\n          payload: ArchivedSubjectModuleList\n        });\n      }\n    });\n  };\n}\nexport function deleteClassSettings(itemId) {\n  return dispatch => {\n    let apiEndpoint = `/class_v4/` + itemId.id + `?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=${localStorage.establishment_id}&filter[where][and][1][fk_id_school_year]=${localStorage.school_year_id}`;\n    classService.patch(apiEndpoint, {\n      status: false\n    }).then(response => {\n      if (response) {\n        dispatch({\n          type: DELETE_CLASS_SETTINGS,\n          payload: response.data\n        });\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/ClassSettingsAction.js"],"names":["classService","ADD_CLASS_SETTINGS","SHOW_SUCCESS_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","GET_CLASS_SETTINGS","EDIT_CLASS_SETTINGS","DELETE_CLASS_SETTINGS","ARCHIVED_GET_CLASS_SETTINGS","addClassSetting","data","dispatch","apiEndpoint","localStorage","token","post","then","response","type","payload","setTimeout","editClassSettings","id","patch","getClassSettings","establishementId","schoolYearId","get","list","SubjectModuleList","filter","element","status","ArchivedSubjectModuleList","deleteClassSettings","itemId","establishment_id","school_year_id"],"mappings":"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","sourcesContent":["import { classService } from '../_services/class.service';\nimport {\n  ADD_CLASS_SETTINGS,\n  SHOW_SUCCESS_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  GET_CLASS_SETTINGS,\n  EDIT_CLASS_SETTINGS,\n  DELETE_CLASS_SETTINGS,\n  ARCHIVED_GET_CLASS_SETTINGS,\n} from '../constants/ActionTypes';\nexport function addClassSetting(data) {\n  return (dispatch) => {\n    let apiEndpoint = `/class_v4?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then((response) => {\n      if (response) {\n        dispatch({ type: ADD_CLASS_SETTINGS, payload: response.data });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'La création est effectuée avec succès',\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n}\n\nexport function editClassSettings(data, id) {\n  return (dispatch) => {\n    let apiEndpoint = `/class_v4/${id}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, data).then((response) => {\n      if (response) {\n        dispatch({ type: EDIT_CLASS_SETTINGS, payload: response.data });\n      }\n    });\n  };\n}\n\nexport function getClassSettings(establishementId, schoolYearId) {\n  return (dispatch) => {\n    let apiEndpoint = `/class_v4?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=${establishementId}&filter[where][and][1][fk_id_school_year]=${schoolYearId}`;\n    classService.get(apiEndpoint).then((response) => {\n      if (response) {\n        const list = response.data;\n        const SubjectModuleList = list.filter((element) => element.status);\n        const ArchivedSubjectModuleList = list.filter(\n          (element) => element.status == false\n        );\n        dispatch({ type: GET_CLASS_SETTINGS, payload: SubjectModuleList });\n        dispatch({\n          type: ARCHIVED_GET_CLASS_SETTINGS,\n          payload: ArchivedSubjectModuleList,\n        });\n      }\n    });\n  };\n}\n\nexport function deleteClassSettings(itemId) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/class_v4/` +\n      itemId.id +\n      `?access_token=${localStorage.token}&filter[where][and][0][fk_id_establishment]=${localStorage.establishment_id}&filter[where][and][1][fk_id_school_year]=${localStorage.school_year_id}`;\n    classService.patch(apiEndpoint, { status: false }).then((response) => {\n      if (response) {\n        dispatch({ type: DELETE_CLASS_SETTINGS, payload: response.data });\n      }\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}