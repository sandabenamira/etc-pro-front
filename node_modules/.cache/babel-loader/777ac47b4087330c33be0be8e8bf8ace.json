{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Lesson/LessonList.js\";\nimport React from 'react';\nimport LessonGridItem from './LessonGridItem';\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { getSectionFromLevel } from '../../../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from \"../../../../../actions/classLevelAction\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\n\nclass LessonList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeClass = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      let lessonList = this.props.lessons;\n      let lessonsFiltred = lessonList.filter(element => element.classProfSubject.class_id === event.target.value);\n      this.setState({\n        lessons: lessonsFiltred\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeLevel = name => event => {\n      this.setState({\n        section_id: 0,\n        class_id: 0,\n        classeDisabled: true\n      });\n\n      if (event.target.value > 10) {\n        this.setState({\n          [name]: event.target.value\n        });\n        this.setState({\n          sectionDisabled: false,\n          class_id: 0\n        });\n      } else {\n        this.setState({\n          [name]: event.target.value\n        });\n        this.setState({\n          sectionDisabled: true,\n          class_id: 0,\n          classeDisabled: false\n        });\n        const filtredClassesD = this.props.classes.filter(classe => classe.level_id === event.target.value && classe.status);\n        this.setState({\n          studentClassesByLevelSectionID: filtredClassesD\n        });\n      }\n    };\n\n    this.handleChangeSection = name => event => {\n      this.setState({\n        class_id: 0,\n        classeDisabled: false\n      });\n      this.setState({\n        [name]: event.target.value\n      });\n      const levelId = this.state.level_id;\n      const sectionId = event.target.value;\n      const filtredClasses = this.props.classes.filter(classe => classe.level_id === levelId && classe.section_id === sectionId && classe.status);\n      this.setState({\n        studentClassesByLevelSectionID: filtredClasses\n      });\n    };\n\n    this.state = {\n      section_id: 0,\n      class_id: 0,\n      level_id: 0,\n      sectionDisabled: true,\n      classeDisabled: true,\n      studentClassesByLevelSectionID: [],\n      subject_id: 0,\n      lessons: []\n    };\n    this.handleChangeLevel = this.handleChangeLevel.bind(this);\n    this.handleChangeSection = this.handleChangeSection.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      lessons: this.props.lessons\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lessons !== this.props.lessons) {\n      this.setState({\n        lessons: this.props.lessons\n      });\n    }\n  }\n\n  render() {\n    const {\n      levels,\n      sections\n    } = this.props;\n    const {\n      lessons\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12 text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      name: \"level_id\",\n      id: \"level_id\",\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.note.niveau\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 40\n        }\n      }),\n      value: this.state.level_id,\n      defaultValue: \" \",\n      onChange: this.handleChangeLevel(\"level_id\"),\n      SelectProps: {},\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, getLevelListFromEstabType(levels, this.props.estab_type_id).map(level => /*#__PURE__*/React.createElement(MenuItem, {\n      key: level.id,\n      value: level.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }, level.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"section_id\",\n      variant: \"outlined\",\n      id: \"section_id\",\n      select: true,\n      disabled: this.state.sectionDisabled,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.class.level.input.label.section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 40\n        }\n      }),\n      value: this.state.section_id,\n      onChange: this.handleChangeSection('section_id'),\n      SelectProps: {},\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, getSectionFromLevel(sections, this.state.level_id).map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, option.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      name: \"class_id\",\n      id: \"class_id\",\n      disabled: this.state.classeDisabled,\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.student.formadd.classe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 40\n        }\n      }),\n      value: this.state.class_id,\n      onChange: this.handleChangeClass(\"class_id\"),\n      SelectProps: {},\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, this.state.studentClassesByLevelSectionID.map(classe => /*#__PURE__*/React.createElement(MenuItem, {\n      key: classe.id,\n      value: classe.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 37\n      }\n    }, classe.name)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row animated slideInUpTiny animation-duration-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, lessons.map((lesson, index) => /*#__PURE__*/React.createElement(LessonGridItem, {\n      key: index,\n      lesson: lesson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default LessonList;","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Lesson/LessonList.js"],"names":["React","LessonGridItem","CardBox","TextField","MenuItem","getSectionFromLevel","getLevelListFromEstabType","IntlMessages","LessonList","Component","constructor","props","handleChangeClass","name","event","setState","target","value","lessonList","lessons","lessonsFiltred","filter","element","classProfSubject","class_id","handleChange","handleChangeLevel","section_id","classeDisabled","sectionDisabled","filtredClassesD","classes","classe","level_id","status","studentClassesByLevelSectionID","handleChangeSection","levelId","state","sectionId","filtredClasses","subject_id","bind","componentDidMount","componentDidUpdate","prevProps","render","levels","sections","estab_type_id","map","level","id","option","lesson","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LessonGridItem from './LessonGridItem';\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { getSectionFromLevel } from '../../../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from \"../../../../../actions/classLevelAction\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\n\nclass LessonList extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            section_id: 0,\n            class_id: 0,\n            level_id: 0,\n            sectionDisabled: true,\n            classeDisabled: true,\n            studentClassesByLevelSectionID: [],\n            subject_id: 0,\n            lessons:[]\n\n        }\n        this.handleChangeLevel = this.handleChangeLevel.bind(this);\n        this.handleChangeSection = this.handleChangeSection.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeClass = this.handleChangeClass.bind(this);\n\n\n    }\n\n    handleChangeClass = name => event => {\n        this.setState({ [name]: event.target.value });\n            let lessonList = this.props.lessons;\n            let lessonsFiltred = lessonList.filter(element => element.classProfSubject.class_id === event.target.value)\n            this.setState({ lessons: lessonsFiltred })\n\n\n    }\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value });\n\n    }\n    handleChangeLevel = name => event => {\n        this.setState({ section_id: 0, class_id: 0, classeDisabled: true });\n\n        if (event.target.value > 10) {\n            this.setState({ [name]: event.target.value });\n            this.setState({ sectionDisabled: false, class_id: 0 })\n\n        } else {\n            this.setState({ [name]: event.target.value });\n            this.setState({ sectionDisabled: true, class_id: 0, classeDisabled: false })\n\n            const filtredClassesD = this.props.classes.filter(\n                classe => classe.level_id === event.target.value\n                    && classe.status\n            );\n            this.setState({ studentClassesByLevelSectionID: filtredClassesD });\n        }\n    };\n    handleChangeSection = name => event => {\n        this.setState({ class_id: 0, classeDisabled: false });\n        this.setState({ [name]: event.target.value });\n        const levelId = this.state.level_id;\n        const sectionId = event.target.value;\n        const filtredClasses = this.props.classes.filter(\n            classe =>\n                classe.level_id === levelId &&\n                classe.section_id === sectionId &&\n                classe.status\n        );\n\n        this.setState({ studentClassesByLevelSectionID: filtredClasses });\n    }\n\n    componentDidMount() {\n        this.setState({ lessons: this.props.lessons })\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.lessons !== this.props.lessons) {\n\n            this.setState({ lessons: this.props.lessons })\n        }\n    }\n\n    render() {\n        const { levels, sections } = this.props;\n\n        const { lessons } = this.state;\n        return (\n            <div className=\"row mb-md-3\">\n                <CardBox styleName=\"col-lg-12 text-primary\">\n\n                    <div className=\"row\">\n                        <div className=\"col-md-4 text-left\">\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                name=\"level_id\"\n                                id=\"level_id\"\n                                select\n                                label={<IntlMessages id=\"components.note.niveau\" />}\n                                value={this.state.level_id}\n                                defaultValue=\" \"\n                                onChange={this.handleChangeLevel(\"level_id\")}\n                                SelectProps={{}}\n                                margin=\"normal\"\n                                fullWidth\n                            >\n                                {getLevelListFromEstabType(levels, this.props.estab_type_id).map(level => (\n                                    <MenuItem key={level.id} value={level.id}>\n                                        {level.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </div>\n                        <div className=\"col-md-4 text-left\">\n                            <TextField\n                                required\n                                name=\"section_id\"\n                                variant=\"outlined\"\n                                id=\"section_id\"\n                                select\n                                disabled={this.state.sectionDisabled}\n                                label={<IntlMessages id=\"components.class.level.input.label.section\" />}\n                                value={this.state.section_id}\n                                onChange={this.handleChangeSection('section_id')}\n                                SelectProps={{}}\n                                margin=\"normal\"\n                                fullWidth >\n                                {getSectionFromLevel(sections, this.state.level_id).map(option => (\n                                    <MenuItem key={option.id} value={option.id}>\n                                        {option.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </div>\n                        <div className=\"col-md-4 text-left\">\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                name=\"class_id\"\n                                id=\"class_id\"\n                                disabled={this.state.classeDisabled}\n                                select\n                                label={<IntlMessages id=\"components.student.formadd.classe\" />}\n                                value={this.state.class_id}\n                                onChange={this.handleChangeClass(\"class_id\")}\n                                SelectProps={{}}\n                                margin=\"normal\"\n                                fullWidth\n                            >\n                                {this.state.studentClassesByLevelSectionID.map(classe => (\n                                    <MenuItem key={classe.id} value={classe.id}>\n                                        {classe.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </div>\n\n                    </div>\n                </CardBox>\n\n                <div className=\"row animated slideInUpTiny animation-duration-3\">\n                    {lessons.map((lesson, index) => (\n                        <LessonGridItem key={index} lesson={lesson} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LessonList;"]},"metadata":{},"sourceType":"module"}