{"ast":null,"code":"import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport { auth, facebookAuthProvider, githubAuthProvider, googleAuthProvider, twitterAuthProvider } from \"../firebase/firebase\";\nimport { SIGNIN_FACEBOOK_USER, SIGNIN_GITHUB_USER, SIGNIN_GOOGLE_USER, SIGNIN_TWITTER_USER, SIGNIN_USER, SIGNOUT_USER, SIGNUP_USER } from \"../constants/ActionTypes\";\nimport { showAuthMessage, userSignInSuccess, userSignOutSuccess, userSignUpSuccess } from \"../actions/Auth\";\nimport { userFacebookSignInSuccess, userGithubSignInSuccess, userGoogleSignInSuccess, userTwitterSignInSuccess } from \"../actions/Auth\";\n\nconst createUserWithEmailPasswordRequest = async (email, password) => await auth.createUserWithEmailAndPassword(email, password).then(authUser => authUser).catch(error => error);\n\nconst signInUserWithEmailPasswordRequest = async (email, password) => await auth.signInWithEmailAndPassword(email, password).then(authUser => authUser).catch(error => error);\n\nconst signOutRequest = async () => await auth.signOut().then(authUser => authUser).catch(error => error);\n\nconst signInUserWithGoogleRequest = async () => await auth.signInWithPopup(googleAuthProvider).then(authUser => authUser).catch(error => error);\n\nconst signInUserWithFacebookRequest = async () => await auth.signInWithPopup(facebookAuthProvider).then(authUser => authUser).catch(error => error);\n\nconst signInUserWithGithubRequest = async () => await auth.signInWithPopup(githubAuthProvider).then(authUser => authUser).catch(error => error);\n\nconst signInUserWithTwitterRequest = async () => await auth.signInWithPopup(twitterAuthProvider).then(authUser => authUser).catch(error => error);\n\nfunction* createUserWithEmailPassword({\n  payload\n}) {\n  const {\n    email,\n    password\n  } = payload;\n\n  try {\n    const signUpUser = yield call(createUserWithEmailPasswordRequest, email, password);\n\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userSignUpSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithGoogle() {\n  try {\n    const signUpUser = yield call(signInUserWithGoogleRequest);\n\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userGoogleSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithFacebook() {\n  try {\n    const signUpUser = yield call(signInUserWithFacebookRequest);\n\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userFacebookSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithGithub() {\n  try {\n    const signUpUser = yield call(signInUserWithGithubRequest);\n\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userGithubSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithTwitter() {\n  try {\n    const signUpUser = yield call(signInUserWithTwitterRequest);\n\n    if (signUpUser.message) {\n      if (signUpUser.message.length > 100) {\n        yield put(showAuthMessage('Your request has been canceled.'));\n      } else {\n        yield put(showAuthMessage(signUpUser.message));\n      }\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userTwitterSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithEmailPassword({\n  payload\n}) {\n  const {\n    email,\n    password\n  } = payload;\n\n  try {\n    const signInUser = yield call(signInUserWithEmailPasswordRequest, email, password);\n\n    if (signInUser.message) {\n      yield put(showAuthMessage(signInUser.message));\n    } else {\n      localStorage.setItem('user_id', signInUser.user.uid);\n      yield put(userSignInSuccess(signInUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signOut() {\n  try {\n    const signOutUser = yield call(signOutRequest);\n\n    if (signOutUser === undefined) {\n      yield put(userSignOutSuccess(signOutUser));\n    } else {\n      yield put(showAuthMessage(signOutUser.message));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nexport function* createUserAccount() {\n  yield takeEvery(SIGNUP_USER, createUserWithEmailPassword);\n}\nexport function* signInWithGoogle() {\n  yield takeEvery(SIGNIN_GOOGLE_USER, signInUserWithGoogle);\n}\nexport function* signInWithFacebook() {\n  yield takeEvery(SIGNIN_FACEBOOK_USER, signInUserWithFacebook);\n}\nexport function* signInWithTwitter() {\n  yield takeEvery(SIGNIN_TWITTER_USER, signInUserWithTwitter);\n}\nexport function* signInWithGithub() {\n  yield takeEvery(SIGNIN_GITHUB_USER, signInUserWithGithub);\n}\nexport function* signInUser() {\n  yield takeEvery(SIGNIN_USER, signInUserWithEmailPassword);\n}\nexport function* signOutUser() {\n  yield takeEvery(SIGNOUT_USER, signOut);\n}\nexport default function* rootSaga() {\n  yield all([fork(signInUser), fork(createUserAccount), fork(signInWithGoogle), fork(signInWithFacebook), fork(signInWithTwitter), fork(signInWithGithub), fork(signOutUser)]);\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/sagas/Auth.js"],"names":["all","call","fork","put","takeEvery","auth","facebookAuthProvider","githubAuthProvider","googleAuthProvider","twitterAuthProvider","SIGNIN_FACEBOOK_USER","SIGNIN_GITHUB_USER","SIGNIN_GOOGLE_USER","SIGNIN_TWITTER_USER","SIGNIN_USER","SIGNOUT_USER","SIGNUP_USER","showAuthMessage","userSignInSuccess","userSignOutSuccess","userSignUpSuccess","userFacebookSignInSuccess","userGithubSignInSuccess","userGoogleSignInSuccess","userTwitterSignInSuccess","createUserWithEmailPasswordRequest","email","password","createUserWithEmailAndPassword","then","authUser","catch","error","signInUserWithEmailPasswordRequest","signInWithEmailAndPassword","signOutRequest","signOut","signInUserWithGoogleRequest","signInWithPopup","signInUserWithFacebookRequest","signInUserWithGithubRequest","signInUserWithTwitterRequest","createUserWithEmailPassword","payload","signUpUser","message","localStorage","setItem","user","uid","signInUserWithGoogle","signInUserWithFacebook","signInUserWithGithub","signInUserWithTwitter","length","signInUserWithEmailPassword","signInUser","signOutUser","undefined","createUserAccount","signInWithGoogle","signInWithFacebook","signInWithTwitter","signInWithGithub","rootSaga"],"mappings":"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","sourcesContent":["import {all, call, fork, put, takeEvery} from \"redux-saga/effects\";\r\nimport {\r\n    auth,\r\n    facebookAuthProvider,\r\n    githubAuthProvider,\r\n    googleAuthProvider,\r\n    twitterAuthProvider\r\n} from \"../firebase/firebase\";\r\nimport {\r\n    SIGNIN_FACEBOOK_USER,\r\n    SIGNIN_GITHUB_USER,\r\n    SIGNIN_GOOGLE_USER,\r\n    SIGNIN_TWITTER_USER,\r\n    SIGNIN_USER,\r\n    SIGNOUT_USER,\r\n    SIGNUP_USER\r\n} from \"../constants/ActionTypes\";\r\nimport {showAuthMessage, userSignInSuccess,\r\n     userSignOutSuccess, userSignUpSuccess} from \"../actions/Auth\";\r\nimport {\r\n    userFacebookSignInSuccess,\r\n    userGithubSignInSuccess,\r\n    userGoogleSignInSuccess,\r\n    userTwitterSignInSuccess\r\n} from \"../actions/Auth\";\r\n\r\nconst createUserWithEmailPasswordRequest = async (email, password) =>\r\n    await  auth.createUserWithEmailAndPassword(email, password)\r\n        .then(authUser => authUser)\r\n        .catch(error => error);\r\n\r\nconst signInUserWithEmailPasswordRequest = async (email, password) =>\r\n    await  auth.signInWithEmailAndPassword(email, password)\r\n        .then(authUser => authUser)\r\n        .catch(error => error);\r\n\r\nconst signOutRequest = async () =>\r\n    await  auth.signOut()\r\n        .then(authUser => authUser)\r\n        .catch(error => error);\r\n\r\n\r\nconst signInUserWithGoogleRequest = async () =>\r\n    await  auth.signInWithPopup(googleAuthProvider)\r\n        .then(authUser => authUser)\r\n        .catch(error => error);\r\n\r\nconst signInUserWithFacebookRequest = async () =>\r\n    await  auth.signInWithPopup(facebookAuthProvider)\r\n        .then(authUser => authUser)\r\n        .catch(error => error);\r\n\r\nconst signInUserWithGithubRequest = async () =>\r\n    await  auth.signInWithPopup(githubAuthProvider)\r\n        .then(authUser => authUser)\r\n        .catch(error => error);\r\n\r\nconst signInUserWithTwitterRequest = async () =>\r\n    await  auth.signInWithPopup(twitterAuthProvider)\r\n        .then(authUser => authUser)\r\n        .catch(error => error);\r\n\r\nfunction* createUserWithEmailPassword({payload}) {\r\n    const {email, password} = payload;\r\n    try {\r\n        const signUpUser = yield call(createUserWithEmailPasswordRequest, email, password);\r\n        if (signUpUser.message) {\r\n            yield put(showAuthMessage(signUpUser.message));\r\n        } else {\r\n            localStorage.setItem('user_id', signUpUser.user.uid);\r\n            yield put(userSignUpSuccess(signUpUser.user.uid));\r\n        }\r\n    } catch (error) {\r\n        yield put(showAuthMessage(error));\r\n    }\r\n}\r\n\r\nfunction* signInUserWithGoogle() {\r\n    try {\r\n        const signUpUser = yield call(signInUserWithGoogleRequest);\r\n        if (signUpUser.message) {\r\n            yield put(showAuthMessage(signUpUser.message));\r\n        } else {\r\n            localStorage.setItem('user_id', signUpUser.user.uid);\r\n            yield put(userGoogleSignInSuccess(signUpUser.user.uid));\r\n        }\r\n    } catch (error) {\r\n        yield put(showAuthMessage(error));\r\n    }\r\n}\r\n\r\n\r\nfunction* signInUserWithFacebook() {\r\n    try {\r\n        const signUpUser = yield call(signInUserWithFacebookRequest);\r\n        if (signUpUser.message) {\r\n            yield put(showAuthMessage(signUpUser.message));\r\n        } else {\r\n            localStorage.setItem('user_id', signUpUser.user.uid);\r\n            yield put(userFacebookSignInSuccess(signUpUser.user.uid));\r\n        }\r\n    } catch (error) {\r\n        yield put(showAuthMessage(error));\r\n    }\r\n}\r\n\r\n\r\nfunction* signInUserWithGithub() {\r\n    try {\r\n        const signUpUser = yield call(signInUserWithGithubRequest);\r\n        if (signUpUser.message) {\r\n            yield put(showAuthMessage(signUpUser.message));\r\n        } else {\r\n            localStorage.setItem('user_id', signUpUser.user.uid);\r\n            yield put(userGithubSignInSuccess(signUpUser.user.uid));\r\n        }\r\n    } catch (error) {\r\n        yield put(showAuthMessage(error));\r\n    }\r\n}\r\n\r\n\r\nfunction* signInUserWithTwitter() {\r\n    try {\r\n        const signUpUser = yield call(signInUserWithTwitterRequest);\r\n        if (signUpUser.message) {\r\n            if (signUpUser.message.length > 100) {\r\n                yield put(showAuthMessage('Your request has been canceled.'));\r\n            } else {\r\n                yield put(showAuthMessage(signUpUser.message));\r\n            }\r\n        } else {\r\n            localStorage.setItem('user_id', signUpUser.user.uid);\r\n            yield put(userTwitterSignInSuccess(signUpUser.user.uid));\r\n        }\r\n    } catch (error) {\r\n        yield put(showAuthMessage(error));\r\n    }\r\n}\r\n\r\nfunction* signInUserWithEmailPassword({payload}) {\r\n    const {email, password} = payload;\r\n    try {\r\n        const signInUser = yield call(signInUserWithEmailPasswordRequest, email, password);\r\n        if (signInUser.message) {\r\n            yield put(showAuthMessage(signInUser.message));\r\n        } else {\r\n            localStorage.setItem('user_id', signInUser.user.uid);\r\n            yield put(userSignInSuccess(signInUser.user.uid));\r\n        }\r\n    } catch (error) {\r\n        yield put(showAuthMessage(error));\r\n    }\r\n}\r\n\r\nfunction* signOut() {\r\n    try {\r\n        const signOutUser = yield call(signOutRequest);\r\n        if (signOutUser === undefined) {\r\n            yield put(userSignOutSuccess(signOutUser));\r\n        } else {\r\n            yield put(showAuthMessage(signOutUser.message));\r\n        }\r\n    } catch (error) {\r\n        yield put(showAuthMessage(error));\r\n    }\r\n}\r\n\r\nexport function* createUserAccount() {\r\n    yield takeEvery(SIGNUP_USER, createUserWithEmailPassword);\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    yield takeEvery(SIGNIN_GOOGLE_USER, signInUserWithGoogle);\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n    yield takeEvery(SIGNIN_FACEBOOK_USER, signInUserWithFacebook);\r\n}\r\n\r\nexport function* signInWithTwitter() {\r\n    yield takeEvery(SIGNIN_TWITTER_USER, signInUserWithTwitter);\r\n}\r\n\r\nexport function* signInWithGithub() {\r\n    yield takeEvery(SIGNIN_GITHUB_USER, signInUserWithGithub);\r\n}\r\n\r\nexport function* signInUser() {\r\n    yield takeEvery(SIGNIN_USER, signInUserWithEmailPassword);\r\n}\r\n\r\nexport function* signOutUser() {\r\n    yield takeEvery(SIGNOUT_USER, signOut);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([fork(signInUser),\r\n        fork(createUserAccount),\r\n        fork(signInWithGoogle),\r\n        fork(signInWithFacebook),\r\n        fork(signInWithTwitter),\r\n        fork(signInWithGithub),\r\n        fork(signOutUser)]);\r\n}"]},"metadata":{},"sourceType":"module"}