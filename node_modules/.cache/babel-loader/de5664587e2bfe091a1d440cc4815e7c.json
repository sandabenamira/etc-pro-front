{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/Home/DashboradProfessor/CheckBoxListControl.js\";\nimport React, { Component } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Badge } from \"reactstrap\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport { Card, CardBody, CardSubtitle, CardText } from \"reactstrap\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nconst users = [{\n  id: 1\n}, {\n  id: 2\n}, {\n  id: 3\n}];\n\nclass CheckBoxListControl extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checked: [1]\n    };\n\n    this.handleToggle = (event, value) => {\n      const {\n        checked\n      } = this.state;\n      const currentIndex = checked.indexOf(value);\n      const newChecked = [...checked];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      this.setState({\n        checked: newChecked\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardActionArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-lg-12 col-md-12 justify-content-start align-items-center \",\n      style: {\n        height: \"40px\",\n        backgroundColor: \"#FACC03\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        position: \"absolute\",\n        marginTop: \"10px\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"dashborad.prof.examen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        right: 0,\n        top: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-more-vert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    })), \"\\xA0\", /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-close\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, users.map(user => /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: user.email,\n      onClick: event => this.handleToggle(event, user.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n      className: \"pr-2 \",\n      color: \"primary\",\n      style: {\n        fontSize: 20,\n        marginBottom: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      className: \"br-break \",\n      primary: \"Mardi 1 d\\xE9c\",\n      secondary: \"Nov 8, 2020\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Badge, {\n      className: \"ml-4 text-uppercase\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"3\\xE9me D1\"), /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: this.state.checked.indexOf(user.id) !== -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default CheckBoxListControl;","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/Home/DashboradProfessor/CheckBoxListControl.js"],"names":["React","Component","List","ListItem","ListItemText","Checkbox","Badge","FiberManualRecordIcon","Card","CardBody","CardSubtitle","CardText","CardActionArea","IconButton","IntlMessages","users","id","CheckBoxListControl","state","checked","handleToggle","event","value","currentIndex","indexOf","newChecked","push","splice","setState","render","height","backgroundColor","position","marginTop","color","right","top","map","user","email","fontSize","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Badge } from \"reactstrap\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport { Card, CardBody, CardSubtitle, CardText } from \"reactstrap\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\n\nconst users = [{ id: 1 }, { id: 2 }, { id: 3 }];\n\nclass CheckBoxListControl extends Component {\n  state = {\n    checked: [1],\n  };\n\n  handleToggle = (event, value) => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  };\n\n  render() {\n    return (\n      <Card>\n        <CardActionArea>\n          <div\n            className=\" col-lg-12 col-md-12 justify-content-start align-items-center \"\n            style={{ height: \"40px\", backgroundColor: \"#FACC03\" }}\n          >\n            <span\n              style={{\n                position: \"absolute\",\n                marginTop: \"10px\",\n                color: \"black\",\n              }}\n            >\n               <IntlMessages id=\"dashborad.prof.examen\" />{\" \"} \n            </span>\n            <div\n              style={{\n                position: \"absolute\",\n                right: 0,\n                top: 0,\n              }}\n            >\n              <IconButton>\n                <i className=\"zmdi zmdi-more-vert\" />\n              </IconButton>\n              &nbsp;\n              <IconButton>\n                <i className=\"zmdi zmdi-close\" size=\"small\" />\n              </IconButton>\n            </div>\n          </div>\n        </CardActionArea>\n        <CardBody>\n          <List>\n            {users.map((user) => (\n              <ListItem\n                button\n                key={user.email}\n                onClick={(event) => this.handleToggle(event, user.id)}\n              >\n                <FiberManualRecordIcon\n                  className=\"pr-2 \"\n                  color=\"primary\"\n                  style={{ fontSize: 20, marginBottom: \"10px\" }}\n                />\n                <ListItemText\n                  className=\"br-break \"\n                  primary=\"Mardi 1 déc\"\n                  secondary=\"Nov 8, 2020\"\n                />\n                <Badge className=\"ml-4 text-uppercase\" color=\"primary\">\n                  3éme D1\n                </Badge>\n                <Checkbox\n                  color=\"primary\"\n                  checked={this.state.checked.indexOf(user.id) !== -1}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default CheckBoxListControl;\n"]},"metadata":{},"sourceType":"module"}