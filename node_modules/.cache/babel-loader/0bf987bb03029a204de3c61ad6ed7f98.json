{"ast":null,"code":"import { FETECHED_ALL_SERVICES, ADD_SERVICE, EDIT_SERVICE, DELETE_SERVICE, HANDLE_REQUEST_CLOSE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, FETECHED_ALL_SERVICES_ARCHIVES, LIST_ALLOCATION_SERVICE, FETECHED_ALL_SERVICES_V2 } from \"../constants/ActionTypes\";\nconst initialState = {\n  remoteServices: [],\n  archiveServices: [],\n  allocationService: [],\n  servicesV2: []\n};\nexport default function (state = initialState, action) {\n  if (action.type === FETECHED_ALL_SERVICES) {\n    return Object.assign({}, state, {\n      remoteServices: action.payload\n    });\n  }\n\n  if (action.type === FETECHED_ALL_SERVICES_V2) {\n    return Object.assign({}, state, {\n      servicesV2: action.payload\n    });\n  }\n\n  if (action.type === FETECHED_ALL_SERVICES_ARCHIVES) {\n    return Object.assign({}, state, {\n      archiveServices: action.payload\n    });\n  }\n\n  if (action.type === ADD_SERVICE) {\n    return Object.assign({}, state, {\n      remoteServices: state.remoteServices.concat(action.payload)\n    });\n  }\n\n  if (action.type === DELETE_SERVICE) {\n    return Object.assign({}, state, {\n      remoteServices: [...state.remoteServices.filter(element => element.id !== action.payload.id)]\n    });\n  }\n\n  if (action.type === EDIT_SERVICE) {\n    return Object.assign({}, state, {\n      remoteServices: [...state.remoteServices.filter(element => element.id !== action.payload.id), action.payload]\n    });\n  }\n\n  if (action.type === LIST_ALLOCATION_SERVICE) {\n    return Object.assign({}, state, {\n      allocationService: action.payload\n    });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/reducers/ServiceReducer.js"],"names":["FETECHED_ALL_SERVICES","ADD_SERVICE","EDIT_SERVICE","DELETE_SERVICE","HANDLE_REQUEST_CLOSE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","FETECHED_ALL_SERVICES_ARCHIVES","LIST_ALLOCATION_SERVICE","FETECHED_ALL_SERVICES_V2","initialState","remoteServices","archiveServices","allocationService","servicesV2","state","action","type","Object","assign","payload","concat","filter","element","id"],"mappings":"AAAA,SACEA,qBADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,cAJF,EAKEC,oBALF,EAMEC,kBANF,EAOEC,kBAPF,EAQEC,8BARF,EASEC,uBATF,EAUEC,wBAVF,QAWO,0BAXP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,EADG;AAEnBC,EAAAA,eAAe,EAAE,EAFE;AAGnBC,EAAAA,iBAAiB,EAAE,EAHA;AAInBC,EAAAA,UAAU,EAAE;AAJO,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgBjB,qBAApB,EAA2C;AACzC,WAAOkB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BJ,MAAAA,cAAc,EAAEK,MAAM,CAACI;AADO,KAAzB,CAAP;AAGD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBR,wBAApB,EAA8C;AAC5C,WAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BD,MAAAA,UAAU,EAAEE,MAAM,CAACI;AADW,KAAzB,CAAP;AAGD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBV,8BAApB,EAAoD;AAClD,WAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BH,MAAAA,eAAe,EAAEI,MAAM,CAACI;AADM,KAAzB,CAAP;AAGD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBhB,WAApB,EAAiC;AAC/B,WAAOiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BJ,MAAAA,cAAc,EAAEI,KAAK,CAACJ,cAAN,CAAqBU,MAArB,CAA4BL,MAAM,CAACI,OAAnC;AADc,KAAzB,CAAP;AAGD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBd,cAApB,EAAoC;AAClC,WAAOe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BJ,MAAAA,cAAc,EAAE,CACd,GAAGI,KAAK,CAACJ,cAAN,CAAqBW,MAArB,CACAC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAD1C,CADW;AADc,KAAzB,CAAP;AAOD;;AAED,MAAIR,MAAM,CAACC,IAAP,KAAgBf,YAApB,EAAkC;AAChC,WAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BJ,MAAAA,cAAc,EAAE,CACd,GAAGI,KAAK,CAACJ,cAAN,CAAqBW,MAArB,CACAC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAD1C,CADW,EAIdR,MAAM,CAACI,OAJO;AADc,KAAzB,CAAP;AAQD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBT,uBAApB,EAA6C;AAC3C,WAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,iBAAiB,EAAEG,MAAM,CAACI;AADI,KAAzB,CAAP;AAGD;;AAED,SAAOL,KAAP;AACD","sourcesContent":["import {\n  FETECHED_ALL_SERVICES,\n  ADD_SERVICE,\n  EDIT_SERVICE,\n  DELETE_SERVICE,\n  HANDLE_REQUEST_CLOSE,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  FETECHED_ALL_SERVICES_ARCHIVES,\n  LIST_ALLOCATION_SERVICE,\n  FETECHED_ALL_SERVICES_V2,\n} from \"../constants/ActionTypes\";\n\nconst initialState = {\n  remoteServices: [],\n  archiveServices: [],\n  allocationService: [],\n  servicesV2: [],\n};\n\nexport default function(state = initialState, action) {\n  if (action.type === FETECHED_ALL_SERVICES) {\n    return Object.assign({}, state, {\n      remoteServices: action.payload,\n    });\n  }\n  if (action.type === FETECHED_ALL_SERVICES_V2) {\n    return Object.assign({}, state, {\n      servicesV2: action.payload,\n    });\n  }\n  if (action.type === FETECHED_ALL_SERVICES_ARCHIVES) {\n    return Object.assign({}, state, {\n      archiveServices: action.payload,\n    });\n  }\n\n  if (action.type === ADD_SERVICE) {\n    return Object.assign({}, state, {\n      remoteServices: state.remoteServices.concat(action.payload),\n    });\n  }\n\n  if (action.type === DELETE_SERVICE) {\n    return Object.assign({}, state, {\n      remoteServices: [\n        ...state.remoteServices.filter(\n          (element) => element.id !== action.payload.id\n        ),\n      ],\n    });\n  }\n\n  if (action.type === EDIT_SERVICE) {\n    return Object.assign({}, state, {\n      remoteServices: [\n        ...state.remoteServices.filter(\n          (element) => element.id !== action.payload.id\n        ),\n        action.payload,\n      ],\n    });\n  }\n  if (action.type === LIST_ALLOCATION_SERVICE) {\n    return Object.assign({}, state, {\n      allocationService: action.payload,\n    });\n  }\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}