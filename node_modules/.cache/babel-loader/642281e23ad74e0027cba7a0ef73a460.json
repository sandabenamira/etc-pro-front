{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js\";\nimport React from 'react';\nimport IconWithTextCard from '../../../CommonComponents/IconWithTextCard';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport HomeworkInProgress from './HomeworkInProgress';\nimport CardBox from '../../../../../components/CardBox/index';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport RemoveSharpIcon from '@material-ui/icons/RemoveSharp';\nimport { connect } from 'react-redux';\nimport AddHomework from './AddHomework';\nimport { UncontrolledAlert } from 'reactstrap';\nimport { classService } from '../../../../../_services/class.service';\nimport HomeworkList from './HomeworkList';\nimport _ from 'lodash';\nimport { addNewHomework, getHomework } from '../../../../../actions/HomeworkAction';\nimport ArchivedHomework from './ArchivedHomework';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { roleIdAdmin, roleIdProfessor } from '../../../../../config/config';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { element } from 'prop-types';\n\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeFilterStatus = name => event => {\n      if (this.state.classId !== null) {\n        if (event.target.value === 'all') {\n          this.setState({\n            [name]: event.target.value,\n            homeworks: this.state.homeworkClass\n          });\n        } else {\n          let homeworks = this.state.homeworkClass.filter(element => element.status === event.target.value);\n          this.setState({\n            [name]: event.target.value,\n            homeworks\n          });\n        }\n      } else {\n        if (event.target.value === 'all') {\n          this.setState({\n            [name]: event.target.value,\n            homeworks: this.props.homeworks\n          });\n        } else {\n          let homeworks = this.props.homeworks.filter(element => element.status === event.target.value);\n          this.setState({\n            [name]: event.target.value,\n            homeworks\n          });\n        }\n      }\n    };\n\n    this.handleChangeFilterType = name => event => {\n      let homeworksList = [];\n\n      if (this.state.classId !== null) {\n        homeworksList = this.state.homeworkClass;\n      } else {\n        homeworksList = this.props.homeworks;\n      }\n\n      if (event.target.value === 'all') {\n        this.setState({\n          [name]: event.target.value,\n          homeworks: homeworksList\n        });\n      } else {\n        let homeworks = homeworksList.filter(element => element.homework.homework_type === event.target.value);\n        this.setState({\n          [name]: event.target.value,\n          homeworks\n        });\n      }\n    };\n\n    this.handleChangeFilter = name => event => {\n      let homeworks = this.props.homeworks.filter(element => element.classId === event.target.value);\n      this.setState({\n        [name]: event.target.value,\n        homeworks,\n        homeworkClass: homeworks,\n        statusHomework: \"\",\n        idType: \"\"\n      });\n    };\n\n    this.handleChangeClassList = selectedOption => {\n      if (selectedOption != null) {\n        let classesId = _.map(selectedOption, 'id');\n\n        this.setState({\n          classesId,\n          isEmptylistClass: false,\n          classesData: selectedOption\n        });\n      } else {\n        this.setState({\n          classesId: []\n        });\n      }\n    };\n\n    this.handleChangeDate = name => date => {\n      this.setState({\n        [name]: date\n      });\n\n      if (name === 'publicationDate') {\n        this.setState({\n          renderingDate: date,\n          correctionDate: date\n        });\n      } else if (name === 'renderingDate') {\n        this.setState({\n          correctionDate: date\n        });\n      }\n    };\n\n    this.handleChangePostTime = time => {\n      this.setState({\n        postTime: time._d\n      });\n    };\n\n    this.handleChangeSubject = selectedOption => {\n      this.setState({\n        subjectId: selectedOption.id,\n        subjectColor: selectedOption.color,\n        subjectName: selectedOption.label,\n        errorClass: false\n      });\n\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include]=class&filter[include]=course`;\n        classService.get(apiEndpoint).then(response => {\n          if (response) {\n            let classesSubjects = response.data.filter(element => element.status);\n            let newList = [];\n            classesSubjects.map(element => {\n              let object = {};\n\n              if (!_.isEmpty(element.course)) {\n                object.label = element.class.name;\n                object.id = element.course[0].id;\n                object.value = element.course[0].id;\n                newList.push(object);\n              }\n            });\n            this.setState({\n              classes: newList\n            });\n          }\n        });\n      } else {\n        let apiEndpoint = `/assignment_class_subjects/${selectedOption.value}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n        classService.get(apiEndpoint).then(response => {\n          if (response) {\n            let element = response.data;\n\n            if (element.status) {\n              let object = {};\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n              this.setState({\n                classes: [object]\n              });\n            }\n          }\n        });\n      }\n    };\n\n    this.handleChangeHomeworkType = selectedOption => {\n      this.setState({\n        homeworkType: selectedOption.value\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      isOpenAddModal: false,\n      openArchive: false,\n      nameFile: '',\n      HomeworkTypes: [{\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.book.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 18\n          }\n        }),\n        value: 'book',\n        id: 1\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.series.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 18\n          }\n        }),\n        value: 'serie',\n        id: 2\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.other.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 18\n          }\n        }),\n        value: 'other',\n        id: 3\n      }],\n      HomeworkStatus: [{\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"status.classe.virtual.programm\\xE9\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 18\n          }\n        }),\n        value: 'programed',\n        id: 1\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"status.classe.virtual.progr\\xE9s\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 18\n          }\n        }),\n        value: 'progress',\n        id: 2\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"status.classe.virtual.t\\xE9rmin\\xE9\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 18\n          }\n        }),\n        value: 'finished',\n        id: 3\n      }],\n      homeworkType: '',\n      subjectId: null,\n      subjectColor: '',\n      description: '',\n      courseUrl: '',\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: '',\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: '',\n      classId: null,\n      classList: [],\n      homeworks: [],\n      statusHomework: '',\n      homeworkClass: [],\n      idType: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.addNewHomework = this.addNewHomework.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.openArchive = this.openArchive.bind(this);\n    this.handleChangeFilter = this.handleChangeFilter.bind(this);\n    this.handleChangeFilterType = this.handleChangeFilterType.bind(this);\n    this.handleDate = this.handleDate.bind(this);\n    this.handleChangeFilterStatus = this.handleChangeFilterStatus.bind(this);\n  }\n\n  handleDate() {\n    let homeworksList = [];\n\n    if (this.state.classId !== null) {\n      homeworksList = this.state.homeworkClass;\n    } else {\n      homeworksList = this.props.homeworks;\n    }\n\n    let homeworks = [];\n    homeworksList.forEach(element => {\n      let item = { ...element,\n        date: new Date(element.homework.publication_date)\n      };\n      homeworks.push(item);\n    });\n    const sortedHomework = homeworks.slice().sort((a, b) => b.date - a.date);\n    this.setState({\n      homeworks: sortedHomework\n    });\n  }\n\n  cancelModal() {\n    this.setState({\n      isOpenAddModal: false,\n      nameFile: '',\n      homeworkType: '',\n      subjectId: null,\n      subjectColor: '',\n      description: '',\n      courseUrl: '',\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      eventChecked: '',\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: ''\n    });\n  }\n\n  addNewHomework(e) {\n    e.preventDefault();\n\n    if (this.state.subjectId === null) {\n      this.setState({\n        errorClass: true\n      });\n    } else if (_.isEmpty(this.state.classesId)) {\n      this.setState({\n        isEmptylistClass: true\n      });\n    } else {\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType = this.state.homeworkType;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      dataHomework.correctionDate = this.state.correctionDate;\n      dataHomework.renderingDate = this.state.renderingDate;\n      dataHomework.subjectName = this.state.subjectName;\n      this.props.dispatch(addNewHomework(dataHomework, this.state.homeworkFiles, this.state.classesData));\n      this.cancelModal();\n    }\n  }\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter(element => element != filename);\n    let homeworkFiles = this.state.homeworkFiles.filter(element => element.name != filename);\n    this.setState({\n      nameFiles,\n      homeworkFiles\n    });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map(element => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({\n        homeworkFiles: oldFiles,\n        nameFiles\n      });\n    } else {\n      this.setState({\n        messageAlerte: 'Vous avez dépasser 5 fichiers',\n        alerteStatus: true\n      });\n      setTimeout(() => {\n        this.setState({\n          messageAlerte: '',\n          alerteStatus: false\n        });\n      }, 4000);\n    }\n  }\n\n  openAddModal() {\n    this.setState({\n      isOpenAddModal: !this.state.isOpenAddModal\n    });\n  }\n\n  openArchive() {\n    this.setState(previousState => ({\n      openArchive: !previousState.openArchive\n    }));\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({\n        subjects,\n        classList: this.props.classSettings\n      });\n    } else if (this.props.userProfile.role_id === roleIdProfessor) {\n      const professorId = this.props.userProfile.user.profiles[0].professors[0].id;\n      let apiEndpoint = `/course_v4?access_token=${localStorage.token}&filter[where][fk_id_professor]=${professorId}&filter[include][assignmentClassSubject]=subject&filter[include][assignmentClassSubject]=class`;\n      classService.get(apiEndpoint).then(response => {\n        if (response) {\n          let subjects = [];\n          let classes = [];\n          response.data.map(element => {\n            let object = {};\n            let classItem = {};\n            object.label = element.assignmentClassSubject.subject.name;\n            object.id = element.assignmentClassSubject.subject.id;\n            object.value = element.assignmentClassSubject.id;\n            subjects.push(object);\n            classItem = element.assignmentClassSubject.class;\n            classes.push(classItem);\n          });\n          this.setState({\n            subjects,\n            classList: classes\n          });\n        }\n      });\n    }\n\n    this.props.dispatch(getHomework(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id, this.props.userProfile.id, this.props.userProfile.role_id));\n  }\n\n  componentDidUpdate(previouProps) {\n    if (previouProps.subjects !== this.props.subjects) {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        let subjects = createListSubject(this.props.subjects);\n        this.setState({\n          subjects\n        });\n      }\n    }\n\n    if (previouProps.classSettings !== this.props.classSettings) {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        this.setState({\n          classList: this.props.classSettings\n        });\n      }\n    }\n\n    if (previouProps.homeworks !== this.props.homeworks) {\n      this.setState({\n        homeworks: this.props.homeworks\n      });\n    }\n  }\n\n  render() {\n    let detailCards = [{\n      cardColor: 'primary',\n      imageIcon: require('../../../../../assets/images/dashboard/teams-icon.png'),\n      // title: this.props.virtualClasses.length,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `message.Numbers.of.students`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: 'secondary',\n      imageIcon: require('../../../../../assets/images/dashboard/tasks-icon.png'),\n      // title: this.state.prog,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.file`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: 'info',\n      imageIcon: require('../../../../../assets/images/dashboard/project-icon.png'),\n      // title: this.state.encours,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.uncorrected`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: 'success',\n      imageIcon: require('../../../../../assets/images/dashboard/files-icon.png'),\n      // title: this.state.encours,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.educational.files`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 19\n        }\n      })\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper col-lg-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md- col-sm-12  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }\n    }, detailCards.map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconWithTextCard, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }\n    }, this.state.alerteStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }\n    }, \" \", this.state.messageAlerte, \" \")), this.props.errorStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger   text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \")), this.props.successStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-auto \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(HomeworkInProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'add-homework',\n        permissionList: this.props.userPermission\n      },\n      yes: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardBox, {\n        styleName: \"col-lg-12 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        size: \"small\",\n        color: \"secondary\",\n        \"aria-label\": \"Add\",\n        onClick: this.openAddModal.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 31\n        }\n      }, this.state.isOpenAddModal ? /*#__PURE__*/React.createElement(RemoveSharpIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 62\n        }\n      }) : /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 84\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2\",\n        style: {\n          fontFamily: 'Roboto',\n          fontSize: '17px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"modal.addToDo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pl-5 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        size: \"small\",\n        \"aria-label\": \"Add\",\n        style: {\n          backgroundColor: '#ffbb33',\n          color: '#ffffff'\n        },\n        onClick: this.openArchive,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2\",\n        style: {\n          fontFamily: 'Roboto',\n          fontSize: '17px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"icon.archives\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 31\n        }\n      })))), this.state.isOpenAddModal && /*#__PURE__*/React.createElement(CardBox, {\n        styleName: \"col-lg-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(AddHomework, {\n        values: this.state,\n        handleChange: this.handleChange,\n        handleChangeHomeworkType: this.handleChangeHomeworkType,\n        subjects: this.state.subjects,\n        handleChangeSubject: this.handleChangeSubject,\n        attachFile: this.attachFile,\n        deleteFile: this.deleteFile,\n        handleChangePostTime: this.handleChangePostTime,\n        handleChangeDate: this.handleChangeDate,\n        handleChangeClassList: this.handleChangeClassList,\n        addNewHomework: this.addNewHomework,\n        cancelModal: this.cancelModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-wrap flex-row bd-highlight mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"idClasse\",\n        name: \"idClasse\",\n        select: true,\n        value: this.state.classId,\n        onChange: this.handleChangeFilter('classId'),\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.note.class`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 38\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 29\n        }\n      }, this.state.classList.length > 0 ? this.state.classList.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n        key: option.id,\n        value: option.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 35\n        }\n      }, option.name)) : /*#__PURE__*/React.createElement(MenuItem, {\n        key: 0,\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 33\n        }\n      }, \"Pas de classe\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 27\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"statusHomework\",\n        name: \"statusHomework\",\n        select: true,\n        value: this.state.statusHomework,\n        onChange: this.handleChangeFilterStatus('statusHomework'),\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.todo.etat`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 38\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        key: 0,\n        value: \"all\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 31\n        }\n      }, ' ', /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `userStuppDisplay.all`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 34\n        }\n      })), this.state.HomeworkStatus.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n        key: option.id,\n        value: option.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 33\n        }\n      }, option.label)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 27\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"idType\",\n        name: \"idType\",\n        select: true,\n        value: this.state.idType || '',\n        onChange: this.handleChangeFilterType('idType'),\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.todo.type`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 38\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        key: 0,\n        value: \"all\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 31\n        }\n      }, ' ', /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `userStuppDisplay.all`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 34\n        }\n      })), this.state.HomeworkTypes.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n        key: option.id,\n        value: option.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 33\n        }\n      }, option.label)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 27\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5  bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        onClick: this.handleDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"complaint.date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 31\n        }\n      }))))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-homework',\n        permissionList: this.props.userPermission\n      },\n      yes: () => /*#__PURE__*/React.createElement(React.Fragment, null, this.state.openArchive ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArchivedHomework, {\n        homeworks: this.props.archivedHomework,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 29\n        }\n      })) : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-homework',\n        permissionList: this.props.userPermission\n      },\n      yes: () => /*#__PURE__*/React.createElement(React.Fragment, null, !this.state.openArchive ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(HomeworkList, {\n        homeworks: this.state.homeworks,\n        subjects: this.state.subjects,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 29\n        }\n      })) : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    subjects: state.subject.subjects,\n    homeworks: state.HomeworkReducer.homeworks,\n    archivedHomework: state.HomeworkReducer.archivedHomework,\n    classSettings: state.ClassSettingsReducer.classSettings,\n    userPermission: state.PermissionReducer.userPermission\n  };\n};\n\nexport default connect(mapStateToProps)(Homework);\n\nfunction createListSubject(subjects) {\n  let newList = subjects.map(element => {\n    let object = {};\n    object.label = element.name;\n    object.id = element.id;\n    object.value = element.id;\n    object.color = element.color;\n    return object;\n  });\n  return newList;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js"],"names":["React","IconWithTextCard","IntlMessages","HomeworkInProgress","CardBox","AddIcon","Fab","DeleteOutlineIcon","RemoveSharpIcon","connect","AddHomework","UncontrolledAlert","classService","HomeworkList","_","addNewHomework","getHomework","ArchivedHomework","Can","RoleContext","TextField","moment","roleIdAdmin","roleIdProfessor","MenuItem","element","Homework","Component","constructor","props","handleChangeFilterStatus","name","event","state","classId","target","value","setState","homeworks","homeworkClass","filter","status","handleChangeFilterType","homeworksList","homework","homework_type","handleChangeFilter","statusHomework","idType","handleChangeClassList","selectedOption","classesId","map","isEmptylistClass","classesData","handleChangeDate","date","renderingDate","correctionDate","handleChangePostTime","time","postTime","_d","handleChangeSubject","subjectId","id","subjectColor","color","subjectName","label","errorClass","userProfile","role_id","apiEndpoint","localStorage","token","get","then","response","classesSubjects","data","newList","object","isEmpty","course","class","push","classes","handleChangeHomeworkType","homeworkType","handleChange","isOpenAddModal","openArchive","nameFile","HomeworkTypes","HomeworkStatus","description","courseUrl","homeworkFiles","nameFiles","publicationDate","Date","subjects","eventChecked","classList","bind","attachFile","deleteFile","cancelModal","handleDate","forEach","item","publication_date","sortedHomework","slice","sort","a","b","e","preventDefault","dataHomework","title","publicationTime","dispatch","filename","oldFiles","files","Object","values","undefined","length","messageAlerte","alerteStatus","setTimeout","openAddModal","previousState","UNSAFE_componentWillMount","createListSubject","classSettings","professorId","user","profiles","professors","classItem","assignmentClassSubject","subject","establishment_id","school_year_id","componentDidUpdate","previouProps","render","detailCards","cardColor","imageIcon","require","subTitle","index","errorStatus","message","successStatus","role","permission","permissionList","userPermission","fontFamily","fontSize","backgroundColor","disableUnderline","option","archivedHomework","mapStateToProps","auth","alert","success","error","HomeworkReducer","ClassSettingsReducer","PermissionReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IconWithTextCard from '../../../CommonComponents/IconWithTextCard';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport HomeworkInProgress from './HomeworkInProgress';\nimport CardBox from '../../../../../components/CardBox/index';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport RemoveSharpIcon from '@material-ui/icons/RemoveSharp';\nimport { connect } from 'react-redux';\nimport AddHomework from './AddHomework';\nimport { UncontrolledAlert } from 'reactstrap';\nimport { classService } from '../../../../../_services/class.service';\nimport HomeworkList from './HomeworkList';\nimport _ from 'lodash';\nimport { addNewHomework, getHomework } from '../../../../../actions/HomeworkAction';\nimport ArchivedHomework from './ArchivedHomework';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { roleIdAdmin, roleIdProfessor } from '../../../../../config/config';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { element } from 'prop-types';\n\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenAddModal: false,\n      openArchive: false,\n      nameFile: '',\n      HomeworkTypes: [\n        {\n          label: <IntlMessages id=\"toDo.book.exercise\" />,\n          value: 'book',\n          id: 1,\n        },\n        {\n          label: <IntlMessages id=\"toDo.series.exercise\" />,\n          value: 'serie',\n          id: 2,\n        },\n        {\n          label: <IntlMessages id=\"toDo.other.exercise\" />,\n          value: 'other',\n          id: 3,\n        },\n      ],\n\n      HomeworkStatus: [\n        {\n          label: <IntlMessages id=\"status.classe.virtual.programmé\" />,\n          value: 'programed',\n          id: 1,\n        },\n        {\n          label: <IntlMessages id=\"status.classe.virtual.progrés\" />,\n          value: 'progress',\n          id: 2,\n        },\n        {\n          label: <IntlMessages id=\"status.classe.virtual.términé\" />,\n          value: 'finished',\n          id: 3,\n        },\n      ],\n\n      homeworkType: '',\n      subjectId: null,\n      subjectColor: '',\n      description: '',\n      courseUrl: '',\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: '',\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: '',\n      classId: null,\n      classList: [],\n      homeworks: [],\n      statusHomework: '',\n      homeworkClass: [],\n      idType:\"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.addNewHomework = this.addNewHomework.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.openArchive = this.openArchive.bind(this);\n    this.handleChangeFilter = this.handleChangeFilter.bind(this);\n    this.handleChangeFilterType = this.handleChangeFilterType.bind(this);\n    this.handleDate = this.handleDate.bind(this);\n    this.handleChangeFilterStatus = this.handleChangeFilterStatus.bind(this);\n  }\n\n  handleChangeFilterStatus = (name) => (event) => {\n    if (this.state.classId !== null) {\n      if (event.target.value === 'all') {\n        this.setState({\n          [name]: event.target.value,\n          homeworks: this.state.homeworkClass,\n        });\n      } else {\n        let homeworks = this.state.homeworkClass.filter(\n          (element) => element.status === event.target.value\n        );\n        this.setState({ [name]: event.target.value, homeworks });\n      }\n    } else {\n      if (event.target.value === 'all') {\n        this.setState({\n          [name]: event.target.value,\n          homeworks: this.props.homeworks,\n        });\n      } else {\n        let homeworks = this.props.homeworks.filter(\n          (element) => element.status === event.target.value\n        );\n        this.setState({ [name]: event.target.value, homeworks });\n      }\n    }\n  };\n\n  handleDate() {\n    let homeworksList = [];\n    if (this.state.classId !== null) {\n      homeworksList = this.state.homeworkClass;\n    } else {\n      homeworksList = this.props.homeworks;\n    }\n\n    let homeworks = [];\n    homeworksList.forEach((element) => {\n      let item = {\n        ...element,\n        date: new Date(element.homework.publication_date),\n      };\n      homeworks.push(item);\n    });\n    const sortedHomework = homeworks.slice().sort((a, b) => b.date - a.date);\n    this.setState({\n      homeworks: sortedHomework,\n    });\n  }\n\n  handleChangeFilterType = (name) => (event) => {\n    let homeworksList = [];\n    if (this.state.classId !== null) {\n      homeworksList = this.state.homeworkClass;\n    } else {\n      homeworksList = this.props.homeworks;\n    }\n    if (event.target.value === 'all') {\n      this.setState({\n        [name]: event.target.value,\n        homeworks: homeworksList,\n      });\n    } else {\n      let homeworks = homeworksList.filter(\n        (element) => element.homework.homework_type === event.target.value\n      );\n      this.setState({ [name]: event.target.value, homeworks });\n    }\n  };\n\n  handleChangeFilter = (name) => (event) => {\n    let homeworks = this.props.homeworks.filter(\n      (element) => element.classId === event.target.value\n    );\n    this.setState({\n      [name]: event.target.value,\n      homeworks,\n      homeworkClass: homeworks,\n      statusHomework:\"\",\n      idType:\"\"\n    });\n  };\n\n  cancelModal() {\n    this.setState({\n      isOpenAddModal: false,\n      nameFile: '',\n      homeworkType: '',\n      subjectId: null,\n      subjectColor: '',\n      description: '',\n      courseUrl: '',\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      eventChecked: '',\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: '',\n    });\n  }\n\n  addNewHomework(e) {\n    e.preventDefault();\n    if (this.state.subjectId === null) {\n      this.setState({ errorClass: true });\n    } else if (_.isEmpty(this.state.classesId)) {\n      this.setState({ isEmptylistClass: true });\n    } else {\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType = this.state.homeworkType;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      dataHomework.correctionDate = this.state.correctionDate;\n      dataHomework.renderingDate = this.state.renderingDate;\n      dataHomework.subjectName = this.state.subjectName;\n      this.props.dispatch(\n        addNewHomework(dataHomework, this.state.homeworkFiles, this.state.classesData)\n      );\n      this.cancelModal();\n    }\n  }\n\n  handleChangeClassList = (selectedOption) => {\n    if (selectedOption != null) {\n      let classesId = _.map(selectedOption, 'id');\n      this.setState({\n        classesId,\n        isEmptylistClass: false,\n        classesData: selectedOption,\n      });\n    } else {\n      this.setState({ classesId: [] });\n    }\n  };\n\n  handleChangeDate = (name) => (date) => {\n    this.setState({ [name]: date });\n    if (name === 'publicationDate') {\n      this.setState({ renderingDate: date, correctionDate: date });\n    } else if (name === 'renderingDate') {\n      this.setState({ correctionDate: date });\n    }\n  };\n\n  handleChangePostTime = (time) => {\n    this.setState({ postTime: time._d });\n  };\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter((element) => element != filename);\n\n    let homeworkFiles = this.state.homeworkFiles.filter((element) => element.name != filename);\n\n    this.setState({ nameFiles, homeworkFiles });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map((element) => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({ homeworkFiles: oldFiles, nameFiles });\n    } else {\n      this.setState({\n        messageAlerte: 'Vous avez dépasser 5 fichiers',\n        alerteStatus: true,\n      });\n      setTimeout(() => {\n        this.setState({ messageAlerte: '', alerteStatus: false });\n      }, 4000);\n    }\n  }\n\n  handleChangeSubject = (selectedOption) => {\n    this.setState({\n      subjectId: selectedOption.id,\n      subjectColor: selectedOption.color,\n      subjectName: selectedOption.label,\n      errorClass: false,\n    });\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let classesSubjects = response.data.filter((element) => element.status);\n          let newList = [];\n          classesSubjects.map((element) => {\n            let object = {};\n            if (!_.isEmpty(element.course)) {\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n\n              newList.push(object);\n            }\n          });\n          this.setState({ classes: newList });\n        }\n      });\n    } else {\n      let apiEndpoint = `/assignment_class_subjects/${selectedOption.value}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let element = response.data;\n          if (element.status) {\n            let object = {};\n            object.label = element.class.name;\n            object.id = element.course[0].id;\n            object.value = element.course[0].id;\n            this.setState({ classes: [object] });\n          }\n        }\n      });\n    }\n  };\n\n  handleChangeHomeworkType = (selectedOption) => {\n    this.setState({ homeworkType: selectedOption.value });\n  };\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  openAddModal() {\n    this.setState({ isOpenAddModal: !this.state.isOpenAddModal });\n  }\n  openArchive() {\n    this.setState((previousState) => ({\n      openArchive: !previousState.openArchive,\n    }));\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({ subjects, classList: this.props.classSettings });\n    } else if (this.props.userProfile.role_id === roleIdProfessor) {\n      const professorId = this.props.userProfile.user.profiles[0].professors[0].id;\n      let apiEndpoint = `/course_v4?access_token=${localStorage.token}&filter[where][fk_id_professor]=${professorId}&filter[include][assignmentClassSubject]=subject&filter[include][assignmentClassSubject]=class`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let subjects = [];\n          let classes = [];\n          response.data.map((element) => {\n            let object = {};\n            let classItem = {};\n            object.label = element.assignmentClassSubject.subject.name;\n            object.id = element.assignmentClassSubject.subject.id;\n            object.value = element.assignmentClassSubject.id;\n            subjects.push(object);\n            classItem = element.assignmentClassSubject.class;\n            classes.push(classItem);\n          });\n          this.setState({ subjects, classList: classes });\n        }\n      });\n    }\n    this.props.dispatch(\n      getHomework(\n        this.props.userProfile.establishment_id,\n        this.props.userProfile.school_year_id,\n        this.props.userProfile.id,\n        this.props.userProfile.role_id\n      )\n    );\n  }\n  componentDidUpdate(previouProps) {\n    if (previouProps.subjects !== this.props.subjects) {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        let subjects = createListSubject(this.props.subjects);\n        this.setState({ subjects });\n      }\n    }\n    if (previouProps.classSettings !== this.props.classSettings) {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        this.setState({ classList: this.props.classSettings });\n      }\n    }\n    if (previouProps.homeworks !== this.props.homeworks) {\n      this.setState({ homeworks: this.props.homeworks });\n    }\n  }\n\n  render() {\n    let detailCards = [\n      {\n        cardColor: 'primary',\n        imageIcon: require('../../../../../assets/images/dashboard/teams-icon.png'),\n\n        // title: this.props.virtualClasses.length,\n        subTitle: <IntlMessages id={`message.Numbers.of.students`} />,\n      },\n      {\n        cardColor: 'secondary',\n        imageIcon: require('../../../../../assets/images/dashboard/tasks-icon.png'),\n        // title: this.state.prog,\n        subTitle: <IntlMessages id={`homework.file`} />,\n      },\n      {\n        cardColor: 'info',\n        imageIcon: require('../../../../../assets/images/dashboard/project-icon.png'),\n        // title: this.state.encours,\n        subTitle: <IntlMessages id={`homework.uncorrected`} />,\n      },\n      {\n        cardColor: 'success',\n        imageIcon: require('../../../../../assets/images/dashboard/files-icon.png'),\n        // title: this.state.encours,\n        subTitle: <IntlMessages id={`homework.educational.files`} />,\n      },\n    ];\n    return (\n      <div className=\"app-wrapper col-lg-12 col-md-12\">\n        <div className=\"d-flex flex-column mb-3\">\n          <div className=\"row col-lg-12 col-md- col-sm-12  \">\n            {detailCards.map((data, index) => (\n              <div key={index} className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\">\n                <IconWithTextCard data={data} />\n              </div>\n            ))}\n          </div>\n          <div>\n            {this.state.alerteStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-danger bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.state.messageAlerte} </span>\n              </UncontrolledAlert>\n            )}\n\n            {this.props.errorStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-danger   text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            )}\n            {this.props.successStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            )}\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-md-auto \">\n              <CardBox styleName=\"row\">\n                <HomeworkInProgress />\n              </CardBox>\n            </div>\n\n            <div className=\"col \">\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'add-homework',\n                      permissionList: this.props.userPermission,\n                    }}\n                    yes={() => (\n                      <>\n                        <CardBox styleName=\"col-lg-12 \">\n                          <div className=\"row\">\n                            <div>\n                              <Fab\n                                size=\"small\"\n                                color=\"secondary\"\n                                aria-label=\"Add\"\n                                onClick={this.openAddModal.bind(this)}\n                              >\n                                {this.state.isOpenAddModal ? <RemoveSharpIcon /> : <AddIcon />}\n                              </Fab>\n                            </div>\n                            <div className=\"p-2\" style={{ fontFamily: 'Roboto', fontSize: '17px' }}>\n                              <IntlMessages id=\"modal.addToDo\" />\n                            </div>\n\n                            <div className=\"pl-5 \">\n                              <Fab\n                                size=\"small\"\n                                aria-label=\"Add\"\n                                style={{ backgroundColor: '#ffbb33', color: '#ffffff' }}\n                                onClick={this.openArchive}\n                              >\n                                <DeleteOutlineIcon />\n                              </Fab>\n                            </div>\n                            <div className=\"p-2\" style={{ fontFamily: 'Roboto', fontSize: '17px' }}>\n                              <IntlMessages id=\"icon.archives\" />\n                            </div>\n                          </div>\n                        </CardBox>\n\n                        {this.state.isOpenAddModal && (\n                          <CardBox styleName=\"col-lg-12\">\n                            <AddHomework\n                              values={this.state}\n                              handleChange={this.handleChange}\n                              handleChangeHomeworkType={this.handleChangeHomeworkType}\n                              subjects={this.state.subjects}\n                              handleChangeSubject={this.handleChangeSubject}\n                              attachFile={this.attachFile}\n                              deleteFile={this.deleteFile}\n                              handleChangePostTime={this.handleChangePostTime}\n                              handleChangeDate={this.handleChangeDate}\n                              handleChangeClassList={this.handleChangeClassList}\n                              addNewHomework={this.addNewHomework}\n                              cancelModal={this.cancelModal}\n                            />\n                          </CardBox>\n                        )}\n                        <div className=\"d-flex flex-wrap flex-row bd-highlight mb-3\">\n                          <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-5\">\n                            <TextField\n                              id=\"idClasse\"\n                              name=\"idClasse\"\n                              select\n                              value={this.state.classId}\n                              onChange={this.handleChangeFilter('classId')}\n                              SelectProps={{}}\n                              label={<IntlMessages id={`components.note.class`} />}\n                              InputProps={{ disableUnderline: true }}\n                              margin=\"normal\"\n                              fullWidth\n                            >\n                              {this.state.classList.length > 0 ? (\n                                this.state.classList.map((option) => (\n                                  <MenuItem key={option.id} value={option.id}>\n                                    {option.name}\n                                  </MenuItem>\n                                ))\n                              ) : (\n                                <MenuItem key={0} value={0}>\n                                  Pas de classe\n                                </MenuItem>\n                              )}\n                            </TextField>\n                          </div>\n                          <div className=\"pt-5 bd-highlight\">|</div>\n\n                          <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                            <TextField\n                              id=\"statusHomework\"\n                              name=\"statusHomework\"\n                              select\n                              value={this.state.statusHomework}\n                              onChange={this.handleChangeFilterStatus('statusHomework')}\n                              SelectProps={{}}\n                              label={<IntlMessages id={`components.todo.etat`} />}\n                              InputProps={{ disableUnderline: true }}\n                              margin=\"normal\"\n                              fullWidth\n                            >\n                              <MenuItem key={0} value=\"all\">\n                                {' '}\n                                {<IntlMessages id={`userStuppDisplay.all`} />}\n                              </MenuItem>\n                              {this.state.HomeworkStatus.map((option) => (\n                                <MenuItem key={option.id} value={option.value}>\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </div>\n                          <div className=\"pt-5 bd-highlight\">|</div>\n                          <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                            <TextField\n                              id=\"idType\"\n                              name=\"idType\"\n                              select\n                              value={this.state.idType || ''}\n                              onChange={this.handleChangeFilterType('idType')}\n                              SelectProps={{}}\n                              label={<IntlMessages id={`components.todo.type`} />}\n                              InputProps={{ disableUnderline: true }}\n                              margin=\"normal\"\n                              fullWidth\n                            >\n                              <MenuItem key={0} value=\"all\">\n                                {' '}\n                                {<IntlMessages id={`userStuppDisplay.all`} />}\n                              </MenuItem>\n                              {this.state.HomeworkTypes.map((option) => (\n                                <MenuItem key={option.id} value={option.value}>\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </div>\n                          <div className=\"pt-5 bd-highlight\">|</div>\n                          <div className=\"pt-5  bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                            <h5 onClick={this.handleDate}>\n                              <IntlMessages id=\"complaint.date\" />\n                            </h5>\n                          </div>\n                        </div>\n                      </>\n                    )}\n                  />\n                )}\n              </RoleContext.Consumer>\n\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-homework',\n                      permissionList: this.props.userPermission,\n                    }}\n                    yes={() => (\n                      <>\n                        {this.state.openArchive ? (\n                          <div>\n                            <ArchivedHomework homeworks={this.props.archivedHomework} />\n                          </div>\n                        ) : (\n                          ''\n                        )}\n                      </>\n                    )}\n                  />\n                )}\n              </RoleContext.Consumer>\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-homework',\n                      permissionList: this.props.userPermission,\n                    }}\n                    yes={() => (\n                      <>\n                        {!this.state.openArchive ? (\n                          <div>\n                            <HomeworkList\n                              homeworks={this.state.homeworks}\n                              subjects={this.state.subjects}\n                            />\n                          </div>\n                        ) : (\n                          ''\n                        )}\n                      </>\n                    )}\n                  />\n                )}\n              </RoleContext.Consumer>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    subjects: state.subject.subjects,\n    homeworks: state.HomeworkReducer.homeworks,\n    archivedHomework: state.HomeworkReducer.archivedHomework,\n    classSettings: state.ClassSettingsReducer.classSettings,\n    userPermission: state.PermissionReducer.userPermission,\n  };\n};\nexport default connect(mapStateToProps)(Homework);\n\nfunction createListSubject(subjects) {\n  let newList = subjects.map((element) => {\n    let object = {};\n    object.label = element.name;\n    object.id = element.id;\n    object.value = element.id;\n    object.color = element.color;\n    return object;\n  });\n  return newList;\n}\n"]},"metadata":{},"sourceType":"module"}