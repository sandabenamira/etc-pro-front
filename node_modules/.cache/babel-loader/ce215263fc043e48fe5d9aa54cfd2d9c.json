{"ast":null,"code":"import { GET_CLASS_SETTINGS, EDIT_CLASS_SETTINGS, DELETE_CLASS_SETTINGS, ARCHIVED_GET_CLASS_SETTINGS, ADD_CLASS_SETTINGS } from \"../constants/ActionTypes\";\nconst initialState = {\n  classSettings: [],\n  archivedClassSettings: []\n};\nexport default function (state = initialState, action) {\n  if (action.type === GET_CLASS_SETTINGS) {\n    return Object.assign({}, state, {\n      classSettings: action.payload\n    });\n  }\n\n  if (action.type === ARCHIVED_GET_CLASS_SETTINGS) {\n    return Object.assign({}, state, {\n      archivedClassSettings: action.payload\n    });\n  }\n\n  if (action.type === ADD_CLASS_SETTINGS) {\n    return Object.assign({}, state, {\n      classSettings: state.classSettings.concat(action.payload)\n    });\n  }\n\n  if (action.type === EDIT_CLASS_SETTINGS) {\n    return Object.assign({}, state, {\n      classSettings: [...state.classSettings.filter(element => element.id !== action.payload.id), action.payload]\n    });\n  }\n\n  if (action.type === DELETE_CLASS_SETTINGS) {\n    return Object.assign({}, state, {\n      classSettings: [...state.classSettings.filter(element => element.id !== action.payload.id)],\n      archivedClassSettings: state.archivedClassSettings.concat(action.payload)\n    });\n  }\n\n  return state;\n}\n;","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/reducers/ClassSettingsReducer.js"],"names":["GET_CLASS_SETTINGS","EDIT_CLASS_SETTINGS","DELETE_CLASS_SETTINGS","ARCHIVED_GET_CLASS_SETTINGS","ADD_CLASS_SETTINGS","initialState","classSettings","archivedClassSettings","state","action","type","Object","assign","payload","concat","filter","element","id"],"mappings":"AAAA,SAASA,kBAAT,EAA4BC,mBAA5B,EAAgDC,qBAAhD,EAAuEC,2BAAvE,EAAoGC,kBAApG,QAA6H,0BAA7H;AAEA,MAAMC,YAAY,GAAG;AAChBC,EAAAA,aAAa,EAAC,EADE;AAEhBC,EAAAA,qBAAqB,EAAC;AAFN,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AAG/C,MAAIA,MAAM,CAACC,IAAP,KAAgBV,kBAApB,EAAwC;AACpC,WAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BF,MAAAA,aAAa,EAAEG,MAAM,CAACI;AADM,KAAzB,CAAP;AAGL;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBP,2BAApB,EAAiD;AAC/C,WAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BD,MAAAA,qBAAqB,EAAEE,MAAM,CAACI;AADF,KAAzB,CAAP;AAGL;;AAEC,MAAIJ,MAAM,CAACC,IAAP,KAAgBN,kBAApB,EAAwC;AACpC,WAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BF,MAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBQ,MAApB,CAA2BL,MAAM,CAACI,OAAlC;AADa,KAAzB,CAAP;AAGH;;AAGD,MAAIJ,MAAM,CAACC,IAAP,KAAgBT,mBAApB,EAAyC;AACrC,WAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BF,MAAAA,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAN,CAAoBS,MAApB,CAA2BC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAApE,CAAJ,EAA6ER,MAAM,CAACI,OAApF;AADa,KAAzB,CAAP;AAGH;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBR,qBAApB,EAA2C;AACjC,WAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,aAAa,EAAE,CACb,GAAGE,KAAK,CAACF,aAAN,CAAoBS,MAApB,CACDC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EADxC,CADU,CADe;AAM9BV,MAAAA,qBAAqB,EAAEC,KAAK,CAACD,qBAAN,CAA4BO,MAA5B,CAAmCL,MAAM,CAACI,OAA1C;AANO,KAAzB,CAAP;AAUD;;AAGT,SAAOL,KAAP;AAEH;AAAA","sourcesContent":["import { GET_CLASS_SETTINGS,EDIT_CLASS_SETTINGS,DELETE_CLASS_SETTINGS, ARCHIVED_GET_CLASS_SETTINGS, ADD_CLASS_SETTINGS} from \"../constants/ActionTypes\";\n\nconst initialState = {\n     classSettings:[],\n     archivedClassSettings:[],\n\n};\n\nexport default function (state = initialState, action) {\n\n\n        if (action.type === GET_CLASS_SETTINGS) {\n            return Object.assign({}, state, {\n                classSettings: action.payload\n            });\n      }\n      if (action.type === ARCHIVED_GET_CLASS_SETTINGS) {\n        return Object.assign({}, state, {\n            archivedClassSettings: action.payload\n        });\n  }\n\n    if (action.type === ADD_CLASS_SETTINGS) {\n        return Object.assign({}, state, {\n            classSettings: state.classSettings.concat(action.payload)\n        });\n    }\n\n\n    if (action.type === EDIT_CLASS_SETTINGS) {\n        return Object.assign({}, state, {\n            classSettings: [...state.classSettings.filter(element => element.id !== action.payload.id), action.payload]\n        });\n    }\n\n    if (action.type === DELETE_CLASS_SETTINGS) {\n              return Object.assign({}, state, {\n                classSettings: [\n                  ...state.classSettings.filter(\n                    element => element.id !== action.payload.id\n                  )\n                ],\n                archivedClassSettings: state.archivedClassSettings.concat(action.payload)\n\n\n              });\n            }\n\n\n    return state;\n\n};\n\n"]},"metadata":{},"sourceType":"module"}