{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/VirtualClasses/VirtualClassList.js\";\nimport React, { Component } from \"react\";\nimport VitualClassListItems from \"./VitualClassListItems\";\nimport EditVitualClass from \"./EditVitualClass\";\nimport { editClassVirtual } from \"../../../actions/VirtualClassAction\";\nimport { getClassesVirtual } from \"../../../actions/VirtualClassAction\";\nimport { connect } from \"react-redux\";\nimport { getSectionFromLevel } from \"../../../actions/sectionAction\";\nimport { getLevelListFromEstabType } from \"../../../actions/classLevelAction\";\nimport axios from \"axios\";\nimport baseUrl from \"../../../config/config\";\nimport { getSections } from \"../../../actions/sectionAction\";\nimport { getLevels } from \"../../../actions/classLevelAction\";\nimport { getLevelsVirtualClass } from \"../../../actions/classLevelAction\";\nimport { getClassesByEstablishmentId } from \"../../../actions/classeAction\";\nimport { element } from \"prop-types\";\nimport { roleIdSuperAdmin } from \"../../../config/config\";\nimport { roleIdAdmin } from \"../../../config/config\";\nimport { roleIdProfessor } from \"../../../config/config\";\nimport { roleIdParent } from \"../../../config/config\";\nimport { roleIdStudent } from \"../../../config/config\";\nimport { roleIdSupervisor } from \"../../../config/config\";\nimport { roleIdDirector } from \"../../../config/config\";\nimport _ from \"lodash\";\n\nclass VirtualClassList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editVirtualClass = () => {\n      var data = {};\n      data.id = this.state.id;\n      data.object = this.state.class_object;\n      data.class_id = this.state.class_id;\n      data.subject_id = this.state.subject_id;\n      data.class_url = this.state.class_url;\n      data.password = this.state.class_password;\n      data.date_virtual_class = this.state.class_date;\n      data.start_time_class = this.state.startTime;\n      data.end_time_class = this.state.endTime;\n      data.professor_id = this.state.professor_id;\n      data.status = true;\n      data.establishment_id = this.props.userProfile.establishment_id;\n      data.virtual_class_status = \"programÃ©e\";\n      this.props.editClassVirtual(data);\n      this.setState({\n        addIsopen: false,\n        editIsopen: false,\n        deleteIsopen: false,\n        showIsopen: false,\n        class_object: \"\",\n        level_id: \"\",\n        section_id: \"\",\n        professor_id: \"\",\n        class_id: \"\",\n        subject_id: \"\",\n        class_url: \"\",\n        class_password: \"\",\n        class_date: \"\",\n        selectedStartTime: new Date(),\n        selectedEndTime: new Date(),\n        startTime: \"\",\n        endTime: \"\",\n        studentsectionByLevels: [],\n        Disable_studentsection: true,\n        studentClassesByLevelSectionID: []\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeProfessor = name => event => {\n      this.setState({\n        professor_id: event.target.value\n      });\n    };\n\n    this.handleChangeDate = date => {\n      this.setState({\n        class_date: date\n      });\n    };\n\n    this.handleStartTimeChange = time => {\n      this.setState({\n        selectedStartTime: time,\n        startTime: time.format(\"LT\")\n      });\n    };\n\n    this.handleEndTimeChange = time => {\n      this.setState({\n        selectedEndTime: time,\n        endTime: time.format(\"LT\")\n      });\n    };\n\n    this.addClassShowModal = () => {\n      this.setState({\n        addIsopen: true\n      });\n    };\n\n    this.editClassShowModal = ClassObjectEdit => {\n      this.setState({\n        editIsopen: true,\n        id: ClassObjectEdit.id,\n        class_object: ClassObjectEdit.object,\n        class_id: ClassObjectEdit.class_id,\n        subject_id: ClassObjectEdit.subject_id,\n        class_url: ClassObjectEdit.class_url,\n        class_password: ClassObjectEdit.password,\n        class_date: ClassObjectEdit.date_virtual_class,\n        startTime: ClassObjectEdit.start_time_class,\n        endTime: ClassObjectEdit.end_time_class,\n        professor_id: ClassObjectEdit.professor_id,\n        status: ClassObjectEdit.status,\n        establishment_id: ClassObjectEdit.establishment_id,\n        virtual_class_status: ClassObjectEdit.virtual_class_status,\n        level_id: ClassObjectEdit.level_id,\n        section_id: ClassObjectEdit.section_id\n      });\n      let apiEndpoint1 = `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][and][0][class_id]=` + ClassObjectEdit.class_id + `&filter[where][and][1][professor_id]=` + ClassObjectEdit.professor_id + `&filter[include][subject]`;\n      axios.get(apiEndpoint1).then(res => {\n        let profSubjects = _.map(res.data.filter(element => element.status), \"subject\");\n\n        this.setState({\n          profSubjects\n        });\n      });\n\n      if (ClassObjectEdit.level_id > 10) {\n        this.setState({\n          Disable_studentsection: false\n        });\n        var studentSectionbyLevel = getSectionFromLevel(this.props.classSections, ClassObjectEdit.level_id);\n        this.setState({\n          studentsectionByLevels: studentSectionbyLevel\n        });\n      } else {\n        this.setState({\n          Disable_studentsection: true,\n          section_id: 0\n        });\n        const levelID = ClassObjectEdit.level_id;\n        var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.status);\n        var professorClassesAdd = this.props.professorClassesList.filter(classe => classe.level_id === levelID && classe.status);\n        this.setState({\n          studentClassesByLevelSectionID: studentfiltredClasses,\n          professorClassesAdd\n        });\n      }\n\n      const levelID = ClassObjectEdit.level_id;\n      const sectionID = ClassObjectEdit.section_id;\n      var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.section_id === sectionID && classe.status);\n      var professorClassesAdd = this.props.professorClassesList.filter(classe => classe.level_id === levelID && classe.section_id === sectionID && classe.status);\n      this.setState({\n        studentClassesByLevelSectionID: studentfiltredClasses,\n        professorClassesAdd\n      });\n      let apiEndpoint = `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][and][0][subject_id]=` + ClassObjectEdit.subject_id + `&filter[where][and][1][class_id]=` + ClassObjectEdit.class_id + `&filter[include][professor][profile][user]`;\n      axios.get(apiEndpoint).then(res => {\n        this.setState({\n          establishmentProfessor: res.data\n        });\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        addIsopen: false,\n        editIsopen: false,\n        deleteIsopen: false,\n        showIsopen: false\n      });\n    };\n\n    this.handleChangeSubject = name => event => {\n      this.setState({\n        [name]: event.target.value,\n        professor_id: \"\"\n      });\n      let apiEndpoint = `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][and][0][subject_id]=` + event.target.value + `&filter[where][and][1][class_id]=` + this.state.class_id + `&filter[include][professor][profile][user]`;\n      axios.get(apiEndpoint).then(res => {\n        var establishmentProfessor = res.data.filter(element => element.status);\n        this.setState({\n          establishmentProfessor\n        });\n      });\n    };\n\n    this.handleChangestudentSection = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      const levelID = this.state.level_id;\n      const sectionID = event.target.value;\n      var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.section_id === sectionID && classe.status);\n      var professorClassesAdd = this.props.professorClassesList.filter(classe => classe.level_id === levelID && classe.section_id === sectionID && classe.status);\n      this.setState({\n        studentClassesByLevelSectionID: studentfiltredClasses,\n        professorClassesAdd\n      });\n    };\n\n    this.handleChangestudentLevel = name => event => {\n      this.setState({\n        section_id: 0,\n        class_id: 0,\n        studentClassesByLevelSectionID: [],\n        professorClassesAdd: [],\n        profSubjects: [],\n        establishmentProfessor: []\n      });\n\n      if (event.target.value > 10) {\n        this.setState({\n          [name]: event.target.value\n        });\n        this.setState({\n          Disable_studentsection: false\n        });\n        var studentSectionbyLevel = getSectionFromLevel(this.props.classSections, event.target.value);\n        this.setState({\n          studentsectionByLevels: studentSectionbyLevel\n        });\n      } else {\n        this.setState({\n          level_id: event.target.value,\n          Disable_studentsection: true,\n          section_id: 0\n        });\n        const levelID = event.target.value;\n        var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.status);\n        var professorClassesAdd = this.props.professorClassesList.filter(classe => classe.level_id === levelID && classe.status);\n        this.setState({\n          studentClassesByLevelSectionID: studentfiltredClasses,\n          professorClassesAdd\n        });\n      }\n    };\n\n    this.handleChangeClass = name => event => {\n      this.setState({\n        subject_id: \"\",\n        profSubjects: [],\n        establishmentProfessor: [],\n        professor_id: \"\"\n      });\n\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        this.setState({\n          establishment_id: this.props.userProfile.establishment_id\n        });\n      } else {\n        let apiEndpoint1 = `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][and][0][class_id]=` + event.target.value + `&filter[where][and][1][professor_id]=` + this.state.professorIdFilter + `&filter[include][subject]`;\n        axios.get(apiEndpoint1).then(res => {\n          let profSubjects = _.map(res.data.filter(element => element.status), \"subject\");\n\n          this.setState({\n            profSubjects\n          });\n        });\n      }\n\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      professorIdFilter: \"\",\n      studentClassIdFilter: \"\",\n      id: \"\",\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: true,\n      class_object: \"\",\n      level_id: \"\",\n      section_id: \"\",\n      professor_id: \"\",\n      class_id: \"\",\n      subject_id: \"\",\n      class_url: \"\",\n      class_password: \"\",\n      class_date: \"\",\n      selectedStartTime: new Date(),\n      selectedEndTime: new Date(),\n      startTime: \"\",\n      endTime: \"\",\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: [],\n      professorClassesAdd: [],\n      profSubjects: []\n    };\n    this.addClassShowModal = this.addClassShowModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStartTimeChange = this.handleStartTimeChange.bind(this);\n    this.handleEndTimeChange = this.handleEndTimeChange.bind(this);\n    this.editVirtualClass = this.editVirtualClass.bind(this);\n    this.handleChangestudentSection = this.handleChangestudentSection.bind(this);\n    this.handleChangestudentLevel = this.handleChangestudentLevel.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeProfessor = this.handleChangeProfessor.bind(this);\n  }\n\n  componentWillMount() {\n    //  this.props.getClassesVirtual();\n    this.props.getSections(); // this.props.getLevels();\n    //this.props.getLevelsVirtualClass();\n\n    this.props.getClassesByEstablishmentId(this.props.userProfile.establishment_id);\n    axios.get(`${baseUrl.baseUrl}/establishments/` + this.props.userProfile.establishment_id + `?access_token=${localStorage.token}`).then(res => {\n      var levelsbyestablishment = getLevelListFromEstabType(this.props.classLevels, res.data.estab_type_id);\n      this.setState({\n        estabType: res.data.estab_type_id,\n        levelsbyestablishment: levelsbyestablishment\n      });\n      axios.get(`${baseUrl.baseUrl}/subjects?access_token=${localStorage.token}`).then(res => {\n        const subjectList = res.data;\n        this.setState({\n          subjectList\n        });\n      });\n    });\n\n    if (this.props.userProfile.role_id === 3) {\n      axios.get(`${baseUrl.baseUrl}/profiles/` + this.props.userProfile.id + `/professors?access_token=${localStorage.token}`).then(res => {\n        this.setState({\n          professorIdFilter: res.data[0].id\n        });\n      });\n    }\n\n    if (this.props.userProfile.role_id === 5) {\n      axios.get(`${baseUrl.baseUrl}/students/findOne?access_token=?access_token=${localStorage.token}&filter={\"where\":{\"profile_id\":` + this.props.userProfile.id + `}}`).then(res => {\n        this.setState({\n          studentClassIdFilter: res.data.class_id\n        });\n      });\n    }\n  }\n\n  render() {\n    var VirtualClassListByRole = [];\n    var VirtualClassListFinal = [];\n\n    if (this.props.userProfile.role_id === roleIdProfessor) {\n      if (this.props.professor_class_id == 0 && this.props.selectedFilterDateProfessor === null) {\n        VirtualClassListByRole = this.props.classVirtual.filter(element => element.professor_id === this.state.professorIdFilter);\n      } else if (this.props.professor_class_id != \"\" && this.props.selectedFilterDateProfessor === null) {\n        VirtualClassListByRole = this.props.classVirtual.filter(element => element.professor_id === this.state.professorIdFilter && element.class_id === this.props.professor_class_id);\n      } else if (this.props.professor_class_id == 0 && this.props.selectedFilterDateProfessor !== null) {\n        VirtualClassListByRole = this.props.classVirtual.filter(element => element.professor_id === this.state.professorIdFilter && element.date_virtual_class.slice(0, 10) === this.props.selectedFilterDateProfessor);\n      } else {\n        VirtualClassListByRole = this.props.classVirtual.filter(element => element.professor_id === this.state.professorIdFilter && element.date_virtual_class.slice(0, 10) === this.props.selectedFilterDateProfessor && element.class_id === this.props.professor_class_id);\n      }\n    } else if (this.props.userProfile.role_id === roleIdStudent || this.props.userProfile.role_id === roleIdParent) {\n      VirtualClassListByRole = this.props.classVirtual.filter(element => element.class_id === this.state.studentClassIdFilter && element.subject_id === this.props.student_subject_id);\n\n      if (this.props.student_subject_id === \"\" && this.props.selectedFilterDateStudent === null) {\n        VirtualClassListByRole = this.props.classVirtual.filter(element => element.class_id === this.state.studentClassIdFilter);\n      } else if (this.props.student_subject_id != \"\" && this.props.selectedFilterDateStudent == null) {\n        VirtualClassListByRole = this.props.classVirtual.filter(element => element.class_id === this.state.studentClassIdFilter && element.subject_id === this.props.student_subject_id);\n      } else if (this.props.student_subject_id === \"\" && this.props.selectedFilterDateStudent !== null) {\n        VirtualClassListByRole = this.props.classVirtual.filter(element => element.class_id === this.state.studentClassIdFilter && element.date_virtual_class.slice(0, 10) === this.props.selectedFilterDateStudent);\n      } else {\n        VirtualClassListByRole = this.props.classVirtual.filter(element => element.class_id === this.state.studentClassIdFilter && element.date_virtual_class.slice(0, 10) === this.props.selectedFilterDateStudent && element.subject_id === this.props.student_subject_id);\n      }\n    } else {\n      if (this.props.adminClassId == \"\") {\n        VirtualClassListByRole = this.props.classVirtual;\n      } else {\n        VirtualClassListByRole = this.props.classVirtual.filter(element => element.class_id === this.props.adminClassId);\n      }\n    }\n\n    VirtualClassListFinal = VirtualClassListByRole.filter(element => {\n      const sys = Date.parse(new Date()) / 60000;\n      const start = Date.parse(element.date_virtual_class.slice(0, 10) + \" \" + element.start_time_class) / 60000;\n      const end = Date.parse(element.date_virtual_class.slice(0, 10) + \" \" + element.end_time_class) / 60000;\n\n      if (this.props.statutId === 0 && start > sys && end > sys) {\n        return element;\n      } else if (this.props.statutId === 1 && start < sys && end > sys) {\n        return element;\n      } else if (this.props.statutId === 2 && start < sys && end < sys) {\n        return element;\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row animated slideInUpTiny animation-duration-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }\n    }, VirtualClassListFinal.map((element, index) => {\n      return /*#__PURE__*/React.createElement(VitualClassListItems, {\n        key: index,\n        classVirtualElement: element,\n        subjectList: this.props.subjectList,\n        editClassShowModal: this.editClassShowModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 15\n        }\n      });\n    })), this.state.editIsopen === true ? /*#__PURE__*/React.createElement(EditVitualClass, {\n      classVirtual: VirtualClassListByRole,\n      values: this.state,\n      editIsopen: this.state.editIsopen,\n      handleCancel: this.handleCancel,\n      handleChangeDate: this.handleChangeDate,\n      handleChange: this.handleChange,\n      handleStartTimeChange: this.handleStartTimeChange,\n      handleEndTimeChange: this.handleEndTimeChange,\n      editVirtualClass: this.editVirtualClass,\n      handleChangestudentSection: this.handleChangestudentSection,\n      handleChangestudentLevel: this.handleChangestudentLevel,\n      handleChangeClass: this.handleChangeClass,\n      handleChangeSubject: this.handleChangeSubject,\n      handleChangeProfessor: this.handleChangeProfessor,\n      levelsEdit: this.props.levelsEdit,\n      professorClassesList: this.props.professorClassesList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    classSections: state.classSections.remoteSections,\n    classes: state.classes,\n    classVirtual: state.classVirtualReducer.remoteClassVirtual\n  };\n}\n\nexport default connect(mapStateToProps, {\n  editClassVirtual,\n  getSections,\n  getLevels,\n  getLevelsVirtualClass,\n  getClassesByEstablishmentId,\n  getClassesVirtual\n})(VirtualClassList);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/VirtualClasses/VirtualClassList.js"],"names":["React","Component","VitualClassListItems","EditVitualClass","editClassVirtual","getClassesVirtual","connect","getSectionFromLevel","getLevelListFromEstabType","axios","baseUrl","getSections","getLevels","getLevelsVirtualClass","getClassesByEstablishmentId","element","roleIdSuperAdmin","roleIdAdmin","roleIdProfessor","roleIdParent","roleIdStudent","roleIdSupervisor","roleIdDirector","_","VirtualClassList","constructor","props","editVirtualClass","data","id","state","object","class_object","class_id","subject_id","class_url","password","class_password","date_virtual_class","class_date","start_time_class","startTime","end_time_class","endTime","professor_id","status","establishment_id","userProfile","virtual_class_status","setState","addIsopen","editIsopen","deleteIsopen","showIsopen","level_id","section_id","selectedStartTime","Date","selectedEndTime","studentsectionByLevels","Disable_studentsection","studentClassesByLevelSectionID","handleChange","name","event","target","value","handleChangeProfessor","handleChangeDate","date","handleStartTimeChange","time","format","handleEndTimeChange","addClassShowModal","editClassShowModal","ClassObjectEdit","apiEndpoint1","localStorage","token","get","then","res","profSubjects","map","filter","studentSectionbyLevel","classSections","levelID","studentfiltredClasses","classes","classe","professorClassesAdd","professorClassesList","sectionID","apiEndpoint","establishmentProfessor","handleCancel","handleChangeSubject","handleChangestudentSection","handleChangestudentLevel","handleChangeClass","role_id","professorIdFilter","studentClassIdFilter","levelsbyestablishment","subjectList","bind","componentWillMount","classLevels","estab_type_id","estabType","render","VirtualClassListByRole","VirtualClassListFinal","professor_class_id","selectedFilterDateProfessor","classVirtual","slice","student_subject_id","selectedFilterDateStudent","adminClassId","sys","parse","start","end","statutId","index","levelsEdit","mapStateToProps","auth","ClassLevels","remoteLevels","remoteSections","classVirtualReducer","remoteClassVirtual"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport VitualClassListItems from \"./VitualClassListItems\";\nimport EditVitualClass from \"./EditVitualClass\";\nimport { editClassVirtual } from \"../../../actions/VirtualClassAction\";\nimport { getClassesVirtual } from \"../../../actions/VirtualClassAction\";\nimport { connect } from \"react-redux\";\nimport { getSectionFromLevel } from \"../../../actions/sectionAction\";\nimport { getLevelListFromEstabType } from \"../../../actions/classLevelAction\";\nimport axios from \"axios\";\nimport baseUrl from \"../../../config/config\";\nimport { getSections } from \"../../../actions/sectionAction\";\nimport { getLevels } from \"../../../actions/classLevelAction\";\nimport { getLevelsVirtualClass } from \"../../../actions/classLevelAction\";\nimport { getClassesByEstablishmentId } from \"../../../actions/classeAction\";\nimport { element } from \"prop-types\";\n\nimport { roleIdSuperAdmin } from \"../../../config/config\";\nimport { roleIdAdmin } from \"../../../config/config\";\nimport { roleIdProfessor } from \"../../../config/config\";\nimport { roleIdParent } from \"../../../config/config\";\nimport { roleIdStudent } from \"../../../config/config\";\nimport { roleIdSupervisor } from \"../../../config/config\";\nimport { roleIdDirector } from \"../../../config/config\";\nimport _ from \"lodash\";\n\nclass VirtualClassList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      professorIdFilter: \"\",\n      studentClassIdFilter: \"\",\n      id: \"\",\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: true,\n      class_object: \"\",\n      level_id: \"\",\n      section_id: \"\",\n      professor_id: \"\",\n      class_id: \"\",\n      subject_id: \"\",\n      class_url: \"\",\n      class_password: \"\",\n      class_date: \"\",\n      selectedStartTime: new Date(),\n      selectedEndTime: new Date(),\n      startTime: \"\",\n      endTime: \"\",\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: [],\n      professorClassesAdd: [],\n      profSubjects: [],\n    };\n    this.addClassShowModal = this.addClassShowModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStartTimeChange = this.handleStartTimeChange.bind(this);\n    this.handleEndTimeChange = this.handleEndTimeChange.bind(this);\n    this.editVirtualClass = this.editVirtualClass.bind(this);\n    this.handleChangestudentSection = this.handleChangestudentSection.bind(\n      this\n    );\n    this.handleChangestudentLevel = this.handleChangestudentLevel.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeProfessor = this.handleChangeProfessor.bind(this);\n  }\n\n  editVirtualClass = () => {\n    var data = {};\n    data.id = this.state.id;\n    data.object = this.state.class_object;\n    data.class_id = this.state.class_id;\n    data.subject_id = this.state.subject_id;\n    data.class_url = this.state.class_url;\n    data.password = this.state.class_password;\n    data.date_virtual_class = this.state.class_date;\n    data.start_time_class = this.state.startTime;\n    data.end_time_class = this.state.endTime;\n    data.professor_id = this.state.professor_id;\n    data.status = true;\n    data.establishment_id = this.props.userProfile.establishment_id;\n    data.virtual_class_status = \"programÃ©e\";\n\n    this.props.editClassVirtual(data);\n    this.setState({\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: false,\n      class_object: \"\",\n      level_id: \"\",\n      section_id: \"\",\n      professor_id: \"\",\n      class_id: \"\",\n      subject_id: \"\",\n      class_url: \"\",\n      class_password: \"\",\n      class_date: \"\",\n      selectedStartTime: new Date(),\n      selectedEndTime: new Date(),\n      startTime: \"\",\n      endTime: \"\",\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      studentClassesByLevelSectionID: [],\n    });\n  };\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n  handleChangeProfessor = (name) => (event) => {\n    this.setState({ professor_id: event.target.value });\n  };\n\n  handleChangeDate = (date) => {\n    this.setState({ class_date: date });\n  };\n  handleStartTimeChange = (time) => {\n    this.setState({ selectedStartTime: time, startTime: time.format(\"LT\") });\n  };\n\n  handleEndTimeChange = (time) => {\n    this.setState({ selectedEndTime: time, endTime: time.format(\"LT\") });\n  };\n\n  addClassShowModal = () => {\n    this.setState({ addIsopen: true });\n  };\n  editClassShowModal = (ClassObjectEdit) => {\n    this.setState({\n      editIsopen: true,\n      id: ClassObjectEdit.id,\n      class_object: ClassObjectEdit.object,\n      class_id: ClassObjectEdit.class_id,\n      subject_id: ClassObjectEdit.subject_id,\n      class_url: ClassObjectEdit.class_url,\n      class_password: ClassObjectEdit.password,\n      class_date: ClassObjectEdit.date_virtual_class,\n      startTime: ClassObjectEdit.start_time_class,\n      endTime: ClassObjectEdit.end_time_class,\n      professor_id: ClassObjectEdit.professor_id,\n      status: ClassObjectEdit.status,\n      establishment_id: ClassObjectEdit.establishment_id,\n      virtual_class_status: ClassObjectEdit.virtual_class_status,\n      level_id: ClassObjectEdit.level_id,\n      section_id: ClassObjectEdit.section_id,\n    });\n    let apiEndpoint1 =\n      `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][and][0][class_id]=` +\n      ClassObjectEdit.class_id +\n      `&filter[where][and][1][professor_id]=` +\n      ClassObjectEdit.professor_id +\n      `&filter[include][subject]`;\n    axios.get(apiEndpoint1).then((res) => {\n      let profSubjects = _.map(\n        res.data.filter((element) => element.status),\n        \"subject\"\n      );\n      this.setState({ profSubjects });\n    });\n\n    if (ClassObjectEdit.level_id > 10) {\n      this.setState({ Disable_studentsection: false });\n      var studentSectionbyLevel = getSectionFromLevel(\n        this.props.classSections,\n        ClassObjectEdit.level_id\n      );\n      this.setState({ studentsectionByLevels: studentSectionbyLevel });\n    } else {\n      this.setState({\n        Disable_studentsection: true,\n        section_id: 0,\n      });\n      const levelID = ClassObjectEdit.level_id;\n      var studentfiltredClasses = this.props.classes.filter(\n        (classe) => classe.level_id === levelID && classe.status\n      );\n      var professorClassesAdd = this.props.professorClassesList.filter(\n        (classe) => classe.level_id === levelID && classe.status\n      );\n      this.setState({\n        studentClassesByLevelSectionID: studentfiltredClasses,\n        professorClassesAdd,\n      });\n    }\n\n    const levelID = ClassObjectEdit.level_id;\n    const sectionID = ClassObjectEdit.section_id;\n    var studentfiltredClasses = this.props.classes.filter(\n      (classe) =>\n        classe.level_id === levelID &&\n        classe.section_id === sectionID &&\n        classe.status\n    );\n    var professorClassesAdd = this.props.professorClassesList.filter(\n      (classe) =>\n        classe.level_id === levelID &&\n        classe.section_id === sectionID &&\n        classe.status\n    );\n    this.setState({\n      studentClassesByLevelSectionID: studentfiltredClasses,\n      professorClassesAdd,\n    });\n\n    let apiEndpoint =\n      `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][and][0][subject_id]=` +\n      ClassObjectEdit.subject_id +\n      `&filter[where][and][1][class_id]=` +\n      ClassObjectEdit.class_id +\n      `&filter[include][professor][profile][user]`;\n\n    axios.get(apiEndpoint).then((res) => {\n      this.setState({ establishmentProfessor: res.data });\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: false,\n    });\n  };\n\n  handleChangeSubject = (name) => (event) => {\n    this.setState({ [name]: event.target.value, professor_id: \"\" });\n\n    let apiEndpoint =\n      `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][and][0][subject_id]=` +\n      event.target.value +\n      `&filter[where][and][1][class_id]=` +\n      this.state.class_id +\n      `&filter[include][professor][profile][user]`;\n\n    axios.get(apiEndpoint).then((res) => {\n      var establishmentProfessor = res.data.filter((element) => element.status);\n      this.setState({ establishmentProfessor });\n    });\n  };\n\n  handleChangestudentSection = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    const levelID = this.state.level_id;\n    const sectionID = event.target.value;\n    var studentfiltredClasses = this.props.classes.filter(\n      (classe) =>\n        classe.level_id === levelID &&\n        classe.section_id === sectionID &&\n        classe.status\n    );\n    var professorClassesAdd = this.props.professorClassesList.filter(\n      (classe) =>\n        classe.level_id === levelID &&\n        classe.section_id === sectionID &&\n        classe.status\n    );\n    this.setState({\n      studentClassesByLevelSectionID: studentfiltredClasses,\n      professorClassesAdd,\n    });\n  };\n  handleChangestudentLevel = (name) => (event) => {\n    this.setState({\n      section_id: 0,\n      class_id: 0,\n      studentClassesByLevelSectionID: [],\n      professorClassesAdd: [],\n      profSubjects: [],\n      establishmentProfessor: [],\n    });\n    if (event.target.value > 10) {\n      this.setState({ [name]: event.target.value });\n      this.setState({ Disable_studentsection: false });\n      var studentSectionbyLevel = getSectionFromLevel(\n        this.props.classSections,\n        event.target.value\n      );\n      this.setState({ studentsectionByLevels: studentSectionbyLevel });\n    } else {\n      this.setState({\n        level_id: event.target.value,\n        Disable_studentsection: true,\n        section_id: 0,\n      });\n      const levelID = event.target.value;\n      var studentfiltredClasses = this.props.classes.filter(\n        (classe) => classe.level_id === levelID && classe.status\n      );\n      var professorClassesAdd = this.props.professorClassesList.filter(\n        (classe) => classe.level_id === levelID && classe.status\n      );\n      this.setState({\n        studentClassesByLevelSectionID: studentfiltredClasses,\n        professorClassesAdd,\n      });\n    }\n  };\n\n  handleChangeClass = (name) => (event) => {\n    this.setState({\n      subject_id: \"\",\n      profSubjects: [],\n      establishmentProfessor: [],\n      professor_id: \"\",\n    });\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      this.setState({\n        establishment_id: this.props.userProfile.establishment_id,\n      });\n    } else {\n      let apiEndpoint1 =\n        `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][and][0][class_id]=` +\n        event.target.value +\n        `&filter[where][and][1][professor_id]=` +\n        this.state.professorIdFilter +\n        `&filter[include][subject]`;\n      axios.get(apiEndpoint1).then((res) => {\n        let profSubjects = _.map(\n          res.data.filter((element) => element.status),\n          \"subject\"\n        );\n        this.setState({ profSubjects });\n      });\n    }\n    this.setState({ [name]: event.target.value });\n  };\n\n  componentWillMount() {\n    //  this.props.getClassesVirtual();\n    this.props.getSections();\n    // this.props.getLevels();\n    //this.props.getLevelsVirtualClass();\n\n    this.props.getClassesByEstablishmentId(\n      this.props.userProfile.establishment_id\n    );\n\n    axios\n      .get(\n        `${baseUrl.baseUrl}/establishments/` +\n          this.props.userProfile.establishment_id +\n          `?access_token=${localStorage.token}`\n      )\n      .then((res) => {\n        var levelsbyestablishment = getLevelListFromEstabType(\n          this.props.classLevels,\n          res.data.estab_type_id\n        );\n        this.setState({\n          estabType: res.data.estab_type_id,\n          levelsbyestablishment: levelsbyestablishment,\n        });\n\n        axios\n          .get(`${baseUrl.baseUrl}/subjects?access_token=${localStorage.token}`)\n          .then((res) => {\n            const subjectList = res.data;\n            this.setState({ subjectList });\n          });\n      });\n\n    if (this.props.userProfile.role_id === 3) {\n      axios\n        .get(\n          `${baseUrl.baseUrl}/profiles/` +\n            this.props.userProfile.id +\n            `/professors?access_token=${localStorage.token}`\n        )\n        .then((res) => {\n          this.setState({\n            professorIdFilter: res.data[0].id,\n          });\n        });\n    }\n    if (this.props.userProfile.role_id === 5) {\n      axios\n        .get(\n          `${baseUrl.baseUrl}/students/findOne?access_token=?access_token=${localStorage.token}&filter={\"where\":{\"profile_id\":` +\n            this.props.userProfile.id +\n            `}}`\n        )\n        .then((res) => {\n          this.setState({\n            studentClassIdFilter: res.data.class_id,\n          });\n        });\n    }\n  }\n\n  render() {\n    var VirtualClassListByRole = [];\n    var VirtualClassListFinal = [];\n\n    if (this.props.userProfile.role_id === roleIdProfessor) {\n      if (\n        this.props.professor_class_id == 0 &&\n        this.props.selectedFilterDateProfessor === null\n      ) {\n        VirtualClassListByRole = this.props.classVirtual.filter(\n          (element) => element.professor_id === this.state.professorIdFilter\n        );\n      } else if (\n        this.props.professor_class_id != \"\" &&\n        this.props.selectedFilterDateProfessor === null\n      ) {\n        VirtualClassListByRole = this.props.classVirtual.filter(\n          (element) =>\n            element.professor_id === this.state.professorIdFilter &&\n            element.class_id === this.props.professor_class_id\n        );\n      } else if (\n        this.props.professor_class_id == 0 &&\n        this.props.selectedFilterDateProfessor !== null\n      ) {\n        VirtualClassListByRole = this.props.classVirtual.filter(\n          (element) =>\n            element.professor_id === this.state.professorIdFilter &&\n            element.date_virtual_class.slice(0, 10) ===\n              this.props.selectedFilterDateProfessor\n        );\n      } else {\n        VirtualClassListByRole = this.props.classVirtual.filter(\n          (element) =>\n            element.professor_id === this.state.professorIdFilter &&\n            element.date_virtual_class.slice(0, 10) ===\n              this.props.selectedFilterDateProfessor &&\n            element.class_id === this.props.professor_class_id\n        );\n      }\n    } else if (\n      this.props.userProfile.role_id === roleIdStudent ||\n      this.props.userProfile.role_id === roleIdParent\n    ) {\n      VirtualClassListByRole = this.props.classVirtual.filter(\n        (element) =>\n          element.class_id === this.state.studentClassIdFilter &&\n          element.subject_id === this.props.student_subject_id\n      );\n\n      if (\n        this.props.student_subject_id === \"\" &&\n        this.props.selectedFilterDateStudent === null\n      ) {\n        VirtualClassListByRole = this.props.classVirtual.filter(\n          (element) => element.class_id === this.state.studentClassIdFilter\n        );\n      } else if (\n        this.props.student_subject_id != \"\" &&\n        this.props.selectedFilterDateStudent == null\n      ) {\n        VirtualClassListByRole = this.props.classVirtual.filter(\n          (element) =>\n            element.class_id === this.state.studentClassIdFilter &&\n            element.subject_id === this.props.student_subject_id\n        );\n      } else if (\n        this.props.student_subject_id === \"\" &&\n        this.props.selectedFilterDateStudent !== null\n      ) {\n        VirtualClassListByRole = this.props.classVirtual.filter(\n          (element) =>\n            element.class_id === this.state.studentClassIdFilter &&\n            element.date_virtual_class.slice(0, 10) ===\n              this.props.selectedFilterDateStudent\n        );\n      } else {\n        VirtualClassListByRole = this.props.classVirtual.filter(\n          (element) =>\n            element.class_id === this.state.studentClassIdFilter &&\n            element.date_virtual_class.slice(0, 10) ===\n              this.props.selectedFilterDateStudent &&\n            element.subject_id === this.props.student_subject_id\n        );\n      }\n    } else {\n      if (this.props.adminClassId == \"\") {\n        VirtualClassListByRole = this.props.classVirtual;\n      } else {\n        VirtualClassListByRole = this.props.classVirtual.filter(\n          (element) => element.class_id === this.props.adminClassId\n        );\n      }\n    }\n    VirtualClassListFinal = VirtualClassListByRole.filter((element) => {\n      const sys = Date.parse(new Date()) / 60000;\n      const start =\n        Date.parse(\n          element.date_virtual_class.slice(0, 10) +\n            \" \" +\n            element.start_time_class\n        ) / 60000;\n      const end =\n        Date.parse(\n          element.date_virtual_class.slice(0, 10) + \" \" + element.end_time_class\n        ) / 60000;\n\n      if (this.props.statutId === 0 && start > sys && end > sys) {\n        return element;\n      } else if (this.props.statutId === 1 && start < sys && end > sys) {\n        return element;\n      } else if (this.props.statutId === 2 && start < sys && end < sys) {\n        return element;\n      }\n    });\n\n    return (\n      <div>\n        <div className=\"row animated slideInUpTiny animation-duration-3\">\n          {VirtualClassListFinal.map((element, index) => {\n            return (\n              <VitualClassListItems\n                key={index}\n                classVirtualElement={element}\n                subjectList={this.props.subjectList}\n                editClassShowModal={this.editClassShowModal}\n              />\n            );\n          })}\n        </div>\n        {this.state.editIsopen === true ? (\n          <EditVitualClass\n            classVirtual={VirtualClassListByRole}\n            values={this.state}\n            editIsopen={this.state.editIsopen}\n            handleCancel={this.handleCancel}\n            handleChangeDate={this.handleChangeDate}\n            handleChange={this.handleChange}\n            handleStartTimeChange={this.handleStartTimeChange}\n            handleEndTimeChange={this.handleEndTimeChange}\n            editVirtualClass={this.editVirtualClass}\n            handleChangestudentSection={this.handleChangestudentSection}\n            handleChangestudentLevel={this.handleChangestudentLevel}\n            handleChangeClass={this.handleChangeClass}\n            handleChangeSubject={this.handleChangeSubject}\n            handleChangeProfessor={this.handleChangeProfessor}\n            levelsEdit={this.props.levelsEdit}\n            professorClassesList={this.props.professorClassesList}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    classSections: state.classSections.remoteSections,\n    classes: state.classes,\n    classVirtual: state.classVirtualReducer.remoteClassVirtual,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    editClassVirtual,\n    getSections,\n    getLevels,\n    getLevelsVirtualClass,\n    getClassesByEstablishmentId,\n    getClassesVirtual,\n  }\n)(VirtualClassList);\n"]},"metadata":{},"sourceType":"module"}