{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport { FETECHED_ALL_HEALTH, ADD_HEALTH, EDIT_HEALTH, DELETE_HEALTH, HANDLE_REQUEST_CLOSE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from \"../constants/ActionTypes\";\nimport baseUrl from \"../config/config\";\nimport axios from \"axios\";\nexport const addFicheMedical = (data, file) => {\n  return dispatch => {\n    let apiEndpoint = `/suivi_medicals?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then(response => {\n      if (response) {\n        var suiviObject = response.data;\n\n        if (file !== null) {\n          axios.get(`${baseUrl.baseUrl}/establishments/` + data.establishment_id + `?access_token=${localStorage.token}`).then(res => {\n            var establishmentName = res.data.name;\n            let arrayItemCourseFiles = [];\n            var formadata = new FormData();\n            const fileExtension = file.name.replace(/^.*\\./, \"\");\n            const fileName = \"fiche_medical_\" + suiviObject.id + \".\" + fileExtension;\n            var object = {};\n            object.file = file;\n            object.fileName = fileName;\n            object.establishmentName = establishmentName;\n            axios.patch(`${baseUrl.baseUrl}/suivi_medicals/` + suiviObject.id + `?access_token=${localStorage.token}`, {\n              files: fileName\n            }).then(response => {\n              object.suiviObject = response.data;\n              dispatch(uploadCourseMedia(object));\n            }).catch(function (error) {\n              console.log(\"error\", error);\n            });\n          });\n        } else {}\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};\nexport function uploadCourseMedia(data) {\n  const fileName = data.fileName;\n  const myNewFile = new File([data.file], fileName, {\n    type: data.file.type\n  });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function (dispatch) {\n    const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + data.establishmentName + `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata\n    }).then(response => {\n      dispatch({\n        type: ADD_HEALTH,\n        payload: data.suiviObject\n      });\n      dispatch({\n        type: SHOW_SUCCESS_MESSAGE,\n        payload: \"La création est effectuée avec succès\"\n      });\n      setTimeout(() => {\n        dispatch({\n          type: HIDE_SUCCESS_MESSAGE\n        });\n      }, 4000);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\nexport const getFicheMedical = () => {\n  return dispatch => {\n    let apiEndpoint = `/suivi_medicals?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      const list = response.data;\n      const ficheList = list.filter(element => element.status);\n      dispatch({\n        type: FETECHED_ALL_HEALTH,\n        payload: ficheList\n      });\n    }).catch(err => {});\n  };\n};\nexport const getFicheMedicalByEstablishmentId = establishmentId => {\n  return dispatch => {\n    let apiEndpoint = `/suivi_medicals?access_token=${localStorage.token}&filter[where][establishment_id]=` + establishmentId;\n    classService.get(apiEndpoint).then(response => {\n      const list = response.data;\n      const ficheList = list.filter(element => element.status);\n      dispatch({\n        type: FETECHED_ALL_HEALTH,\n        payload: ficheList\n      });\n    }).catch(err => {});\n  };\n};\nexport function deleteFicheMedical(itemId) {\n  return dispatch => {\n    axios.patch(`${baseUrl.baseUrl}/suivi_medicals/` + itemId + `?access_token=${localStorage.token}`, {\n      status: false\n    }).then(response => {\n      dispatch({\n        type: DELETE_HEALTH,\n        payload: response.data\n      });\n    }).catch(function (error) {\n      console.log(\"error\", error);\n    });\n  };\n}\nexport function editFicheMedical(data, file) {\n  return dispatch => {\n    if (file !== null) {\n      if (data.files == \"1.png\") {\n        axios.get(`${baseUrl.baseUrl}/establishments/` + data.establishment_id + `?access_token=${localStorage.token}`).then(res => {\n          var establishmentName = res.data.name;\n          const fileExtension = file.name.replace(/^.*\\./, \"\");\n          const fileName = \"fiche_medical_\" + data.id + \".\" + fileExtension;\n          var object = {};\n          object.file = file;\n          object.fileName = fileName;\n          object.establishmentName = establishmentName;\n          data.files = fileName;\n          axios.put(`${baseUrl.baseUrl}/suivi_medicals/` + data.id + `?access_token=${localStorage.token}`, {\n            establishment_id: data.establishment_id,\n            student_id: data.student_id,\n            class_id: data.class_id,\n            nom_doctor: data.nom_doctor,\n            prenom_doctor: this.state.prenom_doctor,\n            phone_doctor: data.phone_doctor,\n            blood_type: data.blood_type,\n            poids: data.poids,\n            hauteur: data.hauteur,\n            problems: data.problems,\n            remarque: data.remarque,\n            files: fileName,\n            status: true,\n            mail_doctor: data.mail_doctor,\n            id: data.id\n          }).then(response => {\n            object.suiviObject = response.data;\n            dispatch(uploadCourseMediaedit(object));\n          }).catch(function (error) {\n            console.log(\"error\", error);\n          });\n        });\n      } else {\n        axios.get(`${baseUrl.baseUrl}/establishments/` + data.establishment_id + `?access_token=${localStorage.token}`).then(res => {\n          var establishmentName = res.data.name;\n          let formadata = new FormData();\n          formadata.append(\"image\", file);\n          const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + establishmentName + `/files/` + data.files + `?access_token=${localStorage.token}`;\n          axios({\n            url: establishLogoUrl,\n            method: \"DELETE\",\n            data: formadata\n          }).then(response => {\n            const fileExtension = file.name.replace(/^.*\\./, \"\");\n            const fileName = \"fiche_medical_\" + data.id + \".\" + fileExtension;\n            var object = {};\n            object.file = file;\n            object.fileName = fileName;\n            object.establishmentName = establishmentName;\n            data.files = fileName;\n            axios.put(`${baseUrl.baseUrl}/suivi_medicals/` + data.id + `?access_token=${localStorage.token}`, {\n              establishment_id: data.establishment_id,\n              student_id: data.student_id,\n              class_id: data.class_id,\n              nom_doctor: data.nom_doctor,\n              prenom_doctor: data.prenom_doctor,\n              phone_doctor: data.phone_doctor,\n              blood_type: data.blood_type,\n              poids: data.poids,\n              hauteur: data.hauteur,\n              problems: data.problems,\n              remarque: data.remarque,\n              files: fileName,\n              status: true,\n              mail_doctor: data.mail_doctor,\n              id: data.id\n            }).then(response => {\n              object.suiviObject = response.data;\n              dispatch(uploadCourseMediaedit(object));\n            }).catch(function (error) {\n              console.log(\"error\", error);\n            });\n          });\n        });\n      }\n    } else {\n      axios.put(`${baseUrl.baseUrl}/suivi_medicals/` + data.id + `?access_token=${localStorage.token}`, {\n        establishment_id: data.establishment_id,\n        student_id: data.student_id,\n        class_id: data.class_id,\n        nom_doctor: data.nom_doctor,\n        prenom_doctor: data.prenom_doctor,\n        phone_doctor: data.phone_doctor,\n        blood_type: data.blood_type,\n        poids: data.poids,\n        hauteur: data.hauteur,\n        problems: data.problems,\n        remarque: data.remarque,\n        files: data.files,\n        status: true,\n        mail_doctor: data.mail_doctor,\n        id: data.id\n      }).then(response => {\n        dispatch({\n          type: EDIT_HEALTH,\n          payload: response.data\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La modification est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      }).catch(function (error) {\n        console.log(\"error\", error);\n      });\n    }\n  };\n}\nexport function uploadCourseMediaedit(data) {\n  const fileName = data.fileName;\n  const myNewFile = new File([data.file], fileName, {\n    type: data.file.type\n  });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function (dispatch) {\n    const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + data.establishmentName + `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata\n    }).then(response => {\n      dispatch({\n        type: EDIT_HEALTH,\n        payload: data.suiviObject\n      });\n      dispatch({\n        type: SHOW_SUCCESS_MESSAGE,\n        payload: \"La création est effectuée avec succès\"\n      });\n      setTimeout(() => {\n        dispatch({\n          type: HIDE_SUCCESS_MESSAGE\n        });\n      }, 4000);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\nexport function getBlodType(idBlood) {\n  var blood_group = [{\n    id: 1,\n    type: \"A+\"\n  }, {\n    id: 2,\n    type: \"A-\"\n  }, {\n    id: 3,\n    type: \"B+\"\n  }, {\n    id: 4,\n    type: \"B-\"\n  }, {\n    id: 5,\n    type: \"AB+\"\n  }, {\n    id: 6,\n    type: \"AB-\"\n  }, {\n    id: 7,\n    type: \"O+\"\n  }, {\n    id: 8,\n    type: \"O-\"\n  }];\n  var bloodType = blood_group.filter(element => element.id === idBlood);\n  return bloodType[0].type;\n}\nexport const serviceAction = {\n  addFicheMedical,\n  getFicheMedical,\n  deleteFicheMedical,\n  getBlodType,\n  getFicheMedicalByEstablishmentId\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/HealthAction.js"],"names":["classService","FETECHED_ALL_HEALTH","ADD_HEALTH","EDIT_HEALTH","DELETE_HEALTH","HANDLE_REQUEST_CLOSE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","baseUrl","axios","addFicheMedical","data","file","dispatch","apiEndpoint","localStorage","token","post","then","response","suiviObject","get","establishment_id","res","establishmentName","name","arrayItemCourseFiles","formadata","FormData","fileExtension","replace","fileName","id","object","patch","files","uploadCourseMedia","catch","error","console","log","type","payload","setTimeout","myNewFile","File","append","establishLogoUrl","url","method","err","getFicheMedical","list","ficheList","filter","element","status","getFicheMedicalByEstablishmentId","establishmentId","deleteFicheMedical","itemId","editFicheMedical","put","student_id","class_id","nom_doctor","prenom_doctor","state","phone_doctor","blood_type","poids","hauteur","problems","remarque","mail_doctor","uploadCourseMediaedit","getBlodType","idBlood","blood_group","bloodType","serviceAction"],"mappings":"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","sourcesContent":["import { classService } from \"../_services/class.service\";\nimport {\n  FETECHED_ALL_HEALTH,\n  ADD_HEALTH,\n  EDIT_HEALTH,\n  DELETE_HEALTH,\n  HANDLE_REQUEST_CLOSE,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n} from \"../constants/ActionTypes\";\nimport baseUrl from \"../config/config\";\nimport axios from \"axios\";\nexport const addFicheMedical = (data, file) => {\n  return (dispatch) => {\n    let apiEndpoint = `/suivi_medicals?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then((response) => {\n      if (response) {\n        var suiviObject = response.data;\n\n        if (file !== null) {\n          axios\n            .get(\n              `${baseUrl.baseUrl}/establishments/` +\n                data.establishment_id +\n                `?access_token=${localStorage.token}`\n            )\n            .then((res) => {\n              var establishmentName = res.data.name;\n              let arrayItemCourseFiles = [];\n              var formadata = new FormData();\n              const fileExtension = file.name.replace(/^.*\\./, \"\");\n              const fileName =\n                \"fiche_medical_\" + suiviObject.id + \".\" + fileExtension;\n\n              var object = {};\n              object.file = file;\n              object.fileName = fileName;\n              object.establishmentName = establishmentName;\n\n              axios\n                .patch(\n                  `${baseUrl.baseUrl}/suivi_medicals/` +\n                    suiviObject.id +\n                    `?access_token=${localStorage.token}`,\n                  {\n                    files: fileName,\n                  }\n                )\n                .then((response) => {\n                  object.suiviObject = response.data;\n\n                  dispatch(uploadCourseMedia(object));\n                })\n                .catch(function(error) {\n                  console.log(\"error\", error);\n                });\n            });\n        } else {\n        }\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n\nexport function uploadCourseMedia(data) {\n  const fileName = data.fileName;\n  const myNewFile = new File([data.file], fileName, { type: data.file.type });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function(dispatch) {\n    const establishLogoUrl =\n      `${baseUrl.baseUrl}/containers/` +\n      data.establishmentName +\n      `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata,\n    })\n      .then((response) => {\n        dispatch({ type: ADD_HEALTH, payload: data.suiviObject });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectuée avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n}\n\nexport const getFicheMedical = () => {\n  return (dispatch) => {\n    let apiEndpoint = `/suivi_medicals?access_token=${localStorage.token}`;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        const list = response.data;\n        const ficheList = list.filter((element) => element.status);\n        dispatch({ type: FETECHED_ALL_HEALTH, payload: ficheList });\n      })\n      .catch((err) => {});\n  };\n};\n\nexport const getFicheMedicalByEstablishmentId = (establishmentId) => {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/suivi_medicals?access_token=${localStorage.token}&filter[where][establishment_id]=` +\n      establishmentId;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        const list = response.data;\n        const ficheList = list.filter((element) => element.status);\n\n        dispatch({ type: FETECHED_ALL_HEALTH, payload: ficheList });\n      })\n      .catch((err) => {});\n  };\n};\n\nexport function deleteFicheMedical(itemId) {\n  return (dispatch) => {\n    axios\n      .patch(\n        `${baseUrl.baseUrl}/suivi_medicals/` +\n          itemId +\n          `?access_token=${localStorage.token}`,\n        {\n          status: false,\n        }\n      )\n      .then((response) => {\n        dispatch({ type: DELETE_HEALTH, payload: response.data });\n      })\n      .catch(function(error) {\n        console.log(\"error\", error);\n      });\n  };\n}\n\nexport function editFicheMedical(data, file) {\n  return (dispatch) => {\n    if (file !== null) {\n      if (data.files == \"1.png\") {\n        axios\n          .get(\n            `${baseUrl.baseUrl}/establishments/` +\n              data.establishment_id +\n              `?access_token=${localStorage.token}`\n          )\n          .then((res) => {\n            var establishmentName = res.data.name;\n            const fileExtension = file.name.replace(/^.*\\./, \"\");\n            const fileName = \"fiche_medical_\" + data.id + \".\" + fileExtension;\n\n            var object = {};\n            object.file = file;\n            object.fileName = fileName;\n            object.establishmentName = establishmentName;\n            data.files = fileName;\n\n            axios\n              .put(\n                `${baseUrl.baseUrl}/suivi_medicals/` +\n                  data.id +\n                  `?access_token=${localStorage.token}`,\n                {\n                  establishment_id: data.establishment_id,\n                  student_id: data.student_id,\n                  class_id: data.class_id,\n                  nom_doctor: data.nom_doctor,\n                  prenom_doctor: this.state.prenom_doctor,\n                  phone_doctor: data.phone_doctor,\n                  blood_type: data.blood_type,\n                  poids: data.poids,\n                  hauteur: data.hauteur,\n                  problems: data.problems,\n                  remarque: data.remarque,\n                  files: fileName,\n                  status: true,\n                  mail_doctor: data.mail_doctor,\n                  id: data.id,\n                }\n              )\n              .then((response) => {\n                object.suiviObject = response.data;\n                dispatch(uploadCourseMediaedit(object));\n              })\n              .catch(function(error) {\n                console.log(\"error\", error);\n              });\n          });\n      } else {\n        axios\n          .get(\n            `${baseUrl.baseUrl}/establishments/` +\n              data.establishment_id +\n              `?access_token=${localStorage.token}`\n          )\n          .then((res) => {\n            var establishmentName = res.data.name;\n            let formadata = new FormData();\n            formadata.append(\"image\", file);\n            const establishLogoUrl =\n              `${baseUrl.baseUrl}/containers/` +\n              establishmentName +\n              `/files/` +\n              data.files +\n              `?access_token=${localStorage.token}`;\n            axios({\n              url: establishLogoUrl,\n              method: \"DELETE\",\n              data: formadata,\n            }).then((response) => {\n              const fileExtension = file.name.replace(/^.*\\./, \"\");\n              const fileName = \"fiche_medical_\" + data.id + \".\" + fileExtension;\n\n              var object = {};\n              object.file = file;\n              object.fileName = fileName;\n              object.establishmentName = establishmentName;\n              data.files = fileName;\n\n              axios\n                .put(\n                  `${baseUrl.baseUrl}/suivi_medicals/` +\n                    data.id +\n                    `?access_token=${localStorage.token}`,\n                  {\n                    establishment_id: data.establishment_id,\n                    student_id: data.student_id,\n                    class_id: data.class_id,\n                    nom_doctor: data.nom_doctor,\n                    prenom_doctor: data.prenom_doctor,\n                    phone_doctor: data.phone_doctor,\n                    blood_type: data.blood_type,\n                    poids: data.poids,\n                    hauteur: data.hauteur,\n                    problems: data.problems,\n                    remarque: data.remarque,\n                    files: fileName,\n                    status: true,\n                    mail_doctor: data.mail_doctor,\n                    id: data.id,\n                  }\n                )\n                .then((response) => {\n                  object.suiviObject = response.data;\n                  dispatch(uploadCourseMediaedit(object));\n                })\n                .catch(function(error) {\n                  console.log(\"error\", error);\n                });\n            });\n          });\n      }\n    } else {\n      axios\n        .put(\n          `${baseUrl.baseUrl}/suivi_medicals/` +\n            data.id +\n            `?access_token=${localStorage.token}`,\n          {\n            establishment_id: data.establishment_id,\n            student_id: data.student_id,\n            class_id: data.class_id,\n            nom_doctor: data.nom_doctor,\n            prenom_doctor: data.prenom_doctor,\n            phone_doctor: data.phone_doctor,\n            blood_type: data.blood_type,\n            poids: data.poids,\n            hauteur: data.hauteur,\n            problems: data.problems,\n            remarque: data.remarque,\n            files: data.files,\n            status: true,\n            mail_doctor: data.mail_doctor,\n            id: data.id,\n          }\n        )\n        .then((response) => {\n          dispatch({ type: EDIT_HEALTH, payload: response.data });\n          dispatch({\n            type: SHOW_SUCCESS_MESSAGE,\n            payload: \"La modification est effectuée avec succès\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_SUCCESS_MESSAGE });\n          }, 4000);\n        })\n        .catch(function(error) {\n          console.log(\"error\", error);\n        });\n    }\n  };\n}\n\nexport function uploadCourseMediaedit(data) {\n  const fileName = data.fileName;\n  const myNewFile = new File([data.file], fileName, { type: data.file.type });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function(dispatch) {\n    const establishLogoUrl =\n      `${baseUrl.baseUrl}/containers/` +\n      data.establishmentName +\n      `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata,\n    })\n      .then((response) => {\n        dispatch({ type: EDIT_HEALTH, payload: data.suiviObject });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectuée avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n}\n\nexport function getBlodType(idBlood) {\n  var blood_group = [\n    {\n      id: 1,\n      type: \"A+\",\n    },\n    {\n      id: 2,\n      type: \"A-\",\n    },\n    {\n      id: 3,\n      type: \"B+\",\n    },\n    {\n      id: 4,\n      type: \"B-\",\n    },\n    {\n      id: 5,\n      type: \"AB+\",\n    },\n    {\n      id: 6,\n      type: \"AB-\",\n    },\n    {\n      id: 7,\n      type: \"O+\",\n    },\n    {\n      id: 8,\n      type: \"O-\",\n    },\n  ];\n  var bloodType = blood_group.filter((element) => element.id === idBlood);\n  return bloodType[0].type;\n}\n\nexport const serviceAction = {\n  addFicheMedical,\n  getFicheMedical,\n  deleteFicheMedical,\n  getBlodType,\n  getFicheMedicalByEstablishmentId,\n};\n"]},"metadata":{},"sourceType":"module"}