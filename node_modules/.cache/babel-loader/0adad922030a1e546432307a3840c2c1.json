{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/GradesMenu/routes/Grade/ListGrade.js\";\nimport React from \"react\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport CardBox from \"../../../../../components/CardBox\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport _ from \"lodash\";\nimport ListGradeItem from \"./ListGradeItem\";\nimport DeleteGrades from \"./DeleteGrade\";\nimport AddGrades from \"./AddGrade\";\nexport class GradeList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.reset = () => {\n      this.props.reset();\n      this.setState({\n        deleteIsopen: false\n      });\n    };\n\n    this.addGrades = () => {\n      this.props.addGrade();\n      this.setState({\n        addIsopen: false\n      });\n    };\n\n    this.handleShowDeleteModal = () => {\n      this.setState({\n        deleteIsopen: true\n      });\n    };\n\n    this.handleShowAddModal = e => {\n      e.preventDefault();\n      this.setState({\n        addIsopen: true\n      });\n    };\n\n    this.StyledTableCell = withStyles(theme => ({\n      head: {\n        backgroundColor: \"#3f51b5\",\n        color: theme.palette.common.white\n      },\n      body: {\n        fontSize: 14\n      }\n    }))(TableCell);\n\n    this.handleChange = id => event => {\n      let ListNote = this.state.studentList;\n\n      let index = _.findIndex(ListNote, {\n        student_id: id\n      });\n\n      _.fill(ListNote, {\n        id: ListNote[index].id,\n        student_id: id,\n        note: event.target.value,\n        studentInfo: ListNote[index].studentInfo\n      }, index, index + 1);\n\n      this.setState({\n        studentList: ListNote\n      });\n    };\n\n    this.state = {\n      studentList: [],\n      exam_id: \"\",\n      deleteIsopen: false,\n      addIsopen: false\n    };\n    this.handleShowDeleteModal = this.handleShowDeleteModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.reset = this.reset.bind(this);\n    this.handleShowAddModal = this.handleShowAddModal.bind(this);\n    this.addGrades = this.addGrades.bind(this);\n  }\n\n  cancelModal() {\n    this.setState({\n      deleteIsopen: false,\n      addIsopen: false\n    });\n  }\n\n  componentWillMount() {\n    this.setState({\n      studentList: this.props.studentList,\n      exam_id: this.props.examId\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.studentList !== this.props.studentList) {\n      this.setState({\n        studentList: this.props.studentList,\n        exam_id: this.props.examId\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: this.handleShowAddModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive-material\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"component.note.list.student\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(this.StyledTableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"stuppUser.user.avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(this.StyledTableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"stuppUser.formadd.surname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(this.StyledTableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"stuppUser.formadd.name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(this.StyledTableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"appModule.email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(this.StyledTableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.note.student.markObtained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, !_.isEmpty(this.state.studentList) ? this.props.studentList.map((student, index) => /*#__PURE__*/React.createElement(ListGradeItem, {\n      student: student,\n      onChange: this.props.handleChangeNote,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    })) : /*#__PURE__*/React.createElement(this.StyledTableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      //align=\"right\"\n      className: \"d-flex justify-content-between col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      size: \"large\",\n      onClick: this.handleShowDeleteModal,\n      startIcon: /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 30\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"button.reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: this.props.examId == \"\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      type: \"submit\",\n      startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 30\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"note.button.save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, this.state.deleteIsopen ? /*#__PURE__*/React.createElement(DeleteGrades, {\n      cancelModal: this.cancelModal,\n      deleteIsopen: this.state.deleteIsopen,\n      reset: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }) : \"\", this.state.addIsopen ? /*#__PURE__*/React.createElement(AddGrades, {\n      cancelModal: this.cancelModal,\n      deleteIsopen: this.state.addIsopen,\n      addGrades: this.addGrades,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }) : \"\"))));\n  }\n\n}\nexport default GradeList;","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/GradesMenu/routes/Grade/ListGrade.js"],"names":["React","IntlMessages","CardBox","Table","TableBody","TableRow","TableCell","TableHead","Button","TextField","SaveIcon","DeleteIcon","withStyles","_","ListGradeItem","DeleteGrades","AddGrades","GradeList","Component","constructor","props","reset","setState","deleteIsopen","addGrades","addGrade","addIsopen","handleShowDeleteModal","handleShowAddModal","e","preventDefault","StyledTableCell","theme","head","backgroundColor","color","palette","common","white","body","fontSize","handleChange","id","event","ListNote","state","studentList","index","findIndex","student_id","fill","note","target","value","studentInfo","exam_id","bind","cancelModal","componentWillMount","examId","componentDidUpdate","prevProps","prevState","render","isEmpty","map","student","handleChangeNote"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport CardBox from \"../../../../../components/CardBox\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport _ from \"lodash\";\nimport ListGradeItem from \"./ListGradeItem\";\nimport DeleteGrades from \"./DeleteGrade\";\nimport AddGrades from \"./AddGrade\";\nexport class GradeList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      studentList: [],\n      exam_id: \"\",\n      deleteIsopen: false,\n      addIsopen: false,\n    };\n    this.handleShowDeleteModal = this.handleShowDeleteModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.reset = this.reset.bind(this);\n    this.handleShowAddModal = this.handleShowAddModal.bind(this);\n    this.addGrades = this.addGrades.bind(this);\n  }\n  reset = () => {\n    this.props.reset();\n    this.setState({\n      deleteIsopen: false,\n    });\n  };\n  addGrades = () => {\n    this.props.addGrade();\n    this.setState({\n      addIsopen: false,\n    });\n  };\n  handleShowDeleteModal = () => {\n    this.setState({ deleteIsopen: true });\n  };\n  handleShowAddModal = (e) => {\n    e.preventDefault();\n\n    this.setState({ addIsopen: true });\n  };\n  cancelModal() {\n    this.setState({ deleteIsopen: false, addIsopen: false });\n  }\n  componentWillMount() {\n    this.setState({\n      studentList: this.props.studentList,\n      exam_id: this.props.examId,\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.studentList !== this.props.studentList) {\n      this.setState({\n        studentList: this.props.studentList,\n        exam_id: this.props.examId,\n      });\n    }\n  }\n  StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: \"#3f51b5\",\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  handleChange = (id) => (event) => {\n    let ListNote = this.state.studentList;\n    let index = _.findIndex(ListNote, { student_id: id });\n    _.fill(\n      ListNote,\n      {\n        id: ListNote[index].id,\n        student_id: id,\n        note: event.target.value,\n        studentInfo: ListNote[index].studentInfo,\n      },\n      index,\n      index + 1\n    );\n    this.setState({ studentList: ListNote });\n  };\n  render() {\n    return (\n      <form autoComplete=\"off\" onSubmit={this.handleShowAddModal}>\n        <CardBox styleName=\"col-lg-12\">\n          <div className=\"table-responsive-material\">\n            <h1 align=\"center\">\n              {<IntlMessages id=\"component.note.list.student\" />}\n            </h1>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <this.StyledTableCell align=\"center\">\n                    {<IntlMessages id=\"stuppUser.user.avatar\" />}\n                  </this.StyledTableCell>\n                  <this.StyledTableCell>\n                    {<IntlMessages id=\"stuppUser.formadd.surname\" />}\n                  </this.StyledTableCell>\n\n                  <this.StyledTableCell>\n                    {<IntlMessages id=\"stuppUser.formadd.name\" />}\n                  </this.StyledTableCell>\n                  <this.StyledTableCell>\n                    {<IntlMessages id=\"appModule.email\" />}\n                  </this.StyledTableCell>\n                  <this.StyledTableCell align=\"center\">\n                    {<IntlMessages id=\"components.note.student.markObtained\" />}\n                  </this.StyledTableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {!_.isEmpty(this.state.studentList) ? (\n                  this.props.studentList.map((student, index) => (\n                    <ListGradeItem\n                      student={student}\n                      onChange={this.props.handleChangeNote}\n                      key={index}\n                    />\n                  ))\n                ) : (\n                  <this.StyledTableCell></this.StyledTableCell>\n                )}\n              </TableBody>\n            </Table>\n\n            <br></br>\n            <div\n              //align=\"right\"\n              className=\"d-flex justify-content-between col-sm-12\"\n            >\n              <div>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"large\"\n                  onClick={this.handleShowDeleteModal}\n                  startIcon={<DeleteIcon />}\n                >\n                  <IntlMessages id=\"button.reset\" />\n                </Button>\n              </div>\n              <div>\n                <Button\n                  disabled={this.props.examId == \"\"}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  type=\"submit\"\n                  startIcon={<SaveIcon />}\n                >\n                  <IntlMessages id=\"note.button.save\" />\n                </Button>\n              </div>\n            </div>\n            <div>\n              {this.state.deleteIsopen ? (\n                <DeleteGrades\n                  cancelModal={this.cancelModal}\n                  deleteIsopen={this.state.deleteIsopen}\n                  reset={this.reset}\n                />\n              ) : (\n                \"\"\n              )}\n              {this.state.addIsopen ? (\n                <AddGrades\n                  cancelModal={this.cancelModal}\n                  deleteIsopen={this.state.addIsopen}\n                  addGrades={this.addGrades}\n                />\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n        </CardBox>\n      </form>\n    );\n  }\n}\n\nexport default GradeList;\n"]},"metadata":{},"sourceType":"module"}