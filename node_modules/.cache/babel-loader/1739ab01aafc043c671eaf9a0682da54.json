{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport { GET_CLASSES_BY_ESTABLISHMENT_ID, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from \"../constants/ActionTypes\";\nexport const getClasses = () => {\n  return dispatch => {\n    let apiEndpoint = `/classes?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      let listActive = response.data.filter(classe => classe.status);\n      dispatch(receiveClasses(listActive));\n    }).catch(error => {});\n  };\n};\nexport function getClassesByEstablishmentId(establishmentId, schoolYearId) {\n  return dispatch => {\n    if (schoolYearId != undefined && establishmentId != undefined) {\n      let apiEndpoint = `/classes?access_token=${localStorage.token}&filter[where][and][0][establishment_id]=` + establishmentId + `&filter[where][and][1][fk_id_school_year]=` + schoolYearId;\n      classService.get(apiEndpoint).then(response => {\n        dispatch({\n          type: GET_CLASSES_BY_ESTABLISHMENT_ID,\n          payload: response.data\n        });\n      }).catch(err => {});\n    }\n  };\n}\n;\n\nconst receiveClasses = classes => ({\n  type: \"FETECHED_ALL_CLASS\",\n  classes: classes\n});\n\nexport function addClass(itemClass) {\n  let classData = {\n    name: itemClass.name,\n    capacity: itemClass.capacity,\n    students_number: itemClass.students_number,\n    status: true,\n    description: itemClass.description,\n    start_date: itemClass.start_date,\n    end_date: itemClass.end_date,\n    professor_id: itemClass.professor_id,\n    student_inscription_id: itemClass.student_inscription_id,\n    establishment_id: itemClass.establishment_id,\n    level_id: itemClass.level_id,\n    section_id: itemClass.section_id,\n    ar_name: itemClass.ar_name,\n    fk_id_school_year: itemClass.fk_id_school_year\n  };\n  return dispatch => {\n    let apiEndpoint = `/classes/create-class?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, classData).then(response => {\n      if (response) {\n        let data = response.data.classe;\n        dispatch({\n          type: \"ADD_CLASS\",\n          payload: data\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n}\nexport const archiverClass = item => {\n  return dispatch => {\n    let apiEndpoint = `/classes/` + item + `?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      const itemClass = response.data;\n      let classData = {\n        id: itemClass.id,\n        name: itemClass.name,\n        capacity: itemClass.capacity,\n        students_number: itemClass.students_number,\n        status: false,\n        description: itemClass.description,\n        start_date: itemClass.start_date,\n        end_date: itemClass.end_date,\n        establishment_id: itemClass.establishment_id,\n        level_id: itemClass.level_id,\n        section_id: itemClass.section_id,\n        ar_name: itemClass.ar_name\n      };\n      let apiEndpoint2 = `/classes/archiver-class?access_token=${localStorage.token}`;\n      classService.post(apiEndpoint2, classData).then(response => {\n        dispatch({\n          type: \"REMOVE_CLASS\",\n          payload: response.data.classe\n        });\n      }).catch(error => {});\n    }).catch(error => {});\n  };\n};\nexport const updateClass = itemClass => {\n  let classData = {\n    id: itemClass.id,\n    name: itemClass.name,\n    capacity: itemClass.capacity,\n    students_number: itemClass.students_number,\n    status: true,\n    description: itemClass.description,\n    start_date: itemClass.start_date,\n    end_date: itemClass.end_date,\n    professor_id: itemClass.professor_id,\n    inscription_ids: itemClass.inscription_ids,\n    establishment_id: itemClass.establishment_id,\n    level_id: itemClass.level_id,\n    section_id: itemClass.section_id,\n    last_professor_id: itemClass.last_professor_id,\n    ar_name: itemClass.ar_name,\n    fk_id_school_year: itemClass.fk_id_school_year\n  };\n  return dispatch => {\n    let apiEndpoint = `/classes/update-class?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, classData).then(response => {\n      if (response) {\n        dispatch({\n          type: \"UPDATE_CLASS\",\n          payload: response.data.classe\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La modification est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la modification merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};\nexport const getClassesByUserId = userId => {\n  return dispatch => {\n    let apiEndpoint = `/classes_professors/getClassesByUserId/${userId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      dispatch({\n        type: 'GET_CLASSES_BY_USER_ID',\n        payload: response.data.classes\n      });\n    }).catch(err => {});\n  };\n};\nexport const classAction = {\n  getClasses,\n  addClass,\n  archiverClass,\n  updateClass,\n  getClassesByEstablishmentId\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/actions/classeAction.js"],"names":["classService","GET_CLASSES_BY_ESTABLISHMENT_ID","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","getClasses","dispatch","apiEndpoint","localStorage","token","get","then","response","listActive","data","filter","classe","status","receiveClasses","catch","error","getClassesByEstablishmentId","establishmentId","schoolYearId","undefined","type","payload","err","classes","addClass","itemClass","classData","name","capacity","students_number","description","start_date","end_date","professor_id","student_inscription_id","establishment_id","level_id","section_id","ar_name","fk_id_school_year","post","setTimeout","archiverClass","item","id","apiEndpoint2","updateClass","inscription_ids","last_professor_id","getClassesByUserId","userId","classAction"],"mappings":"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","sourcesContent":["import { classService } from \"../_services/class.service\";\nimport { GET_CLASSES_BY_ESTABLISHMENT_ID, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from \"../constants/ActionTypes\";\n\nexport const getClasses = () => {\n  return dispatch => {\n    let apiEndpoint = `/classes?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint)\n      .then(response => {\n        let listActive = response.data.filter(classe => classe.status);\n        dispatch(receiveClasses(listActive));\n      }).catch(error => {\n\n      });\n  };\n};\n\nexport function getClassesByEstablishmentId (establishmentId ,schoolYearId )  {\n\n  return dispatch => {\n    if(schoolYearId != undefined && establishmentId != undefined){\n    let apiEndpoint =\n      `/classes?access_token=${localStorage.token}&filter[where][and][0][establishment_id]=` +\n      establishmentId+`&filter[where][and][1][fk_id_school_year]=`+schoolYearId;\n    classService\n      .get(apiEndpoint)\n      .then(response => {\n        dispatch({ type: GET_CLASSES_BY_ESTABLISHMENT_ID, payload: response.data });\n      })\n      .catch(err => { });\n    }\n  };\n\n};\n\n\nconst receiveClasses = classes => ({\n  type: \"FETECHED_ALL_CLASS\",\n  classes: classes\n});\n\nexport function addClass(itemClass) {\n  let classData = {\n    name: itemClass.name,\n    capacity: itemClass.capacity,\n    students_number: itemClass.students_number,\n    status: true,\n    description: itemClass.description,\n    start_date: itemClass.start_date,\n    end_date: itemClass.end_date,\n    professor_id: itemClass.professor_id,\n    student_inscription_id: itemClass.student_inscription_id,\n    establishment_id: itemClass.establishment_id,\n    level_id: itemClass.level_id,\n    section_id: itemClass.section_id,\n    ar_name: itemClass.ar_name,\n    fk_id_school_year: itemClass.fk_id_school_year\n  };\n  return dispatch => {\n    let apiEndpoint = `/classes/create-class?access_token=${localStorage.token}`;\n    classService\n      .post(apiEndpoint, classData)\n      .then(response => {\n        if (response) {\n          let data = response.data.classe;\n          dispatch({ type: \"ADD_CLASS\", payload: data });\n          dispatch({ type: SHOW_SUCCESS_MESSAGE, payload: \"La création est effectuée avec succès\" })\n          setTimeout(() => {\n            dispatch({ type: HIDE_SUCCESS_MESSAGE });\n          }, 4000);\n        } else {\n          dispatch({ type: SHOW_ERROR_MESSAGE, payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\" });\n          setTimeout(() => {\n            dispatch({ type: HIDE_ERROR_MESSAGE });\n          }, 4000);\n        }\n\n      })\n\n  };\n}\n\nexport const archiverClass = item => {\n  return dispatch => {\n    let apiEndpoint =\n      `/classes/` + item + `?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint)\n      .then(response => {\n        const itemClass = response.data;\n        let classData = {\n          id: itemClass.id,\n          name: itemClass.name,\n          capacity: itemClass.capacity,\n          students_number: itemClass.students_number,\n          status: false,\n          description: itemClass.description,\n          start_date: itemClass.start_date,\n          end_date: itemClass.end_date,\n          establishment_id: itemClass.establishment_id,\n          level_id: itemClass.level_id,\n          section_id: itemClass.section_id,\n          ar_name: itemClass.ar_name\n        };\n        let apiEndpoint2 = `/classes/archiver-class?access_token=${localStorage.token}`;\n        classService.post(apiEndpoint2, classData)\n\n          .then(response => {\n            dispatch({ type: \"REMOVE_CLASS\", payload: response.data.classe });\n          })\n          .catch(error => {\n          });\n      })\n      .catch(error => {\n      });\n  };\n};\n\nexport const updateClass = itemClass => {\n  let classData = {\n    id: itemClass.id,\n    name: itemClass.name,\n    capacity: itemClass.capacity,\n    students_number: itemClass.students_number,\n    status: true,\n    description: itemClass.description,\n    start_date: itemClass.start_date,\n    end_date: itemClass.end_date,\n    professor_id: itemClass.professor_id,\n    inscription_ids: itemClass.inscription_ids,\n    establishment_id: itemClass.establishment_id,\n    level_id: itemClass.level_id,\n    section_id: itemClass.section_id,\n    last_professor_id: itemClass.last_professor_id,\n    ar_name: itemClass.ar_name,\n    fk_id_school_year: itemClass.fk_id_school_year\n  };\n  return dispatch => {\n    let apiEndpoint = `/classes/update-class?access_token=${localStorage.token}`;\n    classService\n      .post(apiEndpoint, classData)\n      .then(response => {\n\n        if (response) {\n          dispatch({ type: \"UPDATE_CLASS\", payload: response.data.classe });\n          dispatch({ type: SHOW_SUCCESS_MESSAGE, payload: \"La modification est effectuée avec succès\" })\n          setTimeout(() => {\n            dispatch({ type: HIDE_SUCCESS_MESSAGE });\n          }, 4000);\n        }\n        else {\n          dispatch({ type: SHOW_ERROR_MESSAGE, payload: \"Une erreur est survenue lors de la modification merci d'essayer à nouveau\" });\n          setTimeout(() => {\n            dispatch({ type: HIDE_ERROR_MESSAGE });\n          }, 4000);\n        }\n\n      })\n\n  };\n};\nexport const getClassesByUserId = userId => {\n  return dispatch => {\n    let apiEndpoint = `/classes_professors/getClassesByUserId/${userId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint)\n      .then(response => {\n        dispatch({ type: 'GET_CLASSES_BY_USER_ID', payload: response.data.classes });\n      })\n      .catch(err => { });\n  };\n};\n\n\nexport const classAction = {\n  getClasses,\n  addClass,\n  archiverClass,\n  updateClass,\n  getClassesByEstablishmentId\n};\n"]},"metadata":{},"sourceType":"module"}