{"ast":null,"code":"import { applyMiddleware, compose, createStore } from 'redux';\nimport reducers from '../reducers/index';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas/index';\nimport thunk from \"redux-thunk\";\nconst history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware, routeMiddleware, thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default function configureStore(initialState) {\n  var store;\n\n  if (process.env.NODE_ENV === \"development\") {\n    store = createStore(reducers(history), initialState, composeEnhancers(applyMiddleware(...middlewares)));\n  } else {\n    store = createStore(reducers(history), initialState, applyMiddleware(...middlewares));\n  }\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers/index', () => {\n      const nextRootReducer = require('../reducers/index');\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\nexport { history };","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/store/index.js"],"names":["applyMiddleware","compose","createStore","reducers","createBrowserHistory","routerMiddleware","createSagaMiddleware","rootSaga","thunk","history","routeMiddleware","sagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","initialState","store","process","env","NODE_ENV","run","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,oBAAR,QAAmC,SAAnC;AACA,SAAQC,gBAAR,QAA+B,wBAA/B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAIA,MAAMC,OAAO,GAAGL,oBAAoB,EAApC;AACA,MAAMM,eAAe,GAAGL,gBAAgB,CAACI,OAAD,CAAxC;AACA,MAAME,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,MAAMM,WAAW,GAAG,CAACD,cAAD,EAAiBD,eAAjB,EAAkCF,KAAlC,CAApB;AACA,MAAMK,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+Cd,OAAxE;AAGA,eAAe,SAASe,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,MAAKC,KAAL;;AAEA,MAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,aAA1B,EAAwC;AAC1CH,IAAAA,KAAK,GAAGhB,WAAW,CAACC,QAAQ,CAACM,OAAD,CAAT,EAAoBQ,YAApB,EACnBJ,gBAAgB,CAACb,eAAe,CAAC,GAAGY,WAAJ,CAAhB,CADG,CAAnB;AAGG,GAJD,MAKI;AACFM,IAAAA,KAAK,GAAGhB,WAAW,CAACC,QAAQ,CAACM,OAAD,CAAT,EAAoBQ,YAApB,EACnBjB,eAAe,CAAC,GAAGY,WAAJ,CADI,CAAnB;AAID;;AAGDD,EAAAA,cAAc,CAACW,GAAf,CAAmBf,QAAnB;;AAEA,MAAIgB,MAAM,CAACC,GAAX,EAAgB;AACd;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,mBAAlB,EAAuC,MAAM;AAC3C,YAAMC,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA/B;;AACAT,MAAAA,KAAK,CAACU,cAAN,CAAqBF,eAArB;AACD,KAHD;AAID;;AACD,SAAOR,KAAP;AACD;AACD,SAAQT,OAAR","sourcesContent":["import {applyMiddleware, compose, createStore} from 'redux';\r\nimport reducers from '../reducers/index';\r\nimport {createBrowserHistory} from 'history'\r\nimport {routerMiddleware} from 'connected-react-router';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas/index';\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\n\r\nconst history = createBrowserHistory();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware, routeMiddleware, thunk];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nexport default function configureStore(initialState) {\r\n  var  store ;\r\n\r\n  if(process.env.NODE_ENV===\"development\"){\r\nstore=  createStore(reducers(history), initialState,\r\ncomposeEnhancers(applyMiddleware(...middlewares))\r\n);\r\n  }\r\n  else{\r\n    store=  createStore(reducers(history), initialState,\r\n    applyMiddleware(...middlewares)\r\n\r\n);\r\n  }\r\n\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    // Enable Webpack hot module replacement for reducers\r\n    module.hot.accept('../reducers/index', () => {\r\n      const nextRootReducer = require('../reducers/index');\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n  return store;\r\n}\r\nexport {history};\r\n"]},"metadata":{},"sourceType":"module"}