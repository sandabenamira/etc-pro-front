{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/ServiceAllocation/AddAllocationService.js\";\nimport React from \"react\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"react-select\";\nimport ServiceItem from \"./ServiceItem\";\nimport Button from \"@material-ui/core/Button\";\nimport AllocationItem from \"./ServiceAllocationComp/AllocationItem\";\nimport { addAllocationService, studentExist } from \"../../../../../actions/AllocationServiceAction\";\nimport { connect } from \"react-redux\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport _ from \"lodash\";\n\nclass AddAllocationService extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeStudent = selectedOption => {\n      let idStudentsAffected = _.map(this.props.allocationService, function (el) {\n        if (el.services.length > 0) {\n          return el.services[0].fk_id_student;\n        }\n      });\n\n      let alerte;\n      alerte = idStudentsAffected.indexOf(selectedOption.value) >= 0;\n\n      if (alerte) {\n        this.props.openAddModal();\n        this.props.studentExist(this.state.options[selectedOption.key].label);\n      } else {}\n\n      this.setState({\n        student_id: selectedOption.value\n      });\n    };\n\n    this.HandleSubmitAllocationService = () => {\n      if (this.state.student_id == \"\" || this.state.servicesSelected.length == 0) {\n        this.setState({\n          alerteEmpty: true\n        });\n        setTimeout(() => {\n          this.setState({\n            alerteEmpty: false\n          });\n        }, 9000);\n      } else {\n        let data = [];\n        this.state.servicesSelected.map(element => {\n          var allocationData = {};\n          allocationData.fk_id_student = this.state.student_id;\n          allocationData.fk_id_service = element.id;\n          allocationData.allocation_month = element.monthSelected;\n          data.push(allocationData);\n        });\n        this.props.addAllocationService(data, this.props.establishmentId);\n        this.setState({\n          open: false,\n          frequency: \"\",\n          servicesSelected: [],\n          student_id: 0\n        });\n        this.props.openAddModal();\n      }\n    };\n\n    this.state = {\n      open: false,\n      frequency: \"\",\n      servicesSelected: [],\n      student_id: 0,\n      options: [],\n      idStudents: [],\n      alerteEmpty: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeStudent = this.handleChangeStudent.bind(this);\n    this.handleIcon = this.handleIcon.bind(this);\n    this.HandleSubmitAllocationService = this.HandleSubmitAllocationService.bind(this);\n    this.openAddModal = this.openAddModal.bind(this);\n  }\n\n  handleIcon(idSelected) {\n    let servicesSelected = [];\n    let serviceExistant = [];\n    let services = this.state.servicesSelected;\n    servicesSelected = this.props.services.filter(service => service.id == idSelected)[0];\n    let serviceObj = {};\n    serviceObj = servicesSelected;\n\n    if (servicesSelected.fk_id_frequency == 7) {\n      serviceObj.monthSelected = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    } else {\n      serviceObj.monthSelected = [];\n    }\n\n    serviceExistant = services.filter(service => service.id == idSelected);\n    let serviceDelete = services.filter(service => service.id != idSelected);\n\n    if (serviceExistant.length > 0) {\n      this.setState({\n        servicesSelected: serviceDelete\n      });\n    } else {\n      services.push(serviceObj);\n      this.setState({\n        servicesSelected: services\n      });\n    }\n  }\n\n  openAddModal() {\n    this.setState(previousState => ({\n      open: !previousState.open\n    }));\n  }\n\n  componentDidMount() {\n    if (this.state.student_id === 0) {\n      let options = [];\n      let idStudents = [];\n      this.props.studentList.forEach((student, index) => {\n        let option = {\n          label: student.profile.user.name + \" \" + student.profile.user.surname,\n          value: student.id,\n          key: index\n        };\n        options.push(option);\n        let ids = {\n          label: student.id,\n          value: student.id,\n          key: index\n        };\n        idStudents.push(ids);\n      });\n      this.setState({\n        options,\n        idStudents\n      });\n    }\n  }\n\n  render() {\n    let {\n      services,\n      studentList\n    } = this.props;\n    let {\n      options,\n      idStudents\n    } = this.state;\n    var lengthServices;\n\n    if (this.state.open == false) {\n      lengthServices = 4;\n    } else {\n      lengthServices = services.length;\n    }\n\n    return /*#__PURE__*/React.createElement(CardBox, {\n      heading: /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 18\n        }\n      }, \"Nouvelle affectation\"),\n      styleName: \"col-lg-12 text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontFamily: \"Arial Helvetica sans-serif\",\n        color: \"#979A9A\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, \"Choissiez le mode de recherche qui vous convient(numero de ID ou nom ) ...\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md-12 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"idSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, \"ID\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      value: idStudents[_.findIndex(idStudents, {\n        value: this.state.student_id\n      })],\n      name: \"student_id\",\n      id: \"student_id\",\n      styles: {\n        control: base => ({ ...base,\n          \"&:hover\": {\n            borderColor: \"gray\"\n          },\n          // border style on hover\n          border: \"1px solid lightgray\",\n          // default border color\n          boxShadow: \"none\",\n          // no box-shadow\n          borderRadius: 20\n        })\n      },\n      onChange: this.handleChangeStudent,\n      options: idStudents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"nomSelect\",\n      style: {\n        paddingLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, \"Nom\"), /*#__PURE__*/React.createElement(Select, {\n      value: options[_.findIndex(options, {\n        value: this.state.student_id\n      })],\n      id: \"nomSelect\",\n      styles: {\n        control: base => ({ ...base,\n          \"&:hover\": {\n            borderColor: \"gray\"\n          },\n          // border style on hover\n          border: \"1px solid lightgray\",\n          // default border color\n          boxShadow: \"none\",\n          // no box-shadow\n          borderTopStyle: \"none\",\n          borderRightStyle: \"none\",\n          borderLeftStyle: \"none\",\n          borderRadius: \" none\"\n        })\n      },\n      onChange: this.handleChangeStudent,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }), \" \"), this.state.alerteEmpty ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"alerte.ajout.affectation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    })))) : \"\", /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        width: \"120%\",\n        margin: \"auto\",\n        marginTop: \"5%\",\n        marginBottom: \"5%\",\n        border: \"1px dashed #979A9A\",\n        paddingLeft: \"none\",\n        paddingRight: \"-10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }, \"Prestation\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-2 col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-10 col-md-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    }, services.slice(0, lengthServices).map(element => /*#__PURE__*/React.createElement(ServiceItem, {\n      key: element.id,\n      item: element,\n      handleIcon: this.handleIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 d-flex flex-column align-items-center \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }\n    }, this.state.open == false ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.openAddModal,\n      style: {\n        borderRadius: \"35px\",\n        backgroundColor: \"white\",\n        padding: \"14px\",\n        border: \"0.5px solid\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 15\n      }\n    }, this.state.open == false ? ` Afficher toutes les prestations` : ` masquer les prestations`) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }\n    }, this.state.servicesSelected.map((element, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AllocationItem, {\n        item: element,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 19\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 text-right \",\n      style: {\n        marginTop: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      style: {\n        borderBottomLeftRadius: \"16px\",\n        borderBottomRightRadius: \"16px\",\n        borderTopLeftRadius: \"16px\",\n        borderTopRightRadius: \"16px\"\n      },\n      onClick: this.props.openAddModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.classes.formadd.buttonCancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 15\n      }\n    })), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\" // disabled={\n      //   this.state.student_id == \"\" ||\n      //   this.state.servicesSelected.length == 0\n      // }\n      ,\n      style: {\n        borderBottomLeftRadius: \"16px\",\n        borderBottomRightRadius: \"16px\",\n        borderTopLeftRadius: \"16px\",\n        borderTopRightRadius: \"16px\"\n      },\n      className: \" bg-indigo text-white \",\n      onClick: this.HandleSubmitAllocationService,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"note.button.save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile\n  };\n}\n\nexport default connect(mapStateToProps, {\n  addAllocationService,\n  studentExist\n})(AddAllocationService);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/ServiceAllocation/AddAllocationService.js"],"names":["React","CardBox","InputLabel","Select","ServiceItem","Button","AllocationItem","addAllocationService","studentExist","connect","MenuItem","IntlMessages","UncontrolledAlert","_","AddAllocationService","Component","constructor","props","handleChange","name","event","setState","target","value","handleChangeStudent","selectedOption","idStudentsAffected","map","allocationService","el","services","length","fk_id_student","alerte","indexOf","openAddModal","state","options","key","label","student_id","HandleSubmitAllocationService","servicesSelected","alerteEmpty","setTimeout","data","element","allocationData","fk_id_service","id","allocation_month","monthSelected","push","establishmentId","open","frequency","idStudents","bind","handleIcon","idSelected","serviceExistant","filter","service","serviceObj","fk_id_frequency","serviceDelete","previousState","componentDidMount","studentList","forEach","student","index","option","profile","user","surname","ids","render","lengthServices","fontFamily","color","findIndex","control","base","borderColor","border","boxShadow","borderRadius","paddingLeft","borderTopStyle","borderRightStyle","borderLeftStyle","width","margin","marginTop","marginBottom","paddingRight","slice","backgroundColor","padding","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","mapStateToProps","userProfile","auth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"react-select\";\nimport ServiceItem from \"./ServiceItem\";\nimport Button from \"@material-ui/core/Button\";\nimport AllocationItem from \"./ServiceAllocationComp/AllocationItem\";\nimport {\n  addAllocationService,\n  studentExist,\n} from \"../../../../../actions/AllocationServiceAction\";\nimport { connect } from \"react-redux\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport _ from \"lodash\";\nclass AddAllocationService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      frequency: \"\",\n      servicesSelected: [],\n      student_id: 0,\n      options: [],\n      idStudents: [],\n      alerteEmpty: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeStudent = this.handleChangeStudent.bind(this);\n    this.handleIcon = this.handleIcon.bind(this);\n    this.HandleSubmitAllocationService = this.HandleSubmitAllocationService.bind(\n      this\n    );\n    this.openAddModal = this.openAddModal.bind(this);\n  }\n\n  handleIcon(idSelected) {\n    let servicesSelected = [];\n    let serviceExistant = [];\n\n    let services = this.state.servicesSelected;\n    servicesSelected = this.props.services.filter(\n      (service) => service.id == idSelected\n    )[0];\n    let serviceObj = {};\n\n    serviceObj = servicesSelected;\n\n    if (servicesSelected.fk_id_frequency == 7) {\n      serviceObj.monthSelected = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    } else {\n      serviceObj.monthSelected = [];\n    }\n\n    serviceExistant = services.filter((service) => service.id == idSelected);\n\n    let serviceDelete = services.filter((service) => service.id != idSelected);\n\n    if (serviceExistant.length > 0) {\n      this.setState({\n        servicesSelected: serviceDelete,\n      });\n    } else {\n      services.push(serviceObj);\n\n      this.setState({\n        servicesSelected: services,\n      });\n    }\n  }\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChangeStudent = (selectedOption) => {\n    let idStudentsAffected = _.map(this.props.allocationService, function(el) {\n      if (el.services.length > 0) {\n        return el.services[0].fk_id_student;\n      }\n    });\n    let alerte;\n    alerte = idStudentsAffected.indexOf(selectedOption.value) >= 0;\n\n    if (alerte) {\n      this.props.openAddModal();\n      this.props.studentExist(this.state.options[selectedOption.key].label);\n    } else {\n    }\n    this.setState({\n      student_id: selectedOption.value,\n    });\n  };\n\n  HandleSubmitAllocationService = () => {\n    if (\n      this.state.student_id == \"\" ||\n      this.state.servicesSelected.length == 0\n    ) {\n      this.setState({\n        alerteEmpty: true,\n      });\n      setTimeout(() => {\n        this.setState({\n          alerteEmpty: false,\n        });\n      }, 9000);\n    } else {\n      let data = [];\n      this.state.servicesSelected.map((element) => {\n        var allocationData = {};\n        allocationData.fk_id_student = this.state.student_id;\n        allocationData.fk_id_service = element.id;\n        allocationData.allocation_month = element.monthSelected;\n\n        data.push(allocationData);\n      });\n\n      this.props.addAllocationService(data, this.props.establishmentId);\n      this.setState({\n        open: false,\n        frequency: \"\",\n        servicesSelected: [],\n        student_id: 0,\n      });\n      this.props.openAddModal();\n    }\n  };\n  openAddModal() {\n    this.setState((previousState) => ({\n      open: !previousState.open,\n    }));\n  }\n  componentDidMount() {\n    if (this.state.student_id === 0) {\n      let options = [];\n      let idStudents = [];\n      this.props.studentList.forEach((student, index) => {\n        let option = {\n          label: student.profile.user.name + \" \" + student.profile.user.surname,\n          value: student.id,\n          key: index,\n        };\n        options.push(option);\n\n        let ids = {\n          label: student.id,\n          value: student.id,\n          key: index,\n        };\n\n        idStudents.push(ids);\n      });\n      this.setState({ options, idStudents });\n    }\n  }\n\n  render() {\n    let { services, studentList } = this.props;\n    let { options, idStudents } = this.state;\n    var lengthServices;\n    if (this.state.open == false) {\n      lengthServices = 4;\n    } else {\n      lengthServices = services.length;\n    }\n\n    return (\n      <CardBox\n        heading={<b>Nouvelle affectation</b>}\n        styleName=\"col-lg-12 text-primary\"\n      >\n        <div>\n          <p\n            style={{\n              fontFamily: \"Arial Helvetica sans-serif\",\n              color: \"#979A9A\",\n            }}\n          >\n            Choissiez le mode de recherche qui vous convient(numero de ID ou nom\n            ) ...\n          </p>{\" \"}\n        </div>\n        <div className=\"row col-lg-12 col-md-12 \">\n          <div>\n            <InputLabel htmlFor=\"idSelect\">ID</InputLabel>\n          </div>\n          <div className=\"col-md-2\">\n            <Select\n              value={\n                idStudents[\n                  _.findIndex(idStudents, {\n                    value: this.state.student_id,\n                  })\n                ]\n              }\n              name=\"student_id\"\n              id=\"student_id\"\n              styles={{\n                control: (base) => ({\n                  ...base,\n                  \"&:hover\": { borderColor: \"gray\" }, // border style on hover\n                  border: \"1px solid lightgray\", // default border color\n                  boxShadow: \"none\", // no box-shadow\n                  borderRadius: 20,\n                }),\n              }}\n              onChange={this.handleChangeStudent}\n              options={idStudents}\n            />\n          </div>\n          <div className=\"col-md-4\">\n            <InputLabel htmlFor=\"nomSelect\" style={{ paddingLeft: \"10px\" }}>\n              Nom\n            </InputLabel>\n            <Select\n              value={\n                options[\n                  _.findIndex(options, {\n                    value: this.state.student_id,\n                  })\n                ]\n              }\n              id=\"nomSelect\"\n              styles={{\n                control: (base) => ({\n                  ...base,\n                  \"&:hover\": { borderColor: \"gray\" }, // border style on hover\n                  border: \"1px solid lightgray\", // default border color\n                  boxShadow: \"none\", // no box-shadow\n                  borderTopStyle: \"none\",\n                  borderRightStyle: \"none\",\n                  borderLeftStyle: \"none\",\n                  borderRadius: \" none\",\n                }),\n              }}\n              onChange={this.handleChangeStudent}\n              options={options}\n            />{\" \"}\n          </div>\n          {this.state.alerteEmpty ? (\n            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n              <UncontrolledAlert className=\"alert-addon-card bg-danger bg-danger text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\">\n                  <IntlMessages id=\"alerte.ajout.affectation\" />\n                </span>\n              </UncontrolledAlert>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <hr\n            style={{\n              width: \"120%\",\n              margin: \"auto\",\n              marginTop: \"5%\",\n              marginBottom: \"5%\",\n              border: \"1px dashed #979A9A\",\n              paddingLeft: \"none\",\n              paddingRight: \"-10px\",\n            }}\n          />\n\n          <h3>\n            <b>Prestation</b>\n          </h3>\n\n          <div className=\"row col-lg-12 col-md-12\"></div>\n          <div className=\"row col-lg-2 col-md-2\"></div>\n\n          <div className=\"row col-lg-10 col-md-10\">\n            {services.slice(0, lengthServices).map((element) => (\n              <ServiceItem\n                key={element.id}\n                item={element}\n                handleIcon={this.handleIcon}\n              />\n            ))}\n          </div>\n          <div className=\"col-lg-12 col-md-12 d-flex flex-column align-items-center \">\n            {this.state.open == false ? (\n              <Button\n                variant=\"contained\"\n                onClick={this.openAddModal}\n                style={{\n                  borderRadius: \"35px\",\n                  backgroundColor: \"white\",\n                  padding: \"14px\",\n                  border: \"0.5px solid\",\n                }}\n              >\n                {this.state.open == false\n                  ? ` Afficher toutes les prestations`\n                  : ` masquer les prestations`}\n              </Button>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <div className=\"col-lg-2 col-md-2\"></div>\n          <br />\n          <br />\n          <div className=\"col-lg-12 col-md-12 \">\n            {this.state.servicesSelected.map((element, index) => {\n              return (\n                <div>\n                  <AllocationItem item={element} key={index} />\n                  <br></br>\n                </div>\n              );\n            })}\n          </div>\n          <div\n            className=\"col-lg-12 col-md-12 text-right \"\n            style={{ marginTop: \"5%\" }}\n          >\n            <Button\n              variant=\"contained\"\n              style={{\n                borderBottomLeftRadius: \"16px\",\n                borderBottomRightRadius: \"16px\",\n                borderTopLeftRadius: \"16px\",\n                borderTopRightRadius: \"16px\",\n              }}\n              onClick={this.props.openAddModal}\n            >\n              <IntlMessages id=\"components.classes.formadd.buttonCancel\" />\n            </Button>\n            &nbsp;&nbsp;\n            <Button\n              variant=\"contained\"\n              // disabled={\n              //   this.state.student_id == \"\" ||\n              //   this.state.servicesSelected.length == 0\n              // }\n              style={{\n                borderBottomLeftRadius: \"16px\",\n                borderBottomRightRadius: \"16px\",\n                borderTopLeftRadius: \"16px\",\n                borderTopRightRadius: \"16px\",\n              }}\n              className=\" bg-indigo text-white \"\n              onClick={this.HandleSubmitAllocationService}\n            >\n              <IntlMessages id=\"note.button.save\" />\n            </Button>\n          </div>\n        </div>\n      </CardBox>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    addAllocationService,\n    studentExist,\n  }\n)(AddAllocationService);\n"]},"metadata":{},"sourceType":"module"}