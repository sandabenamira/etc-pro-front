{"ast":null,"code":"import { GET_PERMISSION_SETTING, GET_USER_PERMISSION, EDIT_PERMISSION_SETTING } from '../constants/ActionTypes';\nimport _ from 'lodash';\nconst initialState = {\n  permissionSetting: [],\n  userPermission: []\n};\nexport default function (state = initialState, action) {\n  // switch (action.type) {\n  //   case EDIT_PERMISSION_SETTING:\n  //     let newPermissions = state.permissionSetting.filter(\n  //       (element) =>\n  //         // _.includes(action.payload, element)\n  //         element.id == 1\n  //     );\n  //     // console.log('newPermissions reducer');\n  //     return Object.assign({}, state, {\n  //       permissionSetting: action.payload,\n  //     });\n  //   case GET_PERMISSION_SETTING:\n  //     console.log('gettttttttttttttt reducer');\n  //     return Object.assign({}, state, {\n  //       permissionSetting: action.payload,\n  //     });\n  //   case GET_USER_PERMISSION:\n  //     return Object.assign({}, state, {\n  //       userPermission: action.payload,\n  //     });\n  //   default:\n  //     return state;\n  // }\n  if (action.type === EDIT_PERMISSION_SETTING) {\n    let newPermissions = state.permissionSetting.filter(element => _.includes(action.payload, element));\n    console.log('newPermissions reducer', newPermissions);\n    return Object.assign({}, state, {\n      permissionSetting: action.payload\n    });\n  }\n\n  if (action.type === GET_PERMISSION_SETTING) {\n    return Object.assign({}, state, {\n      permissionSetting: action.payload\n    });\n  }\n\n  if (action.type === GET_USER_PERMISSION) {\n    return Object.assign({}, state, {\n      userPermission: action.payload\n    });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/reducers/PermissionReducer.js"],"names":["GET_PERMISSION_SETTING","GET_USER_PERMISSION","EDIT_PERMISSION_SETTING","_","initialState","permissionSetting","userPermission","state","action","type","newPermissions","filter","element","includes","payload","console","log","Object","assign"],"mappings":"AAAA,SACEA,sBADF,EAEEC,mBAFF,EAGEC,uBAHF,QAIO,0BAJP;AAKA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,iBAAiB,EAAE,EADA;AAEnBC,EAAAA,cAAc,EAAE;AAFG,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,MAAIA,MAAM,CAACC,IAAP,KAAgBP,uBAApB,EAA6C;AAC3C,QAAIQ,cAAc,GAAGH,KAAK,CAACF,iBAAN,CAAwBM,MAAxB,CAAgCC,OAAD,IAClDT,CAAC,CAACU,QAAF,CAAWL,MAAM,CAACM,OAAlB,EAA2BF,OAA3B,CADmB,CAArB;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCN,cAAtC;AAEA,WAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyB;AAC9BF,MAAAA,iBAAiB,EAAEG,MAAM,CAACM;AADI,KAAzB,CAAP;AAGD;;AACD,MAAIN,MAAM,CAACC,IAAP,KAAgBT,sBAApB,EAA4C;AAC1C,WAAOiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyB;AAC9BF,MAAAA,iBAAiB,EAAEG,MAAM,CAACM;AADI,KAAzB,CAAP;AAGD;;AACD,MAAIN,MAAM,CAACC,IAAP,KAAgBR,mBAApB,EAAyC;AACvC,WAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyB;AAC9BD,MAAAA,cAAc,EAAEE,MAAM,CAACM;AADO,KAAzB,CAAP;AAGD;;AACD,SAAOP,KAAP;AACD","sourcesContent":["import {\n  GET_PERMISSION_SETTING,\n  GET_USER_PERMISSION,\n  EDIT_PERMISSION_SETTING,\n} from '../constants/ActionTypes';\nimport _ from 'lodash';\n\nconst initialState = {\n  permissionSetting: [],\n  userPermission: [],\n};\n\nexport default function(state = initialState, action) {\n  // switch (action.type) {\n  //   case EDIT_PERMISSION_SETTING:\n  //     let newPermissions = state.permissionSetting.filter(\n  //       (element) =>\n  //         // _.includes(action.payload, element)\n  //         element.id == 1\n  //     );\n  //     // console.log('newPermissions reducer');\n\n  //     return Object.assign({}, state, {\n  //       permissionSetting: action.payload,\n  //     });\n  //   case GET_PERMISSION_SETTING:\n  //     console.log('gettttttttttttttt reducer');\n\n  //     return Object.assign({}, state, {\n  //       permissionSetting: action.payload,\n  //     });\n  //   case GET_USER_PERMISSION:\n  //     return Object.assign({}, state, {\n  //       userPermission: action.payload,\n  //     });\n\n  //   default:\n  //     return state;\n  // }\n  if (action.type === EDIT_PERMISSION_SETTING) {\n    let newPermissions = state.permissionSetting.filter((element) =>\n      _.includes(action.payload, element)\n    );\n\n    console.log('newPermissions reducer', newPermissions);\n\n    return Object.assign({}, state, {\n      permissionSetting: action.payload,\n    });\n  }\n  if (action.type === GET_PERMISSION_SETTING) {\n    return Object.assign({}, state, {\n      permissionSetting: action.payload,\n    });\n  }\n  if (action.type === GET_USER_PERMISSION) {\n    return Object.assign({}, state, {\n      userPermission: action.payload,\n    });\n  }\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}