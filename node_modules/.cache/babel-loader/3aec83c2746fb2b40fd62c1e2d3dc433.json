{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Lesson/LessonList.js\";\nimport React from \"react\";\nimport LessonGridItem from \"./LessonGridItem\";\nimport CardBox from \"../../../components/CardBox/index\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { getSectionFromLevel } from \"../../../actions/sectionAction\";\nimport { getLevelListFromEstabType } from \"../../../actions/classLevelAction\";\nimport IntlMessages from \"../../../util/IntlMessages\";\nimport Can from \"../../../can\";\nimport { RoleContext } from \"../../../Context\";\nimport { roleIdProfessor, roleIdStudent } from \"../../../config/config\";\nimport { getLessonByClassId } from \"../../../actions/LessonAction\";\nimport { editLesson } from \"../../../actions/LessonAction\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport EditLesson from \"./EditLesson\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/moment\";\nimport axios from \"axios\";\nimport baseUrl from \"../../../config/config\";\nimport { element } from \"prop-types\";\n\nclass LessonList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeDateProfessor = date => {\n      if (date === null) {\n        this.setState({\n          selectedFilterDateProfessor: null\n        });\n      } else {\n        this.setState({\n          selectedFilterDateProfessor: date.format().slice(0, 10)\n        });\n      }\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        openedit: false\n      });\n    };\n\n    this.editLessonList = () => {\n      var data = {};\n      data.name = this.state.course_object;\n      data.details = this.state.details;\n      data.creation_date = this.state.lesson.creation_date;\n      data.status = this.state.lesson.status;\n      data.file = this.state.lesson.file;\n      data.class_professor_id = this.state.lesson.class_professor_id;\n      data.id = this.state.lesson.id;\n      this.props.editLesson(data);\n      this.setState({\n        course_object: \"\",\n        details: \"\",\n        openedit: false\n      });\n    };\n\n    this.handleEdit = courseObject => {\n      this.setState({\n        openedit: true,\n        lesson: courseObject,\n        course_object: courseObject.name,\n        details: courseObject.details\n      });\n    };\n\n    this.handleChangeClass = name => event => {\n      this.setState({\n        selectedFilterDateProfessor: null\n      });\n\n      if (event.target.value === \"0\") {\n        this.setState({\n          [name]: \"\"\n        });\n      } else {\n        this.setState({\n          [name]: event.target.value\n        });\n        this.props.getLessonByClassId(event.target.value);\n      }\n    };\n\n    this.handleChangeSubject = name => event => {\n      if (event.target.value === \"0\") {\n        this.setState({\n          [name]: \"\"\n        });\n      } else {\n        this.setState({\n          [name]: event.target.value\n        });\n      }\n\n      this.setState({\n        selectedFilterDateProfessor: null\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeLevel = name => event => {\n      this.setState({\n        section_id: 0,\n        class_id: 0,\n        classeDisabled: true\n      });\n\n      if (event.target.value > 10) {\n        this.setState({\n          [name]: event.target.value\n        });\n        this.setState({\n          sectionDisabled: false,\n          class_id: 0\n        });\n      } else {\n        this.setState({\n          [name]: event.target.value\n        });\n        this.setState({\n          sectionDisabled: true,\n          class_id: 0,\n          classeDisabled: false\n        });\n        const filtredClassesD = this.props.classes.filter(classe => classe.level_id === event.target.value && classe.status);\n        this.setState({\n          studentClassesByLevelSectionID: filtredClassesD\n        });\n      }\n    };\n\n    this.handleChangeSection = name => event => {\n      this.setState({\n        class_id: 0,\n        classeDisabled: false\n      });\n      this.setState({\n        [name]: event.target.value\n      });\n      const levelId = this.state.level_id;\n      const sectionId = event.target.value;\n      const filtredClasses = this.props.classes.filter(classe => classe.level_id === levelId && classe.section_id === sectionId && classe.status);\n      this.setState({\n        studentClassesByLevelSectionID: filtredClasses\n      });\n    };\n\n    this.onTagsChange = (event, values) => {\n      this.setState({\n        tags: values,\n        selectedFilterDateProfessor: null,\n        subject_id: \"\"\n      });\n    };\n\n    this.state = {\n      openedit: false,\n      section_id: \"\",\n      class_id: \"\",\n      level_id: \"\",\n      sectionDisabled: true,\n      classeDisabled: true,\n      studentClassesByLevelSectionID: [],\n      subject_id: \"\",\n      lessons: [],\n      lesson: {},\n      course_object: \"\",\n      details: \"\",\n      selectedFilterDateProfessor: null,\n      ProfessorCoursList: [],\n      studentCoursList: [],\n      studentSubjectList: [],\n      tags: null\n    };\n    this.handleChangeLevel = this.handleChangeLevel.bind(this);\n    this.handleChangeSection = this.handleChangeSection.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.editLessonList = this.editLessonList.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeDateProfessor = this.handleChangeDateProfessor.bind(this);\n    this.onTagsChange = this.onTagsChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.roleId === roleIdStudent) {\n      axios.get(`${baseUrl.baseUrl}/profiles/fetchLessonByprofileID/` + this.props.userProfile.id + `?access_token=${localStorage.token}`).then(res => {\n        this.setState({\n          studentCoursList: res.data.lessonData\n        });\n      });\n      axios.get(`${baseUrl.baseUrl}/profiles/fetchSubjectByprofileID/` + this.props.userProfile.id + `?access_token=${localStorage.token}`).then(res => {\n        this.setState({\n          studentSubjectList: res.data.subjectData\n        });\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.roleId === roleIdProfessor) {\n      if (prevProps.lessons !== this.props.lessons) {\n        let classList = this.props.classes;\n\n        if (!_.isEmpty(classList)) {\n          const filtredClasses = Array.from(classList).filter(classe => classe.status);\n          this.setState({\n            classeDisabled: false,\n            studentClassesByLevelSectionID: filtredClasses\n          });\n        }\n\n        let apiEndpoint = `${baseUrl.baseUrl}/courses?access_token=${localStorage.token}&filter[include][classProfSubject]`;\n        axios.get(apiEndpoint).then(res => {\n          var CoursList = res.data.filter(element => element.status);\n          axios.get(`${baseUrl.baseUrl}/profiles/` + this.props.userProfile.id + `/professors?access_token=${localStorage.token}`).then(res => {\n            var ProfId = res.data[0].id;\n            var ProfessorCoursList = CoursList.filter(element => element.classProfSubject.professor_id === ProfId);\n            this.setState({\n              ProfessorCoursList: ProfessorCoursList\n            });\n          });\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      levels,\n      sections,\n      lessons\n    } = this.props;\n    var CourListByRole = [];\n\n    if (this.props.userProfile.role_id === roleIdProfessor) {\n      if (this.state.class_id === \"\" && this.state.selectedFilterDateProfessor === null) {\n        CourListByRole = this.state.ProfessorCoursList;\n      } else if (this.state.class_id !== \"\" && this.state.selectedFilterDateProfessor === null) {\n        CourListByRole = this.state.ProfessorCoursList.filter(element => element.classProfSubject.class_id === this.state.class_id);\n      } else if (this.state.class_id === \"\" && this.state.selectedFilterDateProfessor !== null) {\n        CourListByRole = this.state.ProfessorCoursList.filter(element => element.creation_date.slice(0, 10) === this.state.selectedFilterDateProfessor);\n      } else {\n        CourListByRole = this.state.ProfessorCoursList.filter(element => element.creation_date.slice(0, 10) === this.state.selectedFilterDateProfessor && element.classProfSubject.class_id === this.state.class_id);\n      }\n    } else if (this.props.userProfile.role_id === roleIdStudent) {\n      if (this.state.subject_id === \"\" && this.state.selectedFilterDateProfessor === null && this.state.tags === null) {\n        CourListByRole = this.state.studentCoursList.filter(element => element.status === true);\n      } else if (this.state.subject_id !== \"\" && this.state.selectedFilterDateProfessor === null) {\n        CourListByRole = this.state.studentCoursList.filter(element => element.subject_id === this.state.subject_id && element.status === true);\n      } else if (this.state.subject_id !== \"\" && this.state.selectedFilterDateProfessor !== null) {\n        CourListByRole = this.state.studentCoursList.filter(element => element.creation_date.slice(0, 10) === this.state.selectedFilterDateProfessor && element.subject_id === this.state.subject_id && element.status === true);\n      } else if (this.state.tags !== null && this.state.subject_id === \"\" && this.state.selectedFilterDateProfessor === null) {\n        CourListByRole = this.state.studentCoursList.filter(element => element.id === this.state.tags.id && element.status === true);\n      } else {\n        CourListByRole = this.state.studentCoursList.filter(element => element.creation_date.slice(0, 10) === this.state.selectedFilterDateProfessor && element.subject_id === this.state.subject_id && element.status === true);\n      }\n    } else {\n      CourListByRole = lessons;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12 text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"lesson-filter:visit\",\n      yes: () => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"lesson-filter-level:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-2 text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          variant: \"outlined\",\n          name: \"level_id\",\n          id: \"level_id\",\n          select: true,\n          label: /*#__PURE__*/React.createElement(IntlMessages, {\n            id: \"components.note.niveau\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 33\n            }\n          }),\n          value: this.state.level_id,\n          defaultValue: \" \",\n          onChange: this.handleChangeLevel(\"level_id\"),\n          SelectProps: {},\n          margin: \"normal\",\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }\n        }, getLevelListFromEstabType(levels, this.props.estab_type_id).map(level => /*#__PURE__*/React.createElement(MenuItem, {\n          key: level.id,\n          value: level.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 33\n          }\n        }, level.name)))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"lesson-filter-section:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-2 text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          name: \"section_id\",\n          variant: \"outlined\",\n          id: \"section_id\",\n          select: true,\n          disabled: this.state.sectionDisabled,\n          label: /*#__PURE__*/React.createElement(IntlMessages, {\n            id: \"components.class.level.input.label.section\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 33\n            }\n          }),\n          value: this.state.section_id,\n          onChange: this.handleChangeSection(\"section_id\"),\n          SelectProps: {},\n          margin: \"normal\",\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }\n        }, getSectionFromLevel(sections, this.state.level_id).map(option => /*#__PURE__*/React.createElement(MenuItem, {\n          key: option.id,\n          value: option.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 33\n          }\n        }, option.name)))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"lesson-filter-class:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-2 text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          variant: \"outlined\",\n          name: \"class_id\",\n          id: \"class_id\",\n          disabled: this.state.classeDisabled,\n          select: true,\n          label: /*#__PURE__*/React.createElement(IntlMessages, {\n            id: \"components.student.formadd.classe\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 33\n            }\n          }),\n          value: this.state.class_id,\n          onChange: this.handleChangeClass(\"class_id\"),\n          SelectProps: {},\n          margin: \"normal\",\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(MenuItem, {\n          key: \"0\",\n          value: \"0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"all.label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 33\n          }\n        })), this.state.studentClassesByLevelSectionID.map(classe => /*#__PURE__*/React.createElement(MenuItem, {\n          key: classe.id,\n          value: classe.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 35\n          }\n        }, classe.name)))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"lesson-filter-student-subject:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-2 text-left\",\n          style: {\n            marginTop: \"-16px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          variant: \"outlined\",\n          id: \"subject_id\",\n          name: \"subject_id\",\n          select: true,\n          label: /*#__PURE__*/React.createElement(IntlMessages, {\n            id: \"components.note.subject\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 33\n            }\n          }),\n          value: this.state.subject_id,\n          onChange: this.handleChangeSubject(\"subject_id\"),\n          SelectProps: {},\n          margin: \"normal\",\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(MenuItem, {\n          key: \"0\",\n          value: \"0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"all.subject\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 33\n          }\n        })), this.state.studentSubjectList.map(subject => /*#__PURE__*/React.createElement(MenuItem, {\n          key: subject.id,\n          value: subject.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 33\n          }\n        }, subject.name_FR)))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"lesson-filter-date:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-2 text-right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n          label: \"                                           \",\n          clearable: true,\n          fullWidth: true,\n          id: \"selectedFilterDateProfessor\",\n          name: \"selectedFilterDateProfessor\",\n          value: this.state.selectedFilterDateProfessor,\n          onChange: this.handleChangeDateProfessor,\n          format: \"MM-DD-YYYY\",\n          autoOk: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 31\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"lesson-filter-search:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-2 text-right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Autocomplete, {\n          id: \"combo-box-demo\",\n          options: this.state.studentCoursList,\n          onChange: this.onTagsChange,\n          getOptionLabel: option => option.name,\n          style: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n            label: /*#__PURE__*/React.createElement(IntlMessages, {\n              id: \"search.lesson\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 44\n              }\n            }),\n            variant: \"outlined\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 35\n            }\n          })),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 31\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 23\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row animated slideInUpTiny animation-duration-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }\n    }, CourListByRole.map((lesson, index) => /*#__PURE__*/React.createElement(LessonGridItem, {\n      key: index,\n      lesson: lesson,\n      handleEdit: this.handleEdit,\n      divEyeClassname: this.props.divEyeClassname,\n      divEyeClassnameSpace: this.props.divEyeClassnameSpace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 13\n      }\n    }))), this.state.openedit ? /*#__PURE__*/React.createElement(EditLesson, {\n      lesson: this.state.lesson,\n      openedit: this.state.openedit,\n      values: this.state,\n      editLessonList: this.editLessonList,\n      handleChange: this.handleChange,\n      handleCancel: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    classes: state.classes,\n    userProfile: state.auth.userProfile,\n    levels: state.ClassLevels.remoteLevels,\n    sections: state.classSections.remoteSections,\n    lessons: state.lessons.remoteLessons,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getLessonByClassId,\n  editLesson\n})(LessonList);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Lesson/LessonList.js"],"names":["React","LessonGridItem","CardBox","TextField","Autocomplete","MenuItem","getSectionFromLevel","getLevelListFromEstabType","IntlMessages","Can","RoleContext","roleIdProfessor","roleIdStudent","getLessonByClassId","editLesson","connect","_","EditLesson","KeyboardDatePicker","MuiPickersUtilsProvider","DateFnsUtils","axios","baseUrl","element","LessonList","Component","constructor","props","handleChangeDateProfessor","date","setState","selectedFilterDateProfessor","format","slice","handleCancel","openedit","editLessonList","data","name","state","course_object","details","creation_date","lesson","status","file","class_professor_id","id","handleEdit","courseObject","handleChangeClass","event","target","value","handleChangeSubject","handleChange","handleChangeLevel","section_id","class_id","classeDisabled","sectionDisabled","filtredClassesD","classes","filter","classe","level_id","studentClassesByLevelSectionID","handleChangeSection","levelId","sectionId","filtredClasses","onTagsChange","values","tags","subject_id","lessons","ProfessorCoursList","studentCoursList","studentSubjectList","bind","componentDidMount","roleId","get","userProfile","localStorage","token","then","res","lessonData","subjectData","componentDidUpdate","prevProps","classList","isEmpty","Array","from","apiEndpoint","CoursList","ProfId","classProfSubject","professor_id","render","levels","sections","CourListByRole","role_id","role","estab_type_id","map","level","option","marginTop","subject","name_FR","width","params","index","divEyeClassname","divEyeClassnameSpace","mapStateToProps","auth","ClassLevels","remoteLevels","classSections","remoteSections","remoteLessons","successStatus","alert","success","errorStatus","error","message"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport LessonGridItem from \"./LessonGridItem\";\nimport CardBox from \"../../../components/CardBox/index\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { getSectionFromLevel } from \"../../../actions/sectionAction\";\nimport { getLevelListFromEstabType } from \"../../../actions/classLevelAction\";\nimport IntlMessages from \"../../../util/IntlMessages\";\nimport Can from \"../../../can\";\nimport { RoleContext } from \"../../../Context\";\nimport { roleIdProfessor, roleIdStudent } from \"../../../config/config\";\nimport { getLessonByClassId } from \"../../../actions/LessonAction\";\nimport { editLesson } from \"../../../actions/LessonAction\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport EditLesson from \"./EditLesson\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/moment\";\nimport axios from \"axios\";\nimport baseUrl from \"../../../config/config\";\nimport { element } from \"prop-types\";\nclass LessonList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openedit: false,\n      section_id: \"\",\n      class_id: \"\",\n      level_id: \"\",\n      sectionDisabled: true,\n      classeDisabled: true,\n      studentClassesByLevelSectionID: [],\n      subject_id: \"\",\n      lessons: [],\n      lesson: {},\n      course_object: \"\",\n      details: \"\",\n      selectedFilterDateProfessor: null,\n      ProfessorCoursList: [],\n      studentCoursList: [],\n      studentSubjectList: [],\n      tags: null,\n    };\n    this.handleChangeLevel = this.handleChangeLevel.bind(this);\n    this.handleChangeSection = this.handleChangeSection.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n\n    this.editLessonList = this.editLessonList.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeDateProfessor = this.handleChangeDateProfessor.bind(this);\n    this.onTagsChange = this.onTagsChange.bind(this);\n  }\n\n  handleChangeDateProfessor = (date) => {\n    if (date === null) {\n      this.setState({\n        selectedFilterDateProfessor: null,\n      });\n    } else {\n      this.setState({\n        selectedFilterDateProfessor: date.format().slice(0, 10),\n      });\n    }\n  };\n\n  handleCancel = () => {\n    this.setState({\n      openedit: false,\n    });\n  };\n\n  editLessonList = () => {\n    var data = {};\n    data.name = this.state.course_object;\n    data.details = this.state.details;\n    data.creation_date = this.state.lesson.creation_date;\n    data.status = this.state.lesson.status;\n    data.file = this.state.lesson.file;\n    data.class_professor_id = this.state.lesson.class_professor_id;\n    data.id = this.state.lesson.id;\n    this.props.editLesson(data);\n    this.setState({\n      course_object: \"\",\n      details: \"\",\n      openedit: false,\n    });\n  };\n  handleEdit = (courseObject) => {\n    this.setState({\n      openedit: true,\n      lesson: courseObject,\n      course_object: courseObject.name,\n      details: courseObject.details,\n    });\n  };\n  handleChangeClass = (name) => (event) => {\n    this.setState({\n      selectedFilterDateProfessor: null,\n    });\n    if (event.target.value === \"0\") {\n      this.setState({ [name]: \"\" });\n    } else {\n      this.setState({ [name]: event.target.value });\n      this.props.getLessonByClassId(event.target.value);\n    }\n  };\n  handleChangeSubject = (name) => (event) => {\n    if (event.target.value === \"0\") {\n      this.setState({ [name]: \"\" });\n    } else {\n      this.setState({ [name]: event.target.value });\n    }\n    this.setState({\n      selectedFilterDateProfessor: null,\n    });\n  };\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n  handleChangeLevel = (name) => (event) => {\n    this.setState({ section_id: 0, class_id: 0, classeDisabled: true });\n\n    if (event.target.value > 10) {\n      this.setState({ [name]: event.target.value });\n      this.setState({ sectionDisabled: false, class_id: 0 });\n    } else {\n      this.setState({ [name]: event.target.value });\n      this.setState({\n        sectionDisabled: true,\n        class_id: 0,\n        classeDisabled: false,\n      });\n      const filtredClassesD = this.props.classes.filter(\n        (classe) => classe.level_id === event.target.value && classe.status\n      );\n      this.setState({ studentClassesByLevelSectionID: filtredClassesD });\n    }\n  };\n  handleChangeSection = (name) => (event) => {\n    this.setState({ class_id: 0, classeDisabled: false });\n    this.setState({ [name]: event.target.value });\n    const levelId = this.state.level_id;\n    const sectionId = event.target.value;\n    const filtredClasses = this.props.classes.filter(\n      (classe) =>\n        classe.level_id === levelId &&\n        classe.section_id === sectionId &&\n        classe.status\n    );\n    this.setState({ studentClassesByLevelSectionID: filtredClasses });\n  };\n\n  componentDidMount() {\n    if (this.props.roleId === roleIdStudent) {\n      axios\n        .get(\n          `${baseUrl.baseUrl}/profiles/fetchLessonByprofileID/` +\n            this.props.userProfile.id +\n            `?access_token=${localStorage.token}`\n        )\n        .then((res) => {\n          this.setState({ studentCoursList: res.data.lessonData });\n        });\n      axios\n        .get(\n          `${baseUrl.baseUrl}/profiles/fetchSubjectByprofileID/` +\n            this.props.userProfile.id +\n            `?access_token=${localStorage.token}`\n        )\n        .then((res) => {\n          this.setState({ studentSubjectList: res.data.subjectData });\n        });\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.roleId === roleIdProfessor) {\n      if (prevProps.lessons !== this.props.lessons) {\n        let classList = this.props.classes;\n        if (!_.isEmpty(classList)) {\n          const filtredClasses = Array.from(classList).filter(\n            (classe) => classe.status\n          );\n          this.setState({\n            classeDisabled: false,\n            studentClassesByLevelSectionID: filtredClasses,\n          });\n        }\n        let apiEndpoint = `${baseUrl.baseUrl}/courses?access_token=${localStorage.token}&filter[include][classProfSubject]`;\n\n        axios.get(apiEndpoint).then((res) => {\n          var CoursList = res.data.filter((element) => element.status);\n          axios\n            .get(\n              `${baseUrl.baseUrl}/profiles/` +\n                this.props.userProfile.id +\n                `/professors?access_token=${localStorage.token}`\n            )\n            .then((res) => {\n              var ProfId = res.data[0].id;\n              var ProfessorCoursList = CoursList.filter(\n                (element) => element.classProfSubject.professor_id === ProfId\n              );\n              this.setState({\n                ProfessorCoursList: ProfessorCoursList,\n              });\n            });\n        });\n      }\n    }\n  }\n\n  onTagsChange = (event, values) => {\n    this.setState({\n      tags: values,\n      selectedFilterDateProfessor: null,\n      subject_id: \"\",\n    });\n  };\n\n  render() {\n    const { levels, sections, lessons } = this.props;\n    var CourListByRole = [];\n\n    if (this.props.userProfile.role_id === roleIdProfessor) {\n      if (\n        this.state.class_id === \"\" &&\n        this.state.selectedFilterDateProfessor === null\n      ) {\n        CourListByRole = this.state.ProfessorCoursList;\n      } else if (\n        this.state.class_id !== \"\" &&\n        this.state.selectedFilterDateProfessor === null\n      ) {\n        CourListByRole = this.state.ProfessorCoursList.filter(\n          (element) => element.classProfSubject.class_id === this.state.class_id\n        );\n      } else if (\n        this.state.class_id === \"\" &&\n        this.state.selectedFilterDateProfessor !== null\n      ) {\n        CourListByRole = this.state.ProfessorCoursList.filter(\n          (element) =>\n            element.creation_date.slice(0, 10) ===\n            this.state.selectedFilterDateProfessor\n        );\n      } else {\n        CourListByRole = this.state.ProfessorCoursList.filter(\n          (element) =>\n            element.creation_date.slice(0, 10) ===\n              this.state.selectedFilterDateProfessor &&\n            element.classProfSubject.class_id === this.state.class_id\n        );\n      }\n    } else if (this.props.userProfile.role_id === roleIdStudent) {\n      if (\n        this.state.subject_id === \"\" &&\n        this.state.selectedFilterDateProfessor === null &&\n        this.state.tags === null\n      ) {\n        CourListByRole = this.state.studentCoursList.filter(\n          (element) => element.status === true\n        );\n      } else if (\n        this.state.subject_id !== \"\" &&\n        this.state.selectedFilterDateProfessor === null\n      ) {\n        CourListByRole = this.state.studentCoursList.filter(\n          (element) =>\n            element.subject_id === this.state.subject_id &&\n            element.status === true\n        );\n      } else if (\n        this.state.subject_id !== \"\" &&\n        this.state.selectedFilterDateProfessor !== null\n      ) {\n        CourListByRole = this.state.studentCoursList.filter(\n          (element) =>\n            element.creation_date.slice(0, 10) ===\n              this.state.selectedFilterDateProfessor &&\n            element.subject_id === this.state.subject_id &&\n            element.status === true\n        );\n      } else if (\n        this.state.tags !== null &&\n        this.state.subject_id === \"\" &&\n        this.state.selectedFilterDateProfessor === null\n      ) {\n        CourListByRole = this.state.studentCoursList.filter(\n          (element) =>\n            element.id === this.state.tags.id && element.status === true\n        );\n      } else {\n        CourListByRole = this.state.studentCoursList.filter(\n          (element) =>\n            element.creation_date.slice(0, 10) ===\n              this.state.selectedFilterDateProfessor &&\n            element.subject_id === this.state.subject_id &&\n            element.status === true\n        );\n      }\n    } else {\n      CourListByRole = lessons;\n    }\n    return (\n      <div>\n        <div className=\"row mb-md-3\">\n          <CardBox styleName=\"col-lg-12 text-primary\">\n            <RoleContext.Consumer>\n              {({ role }) => (\n                <Can\n                  role={role}\n                  perform=\"lesson-filter:visit\"\n                  yes={() => (\n                    <div className=\"row\">\n                      <Can\n                        role={role}\n                        perform=\"lesson-filter-level:visit\"\n                        yes={() => (\n                          <div className=\"col-md-2 text-left\">\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"level_id\"\n                              id=\"level_id\"\n                              select\n                              label={\n                                <IntlMessages id=\"components.note.niveau\" />\n                              }\n                              value={this.state.level_id}\n                              defaultValue=\" \"\n                              onChange={this.handleChangeLevel(\"level_id\")}\n                              SelectProps={{}}\n                              margin=\"normal\"\n                              fullWidth\n                            >\n                              {getLevelListFromEstabType(\n                                levels,\n                                this.props.estab_type_id\n                              ).map((level) => (\n                                <MenuItem key={level.id} value={level.id}>\n                                  {level.name}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </div>\n                        )}\n                      />\n                      <Can\n                        role={role}\n                        perform=\"lesson-filter-section:visit\"\n                        yes={() => (\n                          <div className=\"col-md-2 text-left\">\n                            <TextField\n                              name=\"section_id\"\n                              variant=\"outlined\"\n                              id=\"section_id\"\n                              select\n                              disabled={this.state.sectionDisabled}\n                              label={\n                                <IntlMessages id=\"components.class.level.input.label.section\" />\n                              }\n                              value={this.state.section_id}\n                              onChange={this.handleChangeSection(\"section_id\")}\n                              SelectProps={{}}\n                              margin=\"normal\"\n                              fullWidth\n                            >\n                              {getSectionFromLevel(\n                                sections,\n                                this.state.level_id\n                              ).map((option) => (\n                                <MenuItem key={option.id} value={option.id}>\n                                  {option.name}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </div>\n                        )}\n                      />\n\n                      <Can\n                        role={role}\n                        perform=\"lesson-filter-class:visit\"\n                        yes={() => (\n                          <div className=\"col-md-2 text-left\">\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"class_id\"\n                              id=\"class_id\"\n                              disabled={this.state.classeDisabled}\n                              select\n                              label={\n                                <IntlMessages id=\"components.student.formadd.classe\" />\n                              }\n                              value={this.state.class_id}\n                              onChange={this.handleChangeClass(\"class_id\")}\n                              SelectProps={{}}\n                              margin=\"normal\"\n                              fullWidth\n                            >\n                              <MenuItem key=\"0\" value=\"0\">\n                                <IntlMessages id=\"all.label\" />\n                              </MenuItem>\n                              {this.state.studentClassesByLevelSectionID.map(\n                                (classe) => (\n                                  <MenuItem key={classe.id} value={classe.id}>\n                                    {classe.name}\n                                  </MenuItem>\n                                )\n                              )}\n                            </TextField>\n                          </div>\n                        )}\n                      />\n\n                      <Can\n                        role={role}\n                        perform=\"lesson-filter-student-subject:visit\"\n                        yes={() => (\n                          <div\n                            className=\"col-md-2 text-left\"\n                            style={{ marginTop: \"-16px\" }}\n                          >\n                            <TextField\n                              variant=\"outlined\"\n                              id=\"subject_id\"\n                              name=\"subject_id\"\n                              select\n                              label={\n                                <IntlMessages id=\"components.note.subject\" />\n                              }\n                              value={this.state.subject_id}\n                              onChange={this.handleChangeSubject(\"subject_id\")}\n                              SelectProps={{}}\n                              margin=\"normal\"\n                              fullWidth\n                            >\n                              <MenuItem key=\"0\" value=\"0\">\n                                <IntlMessages id=\"all.subject\" />\n                              </MenuItem>\n                              {this.state.studentSubjectList.map((subject) => (\n                                <MenuItem key={subject.id} value={subject.id}>\n                                  {subject.name_FR}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </div>\n                        )}\n                      />\n                      <Can\n                        role={role}\n                        perform=\"lesson-filter-date:visit\"\n                        yes={() => (\n                          <div className=\"col-md-2 text-right\">\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                              <KeyboardDatePicker\n                                label=\"                                           \"\n                                clearable\n                                fullWidth\n                                id=\"selectedFilterDateProfessor\"\n                                name=\"selectedFilterDateProfessor\"\n                                value={this.state.selectedFilterDateProfessor}\n                                onChange={this.handleChangeDateProfessor}\n                                format=\"MM-DD-YYYY\"\n                                autoOk\n                              />\n                            </MuiPickersUtilsProvider>\n                          </div>\n                        )}\n                      />\n                      <Can\n                        role={role}\n                        perform=\"lesson-filter-search:visit\"\n                        yes={() => (\n                          <div className=\"col-md-2 text-right\">\n                            <div className=\"form-group\">\n                              <Autocomplete\n                                id=\"combo-box-demo\"\n                                options={this.state.studentCoursList}\n                                onChange={this.onTagsChange}\n                                getOptionLabel={(option) => option.name}\n                                style={{ width: 300 }}\n                                renderInput={(params) => (\n                                  <TextField\n                                    {...params}\n                                    label={<IntlMessages id=\"search.lesson\" />}\n                                    variant=\"outlined\"\n                                  />\n                                )}\n                              />\n                            </div>\n                          </div>\n                        )}\n                      />\n                    </div>\n                  )}\n                />\n              )}\n            </RoleContext.Consumer>\n          </CardBox>\n        </div>\n        <div className=\"row animated slideInUpTiny animation-duration-3\">\n          {CourListByRole.map((lesson, index) => (\n            <LessonGridItem\n              key={index}\n              lesson={lesson}\n              handleEdit={this.handleEdit}\n              divEyeClassname={this.props.divEyeClassname}\n              divEyeClassnameSpace={this.props.divEyeClassnameSpace}\n            />\n          ))}\n        </div>\n        {this.state.openedit ? (\n          <EditLesson\n            lesson={this.state.lesson}\n            openedit={this.state.openedit}\n            values={this.state}\n            editLessonList={this.editLessonList}\n            handleChange={this.handleChange}\n            handleCancel={this.handleCancel}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    classes: state.classes,\n    userProfile: state.auth.userProfile,\n    levels: state.ClassLevels.remoteLevels,\n    sections: state.classSections.remoteSections,\n    lessons: state.lessons.remoteLessons,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n  };\n}\nexport default connect(\n  mapStateToProps,\n  {\n    getLessonByClassId,\n    editLesson,\n  }\n)(LessonList);\n"]},"metadata":{},"sourceType":"module"}