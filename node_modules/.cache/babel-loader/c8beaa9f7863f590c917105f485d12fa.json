{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/HomeworkList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getSectionFromLevel } from '../../../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from '../../../../../actions/classLevelAction';\nimport axios from 'axios';\nimport baseUrl from '../../../../../config/config';\nimport { getClassesByEstablishmentId } from '../../../../../actions/classeAction';\nimport { roleIdAdmin } from '../../../../../config/config';\nimport { roleIdProfessor } from '../../../../../config/config';\nimport { roleIdParent } from '../../../../../config/config';\nimport { roleIdStudent } from '../../../../../config/config';\nimport _ from 'lodash';\nimport { privateStatus, publicStatus, allStatus } from '../../../../../config/config';\nimport moment from 'moment';\nimport HomeworkItem from './HomeworkItem';\nimport DeleteHomework from './DeleteHomework';\nimport { deleteHomework, editHomework } from '../../../../../actions/HomeworkAction';\nimport EditHomework from './EditHomework';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { classService } from '../../../../../_services/class.service';\n\nclass HomeworkList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangePostTime = time => {\n      this.setState({\n        postTime: time._d\n      });\n    };\n\n    this.handleChangeDate = name => date => {\n      this.setState({\n        [name]: date\n      });\n    };\n\n    this.handleChangeClassList = selectedOption => {\n      if (selectedOption != null) {\n        let classesId = _.map(selectedOption, 'id');\n\n        this.setState({\n          classesId,\n          isEmptylistClass: false,\n          classItem: selectedOption\n        });\n      } else {\n        this.setState({\n          classesId: [],\n          classItem: []\n        });\n      }\n    };\n\n    this.handleChangeSubject = selectedOption => {\n      if (selectedOption.id != this.state.subjectId) {\n        this.setState({\n          subjectColor: selectedOption.color,\n          subjectName: selectedOption.label,\n          subjectId: selectedOption.id,\n          subjectItem: selectedOption,\n          classItem: [],\n          classesId: [],\n          errorClass: false\n        });\n\n        if (this.props.userProfile.role_id === roleIdAdmin) {\n          let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include]=class&filter[include]=course`;\n          classService.get(apiEndpoint).then(response => {\n            if (response) {\n              let classesSubjects = response.data.filter(element => element.status);\n              let newList = [];\n              classesSubjects.map(element => {\n                let object = {};\n\n                if (!_.isEmpty(element.course)) {\n                  object.label = element.class.name;\n                  object.id = element.course[0].id;\n                  object.value = element.course[0].id;\n                  newList.push(object);\n                }\n              });\n              this.setState({\n                classes: newList\n              });\n            }\n          });\n        } else {\n          let apiEndpoint = `/assignment_class_subjects/${selectedOption.value}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n          classService.get(apiEndpoint).then(response => {\n            if (response) {\n              let element = response.data;\n\n              if (element.status) {\n                let object = {};\n                object.label = element.class.name;\n                object.id = element.course[0].id;\n                object.value = element.course[0].id;\n                this.setState({\n                  classes: [object]\n                });\n              }\n            }\n          });\n        }\n      }\n    };\n\n    this.handleChangeHomeworkType = selectedOption => {\n      this.setState({\n        homeworkType: selectedOption\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      HomeworkTypes: [{\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.book.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 18\n          }\n        }),\n        value: 'book',\n        id: 1\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.series.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 18\n          }\n        }),\n        value: 'serie',\n        id: 2\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.other.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 18\n          }\n        }),\n        value: 'other',\n        id: 3\n      }],\n      classes: [],\n      subjects: [],\n      deleteIsopen: false,\n      itemIdDelete: '',\n      editIsopen: false,\n      itemEdit: {},\n      nameFile: '',\n      subjectId: null,\n      subjectItem: {},\n      classItem: [{}],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      renderingDate: new Date(),\n      correctionDate: new Date(),\n      description: '',\n      courseUrl: '',\n      nameFiles: [],\n      homeworkFiles: [],\n      messageAlerte: '',\n      alerteStatus: false,\n      errorClass: false,\n      isEmptylistClass: false,\n      homeworkId: '',\n      homeworkFilesDelete: []\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleCancelDelete = this.handleCancelDelete.bind(this);\n    this.handleSubmitDelete = this.handleSubmitDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.submitEditHomework = this.submitEditHomework.bind(this);\n  }\n\n  submitEditHomework(e) {\n    e.preventDefault();\n\n    if (this.state.subjectId === null) {\n      this.setState({\n        errorClass: true\n      });\n    } else if (_.isEmpty(this.state.classesId)) {\n      this.setState({\n        isEmptylistClass: true\n      });\n    } else {\n      let oldFiles = this.state.itemEdit.homework.homeworkFiles.filter(element => this.state.homeworkFilesDelete.includes(element.id));\n      console.log(oldFiles, 'oldFiles');\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType = this.state.homeworkType.value == undefined ? '' : this.state.homeworkType.value;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      dataHomework.correctionDate = this.state.correctionDate;\n      dataHomework.renderingDate = this.state.renderingDate;\n      dataHomework.subjectName = this.state.subjectName;\n      dataHomework.homeworkId = this.state.homeworkId;\n      dataHomework.files_deleted = this.state.homeworkFilesDelete;\n      console.log(dataHomework, 'dataa eediiit');\n      this.props.dispatch(editHomework(dataHomework, this.state.homeworkFiles, this.state.classItem));\n      this.cancelModal();\n    }\n  }\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter(element => element != filename);\n    let homeworkFiles = this.state.homeworkFiles.filter(element => element.name != filename);\n    let deletedFiles = [];\n\n    if (this.state.itemEdit.homework.homeworkFiles != undefined) {\n      this.state.itemEdit.homework.homeworkFiles.map(element => {\n        if (element.name == filename) {\n          deletedFiles.push(element.id);\n        }\n      });\n    }\n\n    this.state.homeworkFilesDelete.map(element => {\n      deletedFiles.push(element);\n    });\n    this.setState({\n      nameFiles,\n      homeworkFiles,\n      homeworkFilesDelete: deletedFiles\n    });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map(element => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({\n        homeworkFiles: oldFiles,\n        nameFiles\n      });\n    } else {\n      this.setState({\n        messageAlerte: 'vous avez dÃ©passer 5 fichiers',\n        alerteStatus: true\n      });\n      setTimeout(() => {\n        this.setState({\n          messageAlerte: '',\n          alerteStatus: false\n        });\n      }, 4000);\n    }\n  }\n\n  handleEdit(item) {\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${item.homework.fk_id_subject}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then(response => {\n        if (response) {\n          let classesSubjects = response.data.filter(element => element.status);\n          let newList = [];\n          classesSubjects.map(element => {\n            let object = {};\n\n            if (!_.isEmpty(element.course)) {\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n              newList.push(object);\n            }\n          });\n          this.setState({\n            classes: newList\n          });\n        }\n      });\n    } else {\n      let apiEndpoint = `/assignment_class_subjects/${item.homework.fk_id_subject}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then(response => {\n        if (response) {\n          let element = response.data;\n\n          if (element.status) {\n            let object = {};\n            object.label = element.class.name;\n            object.id = element.course[0].id;\n            object.value = element.course[0].id;\n            this.setState({\n              classes: [object]\n            });\n          }\n        }\n      });\n    }\n\n    console.log(item, 'ediiiiit');\n    let homeworkType = this.state.HomeworkTypes.find(element => element.value == item.homework.homework_type);\n    let subjectItem = this.props.subjects.find(element => element.id == item.homework.fk_id_subject);\n    let classItem = {\n      label: item.className,\n      id: item.courseId,\n      value: item.courseId\n    };\n    var nameFiles = item.homework.homeworkFiles.map(element => {\n      return element.name;\n    });\n    this.setState({\n      homeworkId: item.homework.id,\n      editIsopen: true,\n      itemEdit: item,\n      nameFile: item.homework.title,\n      homeworkType,\n      subjects: this.props.subjects,\n      subjectItem,\n      subjectId: item.homework.fk_id_subject,\n      subjectColor: item.homework.subject.color,\n      subjectName: item.homework.subject.name,\n      classItem: [classItem],\n      classesId: [item.courseId],\n      description: item.homework.description,\n      publicationDate: item.homework.publication_date,\n      renderingDate: item.homework.rendering_date,\n      correctionDate: item.homework.correction_date,\n      postTime: item.homework.publication_time,\n      courseUrl: item.homework.course_url,\n      nameFiles\n    });\n  }\n\n  handleSubmitDelete() {\n    this.setState({\n      deleteIsopen: false\n    });\n    this.props.dispatch(deleteHomework(this.state.itemIdDelete));\n  }\n\n  handleDelete(id) {\n    this.setState({\n      deleteIsopen: true,\n      itemIdDelete: id\n    });\n  }\n\n  handleCancelDelete() {\n    this.setState({\n      deleteIsopen: false,\n      itemIdDelete: ''\n    });\n  }\n\n  cancelModal() {\n    this.setState({\n      classes: [],\n      subjects: [],\n      editIsopen: false,\n      itemEdit: {},\n      nameFile: '',\n      subjectId: null,\n      subjectItem: {},\n      classItem: [{}]\n    });\n  }\n\n  render() {\n    console.log(this.state, '  stateeee');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-12 col-md-12 col-lg-12 col-sm-6 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"   price-tables row pt-default d-flex flex-wrap justify-content-start \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }\n    }, this.props.homeworks.map((homeworkItem, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-lg-6 col-sm-6 col-xl-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HomeworkItem, {\n      key: index,\n      homeworkItem: homeworkItem,\n      handleDelete: this.handleDelete,\n      handleEdit: this.handleEdit,\n      archived: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 15\n      }\n    })))), this.state.editIsopen === true ? /*#__PURE__*/React.createElement(EditHomework, {\n      editIsopen: this.state.editIsopen,\n      values: this.state,\n      handleChange: this.handleChange,\n      handleChangeHomeworkType: this.handleChangeHomeworkType,\n      handleChangeSubject: this.handleChangeSubject,\n      handleChangeClassList: this.handleChangeClassList,\n      cancelModal: this.cancelModal,\n      handleChangeDate: this.handleChangeDate,\n      attachFile: this.attachFile,\n      handleChangePostTime: this.handleChangePostTime,\n      deleteFile: this.deleteFile,\n      submitEditHomework: this.submitEditHomework,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }\n    }) : '', this.state.deleteIsopen === true ? /*#__PURE__*/React.createElement(DeleteHomework, {\n      modal: this.state.deleteIsopen,\n      handleCancelDelete: this.handleCancelDelete,\n      handleSubmitDelete: this.handleSubmitDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }\n    }) : '');\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    ClassSettings: state.ClassSettingsReducer.classSettings\n  };\n}\n\nexport default connect(mapStateToProps)(HomeworkList);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/HomeworkList.js"],"names":["React","Component","connect","getSectionFromLevel","getLevelListFromEstabType","axios","baseUrl","getClassesByEstablishmentId","roleIdAdmin","roleIdProfessor","roleIdParent","roleIdStudent","_","privateStatus","publicStatus","allStatus","moment","HomeworkItem","DeleteHomework","deleteHomework","editHomework","EditHomework","IntlMessages","classService","HomeworkList","constructor","props","handleChangePostTime","time","setState","postTime","_d","handleChangeDate","name","date","handleChangeClassList","selectedOption","classesId","map","isEmptylistClass","classItem","handleChangeSubject","id","state","subjectId","subjectColor","color","subjectName","label","subjectItem","errorClass","userProfile","role_id","apiEndpoint","localStorage","token","value","get","then","response","classesSubjects","data","filter","element","status","newList","object","isEmpty","course","class","push","classes","handleChangeHomeworkType","homeworkType","handleChange","event","target","HomeworkTypes","subjects","deleteIsopen","itemIdDelete","editIsopen","itemEdit","nameFile","publicationDate","Date","renderingDate","correctionDate","description","courseUrl","nameFiles","homeworkFiles","messageAlerte","alerteStatus","homeworkId","homeworkFilesDelete","handleDelete","bind","handleCancelDelete","handleSubmitDelete","handleEdit","cancelModal","attachFile","deleteFile","submitEditHomework","e","preventDefault","oldFiles","homework","includes","console","log","dataHomework","title","undefined","publicationTime","files_deleted","dispatch","filename","deletedFiles","files","Object","values","length","setTimeout","item","fk_id_subject","find","homework_type","className","courseId","subject","publication_date","rendering_date","correction_date","publication_time","course_url","render","homeworks","homeworkItem","index","mapStateToProps","auth","ClassSettings","ClassSettingsReducer","classSettings"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { getSectionFromLevel } from '../../../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from '../../../../../actions/classLevelAction';\nimport axios from 'axios';\nimport baseUrl from '../../../../../config/config';\nimport { getClassesByEstablishmentId } from '../../../../../actions/classeAction';\nimport { roleIdAdmin } from '../../../../../config/config';\nimport { roleIdProfessor } from '../../../../../config/config';\nimport { roleIdParent } from '../../../../../config/config';\nimport { roleIdStudent } from '../../../../../config/config';\nimport _ from 'lodash';\nimport { privateStatus, publicStatus, allStatus } from '../../../../../config/config';\nimport moment from 'moment';\nimport HomeworkItem from './HomeworkItem';\nimport DeleteHomework from './DeleteHomework';\nimport { deleteHomework, editHomework } from '../../../../../actions/HomeworkAction';\nimport EditHomework from './EditHomework';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { classService } from '../../../../../_services/class.service';\n\nclass HomeworkList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      HomeworkTypes: [\n        {\n          label: <IntlMessages id=\"toDo.book.exercise\" />,\n          value: 'book',\n          id: 1,\n        },\n        {\n          label: <IntlMessages id=\"toDo.series.exercise\" />,\n          value: 'serie',\n          id: 2,\n        },\n        {\n          label: <IntlMessages id=\"toDo.other.exercise\" />,\n          value: 'other',\n          id: 3,\n        },\n      ],\n      classes: [],\n      subjects: [],\n      deleteIsopen: false,\n      itemIdDelete: '',\n      editIsopen: false,\n      itemEdit: {},\n      nameFile: '',\n      subjectId: null,\n      subjectItem: {},\n      classItem: [{}],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      renderingDate: new Date(),\n      correctionDate: new Date(),\n      description: '',\n      courseUrl: '',\n      nameFiles: [],\n      homeworkFiles: [],\n      messageAlerte: '',\n      alerteStatus: false,\n      errorClass: false,\n      isEmptylistClass: false,\n      homeworkId: '',\n      homeworkFilesDelete: [],\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleCancelDelete = this.handleCancelDelete.bind(this);\n    this.handleSubmitDelete = this.handleSubmitDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.submitEditHomework = this.submitEditHomework.bind(this);\n  }\n  submitEditHomework(e) {\n    e.preventDefault();\n    if (this.state.subjectId === null) {\n      this.setState({ errorClass: true });\n    } else if (_.isEmpty(this.state.classesId)) {\n      this.setState({ isEmptylistClass: true });\n    } else {\n      let oldFiles = this.state.itemEdit.homework.homeworkFiles.filter((element) =>\n        this.state.homeworkFilesDelete.includes(element.id)\n      );\n      console.log(oldFiles,'oldFiles');\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType =\n        this.state.homeworkType.value == undefined ? '' : this.state.homeworkType.value;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      dataHomework.correctionDate = this.state.correctionDate;\n      dataHomework.renderingDate = this.state.renderingDate;\n      dataHomework.subjectName = this.state.subjectName;\n      dataHomework.homeworkId = this.state.homeworkId;\n      dataHomework.files_deleted = this.state.homeworkFilesDelete;\n\n      console.log(dataHomework, 'dataa eediiit');\n      this.props.dispatch(\n        editHomework(dataHomework, this.state.homeworkFiles, this.state.classItem)\n      );\n      this.cancelModal();\n    }\n  }\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter((element) => element != filename);\n    let homeworkFiles = this.state.homeworkFiles.filter((element) => element.name != filename);\n    let deletedFiles = [];\n    if (this.state.itemEdit.homework.homeworkFiles != undefined) {\n      this.state.itemEdit.homework.homeworkFiles.map((element) => {\n        if (element.name == filename) {\n          deletedFiles.push(element.id);\n        }\n      });\n    }\n    this.state.homeworkFilesDelete.map((element) => {\n      deletedFiles.push(element);\n    });\n    this.setState({ nameFiles, homeworkFiles, homeworkFilesDelete: deletedFiles });\n  }\n\n  handleChangePostTime = (time) => {\n    this.setState({ postTime: time._d });\n  };\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map((element) => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({ homeworkFiles: oldFiles, nameFiles });\n    } else {\n      this.setState({\n        messageAlerte: 'vous avez dÃ©passer 5 fichiers',\n        alerteStatus: true,\n      });\n      setTimeout(() => {\n        this.setState({ messageAlerte: '', alerteStatus: false });\n      }, 4000);\n    }\n  }\n  handleChangeDate = (name) => (date) => {\n    this.setState({ [name]: date });\n  };\n  handleChangeClassList = (selectedOption) => {\n    if (selectedOption != null) {\n      let classesId = _.map(selectedOption, 'id');\n      this.setState({\n        classesId,\n        isEmptylistClass: false,\n        classItem: selectedOption,\n      });\n    } else {\n      this.setState({ classesId: [], classItem: [] });\n    }\n  };\n  handleChangeSubject = (selectedOption) => {\n    if (selectedOption.id != this.state.subjectId) {\n      this.setState({\n        subjectColor: selectedOption.color,\n        subjectName: selectedOption.label,\n        subjectId: selectedOption.id,\n        subjectItem: selectedOption,\n        classItem: [],\n        classesId: [],\n        errorClass: false,\n      });\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include]=class&filter[include]=course`;\n        classService.get(apiEndpoint).then((response) => {\n          if (response) {\n            let classesSubjects = response.data.filter((element) => element.status);\n            let newList = [];\n            classesSubjects.map((element) => {\n              let object = {};\n              if (!_.isEmpty(element.course)) {\n                object.label = element.class.name;\n                object.id = element.course[0].id;\n                object.value = element.course[0].id;\n\n                newList.push(object);\n              }\n            });\n\n            this.setState({ classes: newList });\n          }\n        });\n      } else {\n        let apiEndpoint = `/assignment_class_subjects/${selectedOption.value}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n        classService.get(apiEndpoint).then((response) => {\n          if (response) {\n            let element = response.data;\n            if (element.status) {\n              let object = {};\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n              this.setState({ classes: [object] });\n            }\n          }\n        });\n      }\n    }\n  };\n  handleChangeHomeworkType = (selectedOption) => {\n    this.setState({ homeworkType: selectedOption });\n  };\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n  handleEdit(item) {\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${item.homework.fk_id_subject}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let classesSubjects = response.data.filter((element) => element.status);\n          let newList = [];\n          classesSubjects.map((element) => {\n            let object = {};\n            if (!_.isEmpty(element.course)) {\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n\n              newList.push(object);\n            }\n          });\n\n          this.setState({ classes: newList });\n        }\n      });\n    } else {\n      let apiEndpoint = `/assignment_class_subjects/${item.homework.fk_id_subject}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let element = response.data;\n          if (element.status) {\n            let object = {};\n            object.label = element.class.name;\n            object.id = element.course[0].id;\n            object.value = element.course[0].id;\n            this.setState({ classes: [object] });\n          }\n        }\n      });\n    }\n    console.log(item, 'ediiiiit');\n    let homeworkType = this.state.HomeworkTypes.find(\n      (element) => element.value == item.homework.homework_type\n    );\n    let subjectItem = this.props.subjects.find(\n      (element) => element.id == item.homework.fk_id_subject\n    );\n    let classItem = {\n      label: item.className,\n      id: item.courseId,\n      value: item.courseId,\n    };\n    var nameFiles = item.homework.homeworkFiles.map((element) => {\n      return element.name;\n    });\n    this.setState({\n      homeworkId: item.homework.id,\n      editIsopen: true,\n      itemEdit: item,\n      nameFile: item.homework.title,\n      homeworkType,\n      subjects: this.props.subjects,\n      subjectItem,\n      subjectId: item.homework.fk_id_subject,\n      subjectColor: item.homework.subject.color,\n      subjectName: item.homework.subject.name,\n      classItem: [classItem],\n      classesId: [item.courseId],\n      description: item.homework.description,\n      publicationDate: item.homework.publication_date,\n      renderingDate: item.homework.rendering_date,\n      correctionDate: item.homework.correction_date,\n      postTime: item.homework.publication_time,\n      courseUrl: item.homework.course_url,\n      nameFiles,\n    });\n  }\n  handleSubmitDelete() {\n    this.setState({ deleteIsopen: false });\n    this.props.dispatch(deleteHomework(this.state.itemIdDelete));\n  }\n  handleDelete(id) {\n    this.setState({ deleteIsopen: true, itemIdDelete: id });\n  }\n\n  handleCancelDelete() {\n    this.setState({ deleteIsopen: false, itemIdDelete: '' });\n  }\n  cancelModal() {\n    this.setState({\n      classes: [],\n      subjects: [],\n      editIsopen: false,\n      itemEdit: {},\n      nameFile: '',\n      subjectId: null,\n      subjectItem: {},\n      classItem: [{}],\n    });\n  }\n  render() {\n    console.log(this.state, '  stateeee');\n\n    return (\n      <div className=\"col-xl-12 col-md-12 col-lg-12 col-sm-6 \">\n        <div className=\"   price-tables row pt-default d-flex flex-wrap justify-content-start \">\n          {this.props.homeworks.map((homeworkItem, index) => (\n            <div className=\"col-md-12 col-lg-6 col-sm-6 col-xl-3 \">\n              <HomeworkItem\n                key={index}\n                homeworkItem={homeworkItem}\n                handleDelete={this.handleDelete}\n                handleEdit={this.handleEdit}\n                archived={false}\n              />\n            </div>\n          ))}\n        </div>\n\n        {this.state.editIsopen === true ? (\n          <EditHomework\n            editIsopen={this.state.editIsopen}\n            values={this.state}\n            handleChange={this.handleChange}\n            handleChangeHomeworkType={this.handleChangeHomeworkType}\n            handleChangeSubject={this.handleChangeSubject}\n            handleChangeClassList={this.handleChangeClassList}\n            cancelModal={this.cancelModal}\n            handleChangeDate={this.handleChangeDate}\n            attachFile={this.attachFile}\n            handleChangePostTime={this.handleChangePostTime}\n            deleteFile={this.deleteFile}\n            submitEditHomework={this.submitEditHomework}\n          />\n        ) : (\n          ''\n        )}\n\n        {this.state.deleteIsopen === true ? (\n          <DeleteHomework\n            modal={this.state.deleteIsopen}\n            handleCancelDelete={this.handleCancelDelete}\n            handleSubmitDelete={this.handleSubmitDelete}\n          ></DeleteHomework>\n        ) : (\n          ''\n        )}\n        {/* {this.state.call == true ? (\n          <JitsiComponent values={this.state} />\n        ) : (\n          <div></div>\n        )} */}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    ClassSettings: state.ClassSettingsReducer.classSettings,\n  };\n}\n\nexport default connect(mapStateToProps)(HomeworkList);\n"]},"metadata":{},"sourceType":"module"}