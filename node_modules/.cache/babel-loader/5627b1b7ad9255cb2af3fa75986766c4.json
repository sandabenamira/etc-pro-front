{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport { SHOW_SUCCESS_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, GET_ASSIGNEMENT_COURSE, ADD_ASSIGNEMENT_COURSE, EDIT_ASSIGNEMENT_COURSE, DELETE_ASSIGNEMENT_COURSE, ARCHIVED_GET_ASSIGNEMENT_COURSE } from \"../constants/ActionTypes\";\nexport function addAssignementCourse(item) {\n  return dispatch => {\n    let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, item).then(response => {\n      if (response) {\n        let newObject = { ...response.data,\n          class: item.class\n        };\n        dispatch({\n          type: ADD_ASSIGNEMENT_COURSE,\n          payload: newObject\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n}\nexport function getAssignementCourse(establishementId, schoolYearId) {\n  return dispatch => {\n    let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[include]=class&filter[include]=subject&filter[include]=course`;\n    classService.get(apiEndpoint).then(response => {\n      if (response) {\n        const assignementCourseList = response.data.filter(element => element.status && element.class.fk_id_establishment == establishementId && element.class.fk_id_school_year == schoolYearId);\n        const ArchivedAssignementCourseList = response.data.filter(element => element.status == false && element.class.fk_id_establishment == establishementId && element.class.fk_id_school_year == schoolYearId);\n        dispatch({\n          type: GET_ASSIGNEMENT_COURSE,\n          payload: assignementCourseList\n        });\n        dispatch({\n          type: ARCHIVED_GET_ASSIGNEMENT_COURSE,\n          payload: ArchivedAssignementCourseList\n        });\n      }\n    });\n  };\n}\nexport function deleteAssignementCourse(item) {\n  return dispatch => {\n    let apiEndpoint = `/assignment_class_subjects/${item.id}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, {\n      status: false\n    }).then(response => {\n      if (response) {\n        const list = response.data;\n        dispatch({\n          type: DELETE_ASSIGNEMENT_COURSE,\n          payload: response.data\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La suppression est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    }).catch(function (error) {});\n  };\n}\nexport function editAssignementCourse(data) {\n  return dispatch => {\n    let apiEndpoint = `/assignment_class_subjects/${data.id}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, data).then(response => {\n      if (response) {\n        if (response) {\n          const list = response.data;\n          dispatch({\n            type: EDIT_ASSIGNEMENT_COURSE,\n            payload: response.data\n          });\n          dispatch({\n            type: SHOW_SUCCESS_MESSAGE,\n            payload: \"La modification est effectuée avec succès\"\n          });\n          setTimeout(() => {\n            dispatch({\n              type: HIDE_SUCCESS_MESSAGE\n            });\n          }, 4000);\n        } else {\n          dispatch({\n            type: SHOW_ERROR_MESSAGE,\n            payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n          });\n          setTimeout(() => {\n            dispatch({\n              type: HIDE_ERROR_MESSAGE\n            });\n          }, 4000);\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/AssignementAction.js"],"names":["classService","SHOW_SUCCESS_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","GET_ASSIGNEMENT_COURSE","ADD_ASSIGNEMENT_COURSE","EDIT_ASSIGNEMENT_COURSE","DELETE_ASSIGNEMENT_COURSE","ARCHIVED_GET_ASSIGNEMENT_COURSE","addAssignementCourse","item","dispatch","apiEndpoint","localStorage","token","post","then","response","newObject","data","class","type","payload","setTimeout","getAssignementCourse","establishementId","schoolYearId","get","assignementCourseList","filter","element","status","fk_id_establishment","fk_id_school_year","ArchivedAssignementCourseList","deleteAssignementCourse","id","patch","list","catch","error","editAssignementCourse"],"mappings":"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","sourcesContent":["import { classService } from \"../_services/class.service\";\nimport {\n  SHOW_SUCCESS_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  GET_ASSIGNEMENT_COURSE,\n  ADD_ASSIGNEMENT_COURSE,\n  EDIT_ASSIGNEMENT_COURSE,\n  DELETE_ASSIGNEMENT_COURSE,\n  ARCHIVED_GET_ASSIGNEMENT_COURSE,\n} from \"../constants/ActionTypes\";\n\nexport function addAssignementCourse(item) {\n  return (dispatch) => {\n    let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, item).then((response) => {\n      if (response) {\n        let newObject = {\n          ...response.data,\n          class: item.class,\n        };\n        dispatch({ type: ADD_ASSIGNEMENT_COURSE, payload: newObject });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectuée avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n}\n\nexport function getAssignementCourse(establishementId, schoolYearId) {\n  return (dispatch) => {\n    let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[include]=class&filter[include]=subject&filter[include]=course`;\n    classService.get(apiEndpoint).then((response) => {\n      if (response) {\n        const assignementCourseList = response.data.filter(\n          (element) =>\n            element.status &&\n            element.class.fk_id_establishment == establishementId &&\n            element.class.fk_id_school_year == schoolYearId\n        );\n        const ArchivedAssignementCourseList = response.data.filter(\n          (element) =>\n            element.status == false &&\n            element.class.fk_id_establishment == establishementId &&\n            element.class.fk_id_school_year == schoolYearId\n        );\n        dispatch({\n          type: GET_ASSIGNEMENT_COURSE,\n          payload: assignementCourseList,\n        });\n        dispatch({\n          type: ARCHIVED_GET_ASSIGNEMENT_COURSE,\n          payload: ArchivedAssignementCourseList,\n        });\n      }\n    });\n  };\n}\n\nexport function deleteAssignementCourse(item) {\n  return (dispatch) => {\n    let apiEndpoint = `/assignment_class_subjects/${item.id}?access_token=${localStorage.token}`;\n\n    classService\n      .patch(apiEndpoint, {\n        status: false,\n      })\n      .then((response) => {\n        if (response) {\n          const list = response.data;\n\n          dispatch({ type: DELETE_ASSIGNEMENT_COURSE, payload: response.data });\n          dispatch({\n            type: SHOW_SUCCESS_MESSAGE,\n            payload: \"La suppression est effectuée avec succès\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_SUCCESS_MESSAGE });\n          }, 4000);\n        } else {\n          dispatch({\n            type: SHOW_ERROR_MESSAGE,\n            payload:\n              \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_ERROR_MESSAGE });\n          }, 4000);\n        }\n      })\n      .catch(function(error) {});\n  };\n}\n\nexport function editAssignementCourse(data) {\n  return (dispatch) => {\n    let apiEndpoint = `/assignment_class_subjects/${data.id}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, data).then((response) => {\n      if (response) {\n        if (response) {\n          const list = response.data;\n\n          dispatch({ type: EDIT_ASSIGNEMENT_COURSE, payload: response.data });\n          dispatch({\n            type: SHOW_SUCCESS_MESSAGE,\n            payload: \"La modification est effectuée avec succès\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_SUCCESS_MESSAGE });\n          }, 4000);\n        } else {\n          dispatch({\n            type: SHOW_ERROR_MESSAGE,\n            payload:\n              \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_ERROR_MESSAGE });\n          }, 4000);\n        }\n      }\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}