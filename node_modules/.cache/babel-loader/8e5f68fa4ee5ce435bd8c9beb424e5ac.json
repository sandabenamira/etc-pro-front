{"ast":null,"code":"import { GET_ALL_GRADES, ADD_GRADE, UPDATE_GRADE } from '../constants/ActionTypes';\nconst initialState = {\n  grades: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_GRADES:\n      return Object.assign({}, state, {\n        grades: action.payload\n      });\n\n    case ADD_GRADE:\n      return Object.assign({}, state, {\n        grades: state.grades.concat(action.payload)\n      });\n\n    case UPDATE_GRADE:\n      return Object.assign({}, state, {\n        grades: [...state.grades.filter(element => element.id !== action.payload.id), action.payload]\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/reducers/noteReducer.js"],"names":["GET_ALL_GRADES","ADD_GRADE","UPDATE_GRADE","initialState","grades","state","action","type","Object","assign","payload","concat","filter","element","id"],"mappings":"AAAA,SACEA,cADF,EAEEC,SAFF,EAGEC,YAHF,QAIO,0BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;AAIA,eAAe,UAASC,KAAK,GAAGF,YAAjB,EAA+BG,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,cAAL;AACE,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BD,QAAAA,MAAM,EAAEE,MAAM,CAACI;AADe,OAAzB,CAAP;;AAGF,SAAKT,SAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BD,QAAAA,MAAM,EAAEC,KAAK,CAACD,MAAN,CAAaO,MAAb,CAAoBL,MAAM,CAACI,OAA3B;AADsB,OAAzB,CAAP;;AAGF,SAAKR,YAAL;AACE,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BD,QAAAA,MAAM,EAAE,CACN,GAAGC,KAAK,CAACD,MAAN,CAAaQ,MAAb,CAAqBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAA/D,CADG,EAENR,MAAM,CAACI,OAFD;AADsB,OAAzB,CAAP;;AAMF;AACE,aAAOL,KAAP;AAjBJ;AAmBD","sourcesContent":["import {\n  GET_ALL_GRADES,\n  ADD_GRADE,\n  UPDATE_GRADE,\n} from '../constants/ActionTypes';\n\nconst initialState = {\n  grades: [],\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_GRADES:\n      return Object.assign({}, state, {\n        grades: action.payload,\n      });\n    case ADD_GRADE:\n      return Object.assign({}, state, {\n        grades: state.grades.concat(action.payload),\n      });\n    case UPDATE_GRADE:\n      return Object.assign({}, state, {\n        grades: [\n          ...state.grades.filter((element) => element.id !== action.payload.id),\n          action.payload,\n        ],\n      });\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}