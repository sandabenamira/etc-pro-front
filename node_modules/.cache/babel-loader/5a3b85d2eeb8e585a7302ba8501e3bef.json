{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/HealthMonitoring/HealthFileList.js\";\nimport React, { Component } from 'react';\nimport HealthFileListItem from \"./HealthFileListItem\";\nimport EditHealthFile from \"./EditHealthFile\";\nimport { getSectionFromLevel } from '../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from '../../../actions/classLevelAction';\nimport axios from 'axios';\nimport baseUrl from '../../../config/config';\nimport { editFicheMedical } from '../../../actions/HealthAction';\nimport { getSections } from '../../../actions/sectionAction';\nimport { getLevels } from '../../../actions/classLevelAction';\nimport { getLevelsVirtualClass } from '../../../actions/classLevelAction';\nimport { getClassesByEstablishmentId } from '../../../actions/classeAction';\nimport { connect } from 'react-redux';\nimport { roleIdSuperAdmin } from '../../../config/config';\nimport { roleIdAdmin } from '../../../config/config';\nimport { roleIdProfessor } from '../../../config/config';\nimport { roleIdParent } from '../../../config/config';\nimport { roleIdStudent } from '../../../config/config';\nimport { roleIdSupervisor } from '../../../config/config';\nimport { roleIdDirector } from '../../../config/config';\n\nclass HealthFileList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editHealthFile = () => {\n      var data = {};\n      data.establishment_id = this.props.userProfile.establishment_id;\n      data.student_id = this.state.student_id;\n      data.class_id = this.state.class_id;\n      data.nom_doctor = this.state.nom_doctor;\n      data.prenom_doctor = this.state.prenom_doctor;\n      data.phone_doctor = parseInt(this.state.phone_doctor, 10);\n      data.blood_type = this.state.blood_type;\n      data.poids = parseInt(this.state.poids, 10);\n      data.hauteur = parseInt(this.state.hauteur, 10);\n      data.problems = this.state.checkedValues;\n      data.remarque = this.state.remarque;\n      data.files = this.state.files;\n      data.status = true;\n      data.mail_doctor = this.state.mail_doctor;\n      data.id = this.state.id;\n      this.props.editFicheMedical(data, this.state.userPhotos);\n      this.setState({\n        editIsopen: false,\n        level_id: '',\n        section_id: '',\n        class_id: '',\n        student_id: '',\n        blood_type: '',\n        poids: '',\n        hauteur: '',\n        prenom_doctor: '',\n        nom_doctor: '',\n        phone_doctor: '',\n        mail_doctor: '',\n        remarque: '',\n        userPhotos: null,\n        checkedBox: true,\n        inputText: '',\n        checkedValues: [],\n        id: ''\n      });\n    };\n\n    this.handleCheck = event => {\n      var tab = this.state.checkedValues;\n      var test = this.state.checkedValues.findIndex(element => element == event.target.value);\n\n      if (test == -1) {\n        tab.push(parseInt(event.target.value, 10));\n        this.setState({\n          checkedValues: tab\n        });\n      } else {\n        tab.splice(test, 1);\n        this.setState({\n          checkedValues: tab\n        });\n      }\n    };\n\n    this.onDrop = e => {\n      let file = e.target.files[0];\n      this.setState({\n        userPhotos: file,\n        inputText: file.name\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        editIsopen: false\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.editFicheMedicalShowModal = FicheObjectEdit => {\n      this.setState({\n        editIsopen: true,\n        establishment_id: FicheObjectEdit.establishment_id,\n        student_id: FicheObjectEdit.student_id,\n        nom_doctor: FicheObjectEdit.nom_doctor,\n        prenom_doctor: FicheObjectEdit.prenom_doctor,\n        phone_doctor: FicheObjectEdit.phone_doctor,\n        mail_doctor: FicheObjectEdit.mail_doctor,\n        blood_type: FicheObjectEdit.blood_type,\n        poids: FicheObjectEdit.poids,\n        hauteur: FicheObjectEdit.hauteur,\n        checkedValues: FicheObjectEdit.problems,\n        remarque: FicheObjectEdit.remarque,\n        files: FicheObjectEdit.files,\n        id: FicheObjectEdit.id\n      });\n      axios.get(`${baseUrl.baseUrl}/students/` + FicheObjectEdit.student_id + `?access_token=${localStorage.token}`).then(response => {\n        axios.get(`${baseUrl.baseUrl}/classes/` + response.data.class_id + `?access_token=${localStorage.token}`).then(response => {\n          var ClassID = response.data.id;\n          this.setState({\n            level_id: response.data.level_id,\n            section_id: response.data.section_id,\n            class_id: response.data.id\n          });\n\n          if (response.data.level_id > 10) {\n            this.setState({\n              Disable_studentsection: false\n            });\n            var studentSectionbyLevel = getSectionFromLevel(response.data.section_id, response.data.level_id);\n            this.setState({\n              studentsectionByLevels: studentSectionbyLevel\n            });\n          } else {\n            this.setState({\n              Disable_studentsection: true,\n              section_id: 0\n            });\n            const levelID = response.data.level_id;\n            var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.status);\n            this.setState({\n              studentClassesByLevelSectionID: studentfiltredClasses\n            });\n          }\n\n          axios.get(`${baseUrl.baseUrl}/students/fetchAllStudentsDataByClassID/` + ClassID + `?access_token=${localStorage.token}`).then(res => {\n            this.setState({\n              studentByclassID: res.data.classData\n            });\n          });\n        });\n      });\n    };\n\n    this.state = {\n      editIsopen: false,\n      level_id: '',\n      section_id: '',\n      Disable_studentsection: true,\n      establishment_id: '',\n      student_id: '',\n      class_id: '',\n      nom_doctor: '',\n      prenom_doctor: '',\n      phone_doctor: '',\n      mail_doctor: '',\n      blood_type: '',\n      poids: '',\n      hauteur: '',\n      problems: [],\n      remarque: '',\n      files: '',\n      studentsectionByLevels: [],\n      studentClassesByLevelSectionID: [],\n      studentByclassID: [],\n      userPhotos: null,\n      inputText: '',\n      checkedValues: [],\n      id: '',\n      blood_group: [{\n        id: 1,\n        type: \"A+\"\n      }, {\n        id: 2,\n        type: \"A-\"\n      }, {\n        id: 3,\n        type: \"B+\"\n      }, {\n        id: 4,\n        type: \"B-\"\n      }, {\n        id: 5,\n        type: \"AB+\"\n      }, {\n        id: 6,\n        type: \"AB-\"\n      }, {\n        id: 7,\n        type: \"O+\"\n      }, {\n        id: 8,\n        type: \"O-\"\n      }],\n      data: [{\n        \"id\": 1,\n        \"name\": \"Des yeux\"\n      }, {\n        \"id\": 2,\n        \"name\": \"Coeur\"\n      }, {\n        \"id\": 3,\n        \"name\": \"CUTANÉ\"\n      }, {\n        \"id\": 4,\n        \"name\": \"Système respiratoire\"\n      }, {\n        \"id\": 5,\n        \"name\": \"Des oreilles\"\n      }, {\n        \"id\": 6,\n        \"name\": \"Tension\"\n      }, {\n        \"id\": 7,\n        \"name\": \"Système musculo-squelettique\"\n      }, {\n        \"id\": 8,\n        \"name\": \"Système respiratoire\"\n      }, {\n        \"id\": 9,\n        \"name\": \"Système nerveux\"\n      }]\n    };\n    this.editFicheMedicalShowModal = this.editFicheMedicalShowModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onDrop = this.onDrop.bind(this); // this.handleChangeStudent = this.handleChangeStudent.bind(this)\n\n    this.editHealthFile = this.editHealthFile.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n  }\n\n  componentWillMount() {\n    axios.get(`${baseUrl.baseUrl}/establishments/` + this.props.userProfile.establishment_id + `?access_token=${localStorage.token}`).then(res => {\n      var levelsbyestablishment = getLevelListFromEstabType(this.props.classLevels, res.data.estab_type_id);\n      this.setState({\n        estabType: res.data.estab_type_id,\n        levelsbyestablishment: levelsbyestablishment\n      });\n    });\n  }\n\n  render() {\n    var finalList;\n\n    if (this.props.class_id === '') {\n      finalList = this.props.ficheMedicalList;\n    } else {\n      finalList = this.props.ficheMedicalList.filter(element => element.class_id == this.props.class_id);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, finalList.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row animated slideInUpTiny animation-duration-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 44\n      }\n    }, finalList.map(element => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(HealthFileListItem, {\n      ficheMedicalItem: element,\n      editFicheMedicalShowModal: this.editFicheMedicalShowModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 37\n      }\n    })))) : \"\", this.state.editIsopen === true ? /*#__PURE__*/React.createElement(EditHealthFile, {\n      editIsopen: this.state.editIsopen,\n      values: this.state,\n      handleCancel: this.handleCancel,\n      handleChange: this.handleChange,\n      handleChangestudentSection: this.handleChangestudentSection,\n      handleChangestudentLevel: this.handleChangestudentLevel,\n      handleChangeClass: this.handleChangeClass,\n      onDrop: this.onDrop,\n      handleChangeStudent: this.handleChangeStudent,\n      addHealthFile: this.addHealthFile,\n      handleCheck: this.handleCheck,\n      editHealthFile: this.editHealthFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 25\n      }\n    }) : \"\");\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    classSections: state.classSections.remoteSections,\n    classes: state.classes,\n    classVirtual: state.classVirtualReducer.remoteClassVirtual,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    settings: state.settings.locale,\n    ficheMedicalList: state.HealthReducer.remoteFicheMedical\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getSections,\n  getLevels,\n  getLevelsVirtualClass,\n  getClassesByEstablishmentId,\n  editFicheMedical\n})(HealthFileList);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/HealthMonitoring/HealthFileList.js"],"names":["React","Component","HealthFileListItem","EditHealthFile","getSectionFromLevel","getLevelListFromEstabType","axios","baseUrl","editFicheMedical","getSections","getLevels","getLevelsVirtualClass","getClassesByEstablishmentId","connect","roleIdSuperAdmin","roleIdAdmin","roleIdProfessor","roleIdParent","roleIdStudent","roleIdSupervisor","roleIdDirector","HealthFileList","constructor","props","editHealthFile","data","establishment_id","userProfile","student_id","state","class_id","nom_doctor","prenom_doctor","phone_doctor","parseInt","blood_type","poids","hauteur","problems","checkedValues","remarque","files","status","mail_doctor","id","userPhotos","setState","editIsopen","level_id","section_id","checkedBox","inputText","handleCheck","event","tab","test","findIndex","element","target","value","push","splice","onDrop","e","file","name","handleCancel","handleChange","editFicheMedicalShowModal","FicheObjectEdit","get","localStorage","token","then","response","ClassID","Disable_studentsection","studentSectionbyLevel","studentsectionByLevels","levelID","studentfiltredClasses","classes","filter","classe","studentClassesByLevelSectionID","res","studentByclassID","classData","blood_group","type","bind","componentWillMount","levelsbyestablishment","classLevels","estab_type_id","estabType","render","finalList","ficheMedicalList","length","map","handleChangestudentSection","handleChangestudentLevel","handleChangeClass","handleChangeStudent","addHealthFile","mapStateToProps","auth","ClassLevels","remoteLevels","classSections","remoteSections","classVirtual","classVirtualReducer","remoteClassVirtual","successStatus","alert","success","errorStatus","error","message","settings","locale","HealthReducer","remoteFicheMedical"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport HealthFileListItem from \"./HealthFileListItem\"\nimport EditHealthFile from \"./EditHealthFile\"\nimport { getSectionFromLevel } from '../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from '../../../actions/classLevelAction';\nimport axios from 'axios';\nimport baseUrl from '../../../config/config';\nimport {editFicheMedical} from '../../../actions/HealthAction'\nimport { getSections } from '../../../actions/sectionAction';\nimport { getLevels } from '../../../actions/classLevelAction';\nimport { getLevelsVirtualClass } from '../../../actions/classLevelAction';\nimport { getClassesByEstablishmentId } from '../../../actions/classeAction';\nimport { connect } from 'react-redux';\nimport { roleIdSuperAdmin } from '../../../config/config';\nimport { roleIdAdmin } from '../../../config/config';\nimport { roleIdProfessor } from '../../../config/config';\nimport { roleIdParent } from '../../../config/config';\nimport { roleIdStudent } from '../../../config/config';\nimport { roleIdSupervisor } from '../../../config/config';\nimport { roleIdDirector } from '../../../config/config';\n\n class HealthFileList extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            editIsopen: false,\n            level_id: '',\n            section_id: '',\n            Disable_studentsection: true,\n            establishment_id: '',\n            student_id: '',\n            class_id: '',\n            nom_doctor: '',\n            prenom_doctor: '',\n            phone_doctor: '',\n            mail_doctor: '',\n            blood_type: '',\n            poids: '',\n            hauteur: '',\n            problems: [],\n            remarque: '',\n            files: '',\n            studentsectionByLevels:[],\n            studentClassesByLevelSectionID:[],\n            studentByclassID: [],\n            userPhotos: null, \n            inputText:'',\n            checkedValues:[],\n            id:'',\n            blood_group: [\n                {\n                  id: 1,\n                  type: \"A+\"\n                },\n                {\n                  id: 2,\n                  type: \"A-\"\n                },\n                {\n                  id: 3,\n                  type: \"B+\"\n                },\n                {\n                  id: 4,\n                  type: \"B-\"\n                },\n                {\n                  id: 5,\n                  type: \"AB+\"\n                },\n                {\n                  id: 6,\n                  type: \"AB-\"\n                },\n                {\n                  id: 7,\n                  type: \"O+\"\n                },\n                {\n                  id: 8,\n                  type: \"O-\"\n                }\n              ],\n              data: [\n                {\n                  \"id\": 1,\n                  \"name\": \"Des yeux\"\n                },\n                {\n                  \"id\": 2,\n                  \"name\": \"Coeur\"\n                },\n                {\n                  \"id\": 3,\n                  \"name\": \"CUTANÉ\"\n                },\n                {\n                  \"id\": 4,\n                  \"name\": \"Système respiratoire\"\n                },\n                {\n                  \"id\": 5,\n                  \"name\": \"Des oreilles\"\n                },\n                {\n                  \"id\": 6,\n                  \"name\": \"Tension\"\n                },\n                {\n                  \"id\": 7,\n                  \"name\": \"Système musculo-squelettique\"\n                },\n                {\n                  \"id\": 8,\n                  \"name\": \"Système respiratoire\"\n                },\n                {\n                  \"id\": 9,\n                  \"name\": \"Système nerveux\"\n                }\n        \n              ],\n\n        }\n        this.editFicheMedicalShowModal = this.editFicheMedicalShowModal.bind(this)\n\n        this.handleCancel = this.handleCancel.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.onDrop = this.onDrop.bind(this)\n        // this.handleChangeStudent = this.handleChangeStudent.bind(this)\n        this.editHealthFile = this.editHealthFile.bind(this)\n        this.handleCheck = this.handleCheck.bind(this)\n    }\n\n    editHealthFile = () => {\n\n        var data = {};\n        data.establishment_id = this.props.userProfile.establishment_id;\n        data.student_id = this.state.student_id;\n        data.class_id = this.state.class_id;\n        data.nom_doctor = this.state.nom_doctor;\n        data.prenom_doctor = this.state.prenom_doctor;\n        data.phone_doctor = parseInt(this.state.phone_doctor, 10)\n        data.blood_type = this.state.blood_type;\n        data.poids = parseInt(this.state.poids, 10)\n        data.hauteur = parseInt(this.state.hauteur, 10)\n        data.problems = this.state.checkedValues;\n        data.remarque = this.state.remarque;\n        data.files = this.state.files;\n        data.status = true;\n        data.mail_doctor = this.state.mail_doctor;\n        data.id=this.state.id\n        this.props.editFicheMedical(data, this.state.userPhotos);\n        this.setState({\n          editIsopen: false,\n          level_id: '',\n          section_id: '',\n          class_id: '',\n          student_id: '',\n          blood_type: '',\n          poids: '',\n          hauteur: '',\n          prenom_doctor: '',\n          nom_doctor: '',\n          phone_doctor: '',\n          mail_doctor: '',\n          remarque: '',\n          userPhotos: null,\n          checkedBox: true,\n          inputText: '',\n          checkedValues: [],\n          id:''\n    \n    \n        })\n      }\n\n\n  handleCheck = (event) => {\n    var tab = this.state.checkedValues\n    var test = this.state.checkedValues.findIndex(element => element == event.target.value)\n    if (test == -1) {\n      tab.push(parseInt(event.target.value, 10))\n      this.setState({ checkedValues: tab })\n    }\n    else {\n      tab.splice(test, 1)\n      this.setState({ checkedValues: tab })\n    }\n  };\n\n    onDrop = e => {\n        let file = e.target.files[0];\n        this.setState({ userPhotos: file, inputText: file.name });\n      };\n    handleCancel = () => {\n        this.setState({\n          editIsopen: false\n        });\n      };\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n    editFicheMedicalShowModal = (FicheObjectEdit) => {\n        this.setState({\n            editIsopen: true,\n            establishment_id: FicheObjectEdit.establishment_id,\n            student_id: FicheObjectEdit.student_id,\n            nom_doctor: FicheObjectEdit.nom_doctor,\n            prenom_doctor: FicheObjectEdit.prenom_doctor,\n            phone_doctor: FicheObjectEdit.phone_doctor,\n            mail_doctor: FicheObjectEdit.mail_doctor,\n            blood_type: FicheObjectEdit.blood_type,\n            poids: FicheObjectEdit.poids,\n            hauteur: FicheObjectEdit.hauteur,\n            checkedValues: FicheObjectEdit.problems,\n            remarque: FicheObjectEdit.remarque,\n            files: FicheObjectEdit.files,\n            id:FicheObjectEdit.id\n        })\n\n        axios.get(`${baseUrl.baseUrl}/students/` + FicheObjectEdit.student_id + `?access_token=${localStorage.token}`)\n            .then(response => {\n\n        axios.get(`${baseUrl.baseUrl}/classes/` + response.data.class_id + `?access_token=${localStorage.token}`)\n            .then(response => {\n           \n                var ClassID=response.data.id\n                this.setState({\n                    level_id: response.data.level_id,\n                    section_id: response.data.section_id,\n                    class_id: response.data.id,\n                     })\n\n                if (response.data.level_id > 10) {\n                    this.setState({ Disable_studentsection: false });\n                    var studentSectionbyLevel = getSectionFromLevel(\n                        response.data.section_id,\n                        response.data.level_id\n                    );\n                    this.setState({ studentsectionByLevels: studentSectionbyLevel });\n                  } else {\n                    this.setState({\n                      Disable_studentsection: true,\n                      section_id: 0,\n                    });\n                    const levelID = response.data.level_id ;\n                    var studentfiltredClasses = this.props.classes.filter(\n                      (classe) => classe.level_id === levelID && classe.status\n                    );\n                    this.setState({ studentClassesByLevelSectionID: studentfiltredClasses });\n                  }\n                  axios\n                  .get(\n                    `${baseUrl.baseUrl}/students/fetchAllStudentsDataByClassID/` +\n                    ClassID +\n                    `?access_token=${localStorage.token}`\n                  )\n                  .then((res) => {\n                    this.setState({\n                      studentByclassID: res.data.classData\n                    });\n                  });\n    })\n\n            })\n\n    }\n\n    componentWillMount(){\n    \n        axios\n        .get(\n          `${baseUrl.baseUrl}/establishments/` +\n          this.props.userProfile.establishment_id +\n          `?access_token=${localStorage.token}`\n        )\n        .then((res) => {\n          var levelsbyestablishment = getLevelListFromEstabType(\n            this.props.classLevels,\n            res.data.estab_type_id\n          );\n          this.setState({\n            estabType: res.data.estab_type_id,\n            levelsbyestablishment: levelsbyestablishment,\n          },);\n        });\n    }\n\n    render() {\n        var finalList\n      if(this.props.class_id===''){\n        finalList = this.props.ficheMedicalList\n      }\n      else{\n        finalList = this.props.ficheMedicalList.filter(element => element.class_id == this.props.class_id)\n      }\n        return (\n            <div>\n                {\n                    finalList.length > 0 ? <div className=\"row animated slideInUpTiny animation-duration-3\">\n                        {\n                            finalList.map(element =>\n                                <div className=\"col-md-4\">\n                                    <HealthFileListItem\n                                        ficheMedicalItem={element}\n                                        editFicheMedicalShowModal={this.editFicheMedicalShowModal}\n\n\n                                    />\n                                </div>\n\n                            )\n                        }\n\n\n\n\n                    </div> : \"\"\n                }\n                {\n                    this.state.editIsopen === true ?\n                        <EditHealthFile\n                            editIsopen={this.state.editIsopen}\n                            values={this.state}\n                            handleCancel={this.handleCancel}\n                            handleChange={this.handleChange}\n                            handleChangestudentSection={this.handleChangestudentSection}\n                            handleChangestudentLevel={this.handleChangestudentLevel}\n                            handleChangeClass={this.handleChangeClass}\n                            onDrop={this.onDrop}\n                            handleChangeStudent={this.handleChangeStudent}\n                            addHealthFile={this.addHealthFile}\n                            handleCheck={this.handleCheck}\n                            editHealthFile={this.editHealthFile}\n\n                        /> : \"\"\n                }\n            </div>\n\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n      userProfile: state.auth.userProfile,\n      classLevels: state.ClassLevels.remoteLevels,\n      classSections: state.classSections.remoteSections,\n      classes: state.classes,\n      classVirtual: state.classVirtualReducer.remoteClassVirtual,\n      successStatus: state.alert.success,\n      errorStatus: state.alert.error,\n      message: state.alert.message,\n      settings: state.settings.locale,\n      ficheMedicalList: state.HealthReducer.remoteFicheMedical\n    };\n  }\n  \n  export default connect(\n    mapStateToProps,\n    {\n    \n      getSections,\n      getLevels,\n      getLevelsVirtualClass,\n      getClassesByEstablishmentId,\n      editFicheMedical\n    }\n  )(HealthFileList);\n"]},"metadata":{},"sourceType":"module"}