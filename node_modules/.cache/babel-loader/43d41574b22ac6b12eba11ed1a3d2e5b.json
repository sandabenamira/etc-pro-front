{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport { FETECHED_ALL_HEALTH, ADD_HEALTH, EDIT_HEALTH, DELETE_HEALTH, HANDLE_REQUEST_CLOSE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from \"../constants/ActionTypes\";\nimport baseUrl from \"../config/config\";\nimport axios from \"axios\";\nexport const addFicheMedical = (data, file) => {\n  return dispatch => {\n    let apiEndpoint = `/suivi_medicals?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then(response => {\n      console.log(\"Suivi saved object \", response.data);\n\n      if (response) {\n        var suiviObject = response.data;\n\n        if (file !== null) {\n          var formadata = new FormData();\n          const fileExtension = file.name.replace(/^.*\\./, \"\");\n          const fileName = \"fiche_medical_\" + suiviObject.id + \".\" + fileExtension;\n          var object = {};\n          object.file = file;\n          object.fileName = fileName;\n          dispatch(uploadCourseMedia(object, suiviObject));\n        } else {}\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n}; // export const addFicheMedical = (data, file) => {\n//   return (dispatch) => {\n//     let apiEndpoint = `/suivi_medicals?access_token=${localStorage.token}`;\n//     classService.post(apiEndpoint, data).then((response) => {\n//       if (response) {\n//         var suiviObject = response.data;\n//         if (file !== null) {\n//           axios\n//             .get(\n//               `${baseUrl.baseUrl}/establishments/` +\n//                 data.establishment_id +\n//                 `?access_token=${localStorage.token}`\n//             )\n//             .then((res) => {\n//               var establishmentName = res.data.name;\n//               let arrayItemCourseFiles = [];\n//               var formadata = new FormData();\n//               const fileExtension = file.name.replace(/^.*\\./, \"\");\n//               const fileName =\n//                 \"fiche_medical_\" + suiviObject.id + \".\" + fileExtension;\n//               var object = {};\n//               object.file = file;\n//               object.fileName = fileName;\n//               object.establishmentName = establishmentName;\n//               axios\n//                 .patch(\n//                   `${baseUrl.baseUrl}/suivi_medicals/` +\n//                     suiviObject.id +\n//                     `?access_token=${localStorage.token}`,\n//                   {\n//                     files: fileName,\n//                   }\n//                 )\n//                 .then((response) => {\n//                   object.suiviObject = response.data;\n//                   dispatch(uploadCourseMedia(object));\n//                 })\n//                 .catch(function(error) {\n//                   console.log(\"error\", error);\n//                 });\n//             });\n//         } else {\n//         }\n//       } else {\n//         dispatch({\n//           type: SHOW_ERROR_MESSAGE,\n//           payload:\n//             \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n//         });\n//         setTimeout(() => {\n//           dispatch({ type: HIDE_ERROR_MESSAGE });\n//         }, 4000);\n//       }\n//     });\n//   };\n// };\n\nexport function uploadCourseMedia(ObjetFile, ObjetSuiviMedical) {\n  const fileName = ObjetFile.fileName;\n  const myNewFile = new File([ObjetFile.file], fileName, {\n    type: ObjetFile.file.type\n  });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function (dispatch) {\n    const establishLogoUrl = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata\n    }).then(response => {\n      axios.patch(`${baseUrl.baseUrl}/suivi_medicals/` + ObjetSuiviMedical.id + `?access_token=${localStorage.token}`, {\n        files: response.data.result.files.image[0].providerResponse.location\n      }).then(response => {\n        console.log(\"updateddddddddddd \", response.data); // dispatch(uploadCourseMedia(object));\n      }).catch(function (error) {\n        console.log(\"error\", error);\n      }); // dispatch({ type: ADD_HEALTH, payload: data.suiviObject });\n      // dispatch({\n      //   type: SHOW_SUCCESS_MESSAGE,\n      //   payload: \"La création est effectuée avec succès\",\n      // });\n      // setTimeout(() => {\n      //   dispatch({ type: HIDE_SUCCESS_MESSAGE });\n      // }, 4000);\n    }).catch(err => {});\n  };\n} // export function uploadCourseMedia(data) {\n//   const fileName = data.fileName;\n//   const myNewFile = new File([data.file], fileName, { type: data.file.type });\n//   let formadata = new FormData();\n//   formadata.append(\"image\", myNewFile);\n//   return function(dispatch) {\n//     const establishLogoUrl =\n//       `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n//     axios({\n//       url: establishLogoUrl,\n//       method: \"POST\",\n//       data: formadata,\n//     })\n//       .then((response) => {\n//         console.log('resssssssssssss ',response)\n//         dispatch({ type: ADD_HEALTH, payload: data.suiviObject });\n//         dispatch({\n//           type: SHOW_SUCCESS_MESSAGE,\n//           payload: \"La création est effectuée avec succès\",\n//         });\n//         setTimeout(() => {\n//           dispatch({ type: HIDE_SUCCESS_MESSAGE });\n//         }, 4000);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n// }\n\nexport const getFicheMedical = () => {\n  return dispatch => {\n    let apiEndpoint = `/suivi_medicals?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      const list = response.data;\n      const ficheList = list.filter(element => element.status);\n      dispatch({\n        type: FETECHED_ALL_HEALTH,\n        payload: ficheList\n      });\n    }).catch(err => {});\n  };\n};\nexport const getFicheMedicalByEstablishmentId = establishmentId => {\n  return dispatch => {\n    let apiEndpoint = `/suivi_medicals?access_token=${localStorage.token}&filter[where][establishment_id]=` + establishmentId;\n    classService.get(apiEndpoint).then(response => {\n      const list = response.data;\n      const ficheList = list.filter(element => element.status);\n      dispatch({\n        type: FETECHED_ALL_HEALTH,\n        payload: ficheList\n      });\n    }).catch(err => {});\n  };\n};\nexport function deleteFicheMedical(itemId) {\n  return dispatch => {\n    axios.patch(`${baseUrl.baseUrl}/suivi_medicals/` + itemId + `?access_token=${localStorage.token}`, {\n      status: false\n    }).then(response => {\n      dispatch({\n        type: DELETE_HEALTH,\n        payload: response.data\n      });\n    }).catch(function (error) {});\n  };\n}\nexport function editFicheMedical(data, file) {\n  return dispatch => {\n    if (file !== null) {\n      if (data.files == \"1.png\") {\n        axios.get(`${baseUrl.baseUrl}/establishments/` + data.establishment_id + `?access_token=${localStorage.token}`).then(res => {\n          var establishmentName = res.data.name;\n          const fileExtension = file.name.replace(/^.*\\./, \"\");\n          const fileName = \"fiche_medical_\" + data.id + \".\" + fileExtension;\n          var object = {};\n          object.file = file;\n          object.fileName = fileName;\n          object.establishmentName = establishmentName;\n          data.files = fileName;\n          axios.put(`${baseUrl.baseUrl}/suivi_medicals/` + data.id + `?access_token=${localStorage.token}`, {\n            establishment_id: data.establishment_id,\n            student_id: data.student_id,\n            class_id: data.class_id,\n            nom_doctor: data.nom_doctor,\n            prenom_doctor: this.state.prenom_doctor,\n            phone_doctor: data.phone_doctor,\n            blood_type: data.blood_type,\n            poids: data.poids,\n            hauteur: data.hauteur,\n            problems: data.problems,\n            remarque: data.remarque,\n            files: fileName,\n            status: true,\n            mail_doctor: data.mail_doctor,\n            id: data.id\n          }).then(response => {\n            object.suiviObject = response.data;\n            dispatch(uploadCourseMediaedit(object));\n          }).catch(function (error) {});\n        });\n      } else {\n        axios.get(`${baseUrl.baseUrl}/establishments/` + data.establishment_id + `?access_token=${localStorage.token}`).then(res => {\n          var establishmentName = res.data.name;\n          let formadata = new FormData();\n          formadata.append(\"image\", file);\n          const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + establishmentName + `/files/` + data.files + `?access_token=${localStorage.token}`;\n          axios({\n            url: establishLogoUrl,\n            method: \"DELETE\",\n            data: formadata\n          }).then(response => {\n            const fileExtension = file.name.replace(/^.*\\./, \"\");\n            const fileName = \"fiche_medical_\" + data.id + \".\" + fileExtension;\n            var object = {};\n            object.file = file;\n            object.fileName = fileName;\n            object.establishmentName = establishmentName;\n            data.files = fileName;\n            axios.put(`${baseUrl.baseUrl}/suivi_medicals/` + data.id + `?access_token=${localStorage.token}`, {\n              establishment_id: data.establishment_id,\n              student_id: data.student_id,\n              class_id: data.class_id,\n              nom_doctor: data.nom_doctor,\n              prenom_doctor: data.prenom_doctor,\n              phone_doctor: data.phone_doctor,\n              blood_type: data.blood_type,\n              poids: data.poids,\n              hauteur: data.hauteur,\n              problems: data.problems,\n              remarque: data.remarque,\n              files: fileName,\n              status: true,\n              mail_doctor: data.mail_doctor,\n              id: data.id\n            }).then(response => {\n              object.suiviObject = response.data;\n              dispatch(uploadCourseMediaedit(object));\n            }).catch(function (error) {});\n          });\n        });\n      }\n    } else {\n      axios.put(`${baseUrl.baseUrl}/suivi_medicals/` + data.id + `?access_token=${localStorage.token}`, {\n        establishment_id: data.establishment_id,\n        student_id: data.student_id,\n        class_id: data.class_id,\n        nom_doctor: data.nom_doctor,\n        prenom_doctor: data.prenom_doctor,\n        phone_doctor: data.phone_doctor,\n        blood_type: data.blood_type,\n        poids: data.poids,\n        hauteur: data.hauteur,\n        problems: data.problems,\n        remarque: data.remarque,\n        files: data.files,\n        status: true,\n        mail_doctor: data.mail_doctor,\n        id: data.id\n      }).then(response => {\n        dispatch({\n          type: EDIT_HEALTH,\n          payload: response.data\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La modification est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      }).catch(function (error) {});\n    }\n  };\n}\nexport function uploadCourseMediaedit(data) {\n  const fileName = data.fileName;\n  const myNewFile = new File([data.file], fileName, {\n    type: data.file.type\n  });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function (dispatch) {\n    const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + data.establishmentName + `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata\n    }).then(response => {\n      dispatch({\n        type: EDIT_HEALTH,\n        payload: data.suiviObject\n      });\n      dispatch({\n        type: SHOW_SUCCESS_MESSAGE,\n        payload: \"La création est effectuée avec succès\"\n      });\n      setTimeout(() => {\n        dispatch({\n          type: HIDE_SUCCESS_MESSAGE\n        });\n      }, 4000);\n    }).catch(err => {});\n  };\n}\nexport function getBlodType(idBlood) {\n  var blood_group = [{\n    id: 1,\n    type: \"A+\"\n  }, {\n    id: 2,\n    type: \"A-\"\n  }, {\n    id: 3,\n    type: \"B+\"\n  }, {\n    id: 4,\n    type: \"B-\"\n  }, {\n    id: 5,\n    type: \"AB+\"\n  }, {\n    id: 6,\n    type: \"AB-\"\n  }, {\n    id: 7,\n    type: \"O+\"\n  }, {\n    id: 8,\n    type: \"O-\"\n  }];\n  var bloodType = blood_group.filter(element => element.id === idBlood);\n  return bloodType[0].type;\n}\nexport const serviceAction = {\n  addFicheMedical,\n  getFicheMedical,\n  deleteFicheMedical,\n  getBlodType,\n  getFicheMedicalByEstablishmentId\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/HealthAction.js"],"names":["classService","FETECHED_ALL_HEALTH","ADD_HEALTH","EDIT_HEALTH","DELETE_HEALTH","HANDLE_REQUEST_CLOSE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","baseUrl","axios","addFicheMedical","data","file","dispatch","apiEndpoint","localStorage","token","post","then","response","console","log","suiviObject","formadata","FormData","fileExtension","name","replace","fileName","id","object","uploadCourseMedia","type","payload","setTimeout","ObjetFile","ObjetSuiviMedical","myNewFile","File","append","establishLogoUrl","url","method","patch","files","result","image","providerResponse","location","catch","error","err","getFicheMedical","get","list","ficheList","filter","element","status","getFicheMedicalByEstablishmentId","establishmentId","deleteFicheMedical","itemId","editFicheMedical","establishment_id","res","establishmentName","put","student_id","class_id","nom_doctor","prenom_doctor","state","phone_doctor","blood_type","poids","hauteur","problems","remarque","mail_doctor","uploadCourseMediaedit","getBlodType","idBlood","blood_group","bloodType","serviceAction"],"mappings":"AAAA,SAASA,YAAT,QAA6B,4BAA7B;AACA,SACEC,mBADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,oBALF,EAMEC,kBANF,EAOEC,kBAPF,EAQEC,oBARF,EASEC,oBATF,QAUO,0BAVP;AAWA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC7C,SAAQC,QAAD,IAAc;AACnB,QAAIC,WAAW,GAAI,gCAA+BC,YAAY,CAACC,KAAM,EAArE;AACAlB,IAAAA,YAAY,CAACmB,IAAb,CAAkBH,WAAlB,EAA+BH,IAA/B,EAAqCO,IAArC,CAA2CC,QAAD,IAAc;AACtDC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,QAAQ,CAACR,IAA5C;;AAEA,UAAIQ,QAAJ,EAAc;AACZ,YAAIG,WAAW,GAAGH,QAAQ,CAACR,IAA3B;;AAEA,YAAIC,IAAI,KAAK,IAAb,EAAmB;AACjB,cAAIW,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACA,gBAAMC,aAAa,GAAGb,IAAI,CAACc,IAAL,CAAUC,OAAV,CAAkB,OAAlB,EAA2B,EAA3B,CAAtB;AACA,gBAAMC,QAAQ,GACZ,mBAAmBN,WAAW,CAACO,EAA/B,GAAoC,GAApC,GAA0CJ,aAD5C;AAEA,cAAIK,MAAM,GAAG,EAAb;AACAA,UAAAA,MAAM,CAAClB,IAAP,GAAcA,IAAd;AACAkB,UAAAA,MAAM,CAACF,QAAP,GAAkBA,QAAlB;AAEAf,UAAAA,QAAQ,CAACkB,iBAAiB,CAACD,MAAD,EAASR,WAAT,CAAlB,CAAR;AACD,SAVD,MAUO,CACN;AACF,OAfD,MAeO;AACLT,QAAAA,QAAQ,CAAC;AACPmB,UAAAA,IAAI,EAAE5B,kBADC;AAEP6B,UAAAA,OAAO,EACL;AAHK,SAAD,CAAR;AAKAC,QAAAA,UAAU,CAAC,MAAM;AACfrB,UAAAA,QAAQ,CAAC;AAAEmB,YAAAA,IAAI,EAAE3B;AAAR,WAAD,CAAR;AACD,SAFS,EAEP,IAFO,CAAV;AAGD;AACF,KA5BD;AA6BD,GA/BD;AAgCD,CAjCM,C,CAmCP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAAS0B,iBAAT,CAA2BI,SAA3B,EAAsCC,iBAAtC,EAAyD;AAC9D,QAAMR,QAAQ,GAAGO,SAAS,CAACP,QAA3B;AACA,QAAMS,SAAS,GAAG,IAAIC,IAAJ,CAAS,CAACH,SAAS,CAACvB,IAAX,CAAT,EAA2BgB,QAA3B,EAAqC;AACrDI,IAAAA,IAAI,EAAEG,SAAS,CAACvB,IAAV,CAAeoB;AADgC,GAArC,CAAlB;AAGA,MAAIT,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACgB,MAAV,CAAiB,OAAjB,EAA0BF,SAA1B;AACA,SAAO,UAASxB,QAAT,EAAmB;AACxB,UAAM2B,gBAAgB,GAAI,GAAEhC,OAAO,CAACA,OAAQ,2DAA0DO,YAAY,CAACC,KAAM,EAAzH;AACAP,IAAAA,KAAK,CAAC;AACJgC,MAAAA,GAAG,EAAED,gBADD;AAEJE,MAAAA,MAAM,EAAE,MAFJ;AAGJ/B,MAAAA,IAAI,EAAEY;AAHF,KAAD,CAAL,CAKGL,IALH,CAKSC,QAAD,IAAc;AAClBV,MAAAA,KAAK,CACFkC,KADH,CAEK,GAAEnC,OAAO,CAACA,OAAQ,kBAAnB,GACE4B,iBAAiB,CAACP,EADpB,GAEG,iBAAgBd,YAAY,CAACC,KAAM,EAJ1C,EAKI;AACE4B,QAAAA,KAAK,EACHzB,QAAQ,CAACR,IAAT,CAAckC,MAAd,CAAqBD,KAArB,CAA2BE,KAA3B,CAAiC,CAAjC,EAAoCC,gBAApC,CAAqDC;AAFzD,OALJ,EAUG9B,IAVH,CAUSC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,QAAQ,CAACR,IAA3C,EADkB,CAElB;AACD,OAbH,EAcGsC,KAdH,CAcS,UAASC,KAAT,EAAgB;AACrB9B,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB6B,KAArB;AACD,OAhBH,EADkB,CAmBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAhCH,EAiCGD,KAjCH,CAiCUE,GAAD,IAAS,CAAE,CAjCpB;AAkCD,GApCD;AAqCD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,SAAQvC,QAAD,IAAc;AACnB,QAAIC,WAAW,GAAI,gCAA+BC,YAAY,CAACC,KAAM,EAArE;AACAlB,IAAAA,YAAY,CACTuD,GADH,CACOvC,WADP,EAEGI,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMmC,IAAI,GAAGnC,QAAQ,CAACR,IAAtB;AACA,YAAM4C,SAAS,GAAGD,IAAI,CAACE,MAAL,CAAaC,OAAD,IAAaA,OAAO,CAACC,MAAjC,CAAlB;AACA7C,MAAAA,QAAQ,CAAC;AAAEmB,QAAAA,IAAI,EAAEjC,mBAAR;AAA6BkC,QAAAA,OAAO,EAAEsB;AAAtC,OAAD,CAAR;AACD,KANH,EAOGN,KAPH,CAOUE,GAAD,IAAS,CAAE,CAPpB;AAQD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMQ,gCAAgC,GAAIC,eAAD,IAAqB;AACnE,SAAQ/C,QAAD,IAAc;AACnB,QAAIC,WAAW,GACZ,gCAA+BC,YAAY,CAACC,KAAM,mCAAnD,GACA4C,eAFF;AAGA9D,IAAAA,YAAY,CACTuD,GADH,CACOvC,WADP,EAEGI,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMmC,IAAI,GAAGnC,QAAQ,CAACR,IAAtB;AACA,YAAM4C,SAAS,GAAGD,IAAI,CAACE,MAAL,CAAaC,OAAD,IAAaA,OAAO,CAACC,MAAjC,CAAlB;AAEA7C,MAAAA,QAAQ,CAAC;AAAEmB,QAAAA,IAAI,EAAEjC,mBAAR;AAA6BkC,QAAAA,OAAO,EAAEsB;AAAtC,OAAD,CAAR;AACD,KAPH,EAQGN,KARH,CAQUE,GAAD,IAAS,CAAE,CARpB;AASD,GAbD;AAcD,CAfM;AAiBP,OAAO,SAASU,kBAAT,CAA4BC,MAA5B,EAAoC;AACzC,SAAQjD,QAAD,IAAc;AACnBJ,IAAAA,KAAK,CACFkC,KADH,CAEK,GAAEnC,OAAO,CAACA,OAAQ,kBAAnB,GACEsD,MADF,GAEG,iBAAgB/C,YAAY,CAACC,KAAM,EAJ1C,EAKI;AACE0C,MAAAA,MAAM,EAAE;AADV,KALJ,EASGxC,IATH,CASSC,QAAD,IAAc;AAClBN,MAAAA,QAAQ,CAAC;AAAEmB,QAAAA,IAAI,EAAE9B,aAAR;AAAuB+B,QAAAA,OAAO,EAAEd,QAAQ,CAACR;AAAzC,OAAD,CAAR;AACD,KAXH,EAYGsC,KAZH,CAYS,UAASC,KAAT,EAAgB,CAAE,CAZ3B;AAaD,GAdD;AAeD;AAED,OAAO,SAASa,gBAAT,CAA0BpD,IAA1B,EAAgCC,IAAhC,EAAsC;AAC3C,SAAQC,QAAD,IAAc;AACnB,QAAID,IAAI,KAAK,IAAb,EAAmB;AACjB,UAAID,IAAI,CAACiC,KAAL,IAAc,OAAlB,EAA2B;AACzBnC,QAAAA,KAAK,CACF4C,GADH,CAEK,GAAE7C,OAAO,CAACA,OAAQ,kBAAnB,GACEG,IAAI,CAACqD,gBADP,GAEG,iBAAgBjD,YAAY,CAACC,KAAM,EAJ1C,EAMGE,IANH,CAMS+C,GAAD,IAAS;AACb,cAAIC,iBAAiB,GAAGD,GAAG,CAACtD,IAAJ,CAASe,IAAjC;AACA,gBAAMD,aAAa,GAAGb,IAAI,CAACc,IAAL,CAAUC,OAAV,CAAkB,OAAlB,EAA2B,EAA3B,CAAtB;AACA,gBAAMC,QAAQ,GAAG,mBAAmBjB,IAAI,CAACkB,EAAxB,GAA6B,GAA7B,GAAmCJ,aAApD;AAEA,cAAIK,MAAM,GAAG,EAAb;AACAA,UAAAA,MAAM,CAAClB,IAAP,GAAcA,IAAd;AACAkB,UAAAA,MAAM,CAACF,QAAP,GAAkBA,QAAlB;AACAE,UAAAA,MAAM,CAACoC,iBAAP,GAA2BA,iBAA3B;AACAvD,UAAAA,IAAI,CAACiC,KAAL,GAAahB,QAAb;AAEAnB,UAAAA,KAAK,CACF0D,GADH,CAEK,GAAE3D,OAAO,CAACA,OAAQ,kBAAnB,GACEG,IAAI,CAACkB,EADP,GAEG,iBAAgBd,YAAY,CAACC,KAAM,EAJ1C,EAKI;AACEgD,YAAAA,gBAAgB,EAAErD,IAAI,CAACqD,gBADzB;AAEEI,YAAAA,UAAU,EAAEzD,IAAI,CAACyD,UAFnB;AAGEC,YAAAA,QAAQ,EAAE1D,IAAI,CAAC0D,QAHjB;AAIEC,YAAAA,UAAU,EAAE3D,IAAI,CAAC2D,UAJnB;AAKEC,YAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWD,aAL5B;AAMEE,YAAAA,YAAY,EAAE9D,IAAI,CAAC8D,YANrB;AAOEC,YAAAA,UAAU,EAAE/D,IAAI,CAAC+D,UAPnB;AAQEC,YAAAA,KAAK,EAAEhE,IAAI,CAACgE,KARd;AASEC,YAAAA,OAAO,EAAEjE,IAAI,CAACiE,OAThB;AAUEC,YAAAA,QAAQ,EAAElE,IAAI,CAACkE,QAVjB;AAWEC,YAAAA,QAAQ,EAAEnE,IAAI,CAACmE,QAXjB;AAYElC,YAAAA,KAAK,EAAEhB,QAZT;AAaE8B,YAAAA,MAAM,EAAE,IAbV;AAcEqB,YAAAA,WAAW,EAAEpE,IAAI,CAACoE,WAdpB;AAeElD,YAAAA,EAAE,EAAElB,IAAI,CAACkB;AAfX,WALJ,EAuBGX,IAvBH,CAuBSC,QAAD,IAAc;AAClBW,YAAAA,MAAM,CAACR,WAAP,GAAqBH,QAAQ,CAACR,IAA9B;AACAE,YAAAA,QAAQ,CAACmE,qBAAqB,CAAClD,MAAD,CAAtB,CAAR;AACD,WA1BH,EA2BGmB,KA3BH,CA2BS,UAASC,KAAT,EAAgB,CAAE,CA3B3B;AA4BD,SA7CH;AA8CD,OA/CD,MA+CO;AACLzC,QAAAA,KAAK,CACF4C,GADH,CAEK,GAAE7C,OAAO,CAACA,OAAQ,kBAAnB,GACEG,IAAI,CAACqD,gBADP,GAEG,iBAAgBjD,YAAY,CAACC,KAAM,EAJ1C,EAMGE,IANH,CAMS+C,GAAD,IAAS;AACb,cAAIC,iBAAiB,GAAGD,GAAG,CAACtD,IAAJ,CAASe,IAAjC;AACA,cAAIH,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACAD,UAAAA,SAAS,CAACgB,MAAV,CAAiB,OAAjB,EAA0B3B,IAA1B;AACA,gBAAM4B,gBAAgB,GACnB,GAAEhC,OAAO,CAACA,OAAQ,cAAnB,GACA0D,iBADA,GAEC,SAFD,GAGAvD,IAAI,CAACiC,KAHL,GAIC,iBAAgB7B,YAAY,CAACC,KAAM,EALtC;AAMAP,UAAAA,KAAK,CAAC;AACJgC,YAAAA,GAAG,EAAED,gBADD;AAEJE,YAAAA,MAAM,EAAE,QAFJ;AAGJ/B,YAAAA,IAAI,EAAEY;AAHF,WAAD,CAAL,CAIGL,IAJH,CAISC,QAAD,IAAc;AACpB,kBAAMM,aAAa,GAAGb,IAAI,CAACc,IAAL,CAAUC,OAAV,CAAkB,OAAlB,EAA2B,EAA3B,CAAtB;AACA,kBAAMC,QAAQ,GAAG,mBAAmBjB,IAAI,CAACkB,EAAxB,GAA6B,GAA7B,GAAmCJ,aAApD;AAEA,gBAAIK,MAAM,GAAG,EAAb;AACAA,YAAAA,MAAM,CAAClB,IAAP,GAAcA,IAAd;AACAkB,YAAAA,MAAM,CAACF,QAAP,GAAkBA,QAAlB;AACAE,YAAAA,MAAM,CAACoC,iBAAP,GAA2BA,iBAA3B;AACAvD,YAAAA,IAAI,CAACiC,KAAL,GAAahB,QAAb;AAEAnB,YAAAA,KAAK,CACF0D,GADH,CAEK,GAAE3D,OAAO,CAACA,OAAQ,kBAAnB,GACEG,IAAI,CAACkB,EADP,GAEG,iBAAgBd,YAAY,CAACC,KAAM,EAJ1C,EAKI;AACEgD,cAAAA,gBAAgB,EAAErD,IAAI,CAACqD,gBADzB;AAEEI,cAAAA,UAAU,EAAEzD,IAAI,CAACyD,UAFnB;AAGEC,cAAAA,QAAQ,EAAE1D,IAAI,CAAC0D,QAHjB;AAIEC,cAAAA,UAAU,EAAE3D,IAAI,CAAC2D,UAJnB;AAKEC,cAAAA,aAAa,EAAE5D,IAAI,CAAC4D,aALtB;AAMEE,cAAAA,YAAY,EAAE9D,IAAI,CAAC8D,YANrB;AAOEC,cAAAA,UAAU,EAAE/D,IAAI,CAAC+D,UAPnB;AAQEC,cAAAA,KAAK,EAAEhE,IAAI,CAACgE,KARd;AASEC,cAAAA,OAAO,EAAEjE,IAAI,CAACiE,OAThB;AAUEC,cAAAA,QAAQ,EAAElE,IAAI,CAACkE,QAVjB;AAWEC,cAAAA,QAAQ,EAAEnE,IAAI,CAACmE,QAXjB;AAYElC,cAAAA,KAAK,EAAEhB,QAZT;AAaE8B,cAAAA,MAAM,EAAE,IAbV;AAcEqB,cAAAA,WAAW,EAAEpE,IAAI,CAACoE,WAdpB;AAeElD,cAAAA,EAAE,EAAElB,IAAI,CAACkB;AAfX,aALJ,EAuBGX,IAvBH,CAuBSC,QAAD,IAAc;AAClBW,cAAAA,MAAM,CAACR,WAAP,GAAqBH,QAAQ,CAACR,IAA9B;AACAE,cAAAA,QAAQ,CAACmE,qBAAqB,CAAClD,MAAD,CAAtB,CAAR;AACD,aA1BH,EA2BGmB,KA3BH,CA2BS,UAASC,KAAT,EAAgB,CAAE,CA3B3B;AA4BD,WA1CD;AA2CD,SA3DH;AA4DD;AACF,KA9GD,MA8GO;AACLzC,MAAAA,KAAK,CACF0D,GADH,CAEK,GAAE3D,OAAO,CAACA,OAAQ,kBAAnB,GACEG,IAAI,CAACkB,EADP,GAEG,iBAAgBd,YAAY,CAACC,KAAM,EAJ1C,EAKI;AACEgD,QAAAA,gBAAgB,EAAErD,IAAI,CAACqD,gBADzB;AAEEI,QAAAA,UAAU,EAAEzD,IAAI,CAACyD,UAFnB;AAGEC,QAAAA,QAAQ,EAAE1D,IAAI,CAAC0D,QAHjB;AAIEC,QAAAA,UAAU,EAAE3D,IAAI,CAAC2D,UAJnB;AAKEC,QAAAA,aAAa,EAAE5D,IAAI,CAAC4D,aALtB;AAMEE,QAAAA,YAAY,EAAE9D,IAAI,CAAC8D,YANrB;AAOEC,QAAAA,UAAU,EAAE/D,IAAI,CAAC+D,UAPnB;AAQEC,QAAAA,KAAK,EAAEhE,IAAI,CAACgE,KARd;AASEC,QAAAA,OAAO,EAAEjE,IAAI,CAACiE,OAThB;AAUEC,QAAAA,QAAQ,EAAElE,IAAI,CAACkE,QAVjB;AAWEC,QAAAA,QAAQ,EAAEnE,IAAI,CAACmE,QAXjB;AAYElC,QAAAA,KAAK,EAAEjC,IAAI,CAACiC,KAZd;AAaEc,QAAAA,MAAM,EAAE,IAbV;AAcEqB,QAAAA,WAAW,EAAEpE,IAAI,CAACoE,WAdpB;AAeElD,QAAAA,EAAE,EAAElB,IAAI,CAACkB;AAfX,OALJ,EAuBGX,IAvBH,CAuBSC,QAAD,IAAc;AAClBN,QAAAA,QAAQ,CAAC;AAAEmB,UAAAA,IAAI,EAAE/B,WAAR;AAAqBgC,UAAAA,OAAO,EAAEd,QAAQ,CAACR;AAAvC,SAAD,CAAR;AACAE,QAAAA,QAAQ,CAAC;AACPmB,UAAAA,IAAI,EAAEzB,oBADC;AAEP0B,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAIAC,QAAAA,UAAU,CAAC,MAAM;AACfrB,UAAAA,QAAQ,CAAC;AAAEmB,YAAAA,IAAI,EAAE1B;AAAR,WAAD,CAAR;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OAhCH,EAiCG2C,KAjCH,CAiCS,UAASC,KAAT,EAAgB,CAAE,CAjC3B;AAkCD;AACF,GAnJD;AAoJD;AAED,OAAO,SAAS8B,qBAAT,CAA+BrE,IAA/B,EAAqC;AAC1C,QAAMiB,QAAQ,GAAGjB,IAAI,CAACiB,QAAtB;AACA,QAAMS,SAAS,GAAG,IAAIC,IAAJ,CAAS,CAAC3B,IAAI,CAACC,IAAN,CAAT,EAAsBgB,QAAtB,EAAgC;AAAEI,IAAAA,IAAI,EAAErB,IAAI,CAACC,IAAL,CAAUoB;AAAlB,GAAhC,CAAlB;AACA,MAAIT,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACgB,MAAV,CAAiB,OAAjB,EAA0BF,SAA1B;AACA,SAAO,UAASxB,QAAT,EAAmB;AACxB,UAAM2B,gBAAgB,GACnB,GAAEhC,OAAO,CAACA,OAAQ,cAAnB,GACAG,IAAI,CAACuD,iBADL,GAEC,wBAAuBnD,YAAY,CAACC,KAAM,EAH7C;AAIAP,IAAAA,KAAK,CAAC;AACJgC,MAAAA,GAAG,EAAED,gBADD;AAEJE,MAAAA,MAAM,EAAE,MAFJ;AAGJ/B,MAAAA,IAAI,EAAEY;AAHF,KAAD,CAAL,CAKGL,IALH,CAKSC,QAAD,IAAc;AAClBN,MAAAA,QAAQ,CAAC;AAAEmB,QAAAA,IAAI,EAAE/B,WAAR;AAAqBgC,QAAAA,OAAO,EAAEtB,IAAI,CAACW;AAAnC,OAAD,CAAR;AACAT,MAAAA,QAAQ,CAAC;AACPmB,QAAAA,IAAI,EAAEzB,oBADC;AAEP0B,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIAC,MAAAA,UAAU,CAAC,MAAM;AACfrB,QAAAA,QAAQ,CAAC;AAAEmB,UAAAA,IAAI,EAAE1B;AAAR,SAAD,CAAR;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAdH,EAeG2C,KAfH,CAeUE,GAAD,IAAS,CAAE,CAfpB;AAgBD,GArBD;AAsBD;AAED,OAAO,SAAS8B,WAAT,CAAqBC,OAArB,EAA8B;AACnC,MAAIC,WAAW,GAAG,CAChB;AACEtD,IAAAA,EAAE,EAAE,CADN;AAEEG,IAAAA,IAAI,EAAE;AAFR,GADgB,EAKhB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEG,IAAAA,IAAI,EAAE;AAFR,GALgB,EAShB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEG,IAAAA,IAAI,EAAE;AAFR,GATgB,EAahB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEG,IAAAA,IAAI,EAAE;AAFR,GAbgB,EAiBhB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEG,IAAAA,IAAI,EAAE;AAFR,GAjBgB,EAqBhB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEG,IAAAA,IAAI,EAAE;AAFR,GArBgB,EAyBhB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEG,IAAAA,IAAI,EAAE;AAFR,GAzBgB,EA6BhB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEG,IAAAA,IAAI,EAAE;AAFR,GA7BgB,CAAlB;AAkCA,MAAIoD,SAAS,GAAGD,WAAW,CAAC3B,MAAZ,CAAoBC,OAAD,IAAaA,OAAO,CAAC5B,EAAR,KAAeqD,OAA/C,CAAhB;AACA,SAAOE,SAAS,CAAC,CAAD,CAAT,CAAapD,IAApB;AACD;AAED,OAAO,MAAMqD,aAAa,GAAG;AAC3B3E,EAAAA,eAD2B;AAE3B0C,EAAAA,eAF2B;AAG3BS,EAAAA,kBAH2B;AAI3BoB,EAAAA,WAJ2B;AAK3BtB,EAAAA;AAL2B,CAAtB","sourcesContent":["import { classService } from \"../_services/class.service\";\nimport {\n  FETECHED_ALL_HEALTH,\n  ADD_HEALTH,\n  EDIT_HEALTH,\n  DELETE_HEALTH,\n  HANDLE_REQUEST_CLOSE,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n} from \"../constants/ActionTypes\";\nimport baseUrl from \"../config/config\";\nimport axios from \"axios\";\nexport const addFicheMedical = (data, file) => {\n  return (dispatch) => {\n    let apiEndpoint = `/suivi_medicals?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then((response) => {\n      console.log(\"Suivi saved object \", response.data);\n\n      if (response) {\n        var suiviObject = response.data;\n\n        if (file !== null) {\n          var formadata = new FormData();\n          const fileExtension = file.name.replace(/^.*\\./, \"\");\n          const fileName =\n            \"fiche_medical_\" + suiviObject.id + \".\" + fileExtension;\n          var object = {};\n          object.file = file;\n          object.fileName = fileName;\n\n          dispatch(uploadCourseMedia(object, suiviObject));\n        } else {\n        }\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n\n// export const addFicheMedical = (data, file) => {\n//   return (dispatch) => {\n//     let apiEndpoint = `/suivi_medicals?access_token=${localStorage.token}`;\n//     classService.post(apiEndpoint, data).then((response) => {\n//       if (response) {\n//         var suiviObject = response.data;\n\n//         if (file !== null) {\n//           axios\n//             .get(\n//               `${baseUrl.baseUrl}/establishments/` +\n//                 data.establishment_id +\n//                 `?access_token=${localStorage.token}`\n//             )\n//             .then((res) => {\n//               var establishmentName = res.data.name;\n//               let arrayItemCourseFiles = [];\n//               var formadata = new FormData();\n//               const fileExtension = file.name.replace(/^.*\\./, \"\");\n//               const fileName =\n//                 \"fiche_medical_\" + suiviObject.id + \".\" + fileExtension;\n\n//               var object = {};\n//               object.file = file;\n//               object.fileName = fileName;\n//               object.establishmentName = establishmentName;\n\n//               axios\n//                 .patch(\n//                   `${baseUrl.baseUrl}/suivi_medicals/` +\n//                     suiviObject.id +\n//                     `?access_token=${localStorage.token}`,\n//                   {\n//                     files: fileName,\n//                   }\n//                 )\n//                 .then((response) => {\n//                   object.suiviObject = response.data;\n\n//                   dispatch(uploadCourseMedia(object));\n//                 })\n//                 .catch(function(error) {\n//                   console.log(\"error\", error);\n//                 });\n//             });\n//         } else {\n//         }\n//       } else {\n//         dispatch({\n//           type: SHOW_ERROR_MESSAGE,\n//           payload:\n//             \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n//         });\n//         setTimeout(() => {\n//           dispatch({ type: HIDE_ERROR_MESSAGE });\n//         }, 4000);\n//       }\n//     });\n//   };\n// };\n\nexport function uploadCourseMedia(ObjetFile, ObjetSuiviMedical) {\n  const fileName = ObjetFile.fileName;\n  const myNewFile = new File([ObjetFile.file], fileName, {\n    type: ObjetFile.file.type,\n  });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function(dispatch) {\n    const establishLogoUrl = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata,\n    })\n      .then((response) => {\n        axios\n          .patch(\n            `${baseUrl.baseUrl}/suivi_medicals/` +\n              ObjetSuiviMedical.id +\n              `?access_token=${localStorage.token}`,\n            {\n              files:\n                response.data.result.files.image[0].providerResponse.location,\n            }\n          )\n          .then((response) => {\n            console.log(\"updateddddddddddd \", response.data);\n            // dispatch(uploadCourseMedia(object));\n          })\n          .catch(function(error) {\n            console.log(\"error\", error);\n          });\n\n        // dispatch({ type: ADD_HEALTH, payload: data.suiviObject });\n        // dispatch({\n        //   type: SHOW_SUCCESS_MESSAGE,\n        //   payload: \"La création est effectuée avec succès\",\n        // });\n        // setTimeout(() => {\n        //   dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        // }, 4000);\n      })\n      .catch((err) => {});\n  };\n}\n\n// export function uploadCourseMedia(data) {\n//   const fileName = data.fileName;\n//   const myNewFile = new File([data.file], fileName, { type: data.file.type });\n//   let formadata = new FormData();\n//   formadata.append(\"image\", myNewFile);\n//   return function(dispatch) {\n//     const establishLogoUrl =\n//       `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n//     axios({\n//       url: establishLogoUrl,\n//       method: \"POST\",\n//       data: formadata,\n//     })\n//       .then((response) => {\n//         console.log('resssssssssssss ',response)\n//         dispatch({ type: ADD_HEALTH, payload: data.suiviObject });\n//         dispatch({\n//           type: SHOW_SUCCESS_MESSAGE,\n//           payload: \"La création est effectuée avec succès\",\n//         });\n//         setTimeout(() => {\n//           dispatch({ type: HIDE_SUCCESS_MESSAGE });\n//         }, 4000);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n// }\n\nexport const getFicheMedical = () => {\n  return (dispatch) => {\n    let apiEndpoint = `/suivi_medicals?access_token=${localStorage.token}`;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        const list = response.data;\n        const ficheList = list.filter((element) => element.status);\n        dispatch({ type: FETECHED_ALL_HEALTH, payload: ficheList });\n      })\n      .catch((err) => {});\n  };\n};\n\nexport const getFicheMedicalByEstablishmentId = (establishmentId) => {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/suivi_medicals?access_token=${localStorage.token}&filter[where][establishment_id]=` +\n      establishmentId;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        const list = response.data;\n        const ficheList = list.filter((element) => element.status);\n\n        dispatch({ type: FETECHED_ALL_HEALTH, payload: ficheList });\n      })\n      .catch((err) => {});\n  };\n};\n\nexport function deleteFicheMedical(itemId) {\n  return (dispatch) => {\n    axios\n      .patch(\n        `${baseUrl.baseUrl}/suivi_medicals/` +\n          itemId +\n          `?access_token=${localStorage.token}`,\n        {\n          status: false,\n        }\n      )\n      .then((response) => {\n        dispatch({ type: DELETE_HEALTH, payload: response.data });\n      })\n      .catch(function(error) {});\n  };\n}\n\nexport function editFicheMedical(data, file) {\n  return (dispatch) => {\n    if (file !== null) {\n      if (data.files == \"1.png\") {\n        axios\n          .get(\n            `${baseUrl.baseUrl}/establishments/` +\n              data.establishment_id +\n              `?access_token=${localStorage.token}`\n          )\n          .then((res) => {\n            var establishmentName = res.data.name;\n            const fileExtension = file.name.replace(/^.*\\./, \"\");\n            const fileName = \"fiche_medical_\" + data.id + \".\" + fileExtension;\n\n            var object = {};\n            object.file = file;\n            object.fileName = fileName;\n            object.establishmentName = establishmentName;\n            data.files = fileName;\n\n            axios\n              .put(\n                `${baseUrl.baseUrl}/suivi_medicals/` +\n                  data.id +\n                  `?access_token=${localStorage.token}`,\n                {\n                  establishment_id: data.establishment_id,\n                  student_id: data.student_id,\n                  class_id: data.class_id,\n                  nom_doctor: data.nom_doctor,\n                  prenom_doctor: this.state.prenom_doctor,\n                  phone_doctor: data.phone_doctor,\n                  blood_type: data.blood_type,\n                  poids: data.poids,\n                  hauteur: data.hauteur,\n                  problems: data.problems,\n                  remarque: data.remarque,\n                  files: fileName,\n                  status: true,\n                  mail_doctor: data.mail_doctor,\n                  id: data.id,\n                }\n              )\n              .then((response) => {\n                object.suiviObject = response.data;\n                dispatch(uploadCourseMediaedit(object));\n              })\n              .catch(function(error) {});\n          });\n      } else {\n        axios\n          .get(\n            `${baseUrl.baseUrl}/establishments/` +\n              data.establishment_id +\n              `?access_token=${localStorage.token}`\n          )\n          .then((res) => {\n            var establishmentName = res.data.name;\n            let formadata = new FormData();\n            formadata.append(\"image\", file);\n            const establishLogoUrl =\n              `${baseUrl.baseUrl}/containers/` +\n              establishmentName +\n              `/files/` +\n              data.files +\n              `?access_token=${localStorage.token}`;\n            axios({\n              url: establishLogoUrl,\n              method: \"DELETE\",\n              data: formadata,\n            }).then((response) => {\n              const fileExtension = file.name.replace(/^.*\\./, \"\");\n              const fileName = \"fiche_medical_\" + data.id + \".\" + fileExtension;\n\n              var object = {};\n              object.file = file;\n              object.fileName = fileName;\n              object.establishmentName = establishmentName;\n              data.files = fileName;\n\n              axios\n                .put(\n                  `${baseUrl.baseUrl}/suivi_medicals/` +\n                    data.id +\n                    `?access_token=${localStorage.token}`,\n                  {\n                    establishment_id: data.establishment_id,\n                    student_id: data.student_id,\n                    class_id: data.class_id,\n                    nom_doctor: data.nom_doctor,\n                    prenom_doctor: data.prenom_doctor,\n                    phone_doctor: data.phone_doctor,\n                    blood_type: data.blood_type,\n                    poids: data.poids,\n                    hauteur: data.hauteur,\n                    problems: data.problems,\n                    remarque: data.remarque,\n                    files: fileName,\n                    status: true,\n                    mail_doctor: data.mail_doctor,\n                    id: data.id,\n                  }\n                )\n                .then((response) => {\n                  object.suiviObject = response.data;\n                  dispatch(uploadCourseMediaedit(object));\n                })\n                .catch(function(error) {});\n            });\n          });\n      }\n    } else {\n      axios\n        .put(\n          `${baseUrl.baseUrl}/suivi_medicals/` +\n            data.id +\n            `?access_token=${localStorage.token}`,\n          {\n            establishment_id: data.establishment_id,\n            student_id: data.student_id,\n            class_id: data.class_id,\n            nom_doctor: data.nom_doctor,\n            prenom_doctor: data.prenom_doctor,\n            phone_doctor: data.phone_doctor,\n            blood_type: data.blood_type,\n            poids: data.poids,\n            hauteur: data.hauteur,\n            problems: data.problems,\n            remarque: data.remarque,\n            files: data.files,\n            status: true,\n            mail_doctor: data.mail_doctor,\n            id: data.id,\n          }\n        )\n        .then((response) => {\n          dispatch({ type: EDIT_HEALTH, payload: response.data });\n          dispatch({\n            type: SHOW_SUCCESS_MESSAGE,\n            payload: \"La modification est effectuée avec succès\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_SUCCESS_MESSAGE });\n          }, 4000);\n        })\n        .catch(function(error) {});\n    }\n  };\n}\n\nexport function uploadCourseMediaedit(data) {\n  const fileName = data.fileName;\n  const myNewFile = new File([data.file], fileName, { type: data.file.type });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function(dispatch) {\n    const establishLogoUrl =\n      `${baseUrl.baseUrl}/containers/` +\n      data.establishmentName +\n      `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata,\n    })\n      .then((response) => {\n        dispatch({ type: EDIT_HEALTH, payload: data.suiviObject });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectuée avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      })\n      .catch((err) => {});\n  };\n}\n\nexport function getBlodType(idBlood) {\n  var blood_group = [\n    {\n      id: 1,\n      type: \"A+\",\n    },\n    {\n      id: 2,\n      type: \"A-\",\n    },\n    {\n      id: 3,\n      type: \"B+\",\n    },\n    {\n      id: 4,\n      type: \"B-\",\n    },\n    {\n      id: 5,\n      type: \"AB+\",\n    },\n    {\n      id: 6,\n      type: \"AB-\",\n    },\n    {\n      id: 7,\n      type: \"O+\",\n    },\n    {\n      id: 8,\n      type: \"O-\",\n    },\n  ];\n  var bloodType = blood_group.filter((element) => element.id === idBlood);\n  return bloodType[0].type;\n}\n\nexport const serviceAction = {\n  addFicheMedical,\n  getFicheMedical,\n  deleteFicheMedical,\n  getBlodType,\n  getFicheMedicalByEstablishmentId,\n};\n"]},"metadata":{},"sourceType":"module"}