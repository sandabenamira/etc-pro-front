{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/LevelTest/Tests/PassLevelTtest.js\";\nimport React from \"react\";\nimport Auxiliary from \"../../../../util/Auxiliary\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport CardBox from \"../../../../components/CardBox/index\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { addTestStudent } from \"../../../../actions/levelTestAction\";\nimport ScoreLevelTest from \"./ScoreLevelTest\";\n\nclass PassLevelTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      let score = 0;\n      let totalCorrectAnswer = this.state.answers.reduce((accumulateur, item) => {\n        return item.status ? accumulateur + 1 : accumulateur;\n      }, 0);\n      let totalQuestion = this.props.listQuestion.length;\n      score = totalCorrectAnswer / totalQuestion * 100;\n      const id_test = this.props.test.id;\n      const passed_date = new Date();\n      const id_profile_student = this.props.userProfile.id;\n      const passed = true;\n      const studentTest = {\n        id_test,\n        passed_date,\n        id_profile_student,\n        passed,\n        score\n      };\n      this.props.addTestStudent(studentTest, totalCorrectAnswer, totalQuestion);\n      this.props.closePassTestModal();\n      this.setState({\n        openModalScore: true\n      });\n    };\n\n    this.handleChangeRadio = (idQuest, idChoix) => event => {\n      let value = JSON.parse(event.target.value);\n      let answers = this.state.answers;\n\n      let index = _.findIndex(answers, {\n        idQuestion: idQuest\n      });\n\n      if (index < 0) {\n        answers.push({\n          idQuestion: idQuest,\n          idChoice: idChoix,\n          status: value.propasal_status\n        });\n      } else {\n        _.fill(answers, { ...answers[index],\n          idChoice: idChoix,\n          status: value.propasal_status\n        }, index, index + 1);\n      }\n\n      this.setState({\n        answers\n      });\n    };\n\n    this.state = {\n      answers: [],\n      test_duration: 0,\n      lastFive: false,\n      openModalScore: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeRadio = this.handleChangeRadio.bind(this);\n    this.tickTock = this.tickTock.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.props.test);\n    this.timerId = setInterval(() => this.tickTock(), 1000);\n    this.setState({\n      test_duration: this.props.test.test_duration * 60\n    });\n  }\n\n  tickTock() {\n    this.setState(prevState => ({\n      test_duration: prevState.test_duration - 1\n    }), () => {\n      if (this.state.test_duration === 0) {\n        //TODO Add parent function + submit\n        this.handleSubmit();\n      }\n\n      if (this.state.test_duration === 300) {\n        this.setState({\n          lastFive: true\n        });\n      }\n    });\n  }\n\n  render() {\n    let test = this.props.test;\n    let listQuestion = this.props.listQuestion; // console.log(\"====================================\");\n    // console.log(this.state.openModalScore, \"this.state.openModalScore\");\n    // console.log(\"====================================\");\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.props.openModalPass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.props.closePassTestModal,\n      className: \"modal-box-header bg-primary text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      alignItems: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, test.test_name), /*#__PURE__*/React.createElement(\"div\", {\n      alignItems: \"right\",\n      style: this.state.lastFive ? {\n        color: \"#eb4934\"\n      } : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, \"Time left :\", moment.unix(this.state.test_duration).format(\"mm:ss\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12 text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, test.test_desc, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }), listQuestion.map((element, index) => {\n      let answerChoices = this.state.answers.filter(item => item.idQuestion == element.test_questions.id);\n      let answerId = 0;\n      let answerItem = \"\";\n\n      if (answerChoices.length > 0) {\n        answerId = answerChoices[0].idChoice;\n        answerItem = _.find(element.test_questions.question_proposals, {\n          id: answerId\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        style: ({\n          color: \"black\"\n        }, {\n          paddingTop: \"5%\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 27\n        }\n      }, \"Question \", index + 1, \" :\", /*#__PURE__*/React.createElement(\"div\", {\n        style: ({\n          color: \"black\"\n        }, {\n          padding: \"1em\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }\n      }, element.test_questions.question_desc), element.test_questions.question_proposals.map((choiceItem, i) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: ({\n            color: \"black\"\n          }, {\n            paddingLeft: \"5%\"\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex flex-row  col-md-12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(RadioGroup, {\n          \"aria-label\": \"anchorOriginVertical\",\n          name: \"anchorOriginVertical\",\n          value: JSON.stringify(answerItem),\n          onChange: this.handleChangeRadio(element.test_questions.id, choiceItem.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(FormControlLabel, {\n          value: JSON.stringify(choiceItem),\n          control: /*#__PURE__*/React.createElement(Radio, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 54\n            }\n          }),\n          style: {\n            marginTop: \"4%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 43\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-9\",\n          style: ({\n            color: \"black\"\n          }, {\n            paddingTop: \"2.2%\"\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 41\n          }\n        }, choiceItem.proposal))));\n      }));\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 text-left \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"jr-btn bg-indigo text-white \",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"level.test.button.confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 22\n      }\n    }))))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    settings: state.settings.locale\n  };\n}\n\nexport default connect(mapStateToProps, {\n  addTestStudent\n})(PassLevelTest);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/LevelTest/Tests/PassLevelTtest.js"],"names":["React","Auxiliary","Modal","ModalBody","ModalHeader","connect","IntlMessages","CardBox","MenuItem","TextField","Button","RadioGroup","Radio","FormControlLabel","Checkbox","_","moment","addTestStudent","ScoreLevelTest","PassLevelTest","Component","constructor","props","handleSubmit","score","totalCorrectAnswer","state","answers","reduce","accumulateur","item","status","totalQuestion","listQuestion","length","id_test","test","id","passed_date","Date","id_profile_student","userProfile","passed","studentTest","closePassTestModal","setState","openModalScore","handleChangeRadio","idQuest","idChoix","event","value","JSON","parse","target","index","findIndex","idQuestion","push","idChoice","propasal_status","fill","test_duration","lastFive","bind","tickTock","componentDidMount","console","log","timerId","setInterval","prevState","render","openModalPass","test_name","color","unix","format","test_desc","map","element","answerChoices","filter","test_questions","answerId","answerItem","find","question_proposals","paddingTop","padding","question_desc","choiceItem","i","paddingLeft","stringify","marginTop","proposal","mapStateToProps","auth","settings","locale"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Auxiliary from \"../../../../util/Auxiliary\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport CardBox from \"../../../../components/CardBox/index\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { addTestStudent } from \"../../../../actions/levelTestAction\";\nimport ScoreLevelTest from \"./ScoreLevelTest\";\n\nclass PassLevelTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: [],\n      test_duration: 0,\n      lastFive: false,\n      openModalScore: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeRadio = this.handleChangeRadio.bind(this);\n    this.tickTock = this.tickTock.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.props.test);\n    this.timerId = setInterval(() => this.tickTock(), 1000);\n    this.setState({ test_duration: this.props.test.test_duration * 60 });\n  }\n  tickTock() {\n    this.setState(\n      (prevState) => ({\n        test_duration: prevState.test_duration - 1,\n      }),\n      () => {\n        if (this.state.test_duration === 0) {\n          //TODO Add parent function + submit\n          this.handleSubmit();\n        }\n        if (this.state.test_duration === 300) {\n          this.setState({ lastFive: true });\n        }\n      }\n    );\n  }\n  handleSubmit = () => {\n    let score = 0;\n\n    let totalCorrectAnswer = this.state.answers.reduce((accumulateur, item) => {\n      return item.status ? accumulateur + 1 : accumulateur;\n    }, 0);\n    let totalQuestion = this.props.listQuestion.length;\n    score = (totalCorrectAnswer / totalQuestion) * 100;\n\n    const id_test = this.props.test.id;\n    const passed_date = new Date();\n    const id_profile_student = this.props.userProfile.id;\n    const passed = true;\n    const studentTest = {\n      id_test,\n      passed_date,\n      id_profile_student,\n      passed,\n      score,\n    };\n    this.props.addTestStudent(studentTest, totalCorrectAnswer, totalQuestion);\n    this.props.closePassTestModal();\n    this.setState({\n      openModalScore: true,\n    });\n  };\n  handleChangeRadio = (idQuest, idChoix) => (event) => {\n    let value = JSON.parse(event.target.value);\n\n    let answers = this.state.answers;\n    let index = _.findIndex(answers, { idQuestion: idQuest });\n\n    if (index < 0) {\n      answers.push({\n        idQuestion: idQuest,\n        idChoice: idChoix,\n        status: value.propasal_status,\n      });\n    } else {\n      _.fill(\n        answers,\n        {\n          ...answers[index],\n          idChoice: idChoix,\n          status: value.propasal_status,\n        },\n        index,\n        index + 1\n      );\n    }\n\n    this.setState({\n      answers,\n    });\n  };\n\n  render() {\n    let test = this.props.test;\n    let listQuestion = this.props.listQuestion;\n    // console.log(\"====================================\");\n    // console.log(this.state.openModalScore, \"this.state.openModalScore\");\n    // console.log(\"====================================\");\n    return (\n      <>\n        <Auxiliary>\n          <Modal isOpen={this.props.openModalPass}>\n            <ModalHeader\n              toggle={this.props.closePassTestModal}\n              className=\"modal-box-header bg-primary text-white\"\n            >\n              {/* <IntlMessages id=\"level.test.name\" /> {test.test_name} */}\n              <div alignItems=\"left\">{test.test_name}</div>\n\n              <div\n                alignItems=\"right\"\n                style={this.state.lastFive ? { color: \"#eb4934\" } : {}}\n              >\n                Time left :\n                {moment.unix(this.state.test_duration).format(\"mm:ss\")}\n              </div>\n            </ModalHeader>\n            <br />\n            <ModalBody>\n              <form autoComplete=\"off\">\n                <div className=\"row\">\n                  <CardBox styleName=\"col-lg-12 text-primary\">\n                    <>\n                      {test.test_desc}\n                      <br />\n                      {listQuestion.map((element, index) => {\n                        let answerChoices = this.state.answers.filter(\n                          (item) => item.idQuestion == element.test_questions.id\n                        );\n\n                        let answerId = 0;\n                        let answerItem = \"\";\n                        if (answerChoices.length > 0) {\n                          answerId = answerChoices[0].idChoice;\n                          answerItem = _.find(\n                            element.test_questions.question_proposals,\n                            {\n                              id: answerId,\n                            }\n                          );\n                        }\n\n                        return (\n                          <div\n                            key={index}\n                            style={({ color: \"black\" }, { paddingTop: \"5%\" })}\n                          >\n                            Question {index + 1} :\n                            <div\n                              style={({ color: \"black\" }, { padding: \"1em\" })}\n                            >\n                              {element.test_questions.question_desc}\n                            </div>\n                            {element.test_questions.question_proposals.map(\n                              (choiceItem, i) => {\n                                return (\n                                  <div key={i}>\n                                    <div\n                                      style={\n                                        ({ color: \"black\" },\n                                        { paddingLeft: \"5%\" })\n                                      }\n                                    >\n                                      <div className=\"d-flex flex-row  col-md-12\">\n                                        <RadioGroup\n                                          aria-label=\"anchorOriginVertical\"\n                                          name=\"anchorOriginVertical\"\n                                          value={JSON.stringify(answerItem)}\n                                          onChange={this.handleChangeRadio(\n                                            element.test_questions.id,\n                                            choiceItem.id\n                                          )}\n                                        >\n                                          <FormControlLabel\n                                            value={JSON.stringify(choiceItem)}\n                                            control={<Radio />}\n                                            style={{\n                                              marginTop: \"4%\",\n                                            }}\n                                          />\n                                        </RadioGroup>\n                                        <div\n                                          className=\"col-md-9\"\n                                          style={\n                                            ({ color: \"black\" },\n                                            { paddingTop: \"2.2%\" })\n                                          }\n                                        >\n                                          {choiceItem.proposal}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                );\n                              }\n                            )}\n                          </div>\n                        );\n                      })}\n                    </>\n                  </CardBox>\n                </div>\n                <div className=\"col-md-12 text-left \">\n                  <br />\n                  <br />\n                  <Button\n                    variant=\"contained\"\n                    className=\"jr-btn bg-indigo text-white \"\n                    onClick={this.handleSubmit}\n                  >\n                    {<IntlMessages id=\"level.test.button.confirm\" />}\n                  </Button>\n                </div>\n              </form>\n            </ModalBody>\n          </Modal>\n        </Auxiliary>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    settings: state.settings.locale,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addTestStudent }\n)(PassLevelTest);\n"]},"metadata":{},"sourceType":"module"}