{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js\";\nimport React from 'react';\nimport IconWithTextCard from '../../../CommonComponents/IconWithTextCard';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport HomeworkInProgress from './HomeworkInProgress';\nimport CardBox from '../../../../../components/CardBox/index';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport RemoveSharpIcon from '@material-ui/icons/RemoveSharp';\nimport { connect } from 'react-redux';\nimport AddHomework from './AddHomework';\nimport { UncontrolledAlert } from 'reactstrap';\nimport { classService } from '../../../../../_services/class.service';\nimport HomeworkList from './HomeworkList';\nimport _ from 'lodash';\nimport { addNewHomework, getHomework } from '../../../../../actions/HomeworkAction';\nimport ArchivedHomework from './ArchivedHomework';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { roleIdAdmin, roleIdProfessor } from '../../../../../config/config';\n\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeClassList = selectedOption => {\n      if (selectedOption != null) {\n        let classesId = _.map(selectedOption, 'id');\n\n        this.setState({\n          classesId,\n          isEmptylistClass: false,\n          classesData: selectedOption\n        });\n      } else {\n        this.setState({\n          classesId: []\n        });\n      }\n    };\n\n    this.handleChangeDate = name => date => {\n      this.setState({\n        [name]: date\n      });\n\n      if (name === 'publicationDate') {\n        this.setState({\n          renderingDate: date,\n          correctionDate: date\n        });\n      } else if (name === 'renderingDate') {\n        this.setState({\n          correctionDate: date\n        });\n      }\n    };\n\n    this.handleChangePostTime = time => {\n      this.setState({\n        postTime: time._d\n      });\n    };\n\n    this.handleChangeSubject = selectedOption => {\n      this.setState({\n        subjectId: selectedOption.id,\n        subjectColor: selectedOption.color,\n        subjectName: selectedOption.label,\n        errorClass: false\n      });\n\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include]=class&filter[include]=course`;\n        classService.get(apiEndpoint).then(response => {\n          if (response) {\n            let classesSubjects = response.data.filter(element => element.status);\n            console.log(classesSubjects, 'classesSubjects'); // let newList = classesSubjects.map((element) => {\n            //   let object = {};\n            //   if (!_.isEmpty(element.course)) {\n            //     object.label = element.class.name;\n            //     object.id = element.course[0].id;\n            //     object.value = element.course[0].id;\n            //     return object;\n            //   } else {\n            //     return object;\n            //   }\n            // });\n\n            let newList = [];\n            classesSubjects.map(element => {\n              let object = {};\n\n              if (!_.isEmpty(element.course)) {\n                object.label = element.class.name;\n                object.id = element.course[0].id;\n                object.value = element.course[0].id;\n                newList.push(object);\n              }\n            });\n            this.setState({\n              classes: newList\n            });\n          }\n        });\n      } else {\n        let apiEndpoint = `/assignment_class_subjects/${selectedOption.value}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n        classService.get(apiEndpoint).then(response => {\n          if (response) {\n            let element = response.data;\n\n            if (element.status) {\n              let object = {};\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n              this.setState({\n                classes: [object]\n              });\n            }\n          }\n        });\n      }\n    };\n\n    this.handleChangeHomeworkType = selectedOption => {\n      this.setState({\n        homeworkType: selectedOption.value\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      isOpenAddModal: false,\n      openArchive: false,\n      nameFile: '',\n      HomeworkTypes: [{\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.book.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 18\n          }\n        }),\n        value: 'book',\n        id: 1\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.series.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 18\n          }\n        }),\n        value: 'serie',\n        id: 2\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.other.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 18\n          }\n        }),\n        value: 'other',\n        id: 3\n      }],\n      homeworkType: '',\n      subjectId: null,\n      subjectColor: '',\n      description: '',\n      courseUrl: '',\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: '',\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.addNewHomework = this.addNewHomework.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.openArchive = this.openArchive.bind(this);\n  }\n\n  cancelModal() {\n    this.setState({\n      isOpenAddModal: false,\n      nameFile: '',\n      homeworkType: '',\n      subjectId: null,\n      subjectColor: '',\n      description: '',\n      courseUrl: '',\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      eventChecked: '',\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: ''\n    });\n  }\n\n  addNewHomework(e) {\n    e.preventDefault();\n\n    if (this.state.subjectId === null) {\n      this.setState({\n        errorClass: true\n      });\n    } else if (_.isEmpty(this.state.classesId)) {\n      this.setState({\n        isEmptylistClass: true\n      });\n    } else {\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType = this.state.homeworkType;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      dataHomework.correctionDate = this.state.correctionDate;\n      dataHomework.renderingDate = this.state.renderingDate;\n      dataHomework.subjectName = this.state.subjectName;\n      this.props.dispatch(addNewHomework(dataHomework, this.state.homeworkFiles, this.state.classesData));\n      this.cancelModal();\n    }\n  }\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter(element => element != filename);\n    let homeworkFiles = this.state.homeworkFiles.filter(element => element.name != filename);\n    this.setState({\n      nameFiles,\n      homeworkFiles\n    });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map(element => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({\n        homeworkFiles: oldFiles,\n        nameFiles\n      });\n    } else {\n      this.setState({\n        messageAlerte: 'Vous avez dÃ©passer 5 fichiers',\n        alerteStatus: true\n      });\n      setTimeout(() => {\n        this.setState({\n          messageAlerte: '',\n          alerteStatus: false\n        });\n      }, 4000);\n    }\n  }\n\n  openAddModal() {\n    this.setState({\n      isOpenAddModal: !this.state.isOpenAddModal\n    });\n  }\n\n  openArchive() {\n    this.setState(previousState => ({\n      openArchive: !previousState.openArchive\n    }));\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({\n        subjects\n      });\n    } else if (this.props.userProfile.role_id === roleIdProfessor) {\n      const professorId = this.props.userProfile.user.profiles[0].professors[0].id;\n      let apiEndpoint = `/course_v4?access_token=${localStorage.token}&filter[where][fk_id_professor]=${professorId}&filter[include][assignmentClassSubject]=subject&filter[include][assignmentClassSubject]=class`;\n      classService.get(apiEndpoint).then(response => {\n        if (response) {\n          let subjects = [];\n          response.data.map(element => {\n            let object = {};\n            object.label = element.assignmentClassSubject.subject.name;\n            object.id = element.assignmentClassSubject.subject.id;\n            object.value = element.assignmentClassSubject.id;\n            subjects.push(object);\n          });\n          this.setState({\n            subjects\n          });\n        }\n      });\n    }\n\n    this.props.dispatch(getHomework(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id, this.props.userProfile.id, this.props.userProfile.role_id));\n  }\n\n  componentDidUpdate(previouProps) {\n    if (previouProps.subjects !== this.props.subjects) {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        let subjects = createListSubject(this.props.subjects);\n        this.setState({\n          subjects\n        });\n      }\n    }\n  }\n\n  render() {\n    let detailCards = [{\n      cardColor: 'primary',\n      imageIcon: require('../../../../../assets/images/dashboard/teams-icon.png'),\n      // title: this.props.virtualClasses.length,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `message.Numbers.of.students`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: 'secondary',\n      imageIcon: require('../../../../../assets/images/dashboard/tasks-icon.png'),\n      // title: this.state.prog,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.file`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: 'info',\n      imageIcon: require('../../../../../assets/images/dashboard/project-icon.png'),\n      // title: this.state.encours,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.uncorrected`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: 'success',\n      imageIcon: require('../../../../../assets/images/dashboard/files-icon.png'),\n      // title: this.state.encours,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.educational.files`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 19\n        }\n      })\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper col-lg-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md- col-sm-12  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }\n    }, detailCards.map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconWithTextCard, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }\n    }, this.state.alerteStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }\n    }, \" \", this.state.messageAlerte, \" \")), this.props.errorStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger   text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \")), this.props.successStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-auto \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(HomeworkInProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      size: \"small\",\n      color: \"secondary\",\n      \"aria-label\": \"Add\",\n      onClick: this.openAddModal.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }\n    }, this.state.isOpenAddModal ? /*#__PURE__*/React.createElement(RemoveSharpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 52\n      }\n    }) : /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 74\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2\",\n      style: {\n        fontFamily: 'Roboto',\n        fontSize: '17px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"modal.addToDo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-5 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      size: \"small\",\n      \"aria-label\": \"Add\",\n      style: {\n        backgroundColor: '#ffbb33',\n        color: '#ffffff'\n      },\n      onClick: this.openArchive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2\",\n      style: {\n        fontFamily: 'Roboto',\n        fontSize: '17px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"icon.archives\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 21\n      }\n    })))), this.state.isOpenAddModal && /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AddHomework, {\n      values: this.state,\n      handleChange: this.handleChange,\n      handleChangeHomeworkType: this.handleChangeHomeworkType,\n      subjects: this.state.subjects,\n      handleChangeSubject: this.handleChangeSubject,\n      attachFile: this.attachFile,\n      deleteFile: this.deleteFile,\n      handleChangePostTime: this.handleChangePostTime,\n      handleChangeDate: this.handleChangeDate,\n      handleChangeClassList: this.handleChangeClassList,\n      addNewHomework: this.addNewHomework,\n      cancelModal: this.cancelModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"add-service\",\n      yes: () => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-wrap flex-row bd-highlight mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"idClasse\",\n        name: \"idClasse\",\n        select: true // value={this.state.filterClassId}\n        // onChange={this.handleChangeFilter('filterClassId')}\n        ,\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.note.class`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 36\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 25\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"idClasse\",\n        name: \"idClasse\",\n        select: true // value={this.state.filterClassId}\n        // onChange={this.handleChangeFilter('filterClassId')}\n        ,\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.todo.etat`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 36\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 25\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"idClasse\",\n        name: \"idClasse\",\n        select: true // value={this.state.filterClassId}\n        // onChange={this.handleChangeFilter('filterClassId')}\n        ,\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.todo.type`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 36\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 25\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5  bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.todo.date`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 27\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"add-service\",\n      yes: () => /*#__PURE__*/React.createElement(React.Fragment, null, this.state.openArchive ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArchivedHomework, {\n        homeworks: this.props.archivedHomework,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 29\n        }\n      })) : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 19\n      }\n    })), !this.state.openArchive ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HomeworkList, {\n      homeworks: this.props.homeworks,\n      subjects: this.state.subjects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 19\n      }\n    })) : ''))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    subjects: state.subject.subjects,\n    homeworks: state.HomeworkReducer.homeworks,\n    archivedHomework: state.HomeworkReducer.archivedHomework\n  };\n};\n\nexport default connect(mapStateToProps)(Homework);\n\nfunction createListSubject(subjects) {\n  let newList = subjects.map(element => {\n    let object = {};\n    object.label = element.name;\n    object.id = element.id;\n    object.value = element.id;\n    object.color = element.color;\n    return object;\n  });\n  return newList;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js"],"names":["React","IconWithTextCard","IntlMessages","HomeworkInProgress","CardBox","AddIcon","Fab","DeleteOutlineIcon","RemoveSharpIcon","connect","AddHomework","UncontrolledAlert","classService","HomeworkList","_","addNewHomework","getHomework","ArchivedHomework","Can","RoleContext","TextField","moment","roleIdAdmin","roleIdProfessor","Homework","Component","constructor","props","handleChangeClassList","selectedOption","classesId","map","setState","isEmptylistClass","classesData","handleChangeDate","name","date","renderingDate","correctionDate","handleChangePostTime","time","postTime","_d","handleChangeSubject","subjectId","id","subjectColor","color","subjectName","label","errorClass","userProfile","role_id","apiEndpoint","localStorage","token","value","get","then","response","classesSubjects","data","filter","element","status","console","log","newList","object","isEmpty","course","class","push","classes","handleChangeHomeworkType","homeworkType","handleChange","event","target","state","isOpenAddModal","openArchive","nameFile","HomeworkTypes","description","courseUrl","homeworkFiles","nameFiles","publicationDate","Date","subjects","eventChecked","bind","attachFile","deleteFile","cancelModal","e","preventDefault","dataHomework","title","publicationTime","dispatch","filename","oldFiles","files","Object","values","undefined","length","messageAlerte","alerteStatus","setTimeout","openAddModal","previousState","UNSAFE_componentWillMount","createListSubject","professorId","user","profiles","professors","assignmentClassSubject","subject","establishment_id","school_year_id","componentDidUpdate","previouProps","render","detailCards","cardColor","imageIcon","require","subTitle","index","errorStatus","message","successStatus","fontFamily","fontSize","backgroundColor","role","disableUnderline","archivedHomework","homeworks","mapStateToProps","auth","alert","success","error","HomeworkReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IconWithTextCard from '../../../CommonComponents/IconWithTextCard';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport HomeworkInProgress from './HomeworkInProgress';\nimport CardBox from '../../../../../components/CardBox/index';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport RemoveSharpIcon from '@material-ui/icons/RemoveSharp';\nimport { connect } from 'react-redux';\nimport AddHomework from './AddHomework';\nimport { UncontrolledAlert } from 'reactstrap';\nimport { classService } from '../../../../../_services/class.service';\nimport HomeworkList from './HomeworkList';\nimport _ from 'lodash';\nimport { addNewHomework, getHomework } from '../../../../../actions/HomeworkAction';\nimport ArchivedHomework from './ArchivedHomework';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { roleIdAdmin, roleIdProfessor } from '../../../../../config/config';\n\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenAddModal: false,\n      openArchive: false,\n      nameFile: '',\n      HomeworkTypes: [\n        {\n          label: <IntlMessages id=\"toDo.book.exercise\" />,\n          value: 'book',\n          id: 1,\n        },\n        {\n          label: <IntlMessages id=\"toDo.series.exercise\" />,\n          value: 'serie',\n          id: 2,\n        },\n        {\n          label: <IntlMessages id=\"toDo.other.exercise\" />,\n          value: 'other',\n          id: 3,\n        },\n      ],\n      homeworkType: '',\n      subjectId: null,\n      subjectColor: '',\n      description: '',\n      courseUrl: '',\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: '',\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.addNewHomework = this.addNewHomework.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.openArchive = this.openArchive.bind(this);\n  }\n\n  cancelModal() {\n    this.setState({\n      isOpenAddModal: false,\n      nameFile: '',\n      homeworkType: '',\n      subjectId: null,\n      subjectColor: '',\n      description: '',\n      courseUrl: '',\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      eventChecked: '',\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: '',\n    });\n  }\n\n  addNewHomework(e) {\n    e.preventDefault();\n    if (this.state.subjectId === null) {\n      this.setState({ errorClass: true });\n    } else if (_.isEmpty(this.state.classesId)) {\n      this.setState({ isEmptylistClass: true });\n    } else {\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType = this.state.homeworkType;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      dataHomework.correctionDate = this.state.correctionDate;\n      dataHomework.renderingDate = this.state.renderingDate;\n      dataHomework.subjectName = this.state.subjectName;\n       this.props.dispatch(\n        addNewHomework(dataHomework, this.state.homeworkFiles, this.state.classesData)\n      );\n      this.cancelModal();\n    }\n  }\n\n  handleChangeClassList = (selectedOption) => {\n    if (selectedOption != null) {\n      let classesId = _.map(selectedOption, 'id');\n      this.setState({\n        classesId,\n        isEmptylistClass: false,\n        classesData: selectedOption,\n      });\n    } else {\n      this.setState({ classesId: [] });\n    }\n  };\n\n  handleChangeDate = (name) => (date) => {\n    this.setState({ [name]: date });\n     if (name === 'publicationDate') {\n      this.setState({ renderingDate: date, correctionDate: date });\n    } else if (name === 'renderingDate') {\n      this.setState({ correctionDate: date });\n    }\n  };\n\n  handleChangePostTime = (time) => {\n    this.setState({ postTime: time._d });\n  };\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter((element) => element != filename);\n\n    let homeworkFiles = this.state.homeworkFiles.filter((element) => element.name != filename);\n\n    this.setState({ nameFiles, homeworkFiles });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map((element) => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({ homeworkFiles: oldFiles, nameFiles });\n    } else {\n      this.setState({\n        messageAlerte: 'Vous avez dÃ©passer 5 fichiers',\n        alerteStatus: true,\n      });\n      setTimeout(() => {\n        this.setState({ messageAlerte: '', alerteStatus: false });\n      }, 4000);\n    }\n  }\n\n  handleChangeSubject = (selectedOption) => {\n    this.setState({\n      subjectId: selectedOption.id,\n      subjectColor: selectedOption.color,\n      subjectName: selectedOption.label,\n      errorClass: false,\n    });\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let classesSubjects = response.data.filter((element) => element.status);\n          console.log(classesSubjects, 'classesSubjects');\n          // let newList = classesSubjects.map((element) => {\n          //   let object = {};\n          //   if (!_.isEmpty(element.course)) {\n          //     object.label = element.class.name;\n          //     object.id = element.course[0].id;\n          //     object.value = element.course[0].id;\n\n          //     return object;\n          //   } else {\n          //     return object;\n          //   }\n          // });\n          let newList = [];\n          classesSubjects.map((element) => {\n            let object = {};\n            if (!_.isEmpty(element.course)) {\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n\n              newList.push(object);\n            }\n          });\n           this.setState({ classes: newList });\n        }\n      });\n    } else {\n      let apiEndpoint = `/assignment_class_subjects/${selectedOption.value}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let element = response.data;\n          if (element.status) {\n            let object = {};\n            object.label = element.class.name;\n            object.id = element.course[0].id;\n            object.value = element.course[0].id;\n            this.setState({ classes: [object] });\n          }\n        }\n      });\n    }\n  };\n\n  handleChangeHomeworkType = (selectedOption) => {\n    this.setState({ homeworkType: selectedOption.value });\n  };\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  openAddModal() {\n    this.setState({ isOpenAddModal: !this.state.isOpenAddModal });\n  }\n  openArchive() {\n    this.setState((previousState) => ({\n      openArchive: !previousState.openArchive,\n    }));\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({ subjects });\n    } else if(this.props.userProfile.role_id === roleIdProfessor) {\n      const professorId = this.props.userProfile.user.profiles[0].professors[0].id;\n      let apiEndpoint = `/course_v4?access_token=${localStorage.token}&filter[where][fk_id_professor]=${professorId}&filter[include][assignmentClassSubject]=subject&filter[include][assignmentClassSubject]=class`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let subjects = [];\n          response.data.map((element) => {\n            let object = {};\n            object.label = element.assignmentClassSubject.subject.name;\n            object.id = element.assignmentClassSubject.subject.id;\n            object.value = element.assignmentClassSubject.id;\n            subjects.push(object);\n          });\n          this.setState({ subjects });\n        }\n      });\n    }\n    this.props.dispatch(\n      getHomework(\n        this.props.userProfile.establishment_id,\n        this.props.userProfile.school_year_id,\n        this.props.userProfile.id,\n        this.props.userProfile.role_id\n      )\n    );\n  }\n  componentDidUpdate(previouProps) {\n    if (previouProps.subjects !== this.props.subjects) {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        let subjects = createListSubject(this.props.subjects);\n        this.setState({ subjects });\n      }\n    }\n  }\n\n  render() {\n    let detailCards = [\n      {\n        cardColor: 'primary',\n        imageIcon: require('../../../../../assets/images/dashboard/teams-icon.png'),\n\n        // title: this.props.virtualClasses.length,\n        subTitle: <IntlMessages id={`message.Numbers.of.students`} />,\n      },\n      {\n        cardColor: 'secondary',\n        imageIcon: require('../../../../../assets/images/dashboard/tasks-icon.png'),\n        // title: this.state.prog,\n        subTitle: <IntlMessages id={`homework.file`} />,\n      },\n      {\n        cardColor: 'info',\n        imageIcon: require('../../../../../assets/images/dashboard/project-icon.png'),\n        // title: this.state.encours,\n        subTitle: <IntlMessages id={`homework.uncorrected`} />,\n      },\n      {\n        cardColor: 'success',\n        imageIcon: require('../../../../../assets/images/dashboard/files-icon.png'),\n        // title: this.state.encours,\n        subTitle: <IntlMessages id={`homework.educational.files`} />,\n      },\n    ];\n    return (\n      <div className=\"app-wrapper col-lg-12 col-md-12\">\n        <div className=\"d-flex flex-column mb-3\">\n          <div className=\"row col-lg-12 col-md- col-sm-12  \">\n            {detailCards.map((data, index) => (\n              <div key={index} className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\">\n                <IconWithTextCard data={data} />\n              </div>\n            ))}\n          </div>\n          <div>\n            {this.state.alerteStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-danger bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.state.messageAlerte} </span>\n              </UncontrolledAlert>\n            )}\n\n            {this.props.errorStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-danger   text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            )}\n            {this.props.successStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            )}\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-md-auto \">\n              <CardBox styleName=\"row\">\n                <HomeworkInProgress />\n              </CardBox>\n            </div>\n\n            <div className=\"col \">\n              <CardBox styleName=\"col-lg-12 \">\n                <div className=\"row\">\n                  <div>\n                    <Fab\n                      size=\"small\"\n                      color=\"secondary\"\n                      aria-label=\"Add\"\n                      onClick={this.openAddModal.bind(this)}\n                    >\n                      {this.state.isOpenAddModal ? <RemoveSharpIcon /> : <AddIcon />}\n                    </Fab>\n                  </div>\n                  <div className=\"p-2\" style={{ fontFamily: 'Roboto', fontSize: '17px' }}>\n                    <IntlMessages id=\"modal.addToDo\" />\n                  </div>\n\n                  <div className=\"pl-5 \">\n                    <Fab\n                      size=\"small\"\n                      aria-label=\"Add\"\n                      style={{ backgroundColor: '#ffbb33', color: '#ffffff' }}\n                      onClick={this.openArchive}\n                    >\n                      <DeleteOutlineIcon />\n                    </Fab>\n                  </div>\n                  <div className=\"p-2\" style={{ fontFamily: 'Roboto', fontSize: '17px' }}>\n                    <IntlMessages id=\"icon.archives\" />\n                  </div>\n                </div>\n              </CardBox>\n\n              {this.state.isOpenAddModal && (\n                <CardBox styleName=\"col-lg-12\">\n                  <AddHomework\n                    values={this.state}\n                    handleChange={this.handleChange}\n                    handleChangeHomeworkType={this.handleChangeHomeworkType}\n                    subjects={this.state.subjects}\n                    handleChangeSubject={this.handleChangeSubject}\n                    attachFile={this.attachFile}\n                    deleteFile={this.deleteFile}\n                    handleChangePostTime={this.handleChangePostTime}\n                    handleChangeDate={this.handleChangeDate}\n                    handleChangeClassList={this.handleChangeClassList}\n                    addNewHomework={this.addNewHomework}\n                    cancelModal={this.cancelModal}\n                  />\n                </CardBox>\n              )}\n\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"add-service\"\n                    yes={() => (\n                      <div className=\"d-flex flex-wrap flex-row bd-highlight mb-3\">\n                        <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-5\">\n                          <TextField\n                            id=\"idClasse\"\n                            name=\"idClasse\"\n                            select\n                            // value={this.state.filterClassId}\n                            // onChange={this.handleChangeFilter('filterClassId')}\n                            SelectProps={{}}\n                            label={<IntlMessages id={`components.note.class`} />}\n                            InputProps={{ disableUnderline: true }}\n                            margin=\"normal\"\n                            fullWidth\n                          >\n                            {/* {this.state.filterClasses.length > 0 ? (\n                            this.state.filterClasses.map((option) => (\n                              <MenuItem key={option.id} value={option.id}>\n                                {option.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            <MenuItem key={0} value={0}>\n                              Pas de classe\n                            </MenuItem>\n                          )} */}\n                          </TextField>\n                        </div>\n                        <div className=\"pt-5 bd-highlight\">|</div>\n\n                        <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                          <TextField\n                            id=\"idClasse\"\n                            name=\"idClasse\"\n                            select\n                            // value={this.state.filterClassId}\n                            // onChange={this.handleChangeFilter('filterClassId')}\n                            SelectProps={{}}\n                            label={<IntlMessages id={`components.todo.etat`} />}\n                            InputProps={{ disableUnderline: true }}\n                            margin=\"normal\"\n                            fullWidth\n                          >\n                            {/* {this.state.filterClasses.length > 0 ? (\n                            this.state.filterClasses.map((option) => (\n                              <MenuItem key={option.id} value={option.id}>\n                                {option.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            <MenuItem key={0} value={0}>\n                              Pas de classe\n                            </MenuItem>\n                          )} */}\n                          </TextField>\n                        </div>\n                        <div className=\"pt-5 bd-highlight\">|</div>\n                        <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                          <TextField\n                            id=\"idClasse\"\n                            name=\"idClasse\"\n                            select\n                            // value={this.state.filterClassId}\n                            // onChange={this.handleChangeFilter('filterClassId')}\n                            SelectProps={{}}\n                            label={<IntlMessages id={`components.todo.type`} />}\n                            InputProps={{ disableUnderline: true }}\n                            margin=\"normal\"\n                            fullWidth\n                          >\n                            {/* {this.state.filterClasses.length > 0 ? (\n                            this.state.filterClasses.map((option) => (\n                              <MenuItem key={option.id} value={option.id}>\n                                {option.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            <MenuItem key={0} value={0}>\n                              Pas de classe\n                            </MenuItem>\n                          )} */}\n                          </TextField>\n                        </div>\n                        <div className=\"pt-5 bd-highlight\">|</div>\n                        <div className=\"pt-5  bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                          <IntlMessages id={`components.todo.date`} />\n                        </div>\n                      </div>\n                    )}\n                  />\n                )}\n              </RoleContext.Consumer>\n\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"add-service\"\n                    yes={() => (\n                      <>\n                        {this.state.openArchive ? (\n                          <div>\n                            <ArchivedHomework homeworks={this.props.archivedHomework} />\n                          </div>\n                        ) : (\n                          ''\n                        )}\n                      </>\n                    )}\n                  />\n                )}\n              </RoleContext.Consumer>\n\n              {!this.state.openArchive ? (\n                <div>\n                  <HomeworkList homeworks={this.props.homeworks} subjects={this.state.subjects} />\n                </div>\n              ) : (\n                ''\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    subjects: state.subject.subjects,\n    homeworks: state.HomeworkReducer.homeworks,\n    archivedHomework: state.HomeworkReducer.archivedHomework,\n  };\n};\nexport default connect(mapStateToProps)(Homework);\n\nfunction createListSubject(subjects) {\n  let newList = subjects.map((element) => {\n    let object = {};\n    object.label = element.name;\n    object.id = element.id;\n    object.value = element.id;\n    object.color = element.color;\n    return object;\n  });\n  return newList;\n}\n"]},"metadata":{},"sourceType":"module"}