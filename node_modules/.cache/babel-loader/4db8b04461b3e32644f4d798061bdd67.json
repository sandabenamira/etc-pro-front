{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Community/routes/Complaint/reclamer.js\";\nimport React from \"react\";\nimport { Modal, ModalHeader } from \"reactstrap\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport baseUrl from \"../../../config/config\";\nimport axios from \"axios\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport * as moment from \"moment\";\nimport IntlMessages from \"../../../util/IntlMessages\";\nimport { connect } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"react-select\";\nimport _ from \"lodash\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nclass Reclamer extends React.Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n\n    this.handleChange = selectedOption => {};\n\n    this.onDrop = e => {\n      let file = e.target.files[0];\n      this.setState({\n        Reclam_File: file,\n        inputText: file.name\n      });\n    };\n\n    this.state = {\n      subject: \"\",\n      receiver_id: \"\",\n      receiverID: 0,\n      message: \"\",\n      professorsList: [],\n      professorsListNew: [],\n      date_hour_mail: \"2019-07-18T13:07:42.438Z\",\n      sender_id: \"\",\n      usersData: [],\n      inputText: \"\",\n      Reclam_File: null,\n      subject_Specifique: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._isMounted) {\n      this.setState({\n        subject: this.props.subjectReply\n      });\n      this.setState({\n        receiver_id: this.props.emailReplay\n      });\n      this.setState({\n        receiverID: this.props.receiverID\n      });\n    }\n\n    axios.get(`${baseUrl.baseUrl}/profiles/fetchComplaintReceivers/` + localStorage.profileId + `?access_token=${localStorage.token}`).then(res => {\n      if (this._isMounted) {\n        let usersData = []; // const usersData = res.data.receiverData[0].filter(\n        //   (element) => element.id != localStorage.profileId\n        // );\n\n        res.data.receiverData[0].map(element => {\n          let user;\n\n          if (element.id != localStorage.profileId) {\n            user = element;\n            user.label = element.name + \" \" + element.surname;\n            usersData.push(user);\n          } //return element.id != localStorage.profileId;\n\n        });\n        this.setState({\n          usersData\n        });\n        this.setState({\n          sender_id: localStorage.profileId\n        });\n      }\n    });\n  }\n\n  render() {\n    const types = [\"transport\", \"cantine\", \"maltraitance\", \"niveau educatif\", \"autre\"]; // const { onMailSend, onClose } = this.props;\n\n    const {\n      receiver_id,\n      receiverID,\n      subject,\n      message,\n      sender_id,\n      date_hour_mail,\n      Reclam_File,\n      subject_Specifique\n    } = this.state;\n\n    if (this.props.receiverID !== undefined && this.state.usersData.length > 0) {\n      var nameReciver = this.state.usersData.find(element => element.id == this.props.receiverID);\n    }\n\n    return /*#__PURE__*/React.createElement(Modal, {\n      className: \"modal-box modal-box-mail\" // toggle={onClose}\n      ,\n      isOpen: this.props.open,\n      style: {\n        zIndex: 2600\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      className: \"modal-box-header bg-primary text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"Reclam.r\\xE9diger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      className: \"text-white\" //  onClick={onClose}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-box-content d-flex flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      name: \"receiver_id\",\n      id: \"receiver_id\",\n      disableClearable: true,\n      value: this.props.receiverID === undefined ? this.state.usersData[_.findIndex(this.state.usersData, {\n        id: receiverID\n      })] : this.state.usersData[_.findIndex(this.state.usersData, {\n        id: this.props.receiverID\n      })],\n      options: this.props.receiverID === undefined ? this.state.usersData : [],\n      onChange: (event, newValue) => {\n        this.setState({\n          receiverID: newValue.id\n        });\n      },\n      getOptionLabel: option => option.label,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"reciver.message\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 26\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"subject\",\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"subject.message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 20\n        }\n      }),\n      onChange: event => this.setState({\n        subject: event.target.value\n      }),\n      select: true,\n      value: subject ? subject : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, this.props.subjectReply === \"\" ? types.map((type, index) => /*#__PURE__*/React.createElement(MenuItem, {\n      key: index,\n      value: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, type)) : /*#__PURE__*/React.createElement(MenuItem, {\n      value: subject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, subject)), subject === \"autre\" ? /*#__PURE__*/React.createElement(TextField, {\n      id: \"subject\",\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"subject.specifiq.subject\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 22\n        }\n      }),\n      onChange: event => this.setState({\n        subject_Specifique: event.target.value\n      }),\n      variant: \"outlined\",\n      value: subject_Specifique ? subject_Specifique : \"\",\n      multiline: true,\n      rowsMax: \"4\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(TextField, {\n      id: \"required\",\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 20\n        }\n      }),\n      onChange: event => this.setState({\n        message: event.target.value,\n        date_hour_mail: moment()\n      }),\n      value: message ? message : \"\",\n      multiline: true,\n      rowsMax: \"4\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-box-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"name-multiple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, \"vous pouvez ajouter des pi\\xE9ces jointes\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"files\",\n      className: \"btn\",\n      style: {\n        cursor: \"pointer\",\n        color: \"white\",\n        fontWeight: \"bold\",\n        backgroundColor: \"#4B58B9\",\n        borderRadius: \"4rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"Choisir un fichier\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 22\n      }\n    }))), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }\n    }, this.state.inputText), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"files\",\n      type: \"file\",\n      style: {\n        visibility: \"hidden\"\n      },\n      onChange: e => this.onDrop(e),\n      accept: \"application/pdf,image/*\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      align: \"right\",\n      className: \"col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: receiverID == \"\" || subject == \"\" || receiverID == \"\" || subject == \"autre\" && subject_Specifique === \"\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        let reclamSubject = \"\";\n\n        if (subject === \"autre\" && subject_Specifique !== \"\") {\n          reclamSubject = subject_Specifique;\n        } else {\n          reclamSubject = subject;\n        } // onClose();\n        // onMailSend({\n        //   sender_id: sender_id,\n        //   receiver_id: receiverID,\n        //   subject: reclamSubject,\n        //   message: message,\n        //   date_hour_mail: date_hour_mail,\n        //   read: false,\n        //   starred: false,\n        //   important: false,\n        //   hasAttachments: false,\n        //   folder: 1,\n        //   selected: false,\n        //   labels: [],\n        //   establishmentId: this.props.userProfile.establishment_id,\n        //   file: Reclam_File,\n        // });\n\n\n        this.setState({\n          subject: \"\",\n          receiver_id: \"\",\n          message: \"\",\n          professorsList: [],\n          professorsListNew: [],\n          date_hour_mail: \"2019-07-18T13:07:42.438Z\",\n          Reclam_File: null,\n          subject_Specifique: \"\",\n          receiverID: \"\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-mail-send mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"button.send.message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 16\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile\n  };\n};\n\nexport default connect(mapStateToProps)(Reclamer);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Community/routes/Complaint/reclamer.js"],"names":["React","Modal","ModalHeader","TextField","Button","IconButton","CloseIcon","baseUrl","axios","MenuItem","moment","IntlMessages","connect","InputLabel","Select","_","Autocomplete","Reclamer","Component","constructor","_isMounted","handleChange","selectedOption","onDrop","e","file","target","files","setState","Reclam_File","inputText","name","state","subject","receiver_id","receiverID","message","professorsList","professorsListNew","date_hour_mail","sender_id","usersData","subject_Specifique","bind","componentDidMount","props","subjectReply","emailReplay","get","localStorage","profileId","token","then","res","data","receiverData","map","element","user","id","label","surname","push","render","types","undefined","length","nameReciver","find","open","zIndex","findIndex","event","newValue","option","params","value","type","index","cursor","color","fontWeight","backgroundColor","borderRadius","visibility","reclamSubject","mapStateToProps","userProfile","auth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Modal, ModalHeader } from \"reactstrap\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport baseUrl from \"../../../config/config\";\nimport axios from \"axios\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport * as moment from \"moment\";\nimport IntlMessages from \"../../../util/IntlMessages\";\nimport { connect } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"react-select\";\nimport _ from \"lodash\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nclass Reclamer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      subject: \"\",\n      receiver_id: \"\",\n      receiverID: 0,\n      message: \"\",\n      professorsList: [],\n      professorsListNew: [],\n      date_hour_mail: \"2019-07-18T13:07:42.438Z\",\n      sender_id: \"\",\n      usersData: [],\n      inputText: \"\",\n      Reclam_File: null,\n      subject_Specifique: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n  _isMounted = false;\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._isMounted) {\n      this.setState({ subject: this.props.subjectReply });\n      this.setState({ receiver_id: this.props.emailReplay });\n      this.setState({ receiverID: this.props.receiverID });\n    }\n    axios\n      .get(\n        `${baseUrl.baseUrl}/profiles/fetchComplaintReceivers/` +\n          localStorage.profileId +\n          `?access_token=${localStorage.token}`\n      )\n      .then((res) => {\n        if (this._isMounted) {\n          let usersData = [];\n          // const usersData = res.data.receiverData[0].filter(\n          //   (element) => element.id != localStorage.profileId\n          // );\n          res.data.receiverData[0].map((element) => {\n            let user;\n            if (element.id != localStorage.profileId) {\n              user = element;\n              user.label = element.name + \" \" + element.surname;\n              usersData.push(user);\n            }\n\n            //return element.id != localStorage.profileId;\n          });\n\n          this.setState({ usersData });\n          this.setState({ sender_id: localStorage.profileId });\n        }\n      });\n  }\n\n  handleChange = (selectedOption) => {\n   };\n\n  onDrop = (e) => {\n    let file = e.target.files[0];\n    this.setState({ Reclam_File: file, inputText: file.name });\n  };\n  render() {\n    const types = [\n      \"transport\",\n      \"cantine\",\n      \"maltraitance\",\n      \"niveau educatif\",\n      \"autre\",\n    ];\n    // const { onMailSend, onClose } = this.props;\n    const {\n      receiver_id,\n      receiverID,\n      subject,\n      message,\n      sender_id,\n      date_hour_mail,\n      Reclam_File,\n      subject_Specifique,\n    } = this.state;\n\n    if (\n      this.props.receiverID !== undefined &&\n      this.state.usersData.length > 0\n    ) {\n      var nameReciver = this.state.usersData.find(\n        (element) => element.id == this.props.receiverID\n      );\n    }\n\n    return (\n      <Modal\n        className=\"modal-box modal-box-mail\"\n        // toggle={onClose}\n        isOpen={this.props.open}\n        style={{ zIndex: 2600 }}\n      >\n        <ModalHeader className=\"modal-box-header bg-primary text-white\">\n          <IntlMessages id=\"Reclam.rédiger\" />\n          <IconButton className=\"text-white\"\n          //  onClick={onClose}\n           >\n            <CloseIcon />\n          </IconButton>\n        </ModalHeader>\n        <div className=\"modal-box-content d-flex flex-column\">\n          <div>\n            <Autocomplete\n              name=\"receiver_id\"\n              id=\"receiver_id\"\n              disableClearable\n              value={\n                this.props.receiverID === undefined\n                  ? this.state.usersData[\n                      _.findIndex(this.state.usersData, {\n                        id: receiverID,\n                      })\n                    ]\n                  : this.state.usersData[\n                      _.findIndex(this.state.usersData, {\n                        id: this.props.receiverID,\n                      })\n                    ]\n              }\n              options={\n                this.props.receiverID === undefined ? this.state.usersData : []\n              }\n              onChange={(event, newValue) => {\n                this.setState({ receiverID: newValue.id });\n              }}\n              getOptionLabel={(option) => option.label}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label={<IntlMessages id=\"reciver.message\" />}\n                  \n                />\n              )}\n            />\n          </div>\n          <br></br>\n          <TextField\n            required\n            id=\"subject\"\n            label={<IntlMessages id=\"subject.message\" />}\n            onChange={(event) => this.setState({ subject: event.target.value })}\n            select\n            value={subject ? subject : \"\"}\n          >\n            {this.props.subjectReply === \"\" ? (\n              types.map((type, index) => (\n                <MenuItem key={index} value={type}>\n                  {type}\n                </MenuItem>\n              ))\n            ) : (\n              <MenuItem value={subject}>{subject}</MenuItem>\n            )}\n          </TextField>\n          {subject === \"autre\" ? (\n            <TextField\n              id=\"subject\"\n              label={<IntlMessages id=\"subject.specifiq.subject\" />}\n              onChange={(event) =>\n                this.setState({\n                  subject_Specifique: event.target.value,\n                })\n              }\n              variant=\"outlined\"\n              value={subject_Specifique ? subject_Specifique : \"\"}\n              multiline\n              rowsMax=\"4\"\n              margin=\"normal\"\n            />\n          ) : (\n            \"\"\n          )}\n\n          <TextField\n            id=\"required\"\n            label={<IntlMessages id=\"message\" />}\n            onChange={(event) =>\n              this.setState({\n                message: event.target.value,\n                date_hour_mail: moment(),\n              })\n            }\n            value={message ? message : \"\"}\n            multiline\n            rowsMax=\"4\"\n            margin=\"normal\"\n          />\n        </div>\n\n        <div className=\"modal-box-footer\">\n          <InputLabel htmlFor=\"name-multiple\">\n            vous pouvez ajouter des piéces jointes\n          </InputLabel>\n          <br />\n          <label\n            htmlFor=\"files\"\n            className=\"btn\"\n            style={{\n              cursor: \"pointer\",\n              color: \"white\",\n              fontWeight: \"bold\",\n              backgroundColor: \"#4B58B9\",\n              borderRadius: \"4rem\",\n            }}\n          >\n            <strong>{<IntlMessages id=\"Choisir un fichier\" />}</strong>\n          </label>\n          <label>{this.state.inputText}</label>\n          <input\n            id=\"files\"\n            type=\"file\"\n            style={{ visibility: \"hidden\" }}\n            onChange={(e) => this.onDrop(e)}\n            accept=\"application/pdf,image/*\"\n          />\n          <br />\n          <br />\n          <div align=\"right\" className=\"col-sm-12\">\n            <Button\n              disabled={\n                receiverID == \"\" ||\n                subject == \"\" ||\n                (receiverID == \"\" ||\n                  (subject == \"autre\" && subject_Specifique === \"\"))\n              }\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                let reclamSubject = \"\";\n                if (subject === \"autre\" && subject_Specifique !== \"\") {\n                  reclamSubject = subject_Specifique;\n                } else {\n                  reclamSubject = subject;\n                }\n                // onClose();\n                // onMailSend({\n                //   sender_id: sender_id,\n                //   receiver_id: receiverID,\n                //   subject: reclamSubject,\n                //   message: message,\n                //   date_hour_mail: date_hour_mail,\n                //   read: false,\n                //   starred: false,\n                //   important: false,\n                //   hasAttachments: false,\n                //   folder: 1,\n                //   selected: false,\n                //   labels: [],\n                //   establishmentId: this.props.userProfile.establishment_id,\n                //   file: Reclam_File,\n                // });\n                this.setState({\n                  subject: \"\",\n                  receiver_id: \"\",\n                  message: \"\",\n                  professorsList: [],\n                  professorsListNew: [],\n                  date_hour_mail: \"2019-07-18T13:07:42.438Z\",\n                  Reclam_File: null,\n\n                  subject_Specifique: \"\",\n                  receiverID: \"\",\n                });\n              }}\n            >\n              <i className=\"zmdi zmdi-mail-send mr-2\" />\n              {<IntlMessages id=\"button.send.message\" />}\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.auth.userProfile,\n  };\n};\n\nexport default connect(mapStateToProps)(Reclamer);\n"]},"metadata":{},"sourceType":"module"}