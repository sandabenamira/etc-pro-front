{"ast":null,"code":"import _ from \"lodash\";\nimport { classService } from \"../_services/class.service\";\nimport axios from 'axios';\nimport baseUrl from '../config/config';\nimport { SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from \"../constants/ActionTypes\";\nexport function getEstablishment() {\n  return dispatch => {\n    let apiEndpoint = `/establishments?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      const ListEstablishments = response.data;\n      const establishmentList = ListEstablishments.filter(element => element.status);\n      dispatch({\n        type: \"GET_ALL_ESTABLISHMENT\",\n        payload: establishmentList\n      });\n      dispatch(addEstablishmentContainers(establishmentList));\n    }).catch(error => {});\n  };\n}\nexport function addEstablishmentContainers(listEstablishment) {\n  return dispatch => {\n    let apiEndpoint = `/containers?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      listEstablishment.map(establishment => {\n        if (_.some(response.data, [\"name\", establishment.name])) {} else {\n          let container = {\n            name: establishment.name\n          };\n          let formadata = new FormData();\n          formadata.append(\"image\", container);\n          let apiEndpoint2 = `/containers?access_token=${localStorage.token}`;\n          classService.post(apiEndpoint2, container);\n        }\n      });\n    }).catch(error => {});\n  };\n}\nexport function uploadFile2(payload, file) {\n  return dispatch => {\n    let formadata = new FormData();\n    formadata.append(\"image\", file);\n    let apiEndpoint = `/containers/` + payload.name + `/upload?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, formadata).then(response => {\n      dispatch({\n        type: \"ADD_ESTABLISHMENT\",\n        payload: payload\n      });\n      dispatch(EstablishmentModules(payload));\n    }).catch(error => {});\n  };\n}\nexport function saveEstablishment(payload, file) {\n  return dispatch => {\n    let establishmentData = {\n      name: payload.name,\n      ar_name: payload.ar_name,\n      address: payload.address,\n      code: payload.code,\n      city: payload.city,\n      countries_id: payload.countries_id,\n      phone: payload.phone,\n      email_establishment: payload.email_establishment,\n      website: payload.website,\n      surname_director: payload.surname_director,\n      name_director: payload.name_director,\n      email_director: payload.email_director,\n      phone_director: payload.phone_director,\n      estab_type_id: payload.estab_type_id,\n      number_students: payload.number_students,\n      contract_start_date: payload.contract_start_date,\n      contract_end_date: payload.contract_end_date,\n      number_sms: payload.number_sms,\n      mode_payment: payload.mode_payment,\n      status: true,\n      module_id: payload.module_id,\n      logo: \"\",\n      matricule: payload.matricule,\n      tva: payload.tva,\n      capital: payload.capital,\n      siren: payload.siren,\n      siret: payload.siret\n    };\n    let apiEndpoint = `/establishments?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, establishmentData).then(response => {\n      if (file !== null) {\n        const fileExtension = file.name.replace(/^.*\\./, \"\");\n        const fileName = response.data.id + response.data.name + \".\" + fileExtension;\n        let dataWithFile = {\n          name: payload.name,\n          ar_name: payload.ar_name,\n          address: payload.address,\n          code: payload.code,\n          city: payload.city,\n          countries_id: payload.countries_id,\n          phone: payload.phone,\n          email_establishment: payload.email_establishment,\n          website: payload.website,\n          surname_director: payload.surname_director,\n          name_director: payload.name_director,\n          email_director: payload.email_director,\n          phone_director: payload.phone_director,\n          estab_type_id: payload.estab_type_id,\n          number_students: payload.number_students,\n          contract_start_date: payload.contract_start_date,\n          contract_end_date: payload.contract_end_date,\n          number_sms: payload.number_sms,\n          mode_payment: payload.mode_payment,\n          status: true,\n          module_id: payload.module_id,\n          logo: fileName,\n          matricule: payload.matricule,\n          tva: payload.tva,\n          capital: payload.capital,\n          siren: payload.siren,\n          siret: payload.siret\n        };\n        let apiEndpoint2 = `/establishments/` + response.data.id + `?access_token=${localStorage.token}`;\n        classService.put(apiEndpoint2, dataWithFile).then(response => {\n          const myNewFile = new File([file], fileName, {\n            type: file.type\n          });\n          dispatch(uploadFile2(response.data, myNewFile));\n        }).catch(error => {});\n      } else {\n        let dataWithoutFile = {\n          name: payload.name,\n          ar_name: payload.ar_name,\n          address: payload.address,\n          code: payload.code,\n          city: payload.city,\n          countries_id: payload.countries_id,\n          phone: payload.phone,\n          email_establishment: payload.email_establishment,\n          website: payload.website,\n          surname_director: payload.surname_director,\n          name_director: payload.name_director,\n          email_director: payload.email_director,\n          phone_director: payload.phone_director,\n          estab_type_id: payload.estab_type_id,\n          number_students: payload.number_students,\n          contract_start_date: payload.contract_start_date,\n          contract_end_date: payload.contract_end_date,\n          number_sms: payload.number_sms,\n          mode_payment: payload.mode_payment,\n          status: true,\n          module_id: payload.module_id,\n          logo: null,\n          matricule: payload.matricule,\n          tva: payload.tva,\n          capital: payload.capital,\n          siren: payload.siren,\n          siret: payload.siret\n        };\n        let apiEndpoint3 = `/establishments/` + response.data.id + `?access_token=${localStorage.token}`;\n        classService.put(apiEndpoint3, dataWithoutFile).then(response => {\n          dispatch({\n            type: \"ADD_ESTABLISHMENT\",\n            payload: response.data\n          });\n        }).catch(error => {});\n      }\n    }).catch(error => {});\n  };\n}\nexport function saveEstablishments(establishment, file) {\n  let container = {\n    name: establishment.name\n  };\n  let formadata = new FormData();\n  formadata.append(\"image\", container);\n  return dispatch => {\n    let apiEndpoint = `/containers?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, container).then(response => {\n      dispatch(saveEstablishment(establishment, file));\n    }).catch(error => {});\n  };\n}\nexport function deleteData(idItem) {\n  return dispatch => {\n    let apiEndpoint = `/establishments/` + idItem + `?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      const dataEstablishment = response.data;\n      let establishmentData = {\n        name: dataEstablishment.name,\n        ar_name: dataEstablishment.ar_name,\n        address: dataEstablishment.address,\n        code: dataEstablishment.code,\n        city: dataEstablishment.city,\n        countries_id: dataEstablishment.countries_id,\n        phone: dataEstablishment.phone,\n        email_establishment: dataEstablishment.email_establishment,\n        website: dataEstablishment.website,\n        surname_director: dataEstablishment.surname_director,\n        name_director: dataEstablishment.name_director,\n        email_director: dataEstablishment.email_director,\n        phone_director: dataEstablishment.phone_director,\n        estab_type_id: dataEstablishment.estab_type_id,\n        number_students: dataEstablishment.number_students,\n        contract_start_date: dataEstablishment.contract_start_date,\n        contract_end_date: dataEstablishment.contract_end_date,\n        number_sms: dataEstablishment.number_sms,\n        mode_payment: dataEstablishment.mode_payment,\n        status: false,\n        module_id: dataEstablishment.module_id,\n        id: dataEstablishment.id,\n        matricule: dataEstablishment.matricule,\n        tva: dataEstablishment.tva,\n        capital: dataEstablishment.capital,\n        siren: dataEstablishment.siren,\n        siret: dataEstablishment.siret\n      };\n      let apiEndpoint2 = `/establishments/` + dataEstablishment.id + `?access_token=${localStorage.token}`;\n      classService.put(apiEndpoint2, establishmentData).then(response => {\n        dispatch({\n          type: \"DELETE_ESTABLISHMENT\",\n          payload: response.data\n        });\n      }).catch(error => {});\n    }).catch(error => {});\n  };\n}\nexport function updateEstablishment(payload, file) {\n  if (file !== null) {\n    if (payload.logo !== null) {\n      return dispatch => {\n        let formadata = new FormData();\n        formadata.append(\"image\", file);\n        let apiEndpoint = `/containers/` + payload.name + \"/files/\" + payload.logo + `?access_token=${localStorage.token}`;\n        classService.delete(apiEndpoint, formadata).then(response => {\n          dispatch(updateEstablishData(payload, file));\n        }).catch(error => {});\n      };\n    } else {\n      return function (dispatch) {\n        dispatch(updateEstablishData(payload, file));\n      };\n    }\n  } else {\n    return dispatch => {\n      let data = {\n        name: payload.name,\n        ar_name: payload.ar_name,\n        address: payload.address,\n        code: payload.code,\n        city: payload.city,\n        countries_id: payload.countries_id,\n        phone: payload.phone,\n        email_establishment: payload.email_establishment,\n        website: payload.website,\n        surname_director: payload.surname_director,\n        name_director: payload.name_director,\n        email_director: payload.email_director,\n        phone_director: payload.phone_director,\n        estab_type_id: payload.estab_type_id,\n        number_students: payload.number_students,\n        contract_start_date: payload.contract_start_date,\n        contract_end_date: payload.contract_end_date,\n        number_sms: payload.number_sms,\n        mode_payment: payload.mode_payment,\n        status: payload.status,\n        module_id: payload.module_id,\n        id: payload.id,\n        logo: payload.logo,\n        matricule: payload.matricule,\n        tva: payload.tva,\n        capital: payload.capital,\n        siren: payload.siren,\n        siret: payload.siret\n      };\n      let apiEndpoint = `/establishments/` + payload.id + `?access_token=${localStorage.token}`;\n      classService.put(apiEndpoint, data).then(response => {\n        dispatch({\n          type: \"EDIT_ESTABLISHMENT\",\n          payload: response.data\n        });\n        dispatch(deleteEstablishmentModules(payload.id));\n        dispatch(EstablishmentModules(data, data));\n      }).catch(error => {});\n    };\n  }\n}\nexport function updateEstablishData(payload, file) {\n  return dispatch => {\n    const fileExtension = file.name.replace(/^.*\\./, \"\");\n    const fileName = payload.id + payload.name + \".\" + fileExtension;\n    const myNewFile = new File([file], fileName, {\n      type: file.type\n    });\n    let newData = {\n      name: payload.name,\n      ar_name: payload.ar_name,\n      address: payload.address,\n      code: payload.code,\n      city: payload.city,\n      countries_id: payload.countries_id,\n      phone: payload.phone,\n      email_establishment: payload.email_establishment,\n      website: payload.website,\n      surname_director: payload.surname_director,\n      name_director: payload.name_director,\n      email_director: payload.email_director,\n      phone_director: payload.phone_director,\n      estab_type_id: payload.estab_type_id,\n      number_students: payload.number_students,\n      contract_start_date: payload.contract_start_date,\n      contract_end_date: payload.contract_end_date,\n      number_sms: payload.number_sms,\n      mode_payment: payload.mode_payment,\n      status: payload.status,\n      module_id: payload.module_id,\n      id: payload.id,\n      logo: fileName,\n      matricule: payload.matricule,\n      tva: payload.tva,\n      capital: payload.capital,\n      siren: payload.siren,\n      siret: payload.siret\n    };\n    let apiEndpoint = `/establishments/` + payload.id + `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, newData).then(response => {\n      dispatch(uploadEditFile(response.data, myNewFile));\n    }).catch(error => {});\n  };\n}\nexport function uploadEditFile(payload, file) {\n  return dispatch => {\n    let formadata = new FormData();\n    formadata.append(\"image\", file);\n    let apiEndpoint = `/containers/` + payload.name + `/upload?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, formadata).then(response => {\n      dispatch({\n        type: \"EDIT_ESTABLISHMENT\",\n        payload: payload\n      });\n      alert(\"L'ajout est effectué avec succès\");\n    }).catch(error => {});\n  };\n}\nexport function EstablishmentModules(payload, data) {\n  return dispatch => {\n    var object = {\n      \"start_date\": payload.start_date,\n      \"end_date\": payload.end_date,\n      \"status\": true,\n      \"establishment_id\": payload.id\n    };\n    var modules = payload.module_id.map(function (num) {\n      var object = {\n        \"start_date\": payload.contract_start_date,\n        \"end_date\": payload.contract_end_date,\n        \"status\": true,\n        \"establishment_id\": payload.id,\n        \"module_id\": num\n      };\n      return object;\n    });\n    axios.post(`${baseUrl.baseUrl}/establishements_modules/AddestablishmentModules?access_token=${localStorage.token}`, {\n      modules\n    }).then(response => {\n      dispatch({\n        type: SHOW_SUCCESS_MESSAGE\n      });\n      setTimeout(() => {\n        dispatch({\n          type: HIDE_SUCCESS_MESSAGE\n        });\n      }, 4000);\n    }).catch(error => {\n      dispatch({\n        type: SHOW_ERROR_MESSAGE\n      });\n      setTimeout(() => {\n        dispatch({\n          type: HIDE_ERROR_MESSAGE\n        });\n      }, 4000);\n    });\n  };\n}\nexport function deleteEstablishmentModules(id) {\n  return dispatch => {\n    axios.get(`${baseUrl.baseUrl}/establishments/getModuleEstab/` + id + `?access_token=${localStorage.token}`).then(response => {}).catch(error => {\n      console.log(error);\n    });\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/establishmentAction.js"],"names":["_","classService","axios","baseUrl","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","getEstablishment","dispatch","apiEndpoint","localStorage","token","get","then","response","ListEstablishments","data","establishmentList","filter","element","status","type","payload","addEstablishmentContainers","catch","error","listEstablishment","map","establishment","some","name","container","formadata","FormData","append","apiEndpoint2","post","uploadFile2","file","EstablishmentModules","saveEstablishment","establishmentData","ar_name","address","code","city","countries_id","phone","email_establishment","website","surname_director","name_director","email_director","phone_director","estab_type_id","number_students","contract_start_date","contract_end_date","number_sms","mode_payment","module_id","logo","matricule","tva","capital","siren","siret","fileExtension","replace","fileName","id","dataWithFile","put","myNewFile","File","dataWithoutFile","apiEndpoint3","saveEstablishments","deleteData","idItem","dataEstablishment","updateEstablishment","delete","updateEstablishData","deleteEstablishmentModules","newData","uploadEditFile","alert","object","start_date","end_date","modules","num","setTimeout","console","log"],"mappings":"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","sourcesContent":["\nimport _ from \"lodash\";\nimport { classService } from \"../_services/class.service\";\nimport axios from 'axios';\nimport baseUrl from '../config/config';\nimport { SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from \"../constants/ActionTypes\";\n\nexport function getEstablishment() {\n  return dispatch => {\n    let apiEndpoint = `/establishments?access_token=${localStorage.token}`;\n    classService\n      .get(apiEndpoint)\n      .then(response => {\n        const ListEstablishments = response.data;\n        const establishmentList = ListEstablishments.filter(\n          element => element.status\n        );\n        dispatch({ type: \"GET_ALL_ESTABLISHMENT\", payload: establishmentList });\n        dispatch(addEstablishmentContainers(establishmentList));\n      })\n      .catch(error => {\n      });\n  };\n}\nexport function addEstablishmentContainers(listEstablishment) {\n  return dispatch => {\n    let apiEndpoint = `/containers?access_token=${localStorage.token}`;\n    classService\n      .get(apiEndpoint)\n      .then(response => {\n        listEstablishment.map(establishment => {\n          if (_.some(response.data, [\"name\", establishment.name])) {\n          } else {\n            let container = { name: establishment.name };\n            let formadata = new FormData();\n            formadata.append(\"image\", container);\n            let apiEndpoint2 = `/containers?access_token=${localStorage.token}`;\n            classService.post(apiEndpoint2, container);\n          }\n        });\n      })\n      .catch(error => {\n      });\n  };\n}\n\nexport function uploadFile2(payload, file) {\n\n  return dispatch => {\n    let formadata = new FormData();\n    formadata.append(\"image\", file);\n    let apiEndpoint = `/containers/` + payload.name + `/upload?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, formadata)\n      .then(response => {\n        dispatch({ type: \"ADD_ESTABLISHMENT\", payload: payload });\n        dispatch(EstablishmentModules(payload));\n\n      }).catch(error => {\n      });\n  };\n}\n\nexport function saveEstablishment(payload, file) {\n  return dispatch => {\n    let establishmentData = {\n      name: payload.name,\n      ar_name: payload.ar_name,\n      address: payload.address,\n      code: payload.code,\n      city: payload.city,\n      countries_id: payload.countries_id,\n      phone: payload.phone,\n      email_establishment: payload.email_establishment,\n      website: payload.website,\n      surname_director: payload.surname_director,\n      name_director: payload.name_director,\n      email_director: payload.email_director,\n      phone_director: payload.phone_director,\n      estab_type_id: payload.estab_type_id,\n      number_students: payload.number_students,\n      contract_start_date: payload.contract_start_date,\n      contract_end_date: payload.contract_end_date,\n      number_sms: payload.number_sms,\n      mode_payment: payload.mode_payment,\n      status: true,\n      module_id: payload.module_id,\n      logo: \"\",\n      matricule: payload.matricule,\n      tva: payload.tva,\n      capital: payload.capital,\n      siren: payload.siren,\n      siret: payload.siret\n    };\n    let apiEndpoint = `/establishments?access_token=${localStorage.token}`;\n    classService\n      .post(apiEndpoint, establishmentData)\n      .then(response => {\n        if (file !== null) {\n          const fileExtension = file.name.replace(/^.*\\./, \"\");\n          const fileName =\n            response.data.id + response.data.name + \".\" + fileExtension;\n          let dataWithFile = {\n            name: payload.name,\n            ar_name: payload.ar_name,\n            address: payload.address,\n            code: payload.code,\n            city: payload.city,\n            countries_id: payload.countries_id,\n            phone: payload.phone,\n            email_establishment: payload.email_establishment,\n            website: payload.website,\n            surname_director: payload.surname_director,\n            name_director: payload.name_director,\n            email_director: payload.email_director,\n            phone_director: payload.phone_director,\n            estab_type_id: payload.estab_type_id,\n            number_students: payload.number_students,\n            contract_start_date: payload.contract_start_date,\n            contract_end_date: payload.contract_end_date,\n            number_sms: payload.number_sms,\n            mode_payment: payload.mode_payment,\n            status: true,\n            module_id: payload.module_id,\n            logo: fileName,\n            matricule: payload.matricule,\n            tva: payload.tva,\n            capital: payload.capital,\n            siren: payload.siren,\n            siret: payload.siret\n          };\n\n          let apiEndpoint2 = `/establishments/` + response.data.id + `?access_token=${localStorage.token}`;\n          classService.put(apiEndpoint2, dataWithFile)\n            .then(response => {\n              const myNewFile = new File([file], fileName, { type: file.type });\n              dispatch(uploadFile2(response.data, myNewFile));\n            }).catch(error => {\n            });\n        } else {\n          let dataWithoutFile = {\n            name: payload.name,\n            ar_name: payload.ar_name,\n            address: payload.address,\n            code: payload.code,\n            city: payload.city,\n            countries_id: payload.countries_id,\n            phone: payload.phone,\n            email_establishment: payload.email_establishment,\n            website: payload.website,\n            surname_director: payload.surname_director,\n            name_director: payload.name_director,\n            email_director: payload.email_director,\n            phone_director: payload.phone_director,\n            estab_type_id: payload.estab_type_id,\n            number_students: payload.number_students,\n            contract_start_date: payload.contract_start_date,\n            contract_end_date: payload.contract_end_date,\n            number_sms: payload.number_sms,\n            mode_payment: payload.mode_payment,\n            status: true,\n            module_id: payload.module_id,\n            logo: null,\n            matricule: payload.matricule,\n            tva: payload.tva,\n            capital: payload.capital,\n            siren: payload.siren,\n            siret: payload.siret\n          };\n          let apiEndpoint3 = `/establishments/` + response.data.id + `?access_token=${localStorage.token}`;\n          classService.put(apiEndpoint3, dataWithoutFile)\n            .then(response => {\n              dispatch({ type: \"ADD_ESTABLISHMENT\", payload: response.data });\n            }).catch(error => {\n            });\n        }\n\n      }).catch(error => {\n      });\n\n  };\n}\n\nexport function saveEstablishments(establishment, file) {\n  let container = { name: establishment.name };\n  let formadata = new FormData();\n  formadata.append(\"image\", container);\n  return dispatch => {\n    let apiEndpoint = `/containers?access_token=${localStorage.token}`;\n    classService\n      .post(apiEndpoint, container)\n      .then(response => {\n        dispatch(saveEstablishment(establishment, file));\n      })\n      .catch(error => {\n      });\n  };\n}\nexport function deleteData(idItem) {\n  return dispatch => {\n    let apiEndpoint =\n      `/establishments/` + idItem + `?access_token=${localStorage.token}`;\n    classService\n      .get(apiEndpoint)\n      .then(response => {\n        const dataEstablishment = response.data;\n        let establishmentData = {\n          name: dataEstablishment.name,\n          ar_name: dataEstablishment.ar_name,\n          address: dataEstablishment.address,\n          code: dataEstablishment.code,\n          city: dataEstablishment.city,\n          countries_id: dataEstablishment.countries_id,\n          phone: dataEstablishment.phone,\n          email_establishment: dataEstablishment.email_establishment,\n          website: dataEstablishment.website,\n          surname_director: dataEstablishment.surname_director,\n          name_director: dataEstablishment.name_director,\n          email_director: dataEstablishment.email_director,\n          phone_director: dataEstablishment.phone_director,\n          estab_type_id: dataEstablishment.estab_type_id,\n          number_students: dataEstablishment.number_students,\n          contract_start_date: dataEstablishment.contract_start_date,\n          contract_end_date: dataEstablishment.contract_end_date,\n          number_sms: dataEstablishment.number_sms,\n          mode_payment: dataEstablishment.mode_payment,\n          status: false,\n          module_id: dataEstablishment.module_id,\n          id: dataEstablishment.id,\n          matricule: dataEstablishment.matricule,\n          tva: dataEstablishment.tva,\n          capital: dataEstablishment.capital,\n          siren: dataEstablishment.siren,\n          siret: dataEstablishment.siret\n        };\n        let apiEndpoint2 =\n          `/establishments/` +\n          dataEstablishment.id +\n          `?access_token=${localStorage.token}`;\n        classService\n          .put(apiEndpoint2, establishmentData)\n\n          .then(response => {\n            dispatch({ type: \"DELETE_ESTABLISHMENT\", payload: response.data });\n          })\n          .catch(error => {\n          });\n      })\n      .catch(error => {\n      });\n  };\n}\n\nexport function updateEstablishment(payload, file) {\n  if (file !== null) {\n    if (payload.logo !== null) {\n      return dispatch => {\n        let formadata = new FormData();\n        formadata.append(\"image\", file);\n        let apiEndpoint = `/containers/` + payload.name + \"/files/\" + payload.logo + `?access_token=${localStorage.token}`;\n        classService.delete(apiEndpoint, formadata)\n          .then(response => {\n            dispatch(updateEstablishData(payload, file));\n          }).catch(error => {\n          });\n      };\n    } else {\n      return function (dispatch) {\n        dispatch(updateEstablishData(payload, file));\n      };\n    }\n  } else {\n\n    return dispatch => {\n      let data = {\n        name: payload.name,\n        ar_name: payload.ar_name,\n        address: payload.address,\n        code: payload.code,\n        city: payload.city,\n        countries_id: payload.countries_id,\n        phone: payload.phone,\n        email_establishment: payload.email_establishment,\n        website: payload.website,\n        surname_director: payload.surname_director,\n        name_director: payload.name_director,\n        email_director: payload.email_director,\n        phone_director: payload.phone_director,\n        estab_type_id: payload.estab_type_id,\n        number_students: payload.number_students,\n        contract_start_date: payload.contract_start_date,\n        contract_end_date: payload.contract_end_date,\n        number_sms: payload.number_sms,\n        mode_payment: payload.mode_payment,\n        status: payload.status,\n        module_id: payload.module_id,\n        id: payload.id,\n        logo: payload.logo,\n        matricule: payload.matricule,\n        tva: payload.tva,\n        capital: payload.capital,\n        siren: payload.siren,\n        siret: payload.siret\n      }\n      let apiEndpoint = `/establishments/` + payload.id + `?access_token=${localStorage.token}`;\n      classService.put(apiEndpoint, data)\n        .then(response => {\n          dispatch({ type: \"EDIT_ESTABLISHMENT\", payload: response.data });\n          dispatch(deleteEstablishmentModules(payload.id));\n          dispatch(EstablishmentModules(data, data));\n\n\n        }).catch(error => {\n        });\n    };\n  }\n}\n\nexport function updateEstablishData(payload, file) {\n  return dispatch => {\n    const fileExtension = file.name.replace(/^.*\\./, \"\");\n    const fileName = payload.id + payload.name + \".\" + fileExtension;\n    const myNewFile = new File([file], fileName, { type: file.type });\n    let newData = {\n      name: payload.name,\n      ar_name: payload.ar_name,\n      address: payload.address,\n      code: payload.code,\n      city: payload.city,\n      countries_id: payload.countries_id,\n      phone: payload.phone,\n      email_establishment: payload.email_establishment,\n      website: payload.website,\n      surname_director: payload.surname_director,\n      name_director: payload.name_director,\n      email_director: payload.email_director,\n      phone_director: payload.phone_director,\n      estab_type_id: payload.estab_type_id,\n      number_students: payload.number_students,\n      contract_start_date: payload.contract_start_date,\n      contract_end_date: payload.contract_end_date,\n      number_sms: payload.number_sms,\n      mode_payment: payload.mode_payment,\n      status: payload.status,\n      module_id: payload.module_id,\n      id: payload.id,\n      logo: fileName,\n      matricule: payload.matricule,\n      tva: payload.tva,\n      capital: payload.capital,\n      siren: payload.siren,\n      siret: payload.siret\n    }\n    let apiEndpoint = `/establishments/` + payload.id + `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, newData)\n      .then(response => {\n        dispatch(uploadEditFile(response.data, myNewFile));\n      }).catch(error => {\n      });\n  };\n}\n\nexport function uploadEditFile(payload, file) {\n  return dispatch => {\n    let formadata = new FormData();\n    formadata.append(\"image\", file);\n    let apiEndpoint = `/containers/` + payload.name + `/upload?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, formadata)\n      .then(response => {\n        dispatch({ type: \"EDIT_ESTABLISHMENT\", payload: payload });\n        alert(\"L'ajout est effectué avec succès\");\n      }).catch(error => {\n      });\n  };\n}\n\nexport function EstablishmentModules(payload, data) {\n  return dispatch => {\n    var object = {\n      \"start_date\": payload.start_date,\n      \"end_date\": payload.end_date,\n      \"status\": true,\n      \"establishment_id\": payload.id,\n    }\n    var modules = payload.module_id.map(function (num) {\n      var object = {\n        \"start_date\": payload.contract_start_date,\n        \"end_date\": payload.contract_end_date,\n        \"status\": true,\n        \"establishment_id\": payload.id,\n        \"module_id\": num\n      }\n\n      return object;\n    });\n    axios.post(`${baseUrl.baseUrl}/establishements_modules/AddestablishmentModules?access_token=${localStorage.token}`, { modules })\n      .then(response => {\n\n        dispatch({ type: SHOW_SUCCESS_MESSAGE })\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n\n      }).catch(error => {\n        dispatch({ type: SHOW_ERROR_MESSAGE });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      });\n  };\n}\n\nexport function deleteEstablishmentModules(id) {\n  return dispatch => {\n    axios.get(`${baseUrl.baseUrl}/establishments/getModuleEstab/` + id + `?access_token=${localStorage.token}`)\n      .then(response => {\n\n      })\n      .catch(error => {\n        console.log(error)\n      });\n\n  }\n}"]},"metadata":{},"sourceType":"module"}