{"ast":null,"code":"import { SHOW_SUCCESS_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, GET_GROUPS, ADD_GROUPS, EDIT_GROUPS, DELETE_GROUPS, ARCHIVED_GET_GROUPS } from '../constants/ActionTypes';\nconst initialState = {\n  groupsList: [],\n  archivedgroupsList: []\n};\nexport default function (state = initialState, action) {\n  if (action.type === GET_GROUPS) {\n    return Object.assign({}, state, {\n      groupsList: action.payload\n    });\n  }\n\n  if (action.type === ARCHIVED_GET_GROUPS) {\n    return Object.assign({}, state, {\n      archivedgroupsList: action.payload\n    });\n  }\n\n  if (action.type === ADD_GROUPS) {\n    let classItmem = state.groupsList.find(element => element.id == action.payload.id);\n    let newItem = { ...classItmem,\n      group: classItmem.group.concat(action.payload.group)\n    };\n    console.log(newItem, 'newwwwwwwwwwww');\n    return Object.assign({}, state, {\n      groupsList: [...state.groupsList.filter(element => element.id !== newItem.id)].concat(newItem)\n    });\n  }\n\n  if (action.type === EDIT_GROUPS) {\n    return Object.assign({}, state, {\n      groupsList: [...state.groupsList.filter(element => element.id !== action.payload.id), action.payload]\n    });\n  }\n\n  if (action.type === DELETE_GROUPS) {\n    return Object.assign({}, state, {\n      groupsList: [...state.groupsList.filter(element => element.id !== action.payload.id)],\n      archivedgroupsList: state.archivedgroupsList.concat(action.payload)\n    });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/reducers/GroupsReducer.js"],"names":["SHOW_SUCCESS_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","GET_GROUPS","ADD_GROUPS","EDIT_GROUPS","DELETE_GROUPS","ARCHIVED_GET_GROUPS","initialState","groupsList","archivedgroupsList","state","action","type","Object","assign","payload","classItmem","find","element","id","newItem","group","concat","console","log","filter"],"mappings":"AAAA,SACEA,oBADF,EAEEC,oBAFF,EAGEC,kBAHF,EAIEC,kBAJF,EAKEC,UALF,EAMEC,UANF,EAOEC,WAPF,EAQEC,aARF,EASEC,mBATF,QAUO,0BAVP;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,kBAAkB,EAAE;AAFD,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgBV,UAApB,EAAgC;AAC9B,WAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,UAAU,EAAEG,MAAM,CAACI;AADW,KAAzB,CAAP;AAGD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBN,mBAApB,EAAyC;AACvC,WAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BD,MAAAA,kBAAkB,EAAEE,MAAM,CAACI;AADG,KAAzB,CAAP;AAGD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBT,UAApB,EAAgC;AAC9B,QAAIa,UAAU,GAAGN,KAAK,CAACF,UAAN,CAAiBS,IAAjB,CAAuBC,OAAD,IAAaA,OAAO,CAACC,EAAR,IAAcR,MAAM,CAACI,OAAP,CAAeI,EAAhE,CAAjB;AACA,QAAIC,OAAO,GAAG,EAAE,GAAGJ,UAAL;AAAiBK,MAAAA,KAAK,EAAEL,UAAU,CAACK,KAAX,CAAiBC,MAAjB,CAAwBX,MAAM,CAACI,OAAP,CAAeM,KAAvC;AAAxB,KAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqB,gBAArB;AACA,WAAOP,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,UAAU,EAAE,CAAC,GAAGE,KAAK,CAACF,UAAN,CAAiBiB,MAAjB,CAAyBP,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeC,OAAO,CAACD,EAA5D,CAAJ,EAAqEG,MAArE,CACVF,OADU;AADkB,KAAzB,CAAP;AAKD;;AAED,MAAIT,MAAM,CAACC,IAAP,KAAgBR,WAApB,EAAiC;AAC/B,WAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,UAAU,EAAE,CACV,GAAGE,KAAK,CAACF,UAAN,CAAiBiB,MAAjB,CAAyBP,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAAnE,CADO,EAEVR,MAAM,CAACI,OAFG;AADkB,KAAzB,CAAP;AAMD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBP,aAApB,EAAmC;AACjC,WAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,UAAU,EAAE,CAAC,GAAGE,KAAK,CAACF,UAAN,CAAiBiB,MAAjB,CAAyBP,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAAnE,CAAJ,CADkB;AAE9BV,MAAAA,kBAAkB,EAAEC,KAAK,CAACD,kBAAN,CAAyBa,MAAzB,CAAgCX,MAAM,CAACI,OAAvC;AAFU,KAAzB,CAAP;AAID;;AAED,SAAOL,KAAP;AACD","sourcesContent":["import {\n  SHOW_SUCCESS_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  GET_GROUPS,\n  ADD_GROUPS,\n  EDIT_GROUPS,\n  DELETE_GROUPS,\n  ARCHIVED_GET_GROUPS,\n} from '../constants/ActionTypes';\n\nconst initialState = {\n  groupsList: [],\n  archivedgroupsList: [],\n};\n\nexport default function(state = initialState, action) {\n  if (action.type === GET_GROUPS) {\n    return Object.assign({}, state, {\n      groupsList: action.payload,\n    });\n  }\n  if (action.type === ARCHIVED_GET_GROUPS) {\n    return Object.assign({}, state, {\n      archivedgroupsList: action.payload,\n    });\n  }\n\n  if (action.type === ADD_GROUPS) {\n    let classItmem = state.groupsList.find((element) => element.id == action.payload.id);\n    let newItem = { ...classItmem, group: classItmem.group.concat(action.payload.group) };\n    console.log(newItem, 'newwwwwwwwwwww');\n    return Object.assign({}, state, {\n      groupsList: [...state.groupsList.filter((element) => element.id !== newItem.id)].concat(\n        newItem\n      ),\n    });\n  }\n\n  if (action.type === EDIT_GROUPS) {\n    return Object.assign({}, state, {\n      groupsList: [\n        ...state.groupsList.filter((element) => element.id !== action.payload.id),\n        action.payload,\n      ],\n    });\n  }\n\n  if (action.type === DELETE_GROUPS) {\n    return Object.assign({}, state, {\n      groupsList: [...state.groupsList.filter((element) => element.id !== action.payload.id)],\n      archivedgroupsList: state.archivedgroupsList.concat(action.payload),\n    });\n  }\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}