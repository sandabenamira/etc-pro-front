{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/Learning/routes/VirtualClasses/VirtualClassList.js\";\nimport React, { Component } from \"react\";\nimport VirtualClassListItems from \"./VirtualClassListItems\";\nimport EditVitualClass from \"./EditVitualClass\";\nimport { editClassVirtual } from \"../../../../../actions/VirtualClassAction\";\nimport { deleteClassVirtual } from \"../../../../../actions/VirtualClassAction\";\nimport { connect } from \"react-redux\";\nimport { getSectionFromLevel } from \"../../../../../actions/sectionAction\";\nimport { getLevelListFromEstabType } from \"../../../../../actions/classLevelAction\";\nimport axios from \"axios\";\nimport baseUrl from \"../../../../../config/config\";\nimport { getClassesByEstablishmentId } from \"../../../../../actions/classeAction\";\nimport { roleIdAdmin } from \"../../../../../config/config\";\nimport { roleIdProfessor } from \"../../../../../config/config\";\nimport { roleIdParent } from \"../../../../../config/config\";\nimport { roleIdStudent } from \"../../../../../config/config\";\nimport _ from \"lodash\";\nimport DeleteVirtualClass from \"./DeleteVirtualClass\";\nimport { privateStatus, publicStatus, allStatus } from \"../../../../../config/config\";\nimport JitsiComponent from \"./JitsiComponent\";\nimport moment from \"moment\";\n\nclass VirtualClassList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleStartTimeChange = time => {\n      let startTimeClassError;\n\n      if (moment(this.state.dateVirtualClass).format(\"LL\") == moment(new Date()).format(\"LL\")) {\n        startTimeClassError = moment(time._d).isBefore(this.state.endTimeClass) && moment(time._d).isAfter(this.state.dateVirtualClass);\n      } else {\n        startTimeClassError = moment(time._d).isBefore(this.state.endTimeClass);\n      }\n\n      let endTimeClassError = moment(this.state.endTimeClass).isAfter(time._d);\n      this.setState({\n        startTimeClass: time._d,\n        startTimeClassError: startTimeClassError,\n        endTimeClassError: endTimeClassError\n      });\n    };\n\n    this.handleEndTimeChange = time => {\n      let endTimeClassError = moment(time._d).isAfter(this.state.startTimeClass);\n      let startTimeClassError;\n\n      if (moment(this.state.dateVirtualClass).format(\"LL\") == moment(new Date()).format(\"LL\")) {\n        startTimeClassError = moment(this.state.startTimeClass).isBefore(time._d) && moment(this.state.startTimeClass).isAfter(this.state.dateVirtualClass);\n      } else {\n        startTimeClassError = moment(this.state.startTimeClass).isBefore(time._d);\n      }\n\n      this.setState({\n        endTimeClass: time._d,\n        endTimeClassError: endTimeClassError,\n        startTimeClassError: startTimeClassError\n      });\n    };\n\n    this.handleChangeDate = date => {\n      let startTimeClassError;\n\n      if (moment(date._d).format(\"LL\") == moment(new Date()).format(\"LL\")) {\n        startTimeClassError = moment(this.state.startTimeClass).isBefore(this.state.endTimeClass) && moment(this.state.startTimeClass).isAfter(date._d);\n      } else {\n        startTimeClassError = moment(this.state.startTimeClass).isBefore(this.state.endTimeClass);\n      }\n\n      this.setState({\n        dateVirtualClass: date._d,\n        startTimeClassError: startTimeClassError\n      });\n    };\n\n    this.handleChangeClass = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      let obj = JSON.parse(event.target.value);\n      this.setState({\n        classId: obj.classId,\n        classeName: obj.classeName\n      });\n\n      if (this.props.userProfile.role_id === roleIdProfessor) {\n        let subjects = this.state.assignmentClassSubject.filter(element => element.class.id === obj.classId);\n        this.setState({\n          subjects\n        });\n      } else {\n        let apiEndpoint = `${baseUrl.baseUrl}/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_class_v4]=${obj.classId}&filter[include][course][professor][profile][user]`;\n        axios.get(apiEndpoint).then(res => {\n          let courses = [];\n          res.data.forEach(element => {\n            courses.push(element.course);\n          });\n\n          let newCoursesList = _.flatten(courses);\n\n          this.setState({\n            professors: newCoursesList,\n            subjects: [],\n            professorId: null\n          });\n        });\n      }\n    };\n\n    this.handleChangeProfessor = name => event => {\n      let obj = JSON.parse(event.target.value);\n      this.setState({\n        professorId: obj.profId,\n        profName: obj.profName,\n        profSurname: obj.profSurname,\n        itemProfessor: event.target.value\n      });\n      let apiEndpoint = `${baseUrl.baseUrl}/course_v4?access_token=${localStorage.token}&filter[where][fk_id_professor]=${obj.profId}&filter[include][assignmentClassSubject][subject]`;\n      axios.get(apiEndpoint).then(res => {\n        let subjects = [];\n        res.data.forEach(element => {\n          if (element.assignmentClassSubject.fk_id_class_v4 === this.state.classId) {\n            let newObj = { ...element.assignmentClassSubject,\n              courseId: element.id\n            }; // subjects.push(element.assignmentClassSubject);\n\n            subjects.push(newObj);\n          }\n        });\n        this.setState({\n          subjects\n        });\n      });\n    };\n\n    this.handleChangeSubject = name => event => {\n      let obj = JSON.parse(event.target.value);\n      this.setState({\n        itemSubject: event.target.value,\n        subjectId: obj.subjectId,\n        subjectName: obj.subjectName,\n        subjectColor: obj.subjectColor,\n        courseId: obj.courseId\n      });\n    };\n\n    this.editVirtualClass = e => {\n      e.preventDefault();\n\n      if (this.state.endTimeClassError && this.state.startTimeClassError) {\n        let dateClass = moment(this.state.dateVirtualClass).format(\"LL\");\n        let endHourClass = moment(this.state.endTimeClass).format(\"HH:mm\");\n        let startHourClass = moment(this.state.startTimeClass).format(\"HH:mm\");\n        let timedebutAdd = Date.parse(dateClass + \" \" + startHourClass) / 60000;\n        let timefinAdd = Date.parse(dateClass + \" \" + endHourClass) / 60000;\n        const result = this.props.virtualClasses.filter(item => {\n          let dateClassItem = moment(item.date_virtual_class).format(\"LL\");\n          let endHourClassItem = moment(item.end_time_class).format(\"HH:mm\");\n          let startHourClassItem = moment(item.start_time_class).format(\"HH:mm\");\n          let timedebutItem = Date.parse(dateClassItem + \" \" + startHourClassItem) / 60000;\n          let timefinItem = Date.parse(dateClassItem + \" \" + endHourClassItem) / 60000;\n          return item.id != this.state.id && item.classeId == this.state.classId && dateClassItem == dateClass && (timedebutAdd <= timedebutItem && timefinItem <= timefinAdd || timedebutItem <= timedebutAdd && timedebutAdd <= timefinItem || timedebutItem <= timefinAdd && timefinAdd <= timefinItem);\n        });\n\n        if (result.length > 0) {\n          this.setState({\n            alerteDate: true\n          });\n          setTimeout(() => {\n            this.setState({\n              alerteDate: false\n            });\n          }, 3000);\n        } else {\n          if (this.state.classUrl !== this.state.classUrlOld || this.state.password !== this.state.passwordOld || this.state.virtualClassName != this.state.virtualClassNameOld) {\n            this.setState({\n              call: true\n            });\n          }\n\n          let data = {\n            virtualClassName: this.state.virtualClassName,\n            accessibility: this.state.accessibility,\n            classId: this.state.classId,\n            subjectId: this.state.subjectId,\n            courseId: this.state.courseId,\n            professorId: this.state.professorId,\n            dateVirtualClass: this.state.dateVirtualClass,\n            startTimeClass: this.state.startTimeClass,\n            endTimeClass: this.state.endTimeClass,\n            classUrl: this.state.classUrl,\n            password: this.state.password,\n            profName: this.state.profName,\n            profSurname: this.state.profSurname,\n            subjectName: this.state.subjectName,\n            classeName: this.state.classeName,\n            subjectColor: this.state.subjectColor,\n            publish: this.state.publish,\n            id: this.state.id,\n            description: this.state.description\n          };\n          this.props.editClassVirtual(data);\n          this.setState({\n            call: false,\n            editIsopen: false,\n            virtualClassName: \"\",\n            accessibility: \"\",\n            courseId: null,\n            classId: null,\n            subjectId: null,\n            professorId: null,\n            dateVirtualClass: new Date(),\n            startTimeClass: new Date(),\n            endTimeClass: new Date(),\n            classUrl: \"\",\n            password: \"\",\n            profName: \"\",\n            profSurname: \"\",\n            subjectName: \"\",\n            classeName: \"\",\n            itemClass: \"\",\n            itemProfessor: \"\",\n            itemSubject: \"\",\n            publish: false,\n            description: \"\"\n          });\n        }\n      }\n    };\n\n    this.addClassShowModal = () => {\n      this.setState({\n        addIsopen: true\n      });\n    };\n\n    this.editClassShowModal = ClassObjectEdit => {\n      if (ClassObjectEdit.virtual_class_status === \"program√©e\") {\n        if (this.props.userProfile.role_id === roleIdProfessor) {\n          this.setState({\n            classId: null\n          });\n          let apiEndpoint = `${baseUrl.baseUrl}/professors?access_token=${localStorage.token}&filter[where][profile_id]=${this.props.userProfile.id}&filter[include][course][assignmentClassSubject]=class&filter[include][course][assignmentClassSubject]=subject`;\n          axios.get(apiEndpoint).then(res => {\n            let data = _.map(res.data, \"course\");\n\n            let classes = [];\n            let assignmentClassSubject = [];\n            data[0].forEach(element => {\n              if (element.assignmentClassSubject.class.fk_id_school_year == this.props.userProfile.school_year_id) {\n                let newObj = { ...element.assignmentClassSubject,\n                  courseId: element.id\n                };\n                classes.push(element.assignmentClassSubject.class);\n                assignmentClassSubject.push(newObj);\n              }\n            });\n            this.setState({\n              classes,\n              subjects: assignmentClassSubject\n            });\n          });\n        } else {\n          this.setState({\n            classes: this.props.ClassSettings\n          });\n          let apiEndpoint1 = `${baseUrl.baseUrl}/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_class_v4]=${ClassObjectEdit.classeId}&filter[include][course][professor][profile][user]`;\n          axios.get(apiEndpoint1).then(res => {\n            let courses = [];\n            res.data.forEach(element => {\n              courses.push(element.course);\n            });\n\n            let newCoursesList = _.flatten(courses);\n\n            this.setState({\n              professors: newCoursesList\n            });\n          });\n          let apiEndpoint = `${baseUrl.baseUrl}/course_v4?access_token=${localStorage.token}&filter[where][fk_id_professor]=${ClassObjectEdit.profId}&filter[include][assignmentClassSubject][subject]`;\n          axios.get(apiEndpoint).then(res => {\n            let subjects = [];\n            res.data.forEach(element => {\n              if (element.assignmentClassSubject.fk_id_class_v4 === this.state.classId) {\n                let newObj = { ...element.assignmentClassSubject,\n                  courseId: element.id\n                };\n                subjects.push(newObj);\n              }\n            });\n            this.setState({\n              subjects\n            });\n          });\n        }\n\n        this.setState({\n          editIsopen: true,\n          dateVirtualClass: ClassObjectEdit.date_virtual_class,\n          virtualClassName: ClassObjectEdit.virtual_class_name,\n          classUrl: ClassObjectEdit.class_url,\n          password: ClassObjectEdit.password,\n          description: ClassObjectEdit.description,\n          classUrlOld: ClassObjectEdit.class_url,\n          passwordOld: ClassObjectEdit.password,\n          virtualClassNameOld: ClassObjectEdit.virtual_class_name,\n          startTimeClass: ClassObjectEdit.start_time_class,\n          endTimeClass: ClassObjectEdit.end_time_class,\n          virtualClassStatus: ClassObjectEdit.virtual_class_status,\n          accessibility: ClassObjectEdit.accessibility,\n          id: ClassObjectEdit.id,\n          classId: ClassObjectEdit.classeId,\n          subjectId: ClassObjectEdit.subjectId,\n          courseId: ClassObjectEdit.fk_id_course_v4,\n          professorId: ClassObjectEdit.profId,\n          profName: ClassObjectEdit.profName,\n          profSurname: ClassObjectEdit.profSurname,\n          subjectName: ClassObjectEdit.subjectName,\n          classeName: ClassObjectEdit.classeName,\n          subjectColor: ClassObjectEdit.subjectColor,\n          publish: ClassObjectEdit.publish,\n          itemClass: JSON.stringify({\n            classId: ClassObjectEdit.classeId,\n            classeName: ClassObjectEdit.classeName\n          }),\n          itemProfessor: JSON.stringify({\n            profId: ClassObjectEdit.profId,\n            profName: ClassObjectEdit.profName,\n            profSurname: ClassObjectEdit.profSurname\n          }),\n          itemSubject: JSON.stringify({\n            subjectId: ClassObjectEdit.subjectId,\n            subjectName: ClassObjectEdit.subjectName,\n            subjectColor: ClassObjectEdit.subjectColor,\n            courseId: ClassObjectEdit.fk_id_course_v4\n          })\n        });\n      }\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        addIsopen: false,\n        editIsopen: false,\n        deleteIsopen: false,\n        showIsopen: false,\n        isOpenDetails: false\n      });\n    };\n\n    this.handleDelete = item => {\n      this.setState({\n        deleteIsopen: true,\n        deleteItem: item\n      });\n    };\n\n    this.handleDeleteVirtualClass = event => {\n      this.props.deleteClassVirtual(this.state.deleteItem);\n      this.setState({\n        deleteIsopen: false\n      });\n    };\n\n    this.state = {\n      dateVirtualClass: new Date(),\n      virtualClassName: \"\",\n      classUrl: \"\",\n      password: \"\",\n      description: \"\",\n      virtualClassNameOld: \"\",\n      classUrlOld: \"\",\n      passwordOld: \"\",\n      startTimeClass: new Date(),\n      endTimeClass: new Date(),\n      virtualClassStatus: \"\",\n      accessibility: true,\n      classId: null,\n      subjectId: null,\n      courseId: null,\n      professorId: null,\n      id: null,\n      classes: [],\n      professors: [],\n      subjects: [],\n      assignmentClassSubject: [],\n      profName: \"\",\n      profSurname: \"\",\n      subjectName: \"\",\n      classeName: \"\",\n      subjectColor: \"\",\n      itemClass: \"\",\n      itemProfessor: \"\",\n      itemSubject: \"\",\n      publish: false,\n      isOpenDetails: false,\n      professorIdFilter: \"\",\n      studentClassIdFilter: \"\",\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: true,\n      class_object: \"\",\n      level_id: \"\",\n      section_id: \"\",\n      professor_id: \"\",\n      class_id: \"\",\n      subject_id: \"\",\n      class_url: \"\",\n      class_password: \"\",\n      class_date: \"\",\n      selectedStartTime: new Date(),\n      selectedEndTime: new Date(),\n      startTime: \"\",\n      endTime: \"\",\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: [],\n      professorClassesAdd: [],\n      profSubjects: [],\n      // showModaldetails: false,\n      classItem: {},\n      deleteItem: {},\n      virtualClasses: [],\n      roleUserId: 1,\n      ListPrivateVirtuelClasses: [],\n      ListPublicVirtuelClasses: [],\n      alerteDate: false,\n      startTimeClassError: true,\n      endTimeClassError: true\n    };\n    this.addClassShowModal = this.addClassShowModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStartTimeChange = this.handleStartTimeChange.bind(this);\n    this.handleEndTimeChange = this.handleEndTimeChange.bind(this);\n    this.editVirtualClass = this.editVirtualClass.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeProfessor = this.handleChangeProfessor.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDeleteVirtualClass = this.handleDeleteVirtualClass.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.virtualClasses !== this.props.virtualClasses) {\n      this.setState({\n        virtualClasses: this.props.virtualClasses\n      });\n    }\n\n    if (prevProps.filterStatus !== this.props.filterStatus) {\n      let VirtualClassListFinal = this.props.virtualClasses.filter(elementItem => {\n        const sys = Date.parse(new Date()) / 60000;\n        const start = Date.parse(elementItem.date_virtual_class.slice(0, 10) + \" \" + moment(elementItem.start_time_class).format(\"HH:mm\")) / 60000;\n        const end = Date.parse(elementItem.date_virtual_class.slice(0, 10) + \" \" + moment(elementItem.end_time_class).format(\"HH:mm\")) / 60000;\n\n        if (this.props.filterStatus == \"upcoming\" && start > sys && end > sys) {\n          return elementItem;\n        } else if (this.props.filterStatus == \"progress\" && start < sys && end > sys) {\n          return elementItem;\n        } else if (this.props.filterStatus == \"past\" && start < sys && end < sys) {\n          return elementItem;\n        } else if (this.props.filterStatus == \"all\") {\n          return elementItem;\n        }\n      });\n      this.setState({\n        virtualClasses: VirtualClassListFinal\n      });\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    this.props.getClassesByEstablishmentId(this.props.userProfile.establishment_id);\n    this.setState({\n      virtualClasses: this.props.virtualClasses\n    });\n\n    if (this.props.userProfile.role_id === roleIdProfessor) {\n      let apiEndpoint = `${baseUrl.baseUrl}/professors?access_token=${localStorage.token}&filter[where][profile_id]=${this.props.userProfile.id}&filter[include][course][assignmentClassSubject]=class&filter[include][course][assignmentClassSubject]=subject`;\n      axios.get(apiEndpoint).then(res => {\n        let data = _.map(res.data, \"course\");\n\n        let classes = [];\n        let assignmentClassSubject = [];\n        data[0].forEach(element => {\n          classes.push(element.assignmentClassSubject.class);\n          assignmentClassSubject.push(element.assignmentClassSubject);\n        });\n        this.setState({\n          classes,\n          professorId: res.data[0].id,\n          assignmentClassSubject\n        });\n      });\n    } else {\n      this.setState({\n        classes: this.props.ClassSettings\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-lg-12 col-sm-6 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"   price-tables row pt-default d-flex justify-content-start \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }\n    }, !_.isEmpty(this.state.virtualClasses) ? this.state.virtualClasses.map((element, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-3 col-sm-6 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(VirtualClassListItems, {\n      key: index,\n      index: index,\n      Item: element,\n      subjectList: this.props.subjectList,\n      editClassShowModal: this.editClassShowModal,\n      handleShowClassDetails: this.handleShowClassDetails,\n      handleDelete: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 17\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 13\n      }\n    })), this.state.editIsopen === true ? /*#__PURE__*/React.createElement(EditVitualClass, {\n      editIsopen: this.state.editIsopen,\n      handleCancel: this.handleCancel,\n      editVirtualClass: this.editVirtualClass,\n      values: this.state,\n      handleChangeDate: this.handleChangeDate,\n      handleChange: this.handleChange,\n      handleStartTimeChange: this.handleStartTimeChange,\n      handleEndTimeChange: this.handleEndTimeChange,\n      addVirtualClass: this.addVirtualClass,\n      handleChangeClass: this.handleChangeClass,\n      handleChangeProfessor: this.handleChangeProfessor,\n      handleChangeSubject: this.handleChangeSubject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }\n    }) : \"\", this.state.deleteIsopen === true ? /*#__PURE__*/React.createElement(DeleteVirtualClass, {\n      handleDeleteVirtualClass: this.handleDeleteVirtualClass,\n      deleteItem: this.state.deleteItem,\n      handleCancel: this.handleCancel,\n      deleteIsopen: this.state.deleteIsopen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 11\n      }\n    }) : \"\", this.state.call == true ? /*#__PURE__*/React.createElement(JitsiComponent, {\n      values: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    ClassSettings: state.ClassSettingsReducer.classSettings\n  };\n}\n\nexport default connect(mapStateToProps, {\n  editClassVirtual,\n  getClassesByEstablishmentId,\n  deleteClassVirtual\n})(VirtualClassList);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/Learning/routes/VirtualClasses/VirtualClassList.js"],"names":["React","Component","VirtualClassListItems","EditVitualClass","editClassVirtual","deleteClassVirtual","connect","getSectionFromLevel","getLevelListFromEstabType","axios","baseUrl","getClassesByEstablishmentId","roleIdAdmin","roleIdProfessor","roleIdParent","roleIdStudent","_","DeleteVirtualClass","privateStatus","publicStatus","allStatus","JitsiComponent","moment","VirtualClassList","constructor","props","handleChange","name","event","setState","target","value","handleStartTimeChange","time","startTimeClassError","state","dateVirtualClass","format","Date","_d","isBefore","endTimeClass","isAfter","endTimeClassError","startTimeClass","handleEndTimeChange","handleChangeDate","date","handleChangeClass","obj","JSON","parse","classId","classeName","userProfile","role_id","subjects","assignmentClassSubject","filter","element","class","id","apiEndpoint","localStorage","token","get","then","res","courses","data","forEach","push","course","newCoursesList","flatten","professors","professorId","handleChangeProfessor","profId","profName","profSurname","itemProfessor","fk_id_class_v4","newObj","courseId","handleChangeSubject","itemSubject","subjectId","subjectName","subjectColor","editVirtualClass","e","preventDefault","dateClass","endHourClass","startHourClass","timedebutAdd","timefinAdd","result","virtualClasses","item","dateClassItem","date_virtual_class","endHourClassItem","end_time_class","startHourClassItem","start_time_class","timedebutItem","timefinItem","classeId","length","alerteDate","setTimeout","classUrl","classUrlOld","password","passwordOld","virtualClassName","virtualClassNameOld","call","accessibility","publish","description","editIsopen","itemClass","addClassShowModal","addIsopen","editClassShowModal","ClassObjectEdit","virtual_class_status","map","classes","fk_id_school_year","school_year_id","ClassSettings","apiEndpoint1","virtual_class_name","class_url","virtualClassStatus","fk_id_course_v4","stringify","handleCancel","deleteIsopen","showIsopen","isOpenDetails","handleDelete","deleteItem","handleDeleteVirtualClass","professorIdFilter","studentClassIdFilter","class_object","level_id","section_id","professor_id","class_id","subject_id","class_password","class_date","selectedStartTime","selectedEndTime","startTime","endTime","studentsectionByLevels","Disable_studentsection","levelsbyestablishment","studentClassesByLevelSectionID","subjectList","establishmentProfessor","professorClassesAdd","profSubjects","classItem","roleUserId","ListPrivateVirtuelClasses","ListPublicVirtuelClasses","bind","componentDidUpdate","prevProps","prevState","filterStatus","VirtualClassListFinal","elementItem","sys","start","slice","end","UNSAFE_componentWillMount","establishment_id","render","isEmpty","index","handleShowClassDetails","addVirtualClass","mapStateToProps","auth","ClassSettingsReducer","classSettings"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport VirtualClassListItems from \"./VirtualClassListItems\";\nimport EditVitualClass from \"./EditVitualClass\";\nimport { editClassVirtual } from \"../../../../../actions/VirtualClassAction\";\nimport { deleteClassVirtual } from \"../../../../../actions/VirtualClassAction\";\nimport { connect } from \"react-redux\";\nimport { getSectionFromLevel } from \"../../../../../actions/sectionAction\";\nimport { getLevelListFromEstabType } from \"../../../../../actions/classLevelAction\";\nimport axios from \"axios\";\nimport baseUrl from \"../../../../../config/config\";\nimport { getClassesByEstablishmentId } from \"../../../../../actions/classeAction\";\nimport { roleIdAdmin } from \"../../../../../config/config\";\nimport { roleIdProfessor } from \"../../../../../config/config\";\nimport { roleIdParent } from \"../../../../../config/config\";\nimport { roleIdStudent } from \"../../../../../config/config\";\nimport _ from \"lodash\";\nimport DeleteVirtualClass from \"./DeleteVirtualClass\";\nimport {\n  privateStatus,\n  publicStatus,\n  allStatus,\n} from \"../../../../../config/config\";\nimport JitsiComponent from \"./JitsiComponent\";\nimport moment from \"moment\";\n\nclass VirtualClassList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dateVirtualClass: new Date(),\n      virtualClassName: \"\",\n      classUrl: \"\",\n      password: \"\",\n      description: \"\",\n      virtualClassNameOld: \"\",\n      classUrlOld: \"\",\n      passwordOld: \"\",\n      startTimeClass: new Date(),\n      endTimeClass: new Date(),\n      virtualClassStatus: \"\",\n      accessibility: true,\n      classId: null,\n      subjectId: null,\n      courseId: null,\n      professorId: null,\n      id: null,\n      classes: [],\n      professors: [],\n      subjects: [],\n      assignmentClassSubject: [],\n      profName: \"\",\n      profSurname: \"\",\n      subjectName: \"\",\n      classeName: \"\",\n      subjectColor: \"\",\n      itemClass: \"\",\n      itemProfessor: \"\",\n      itemSubject: \"\",\n      publish: false,\n      isOpenDetails: false,\n\n      professorIdFilter: \"\",\n      studentClassIdFilter: \"\",\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: true,\n      class_object: \"\",\n      level_id: \"\",\n      section_id: \"\",\n      professor_id: \"\",\n      class_id: \"\",\n      subject_id: \"\",\n      class_url: \"\",\n      class_password: \"\",\n      class_date: \"\",\n      selectedStartTime: new Date(),\n      selectedEndTime: new Date(),\n      startTime: \"\",\n      endTime: \"\",\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: [],\n      professorClassesAdd: [],\n      profSubjects: [],\n      // showModaldetails: false,\n      classItem: {},\n      deleteItem: {},\n      virtualClasses: [],\n      roleUserId: 1,\n      ListPrivateVirtuelClasses: [],\n      ListPublicVirtuelClasses: [],\n      alerteDate: false,\n      startTimeClassError: true,\n      endTimeClassError: true,\n    };\n    this.addClassShowModal = this.addClassShowModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStartTimeChange = this.handleStartTimeChange.bind(this);\n    this.handleEndTimeChange = this.handleEndTimeChange.bind(this);\n    this.editVirtualClass = this.editVirtualClass.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeProfessor = this.handleChangeProfessor.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDeleteVirtualClass = this.handleDeleteVirtualClass.bind(this);\n  }\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleStartTimeChange = (time) => {\n    let startTimeClassError;\n\n    if (\n      moment(this.state.dateVirtualClass).format(\"LL\") ==\n      moment(new Date()).format(\"LL\")\n    ) {\n      startTimeClassError =\n        moment(time._d).isBefore(this.state.endTimeClass) &&\n        moment(time._d).isAfter(this.state.dateVirtualClass);\n    } else {\n      startTimeClassError = moment(time._d).isBefore(this.state.endTimeClass);\n    }\n\n    let endTimeClassError = moment(this.state.endTimeClass).isAfter(time._d);\n    this.setState({\n      startTimeClass: time._d,\n      startTimeClassError: startTimeClassError,\n      endTimeClassError: endTimeClassError,\n    });\n  };\n\n  handleEndTimeChange = (time) => {\n    let endTimeClassError = moment(time._d).isAfter(this.state.startTimeClass);\n    let startTimeClassError;\n\n    if (\n      moment(this.state.dateVirtualClass).format(\"LL\") ==\n      moment(new Date()).format(\"LL\")\n    ) {\n      startTimeClassError =\n        moment(this.state.startTimeClass).isBefore(time._d) &&\n        moment(this.state.startTimeClass).isAfter(this.state.dateVirtualClass);\n    } else {\n      startTimeClassError = moment(this.state.startTimeClass).isBefore(time._d);\n    }\n\n    this.setState({\n      endTimeClass: time._d,\n      endTimeClassError: endTimeClassError,\n      startTimeClassError: startTimeClassError,\n    });\n  };\n\n  handleChangeDate = (date) => {\n    let startTimeClassError;\n\n    if (moment(date._d).format(\"LL\") == moment(new Date()).format(\"LL\")) {\n      startTimeClassError =\n        moment(this.state.startTimeClass).isBefore(this.state.endTimeClass) &&\n        moment(this.state.startTimeClass).isAfter(date._d);\n    } else {\n      startTimeClassError = moment(this.state.startTimeClass).isBefore(\n        this.state.endTimeClass\n      );\n    }\n    this.setState({\n      dateVirtualClass: date._d,\n      startTimeClassError: startTimeClassError,\n    });\n  };\n\n  handleChangeClass = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    let obj = JSON.parse(event.target.value);\n    this.setState({\n      classId: obj.classId,\n      classeName: obj.classeName,\n    });\n    if (this.props.userProfile.role_id === roleIdProfessor) {\n      let subjects = this.state.assignmentClassSubject.filter(\n        (element) => element.class.id === obj.classId\n      );\n      this.setState({ subjects });\n    } else {\n      let apiEndpoint = `${baseUrl.baseUrl}/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_class_v4]=${obj.classId}&filter[include][course][professor][profile][user]`;\n      axios.get(apiEndpoint).then((res) => {\n        let courses = [];\n        res.data.forEach((element) => {\n          courses.push(element.course);\n        });\n        let newCoursesList = _.flatten(courses);\n        this.setState({\n          professors: newCoursesList,\n          subjects: [],\n          professorId: null,\n        });\n      });\n    }\n  };\n\n  handleChangeProfessor = (name) => (event) => {\n    let obj = JSON.parse(event.target.value);\n    this.setState({\n      professorId: obj.profId,\n      profName: obj.profName,\n      profSurname: obj.profSurname,\n      itemProfessor: event.target.value,\n    });\n    let apiEndpoint = `${baseUrl.baseUrl}/course_v4?access_token=${localStorage.token}&filter[where][fk_id_professor]=${obj.profId}&filter[include][assignmentClassSubject][subject]`;\n    axios.get(apiEndpoint).then((res) => {\n      let subjects = [];\n      res.data.forEach((element) => {\n        if (\n          element.assignmentClassSubject.fk_id_class_v4 === this.state.classId\n        ) {\n          let newObj = {\n            ...element.assignmentClassSubject,\n            courseId: element.id,\n          };\n\n          // subjects.push(element.assignmentClassSubject);\n          subjects.push(newObj);\n        }\n      });\n      this.setState({ subjects });\n    });\n  };\n\n  handleChangeSubject = (name) => (event) => {\n    let obj = JSON.parse(event.target.value);\n    this.setState({\n      itemSubject: event.target.value,\n      subjectId: obj.subjectId,\n      subjectName: obj.subjectName,\n      subjectColor: obj.subjectColor,\n      courseId: obj.courseId,\n    });\n  };\n\n  editVirtualClass = (e) => {\n    e.preventDefault();\n    if (this.state.endTimeClassError && this.state.startTimeClassError) {\n      let dateClass = moment(this.state.dateVirtualClass).format(\"LL\");\n      let endHourClass = moment(this.state.endTimeClass).format(\"HH:mm\");\n      let startHourClass = moment(this.state.startTimeClass).format(\"HH:mm\");\n      let timedebutAdd = Date.parse(dateClass + \" \" + startHourClass) / 60000;\n      let timefinAdd = Date.parse(dateClass + \" \" + endHourClass) / 60000;\n\n      const result = this.props.virtualClasses.filter((item) => {\n        let dateClassItem = moment(item.date_virtual_class).format(\"LL\");\n        let endHourClassItem = moment(item.end_time_class).format(\"HH:mm\");\n        let startHourClassItem = moment(item.start_time_class).format(\"HH:mm\");\n\n        let timedebutItem =\n          Date.parse(dateClassItem + \" \" + startHourClassItem) / 60000;\n        let timefinItem =\n          Date.parse(dateClassItem + \" \" + endHourClassItem) / 60000;\n\n        return (\n          item.id != this.state.id &&\n          item.classeId == this.state.classId &&\n          dateClassItem == dateClass &&\n          ((timedebutAdd <= timedebutItem && timefinItem <= timefinAdd) ||\n            (timedebutItem <= timedebutAdd && timedebutAdd <= timefinItem) ||\n            (timedebutItem <= timefinAdd && timefinAdd <= timefinItem))\n        );\n      });\n\n      if (result.length > 0) {\n        this.setState({ alerteDate: true });\n        setTimeout(() => {\n          this.setState({ alerteDate: false });\n        }, 3000);\n      } else {\n        if (\n          this.state.classUrl !== this.state.classUrlOld ||\n          this.state.password !== this.state.passwordOld ||\n          this.state.virtualClassName != this.state.virtualClassNameOld\n        ) {\n          this.setState({ call: true });\n        }\n        let data = {\n          virtualClassName: this.state.virtualClassName,\n          accessibility: this.state.accessibility,\n          classId: this.state.classId,\n          subjectId: this.state.subjectId,\n          courseId: this.state.courseId,\n          professorId: this.state.professorId,\n          dateVirtualClass: this.state.dateVirtualClass,\n          startTimeClass: this.state.startTimeClass,\n          endTimeClass: this.state.endTimeClass,\n          classUrl: this.state.classUrl,\n          password: this.state.password,\n          profName: this.state.profName,\n          profSurname: this.state.profSurname,\n          subjectName: this.state.subjectName,\n          classeName: this.state.classeName,\n          subjectColor: this.state.subjectColor,\n          publish: this.state.publish,\n          id: this.state.id,\n          description: this.state.description,\n        };\n\n        this.props.editClassVirtual(data);\n\n        this.setState({\n          call: false,\n          editIsopen: false,\n          virtualClassName: \"\",\n          accessibility: \"\",\n          courseId: null,\n          classId: null,\n          subjectId: null,\n          professorId: null,\n          dateVirtualClass: new Date(),\n          startTimeClass: new Date(),\n          endTimeClass: new Date(),\n          classUrl: \"\",\n          password: \"\",\n          profName: \"\",\n          profSurname: \"\",\n          subjectName: \"\",\n          classeName: \"\",\n          itemClass: \"\",\n          itemProfessor: \"\",\n          itemSubject: \"\",\n          publish: false,\n          description: \"\",\n        });\n      }\n    }\n  };\n\n  addClassShowModal = () => {\n    this.setState({ addIsopen: true });\n  };\n\n  editClassShowModal = (ClassObjectEdit) => {\n    if (ClassObjectEdit.virtual_class_status === \"program√©e\") {\n      if (this.props.userProfile.role_id === roleIdProfessor) {\n        this.setState({ classId: null });\n        let apiEndpoint = `${baseUrl.baseUrl}/professors?access_token=${localStorage.token}&filter[where][profile_id]=${this.props.userProfile.id}&filter[include][course][assignmentClassSubject]=class&filter[include][course][assignmentClassSubject]=subject`;\n        axios.get(apiEndpoint).then((res) => {\n          let data = _.map(res.data, \"course\");\n          let classes = [];\n          let assignmentClassSubject = [];\n          data[0].forEach((element) => {\n            if (\n              element.assignmentClassSubject.class.fk_id_school_year ==\n              this.props.userProfile.school_year_id\n            ) {\n              let newObj = {\n                ...element.assignmentClassSubject,\n                courseId: element.id,\n              };\n              classes.push(element.assignmentClassSubject.class);\n              assignmentClassSubject.push(newObj);\n            }\n          });\n          this.setState({ classes, subjects: assignmentClassSubject });\n        });\n      } else {\n        this.setState({ classes: this.props.ClassSettings });\n        let apiEndpoint1 = `${baseUrl.baseUrl}/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_class_v4]=${ClassObjectEdit.classeId}&filter[include][course][professor][profile][user]`;\n        axios.get(apiEndpoint1).then((res) => {\n          let courses = [];\n          res.data.forEach((element) => {\n            courses.push(element.course);\n          });\n          let newCoursesList = _.flatten(courses);\n          this.setState({ professors: newCoursesList });\n        });\n        let apiEndpoint = `${baseUrl.baseUrl}/course_v4?access_token=${localStorage.token}&filter[where][fk_id_professor]=${ClassObjectEdit.profId}&filter[include][assignmentClassSubject][subject]`;\n        axios.get(apiEndpoint).then((res) => {\n          let subjects = [];\n          res.data.forEach((element) => {\n            if (\n              element.assignmentClassSubject.fk_id_class_v4 ===\n              this.state.classId\n            ) {\n              let newObj = {\n                ...element.assignmentClassSubject,\n                courseId: element.id,\n              };\n\n              subjects.push(newObj);\n            }\n          });\n          this.setState({ subjects });\n        });\n      }\n\n      this.setState({\n        editIsopen: true,\n        dateVirtualClass: ClassObjectEdit.date_virtual_class,\n        virtualClassName: ClassObjectEdit.virtual_class_name,\n        classUrl: ClassObjectEdit.class_url,\n        password: ClassObjectEdit.password,\n        description: ClassObjectEdit.description,\n        classUrlOld: ClassObjectEdit.class_url,\n        passwordOld: ClassObjectEdit.password,\n        virtualClassNameOld: ClassObjectEdit.virtual_class_name,\n        startTimeClass: ClassObjectEdit.start_time_class,\n        endTimeClass: ClassObjectEdit.end_time_class,\n        virtualClassStatus: ClassObjectEdit.virtual_class_status,\n        accessibility: ClassObjectEdit.accessibility,\n        id: ClassObjectEdit.id,\n        classId: ClassObjectEdit.classeId,\n        subjectId: ClassObjectEdit.subjectId,\n        courseId: ClassObjectEdit.fk_id_course_v4,\n        professorId: ClassObjectEdit.profId,\n        profName: ClassObjectEdit.profName,\n        profSurname: ClassObjectEdit.profSurname,\n        subjectName: ClassObjectEdit.subjectName,\n        classeName: ClassObjectEdit.classeName,\n        subjectColor: ClassObjectEdit.subjectColor,\n        publish: ClassObjectEdit.publish,\n        itemClass: JSON.stringify({\n          classId: ClassObjectEdit.classeId,\n          classeName: ClassObjectEdit.classeName,\n        }),\n        itemProfessor: JSON.stringify({\n          profId: ClassObjectEdit.profId,\n          profName: ClassObjectEdit.profName,\n          profSurname: ClassObjectEdit.profSurname,\n        }),\n        itemSubject: JSON.stringify({\n          subjectId: ClassObjectEdit.subjectId,\n          subjectName: ClassObjectEdit.subjectName,\n          subjectColor: ClassObjectEdit.subjectColor,\n          courseId: ClassObjectEdit.fk_id_course_v4,\n        }),\n      });\n    }\n  };\n  handleCancel = () => {\n    this.setState({\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: false,\n      isOpenDetails: false,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.virtualClasses !== this.props.virtualClasses) {\n      this.setState({\n        virtualClasses: this.props.virtualClasses,\n      });\n    }\n\n    if (prevProps.filterStatus !== this.props.filterStatus) {\n      let VirtualClassListFinal = this.props.virtualClasses.filter(\n        (elementItem) => {\n          const sys = Date.parse(new Date()) / 60000;\n          const start =\n            Date.parse(\n              elementItem.date_virtual_class.slice(0, 10) +\n                \" \" +\n                moment(elementItem.start_time_class).format(\"HH:mm\")\n            ) / 60000;\n          const end =\n            Date.parse(\n              elementItem.date_virtual_class.slice(0, 10) +\n                \" \" +\n                moment(elementItem.end_time_class).format(\"HH:mm\")\n            ) / 60000;\n          if (\n            this.props.filterStatus == \"upcoming\" &&\n            start > sys &&\n            end > sys\n          ) {\n            return elementItem;\n          } else if (\n            this.props.filterStatus == \"progress\" &&\n            start < sys &&\n            end > sys\n          ) {\n            return elementItem;\n          } else if (\n            this.props.filterStatus == \"past\" &&\n            start < sys &&\n            end < sys\n          ) {\n            return elementItem;\n          } else if (this.props.filterStatus == \"all\") {\n            return elementItem;\n          }\n        }\n      );\n\n      this.setState({ virtualClasses: VirtualClassListFinal });\n    }\n  }\n  handleDelete = (item) => {\n    this.setState({ deleteIsopen: true, deleteItem: item });\n  };\n  handleDeleteVirtualClass = (event) => {\n    this.props.deleteClassVirtual(this.state.deleteItem);\n    this.setState({\n      deleteIsopen: false,\n    });\n  };\n  UNSAFE_componentWillMount() {\n    this.props.getClassesByEstablishmentId(\n      this.props.userProfile.establishment_id\n    );\n    this.setState({ virtualClasses: this.props.virtualClasses });\n    if (this.props.userProfile.role_id === roleIdProfessor) {\n      let apiEndpoint = `${baseUrl.baseUrl}/professors?access_token=${localStorage.token}&filter[where][profile_id]=${this.props.userProfile.id}&filter[include][course][assignmentClassSubject]=class&filter[include][course][assignmentClassSubject]=subject`;\n      axios.get(apiEndpoint).then((res) => {\n        let data = _.map(res.data, \"course\");\n        let classes = [];\n        let assignmentClassSubject = [];\n        data[0].forEach((element) => {\n          classes.push(element.assignmentClassSubject.class);\n          assignmentClassSubject.push(element.assignmentClassSubject);\n        });\n        this.setState({\n          classes,\n          professorId: res.data[0].id,\n          assignmentClassSubject,\n        });\n      });\n    } else {\n      this.setState({ classes: this.props.ClassSettings });\n    }\n  }\n  render() {\n    return (\n      <div className=\"col-md-12 col-lg-12 col-sm-6 \">\n        <div className=\"   price-tables row pt-default d-flex justify-content-start \">\n          {!_.isEmpty(this.state.virtualClasses) ? (\n            this.state.virtualClasses.map((element, index) => (\n              <div className=\"col-md-6 col-lg-3 col-sm-6 \">\n                <VirtualClassListItems\n                  key={index}\n                  index={index}\n                  Item={element}\n                  subjectList={this.props.subjectList}\n                  editClassShowModal={this.editClassShowModal}\n                  handleShowClassDetails={this.handleShowClassDetails}\n                  handleDelete={this.handleDelete}\n                />\n              </div>\n            ))\n          ) : (\n            <div></div>\n          )}\n        </div>\n\n        {this.state.editIsopen === true ? (\n          <EditVitualClass\n            editIsopen={this.state.editIsopen}\n            handleCancel={this.handleCancel}\n            editVirtualClass={this.editVirtualClass}\n            values={this.state}\n            handleChangeDate={this.handleChangeDate}\n            handleChange={this.handleChange}\n            handleStartTimeChange={this.handleStartTimeChange}\n            handleEndTimeChange={this.handleEndTimeChange}\n            addVirtualClass={this.addVirtualClass}\n            handleChangeClass={this.handleChangeClass}\n            handleChangeProfessor={this.handleChangeProfessor}\n            handleChangeSubject={this.handleChangeSubject}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {this.state.deleteIsopen === true ? (\n          <DeleteVirtualClass\n            handleDeleteVirtualClass={this.handleDeleteVirtualClass}\n            deleteItem={this.state.deleteItem}\n            handleCancel={this.handleCancel}\n            deleteIsopen={this.state.deleteIsopen}\n          />\n        ) : (\n          \"\"\n        )}\n        {this.state.call == true ? (\n          <JitsiComponent values={this.state} />\n        ) : (\n          <div></div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    ClassSettings: state.ClassSettingsReducer.classSettings,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    editClassVirtual,\n    getClassesByEstablishmentId,\n    deleteClassVirtual,\n  }\n)(VirtualClassList);\n"]},"metadata":{},"sourceType":"module"}