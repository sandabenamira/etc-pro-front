{"ast":null,"code":"import baseUrl from \"../config/config\";\nimport axios from \"axios\";\nimport { DATA_LOADED_STUPPUSER, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE, HIDE_WARNING_MESSAGE, SHOW_WARNING_MESSAGE, DATA_NEW_STUPPUSER } from \"../constants/ActionTypes\";\nimport _ from \"lodash\";\nimport { getError } from \"../Error/Error\";\nimport { classService } from \"../_services/class.service\";\nimport { roleIdStudent } from \"../config/config\";\n\nfunction getUsersByRole(usersList, role_id, establishment_id) {\n  let usersByRole = [];\n  establishment_id ? usersByRole = _.filter(usersList, function (user) {\n    return _.some(user.profiles, {\n      role_id: role_id,\n      establishment_id: establishment_id\n    });\n  }) : usersByRole = _.filter(usersList, function (user) {\n    return _.some(user.profiles, {\n      role_id: role_id\n    });\n  });\n  return usersByRole;\n}\n\nfunction getUserFromProfileId(usersList, profile_id) {\n  let userInfo = [];\n  userInfo = _.filter(usersList, function (user) {\n    return _.some(user.profiles, {\n      id: profile_id\n    });\n  });\n  return _.first(userInfo);\n}\n\nexport function getAllUsers() {\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/profiles?access_token=${localStorage.token}&filter[include]=user`).then(res => {\n      dispatch({\n        type: DATA_LOADED_STUPPUSER,\n        payload: res.data\n      });\n    });\n  };\n}\nexport function getAllUsersByEstablishmentId(establishment_id) {\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/profile_establishments?access_token=${localStorage.token}&filter[include][profile]=user&filter[include][profile]=professors&filter[include][profile]=students&filter[include][profile]=parents&filter[where][and][0][establishment_id]=` + establishment_id).then(res => {\n      const list = res.data;\n      const serviceList = list.filter(element => element.profile.user.status === true);\n\n      const newList = _.map(serviceList, \"profile\");\n\n      dispatch({\n        type: DATA_LOADED_STUPPUSER,\n        payload: newList\n      });\n    });\n  };\n}\nexport function fetchAllUsers() {\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/profiles?access_token=${localStorage.token}&filter[include]=user&filter[include]=professors&filter[include]=students`).then(res => {\n      const list = res.data;\n      const serviceList = list.filter(element => element.user.status === true);\n      dispatch({\n        type: DATA_LOADED_STUPPUSER,\n        payload: serviceList\n      });\n    });\n  };\n}\nexport function addStuppUser(stuppUser, userPhoto, parentStudentPhoto) {\n  if (stuppUser.nameParent !== \"\") {\n    return function (dispatch) {\n      var fileExtension1 = \"\";\n      var fileName1 = \"\";\n      var fileExtension2 = \"\";\n      var fileName2 = \"\";\n\n      if (userPhoto !== null) {\n        fileExtension1 = userPhoto.name.replace(/^.*\\./, \"\");\n        fileName1 = stuppUser.cin + stuppUser.establishment_Name + \".\" + fileExtension1;\n      } else {\n        fileName1 = null;\n      }\n\n      if (parentStudentPhoto !== null) {\n        fileExtension2 = parentStudentPhoto.name.replace(/^.*\\./, \"\");\n        fileName2 = stuppUser.cinParent + stuppUser.establishment_Name + \".\" + fileExtension2;\n      } else {\n        fileName2 = null;\n      }\n\n      axios.post(`${baseUrl.baseUrl}/users/create?access_token=${localStorage.token}`, {\n        name: stuppUser.name,\n        surname: stuppUser.surname,\n        gender: stuppUser.gender,\n        date_of_birth: stuppUser.date_of_birth,\n        address: stuppUser.address,\n        phone: stuppUser.phone,\n        status: true,\n        cin: stuppUser.cin,\n        zip_code: stuppUser.zip_code,\n        realm: stuppUser.name,\n        username: stuppUser.name + \".\" + stuppUser.surname,\n        email: stuppUser.email,\n        password: \"123456\",\n        emailVerified: false,\n        nameParent: stuppUser.nameParent,\n        surnameParent: stuppUser.surnameParent,\n        genderParent: stuppUser.genderParent,\n        date_of_birthParent: stuppUser.date_of_birthParent,\n        addressParent: stuppUser.addressParent,\n        phoneParent: stuppUser.phoneParent,\n        statusParent: true,\n        cinParent: stuppUser.cinParent,\n        zip_codeParent: stuppUser.zip_codeParent,\n        realmParent: stuppUser.nameParent,\n        usernameParent: stuppUser.nameParent + \".\" + stuppUser.surnameParent,\n        emailParent: stuppUser.emailParent,\n        passwordParent: \"123456\",\n        emailVerifiedParent: false,\n        date_start_contract: stuppUser.date_start_contract,\n        date_end_contract: stuppUser.date_end_contract,\n        establishment_id: stuppUser.establishment_id,\n        role_id: stuppUser.role_id,\n        listOfSubjects: stuppUser.listOfSubjects,\n        class_id: stuppUser.class_id,\n        service_id: stuppUser.service_id,\n        photo: fileName1,\n        parentStudentphoto: fileName2\n      }).then(response => {\n        dispatch(uploadStudentParentFile(response.data, userPhoto, parentStudentPhoto, stuppUser.establishment_Name, fileName1, fileName2));\n      }).catch(error => {\n        alert(\"Merci de vérifier votre champ obligatoire\");\n      });\n    };\n  } else {\n    return function (dispatch) {\n      var fileExtension1 = \"\";\n      var fileName1 = \"\";\n\n      if (userPhoto !== null) {\n        fileExtension1 = userPhoto.name.replace(/^.*\\./, \"\");\n        fileName1 = stuppUser.cin + stuppUser.establishment_Name + \".\" + fileExtension1;\n      } else {\n        fileName1 = null;\n      }\n\n      axios.post(`${baseUrl.baseUrl}/users/create?access_token=${localStorage.token}`, {\n        name: stuppUser.name,\n        surname: stuppUser.surname,\n        gender: stuppUser.gender,\n        date_of_birth: stuppUser.date_of_birth,\n        address: stuppUser.address,\n        phone: stuppUser.phone,\n        status: true,\n        cin: stuppUser.cin,\n        zip_code: stuppUser.zip_code,\n        realm: stuppUser.name,\n        username: stuppUser.name + \".\" + stuppUser.surname,\n        email: stuppUser.email,\n        password: \"123456\",\n        emailVerified: false,\n        nameParent: stuppUser.nameParent,\n        surnameParent: stuppUser.surnameParent,\n        genderParent: stuppUser.genderParent,\n        date_of_birthParent: stuppUser.date_of_birthParent,\n        addressParent: stuppUser.addressParent,\n        phoneParent: stuppUser.phoneParent,\n        statusParent: true,\n        cinParent: stuppUser.cinParent,\n        zip_codeParent: stuppUser.zip_codeParent,\n        realmParent: stuppUser.nameParent,\n        usernameParent: stuppUser.nameParent + \".\" + stuppUser.surnameParent,\n        emailParent: stuppUser.emailParent,\n        passwordParent: \"123456\",\n        emailVerifiedParent: false,\n        date_start_contract: stuppUser.date_start_contract,\n        date_end_contract: stuppUser.date_end_contract,\n        establishment_id: stuppUser.establishment_id,\n        role_id: stuppUser.role_id,\n        listOfSubjects: stuppUser.listOfSubjects,\n        class_id: stuppUser.class_id,\n        service_id: stuppUser.service_id,\n        photo: fileName1,\n        parentStudentphoto: null\n      }).then(response => {\n        dispatch(uploadFile(response.data.user, userPhoto, stuppUser.establishment_Name, fileName1));\n      }).catch(error => {\n        alert(\"Merci de vérifier votre champ obligatoire\");\n      });\n    };\n  }\n}\nexport function uploadFile(payload, file, establishmentName, fileName) {\n  if (fileName !== null) {\n    return function (dispatch) {\n      const myNewFile = new File([file], fileName, {\n        type: file.type\n      });\n      let formadata = new FormData();\n      formadata.append(\"image\", myNewFile);\n      const establishLogoUrl = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n      axios({\n        url: establishLogoUrl,\n        method: \"POST\",\n        data: formadata\n      }).then(response => {\n        dispatch({\n          type: \"ADD_STUPPUSER\",\n          payload: payload\n        });\n        alert(\"L'ajout est effectué avec succès\");\n      }).catch(err => {});\n    };\n  } else {\n    return function (dispatch) {\n      dispatch({\n        type: \"ADD_STUPPUSER\",\n        payload: payload\n      });\n      alert(\"L'ajout est effectué avec succès\");\n    };\n  }\n}\nexport function uploadStudentParentFile(payload, file, file2, establishmentName, fileName1, fileName2) {\n  if (fileName1 !== null && fileName2 !== null) {\n    return function (dispatch) {\n      const myNewFile = new File([file], fileName1, {\n        type: file.type\n      });\n      let formadata = new FormData();\n      formadata.append(\"image\", myNewFile);\n      const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + \"classebook.data.storage\" + `/upload?access_token=${localStorage.token}`;\n      axios({\n        url: establishLogoUrl,\n        method: \"POST\",\n        data: formadata\n      }).then(response => {\n        const myNewFile2 = new File([file2], fileName2, {\n          type: file2.type\n        });\n        let formadata2 = new FormData();\n        formadata2.append(\"image\", myNewFile2);\n        const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + \"classebook.data.storage\" + `/upload?access_token=${localStorage.token}`;\n        axios({\n          url: establishLogoUrl,\n          method: \"POST\",\n          data: formadata2\n        }).then(response => {\n          dispatch({\n            type: \"ADD_STUPPUSER\",\n            payload: payload.user\n          });\n          alert(\"L'ajout est effectué avec succès\");\n        }).catch(err => {});\n      }).catch(err => {});\n    };\n  } else if (fileName1 !== null && fileName2 === null) {\n    return function (dispatch) {\n      const myNewFile = new File([file], fileName1, {\n        type: file.type\n      });\n      let formadata = new FormData();\n      formadata.append(\"image\", myNewFile);\n      const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + \"classebook.data.storage\" + `/upload?access_token=${localStorage.token}`;\n      axios({\n        url: establishLogoUrl,\n        method: \"POST\",\n        data: formadata\n      }).then(response => {\n        dispatch({\n          type: \"ADD_STUPPUSER\",\n          payload: payload.user\n        });\n        alert(\"L'ajout est effectué avec succès\");\n      }).catch(err => {});\n    };\n  } else if (fileName1 === null && fileName2 !== null) {\n    return function (dispatch) {\n      const myNewFile = new File([file2], fileName2, {\n        type: file2.type\n      });\n      let formadata = new FormData();\n      formadata.append(\"image\", myNewFile);\n      const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + \"classebook.data.storage\" + `/upload?access_token=${localStorage.token}`;\n      axios({\n        url: establishLogoUrl,\n        method: \"POST\",\n        data: formadata\n      }).then(response => {\n        dispatch({\n          type: \"ADD_STUPPUSER\",\n          payload: payload.user\n        });\n        alert(\"L'ajout est effectué avec succès\");\n      }).catch(err => {});\n    };\n  } else {\n    return function (dispatch) {\n      dispatch({\n        type: \"ADD_STUPPUSER\",\n        payload: payload.user\n      });\n      alert(\"L'ajout est effectué avec succès\");\n    };\n  }\n}\nexport function editPassword(data) {\n  return function (dispatch) {\n    axios.post(`${baseUrl.baseUrl}/users/change-password?access_token=` + localStorage.token, {\n      oldPassword: data.currentPass,\n      newPassword: data.newPass\n    }).then(response => {\n      dispatch({\n        type: \"EDIT_PASSWORD\",\n        payload: response.data\n      });\n      dispatch({\n        type: SHOW_SUCCESS_MESSAGE,\n        payload: \"Le changement de votre mot de passe est effectué avec succès\"\n      });\n      setTimeout(() => {\n        dispatch({\n          type: HIDE_SUCCESS_MESSAGE\n        });\n      }, 4000);\n    }).catch(error => {\n      dispatch({\n        type: SHOW_ERROR_MESSAGE,\n        payload: \"Une erreur est survenue lors de la création merci de vérifier votre mot de passe\"\n      });\n      setTimeout(() => {\n        dispatch({\n          type: HIDE_ERROR_MESSAGE\n        });\n      }, 4000);\n    });\n  };\n}\nexport function editStuppUser(stuppUser, file, establishmentName) {\n  if (file !== null) {\n    if (stuppUser.photo !== null) {\n      return function (dispatch) {\n        let formadata = new FormData();\n        formadata.append(\"image\", file);\n        const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + establishmentName + `/files/` + stuppUser.photo + `?access_token=${localStorage.token}`;\n        axios({\n          url: establishLogoUrl,\n          method: \"DELETE\",\n          data: formadata\n        }).then(response => {\n          dispatch(uploadUserPhoto(stuppUser, file, establishmentName));\n        }).catch(err => {});\n      };\n    } else {\n      return function (dispatch) {\n        dispatch(uploadUserPhoto(stuppUser, file, establishmentName));\n      };\n    }\n  } else {\n    return function (dispatch) {\n      axios.patch(`${baseUrl.baseUrl}/users/` + stuppUser.id + `?access_token=${localStorage.token}`, {\n        name: stuppUser.name,\n        surname: stuppUser.surname,\n        gender: stuppUser.gender,\n        date_of_birth: stuppUser.date_of_birth,\n        address: stuppUser.address,\n        phone: stuppUser.phone,\n        status: true,\n        cin: stuppUser.cin,\n        zip_code: stuppUser.zip_code,\n        realm: stuppUser.name,\n        username: stuppUser.name + \".\" + stuppUser.surname,\n        email: stuppUser.email,\n        photo: stuppUser.photo\n      }).then(response => {\n        dispatch({\n          type: \"EDIT_STUPPUSER\",\n          payload: response.data\n        });\n        dispatch(editServices(stuppUser));\n      }).catch(function (error) {});\n    };\n  }\n}\nexport function editServices(stuppUser) {\n  const serviceList = stuppUser.services;\n\n  if (stuppUser.services.length > 0) {\n    axios.get(`${baseUrl.baseUrl}/students/findOne?access_token=?access_token=${localStorage.token}&filter={\"where\":{\"profile_id\":` + stuppUser.profile_id + `}}`).then(response => {\n      const student_id = response.data.id;\n      axios.get(`${baseUrl.baseUrl}/students_services?access_token=${localStorage.token}&filter={\"where\":{\"student_id\":` + student_id + `}}`).then(response => {\n        if (response.data.length === 0) {\n          serviceList.map(service => {\n            axios.post(`${baseUrl.baseUrl}/students_services?access_token=${localStorage.token}`, {\n              assignment_date: new Date(),\n              status: true,\n              student_id: student_id,\n              service_id: service\n            }).then(response => {}).catch(err => {});\n          });\n        } else {\n          let oldStudentService = response.data;\n          let studentService = oldStudentService.map(service => service.service_id);\n          const servicesID = studentService.concat(serviceList);\n          const uniq = [...new Set(servicesID)];\n          const NewServices = uniq.filter(n => !studentService.includes(n));\n          NewServices.map(service => {\n            axios.post(`${baseUrl.baseUrl}/students_services?access_token=${localStorage.token}`, {\n              assignment_date: new Date(),\n              status: true,\n              student_id: student_id,\n              service_id: service\n            }).then(response => {}).catch(err => {});\n          });\n        }\n      });\n      alert(\"La modification est effectué avec succès\", response.data.id);\n    }).catch(err => {});\n  } else {\n    return function (dispatch) {\n      alert(\"La modification est effectué avec succès\");\n    };\n  }\n}\nexport function updateUserDataPhoto(stuppUser, file, establishmentName) {\n  return function (dispatch) {\n    const fileExtension = file.name.replace(/^.*\\./, \"\");\n    const fileName = stuppUser.id + stuppUser.cin + \".\" + fileExtension;\n    axios.patch(`${baseUrl.baseUrl}/users/` + stuppUser.id + `?access_token=${localStorage.token}`, {\n      name: stuppUser.name,\n      surname: stuppUser.surname,\n      gender: stuppUser.gender,\n      date_of_birth: stuppUser.date_of_birth,\n      address: stuppUser.address,\n      phone: stuppUser.phone,\n      status: true,\n      cin: stuppUser.cin,\n      zip_code: stuppUser.zip_code,\n      realm: stuppUser.name,\n      username: stuppUser.name + \".\" + stuppUser.surname,\n      email: stuppUser.email,\n      photo: fileName\n    }).then(response => {\n      dispatch({\n        type: \"EDIT_STUPPUSER\",\n        payload: response.data\n      });\n      alert(\"La modification est effectué avec succès\");\n    }).catch(function (error) {});\n  };\n}\nexport function deleteUser(idItem) {\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/users/` + idItem + `?access_token=${localStorage.token}`).then(res => {\n      const datastuppUser = res.data;\n      axios.patch(`${baseUrl.baseUrl}/users/` + datastuppUser.id + `?access_token=${localStorage.token}`, {\n        status: false\n      }).then(response => {\n        dispatch({\n          type: \"DELETE_STUPPUSER\",\n          payload: response.data\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La suppression a été effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 2000);\n      }).catch(function (error) {});\n    });\n  };\n}\nexport function deleteStuppUser(idItem) {\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/users/` + idItem + `?access_token=${localStorage.token}`).then(res => {\n      const datastuppUser = res.data;\n      axios.put(`${baseUrl.baseUrl}/users/` + datastuppUser.id + `?access_token=${localStorage.token}`, {\n        name: datastuppUser.name,\n        surname: datastuppUser.surname,\n        gender: datastuppUser.gender,\n        date_of_birth: datastuppUser.date_of_birth,\n        address: datastuppUser.address,\n        phone: datastuppUser.phone,\n        status: false,\n        cin: datastuppUser.cin,\n        zip_code: datastuppUser.zip_code,\n        photo: datastuppUser.photo,\n        realm: datastuppUser.realm,\n        username: datastuppUser.username,\n        email: datastuppUser.email,\n        password: \"123456\",\n        emailVerified: datastuppUser.emailVerified,\n        id: datastuppUser.id\n      }).then(response => {\n        dispatch({\n          type: \"DELETE_STUPPUSER\",\n          payload: response.data\n        });\n      }).catch(function (error) {});\n    });\n  };\n}\nexport function uploadUserPhoto(id, stuppUser) {\n  return function (dispatch) {\n    const fileExtension = stuppUser.photo.name.replace(/^.*\\./, \"\");\n    const fileName = \"user\" + id + \".\" + fileExtension;\n    const myNewFile = new File([stuppUser.photo], fileName, {\n      type: stuppUser.photo.type\n    });\n    let formadata = new FormData();\n    formadata.append(\"image\", myNewFile);\n    const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + \"classebook.data.storage\" + `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata\n    }).then(response => {\n      axios.patch(`${baseUrl.baseUrl}/users/` + id + `?access_token=${localStorage.token}`, {\n        photo: fileName\n      }).then(res => {});\n    }).catch(err => {});\n  };\n}\nexport function addUser(stuppUser, fileName1) {\n  return function (dispatch) {\n    axios.post(`${baseUrl.baseUrl}/users/create-user?access_token=${localStorage.token}`, {\n      stuppUser\n    }).then(response => {\n      let newFormat = { ...response.data.user[1],\n        user: response.data.user[0],\n        professors: [response.data.user[2]],\n        students: [response.data.user[2]],\n        parents: []\n      };\n\n      if (response.data.user.statusCode === undefined) {\n        dispatch({\n          type: \"ADD_STUPPUSER\",\n          payload: newFormat\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectué avec succès\"\n        });\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: getError(response.data.user.statusCode)\n        });\n      }\n\n      setTimeout(function () {\n        if (response.data.user.statusCode === undefined) {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n\n          if (stuppUser.photo !== null) {\n            dispatch(uploadUserPhoto(response.data.user[0].id, stuppUser));\n          }\n        } else {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }\n      }.bind(this), 3000);\n    }).catch(err => {});\n  };\n}\nexport function editUser(stuppUser) {\n  return function (dispatch) {\n    dispatch({\n      type: \"EDIT_STUPPUSER_COMMON_INFORMATION\",\n      payload: stuppUser\n    });\n  };\n}\nexport function addSignature(data) {\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/users/` + data.idItem + `?access_token=${localStorage.token}`).then(res => {\n      const datastuppUser = res.data;\n      const fileExtension = data.file.name.replace(/^.*\\./, \"\");\n      const fileName = \"Signature_\" + datastuppUser.id + datastuppUser.cin + \".\" + fileExtension;\n      const myNewFile = new File([data.file], fileName, {\n        type: data.file.type\n      });\n      let formadata = new FormData();\n      formadata.append(\"image\", myNewFile);\n      axios.put(`${baseUrl.baseUrl}/users/` + datastuppUser.id + `?access_token=${localStorage.token}`, {\n        name: datastuppUser.name,\n        surname: datastuppUser.surname,\n        gender: datastuppUser.gender,\n        date_of_birth: datastuppUser.date_of_birth,\n        address: datastuppUser.address,\n        phone: datastuppUser.phone,\n        status: false,\n        cin: datastuppUser.cin,\n        zip_code: datastuppUser.zip_code,\n        photo: datastuppUser.photo,\n        realm: datastuppUser.realm,\n        username: datastuppUser.username,\n        email: datastuppUser.email,\n        password: \"123456\",\n        emailVerified: datastuppUser.emailVerified,\n        id: datastuppUser.id,\n        user_signature: fileName\n      }).then(response => {\n        var object = {};\n        object.file = data.file;\n        object.fileName = fileName;\n        object.establishmentID = data.establishmentID;\n        object.user = response.data;\n        dispatch(updateSignaturePhoto(object));\n      }).catch(function (error) {});\n    });\n  };\n}\nexport function updateSignaturePhoto(data) {\n  const fileName = data.fileName;\n  const myNewFile = new File([data.file], data.fileName, {\n    type: data.file.type\n  });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/establishments/` + data.establishmentID + `?access_token=${localStorage.token}`).then(res => {\n      const establishLogoUrl = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n      axios({\n        url: establishLogoUrl,\n        method: \"POST\",\n        data: formadata\n      }).then(response => {\n        dispatch({\n          type: \"EDIT_PROFILE_SIGNATURE\",\n          payload: data.user\n        });\n      }).catch(err => {});\n    }).catch(function (error) {});\n  };\n}\nexport function errorHandling() {\n  return function (dispatch) {\n    dispatch({\n      type: SHOW_ERROR_MESSAGE,\n      payload: \"Une erreur est survenue lors de la modification merci d'essayer à nouveau\"\n    });\n    setTimeout(() => {\n      dispatch({\n        type: HIDE_ERROR_MESSAGE\n      });\n    }, 4000);\n  };\n}\nexport function successHandling() {\n  return function (dispatch) {\n    dispatch({\n      type: SHOW_SUCCESS_MESSAGE,\n      payload: \"La modification est effectuée avec succès\"\n    });\n    setTimeout(() => {\n      dispatch({\n        type: HIDE_SUCCESS_MESSAGE\n      });\n    }, 4000);\n  };\n}\nexport function successAddUserHandling() {\n  return function (dispatch) {\n    dispatch({\n      type: SHOW_SUCCESS_MESSAGE,\n      payload: \"L'ajout est effectuée avec succès\"\n    });\n    setTimeout(() => {\n      dispatch({\n        type: HIDE_SUCCESS_MESSAGE\n      });\n    }, 4000);\n  };\n}\nexport function successHandlingSteper() {\n  return function (dispatch) {\n    dispatch({\n      type: \"SHOW_SUCCESS_STEPER\",\n      payload: \"La modification est effectuée avec succès pour l'étape précédente\"\n    });\n    setTimeout(() => {\n      dispatch({\n        type: \"HIDE_SUCCESS_STEPER\"\n      });\n    }, 4000);\n  };\n}\nexport function errorHandlingSteper() {\n  return function (dispatch) {\n    dispatch({\n      type: \"SHOW_ERROR_STEPER\",\n      payload: \"Une erreur est survenue lors de la modification merci d'essayer à nouveau\"\n    });\n    setTimeout(() => {\n      dispatch({\n        type: \"HIDE_ERROR_STEPER\"\n      });\n    }, 4000);\n  };\n}\nexport function uploadExcel(file, establishmentId) {\n  let apiEndpoint = \"\";\n\n  if (file !== null) {\n    let dataEstablishment = {};\n    return dispatch => {\n      apiEndpoint = `/establishments/` + establishmentId + `?access_token=${localStorage.token}`;\n      classService.get(apiEndpoint).then(response => {\n        dataEstablishment = {\n          establishment_id: response.data.id,\n          establishment_Name: response.data.name,\n          file_name: file.name\n        };\n        const data = new FormData();\n        data.append(\"file\", file);\n        apiEndpoint = `/containers/` + response.data.name + `/upload?access_token=${localStorage.token}`;\n        classService.post(apiEndpoint, data).then(response => {\n          let apiEndpoint = `/users/addUserByExcel?access_token=${localStorage.token}`;\n          classService.post(apiEndpoint, dataEstablishment).then(response => {\n            if (response.data.users.statusCode === undefined) {\n              dispatch({\n                type: \"ADD_STUPPUSER\",\n                payload: response.data.users\n              });\n\n              if (!_.isEmpty(response.data.errorUser)) {\n                let emails = _.join(_.map(response.data.errorUser, \"Email\"), \" ,\");\n\n                dispatch({\n                  type: SHOW_WARNING_MESSAGE,\n                  payload: `Une erreur est survenue lors de la création des utilisateurs suivants: ${emails} `\n                });\n                dispatch(getAllUsersByEstablishmentId(establishmentId));\n                setTimeout(() => {\n                  dispatch({\n                    type: HIDE_WARNING_MESSAGE\n                  });\n                }, 6000);\n              } else {\n                dispatch(getAllUsersByEstablishmentId(establishmentId));\n                dispatch({\n                  type: SHOW_SUCCESS_MESSAGE,\n                  payload: \"La création est effectué avec succès\"\n                });\n                setTimeout(() => {\n                  dispatch({\n                    type: HIDE_SUCCESS_MESSAGE\n                  });\n                }, 4000);\n              }\n            } else {\n              dispatch({\n                type: SHOW_ERROR_MESSAGE,\n                payload: getError(response.data.users.statusCode)\n              });\n              setTimeout(() => {\n                dispatch({\n                  type: HIDE_ERROR_MESSAGE\n                });\n              }, 4000);\n            }\n          });\n        });\n      });\n    };\n  } else {\n    alert(\"erreur\");\n  }\n}\nexport function getAllStudentByEstablishmentId(establishment_id) {\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/profiles?access_token=${localStorage.token}&filter[include]=user&filter[include]=students&filter[where][and][0][establishment_id]=${establishment_id}&filter[where][and][1][role_id]=${roleIdStudent}`).then(res => {\n      const list = res.data;\n      const serviceList = list.filter(element => element.user.status === true);\n      dispatch({\n        type: DATA_LOADED_STUPPUSER,\n        payload: serviceList\n      });\n    });\n  };\n}\nexport function addNewUser(newUser) {\n  return function (dispatch) {\n    dispatch({\n      type: DATA_NEW_STUPPUSER,\n      payload: newUser\n    });\n  };\n}\nexport function uploadAdminPhoto(id, stuppUser, newUser) {\n  return function (dispatch) {\n    const fileExtension = stuppUser.photo.name.replace(/^.*\\./, \"\");\n    const fileName = \"user\" + id + \".\" + fileExtension;\n    const myNewFile = new File([stuppUser.photo], fileName, {\n      type: stuppUser.photo.type\n    });\n    let formadata = new FormData();\n    formadata.append(\"image\", myNewFile);\n    const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + stuppUser.establishment_Name + `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata\n    }).then(response => {\n      axios.patch(`${baseUrl.baseUrl}/users/` + id + `?access_token=${localStorage.token}`, {\n        photo: fileName\n      }).then(res => {\n        let userInfo = { ...newUser,\n          user: res.data\n        };\n        dispatch(addNewUser(userInfo));\n      });\n    }).catch(err => {});\n  };\n}\nexport function uploadProfAndStudentPhoto(id, stuppUser, fileName) {\n  return function (dispatch) {\n    const myNewFile = new File([stuppUser.photo], fileName, {\n      type: stuppUser.photo.type\n    });\n    let formadata = new FormData();\n    formadata.append(\"image\", myNewFile);\n    const establishLogoUrl = `${baseUrl.baseUrl}/containers/` + stuppUser.establishment_Name + `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata\n    }).then(response => {\n      axios.patch(`${baseUrl.baseUrl}/users/` + id + `?access_token=${localStorage.token}`, {\n        photo: fileName\n      }).then(res => {});\n    }).catch(err => {});\n  };\n}\nexport { getUsersByRole, getUserFromProfileId };","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/actions/stuppUserAction.js"],"names":["baseUrl","axios","DATA_LOADED_STUPPUSER","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","HIDE_WARNING_MESSAGE","SHOW_WARNING_MESSAGE","DATA_NEW_STUPPUSER","_","getError","classService","roleIdStudent","getUsersByRole","usersList","role_id","establishment_id","usersByRole","filter","user","some","profiles","getUserFromProfileId","profile_id","userInfo","id","first","getAllUsers","dispatch","get","localStorage","token","then","res","type","payload","data","getAllUsersByEstablishmentId","list","serviceList","element","profile","status","newList","map","fetchAllUsers","addStuppUser","stuppUser","userPhoto","parentStudentPhoto","nameParent","fileExtension1","fileName1","fileExtension2","fileName2","name","replace","cin","establishment_Name","cinParent","post","surname","gender","date_of_birth","address","phone","zip_code","realm","username","email","password","emailVerified","surnameParent","genderParent","date_of_birthParent","addressParent","phoneParent","statusParent","zip_codeParent","realmParent","usernameParent","emailParent","passwordParent","emailVerifiedParent","date_start_contract","date_end_contract","listOfSubjects","class_id","service_id","photo","parentStudentphoto","response","uploadStudentParentFile","catch","error","alert","uploadFile","file","establishmentName","fileName","myNewFile","File","formadata","FormData","append","establishLogoUrl","url","method","err","file2","myNewFile2","formadata2","editPassword","oldPassword","currentPass","newPassword","newPass","setTimeout","editStuppUser","uploadUserPhoto","patch","editServices","services","length","student_id","service","assignment_date","Date","oldStudentService","studentService","servicesID","concat","uniq","Set","NewServices","n","includes","updateUserDataPhoto","fileExtension","deleteUser","idItem","datastuppUser","deleteStuppUser","put","addUser","newFormat","professors","students","parents","statusCode","undefined","bind","editUser","addSignature","user_signature","object","establishmentID","updateSignaturePhoto","errorHandling","successHandling","successAddUserHandling","successHandlingSteper","errorHandlingSteper","uploadExcel","establishmentId","apiEndpoint","dataEstablishment","file_name","users","isEmpty","errorUser","emails","join","getAllStudentByEstablishmentId","addNewUser","newUser","uploadAdminPhoto","uploadProfAndStudentPhoto"],"mappings":"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","sourcesContent":["import baseUrl from \"../config/config\";\nimport axios from \"axios\";\nimport {\n  DATA_LOADED_STUPPUSER,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n  HIDE_WARNING_MESSAGE,\n  SHOW_WARNING_MESSAGE,\n  DATA_NEW_STUPPUSER,\n} from \"../constants/ActionTypes\";\nimport _ from \"lodash\";\nimport { getError } from \"../Error/Error\";\nimport { classService } from \"../_services/class.service\";\nimport { roleIdStudent } from \"../config/config\";\nfunction getUsersByRole(usersList, role_id, establishment_id) {\n  let usersByRole = [];\n  establishment_id\n    ? (usersByRole = _.filter(usersList, function(user) {\n        return _.some(user.profiles, {\n          role_id: role_id,\n          establishment_id: establishment_id,\n        });\n      }))\n    : (usersByRole = _.filter(usersList, function(user) {\n        return _.some(user.profiles, { role_id: role_id });\n      }));\n  return usersByRole;\n}\n\nfunction getUserFromProfileId(usersList, profile_id) {\n  let userInfo = [];\n  userInfo = _.filter(usersList, function(user) {\n    return _.some(user.profiles, { id: profile_id });\n  });\n  return _.first(userInfo);\n}\nexport function getAllUsers() {\n  return function(dispatch) {\n    axios\n      .get(\n        `${baseUrl.baseUrl}/profiles?access_token=${localStorage.token}&filter[include]=user`\n      )\n      .then((res) => {\n        dispatch({ type: DATA_LOADED_STUPPUSER, payload: res.data });\n      });\n  };\n}\n\nexport function getAllUsersByEstablishmentId(establishment_id) {\n   return function(dispatch) {\n    axios\n      .get(\n        `${baseUrl.baseUrl}/profile_establishments?access_token=${localStorage.token}&filter[include][profile]=user&filter[include][profile]=professors&filter[include][profile]=students&filter[include][profile]=parents&filter[where][and][0][establishment_id]=` +\n          establishment_id\n      )\n      .then((res) => {\n        const list = res.data;\n         const serviceList = list.filter(\n          (element) => element.profile.user.status === true\n        );\n        const newList = _.map(serviceList, \"profile\");\n        dispatch({ type: DATA_LOADED_STUPPUSER, payload: newList });\n      });\n  };\n}\n\nexport function fetchAllUsers() {\n  return function(dispatch) {\n    axios\n      .get(\n        `${baseUrl.baseUrl}/profiles?access_token=${localStorage.token}&filter[include]=user&filter[include]=professors&filter[include]=students`\n      )\n\n      .then((res) => {\n        const list = res.data;\n        const serviceList = list.filter(\n          (element) => element.user.status === true\n        );\n        dispatch({ type: DATA_LOADED_STUPPUSER, payload: serviceList });\n      });\n  };\n}\n\nexport function addStuppUser(stuppUser, userPhoto, parentStudentPhoto) {\n  if (stuppUser.nameParent !== \"\") {\n    return function(dispatch) {\n      var fileExtension1 = \"\";\n      var fileName1 = \"\";\n      var fileExtension2 = \"\";\n      var fileName2 = \"\";\n      if (userPhoto !== null) {\n        fileExtension1 = userPhoto.name.replace(/^.*\\./, \"\");\n        fileName1 =\n          stuppUser.cin + stuppUser.establishment_Name + \".\" + fileExtension1;\n      } else {\n        fileName1 = null;\n      }\n      if (parentStudentPhoto !== null) {\n        fileExtension2 = parentStudentPhoto.name.replace(/^.*\\./, \"\");\n        fileName2 =\n          stuppUser.cinParent +\n          stuppUser.establishment_Name +\n          \".\" +\n          fileExtension2;\n      } else {\n        fileName2 = null;\n      }\n      axios\n        .post(\n          `${baseUrl.baseUrl}/users/create?access_token=${localStorage.token}`,\n          {\n            name: stuppUser.name,\n            surname: stuppUser.surname,\n            gender: stuppUser.gender,\n            date_of_birth: stuppUser.date_of_birth,\n            address: stuppUser.address,\n            phone: stuppUser.phone,\n            status: true,\n            cin: stuppUser.cin,\n            zip_code: stuppUser.zip_code,\n            realm: stuppUser.name,\n            username: stuppUser.name + \".\" + stuppUser.surname,\n            email: stuppUser.email,\n            password: \"123456\",\n            emailVerified: false,\n            nameParent: stuppUser.nameParent,\n            surnameParent: stuppUser.surnameParent,\n            genderParent: stuppUser.genderParent,\n            date_of_birthParent: stuppUser.date_of_birthParent,\n            addressParent: stuppUser.addressParent,\n            phoneParent: stuppUser.phoneParent,\n            statusParent: true,\n            cinParent: stuppUser.cinParent,\n            zip_codeParent: stuppUser.zip_codeParent,\n            realmParent: stuppUser.nameParent,\n            usernameParent:\n              stuppUser.nameParent + \".\" + stuppUser.surnameParent,\n            emailParent: stuppUser.emailParent,\n            passwordParent: \"123456\",\n            emailVerifiedParent: false,\n            date_start_contract: stuppUser.date_start_contract,\n            date_end_contract: stuppUser.date_end_contract,\n            establishment_id: stuppUser.establishment_id,\n            role_id: stuppUser.role_id,\n            listOfSubjects: stuppUser.listOfSubjects,\n            class_id: stuppUser.class_id,\n            service_id: stuppUser.service_id,\n            photo: fileName1,\n            parentStudentphoto: fileName2,\n          }\n        )\n        .then((response) => {\n          dispatch(\n            uploadStudentParentFile(\n              response.data,\n              userPhoto,\n              parentStudentPhoto,\n              stuppUser.establishment_Name,\n              fileName1,\n              fileName2\n            )\n          );\n        })\n        .catch((error) => {\n          alert(\"Merci de vérifier votre champ obligatoire\");\n        });\n    };\n  } else {\n    return function(dispatch) {\n      var fileExtension1 = \"\";\n      var fileName1 = \"\";\n      if (userPhoto !== null) {\n        fileExtension1 = userPhoto.name.replace(/^.*\\./, \"\");\n        fileName1 =\n          stuppUser.cin + stuppUser.establishment_Name + \".\" + fileExtension1;\n      } else {\n        fileName1 = null;\n      }\n\n      axios\n        .post(\n          `${baseUrl.baseUrl}/users/create?access_token=${localStorage.token}`,\n          {\n            name: stuppUser.name,\n            surname: stuppUser.surname,\n            gender: stuppUser.gender,\n            date_of_birth: stuppUser.date_of_birth,\n            address: stuppUser.address,\n            phone: stuppUser.phone,\n            status: true,\n            cin: stuppUser.cin,\n            zip_code: stuppUser.zip_code,\n            realm: stuppUser.name,\n            username: stuppUser.name + \".\" + stuppUser.surname,\n            email: stuppUser.email,\n            password: \"123456\",\n            emailVerified: false,\n            nameParent: stuppUser.nameParent,\n            surnameParent: stuppUser.surnameParent,\n            genderParent: stuppUser.genderParent,\n            date_of_birthParent: stuppUser.date_of_birthParent,\n            addressParent: stuppUser.addressParent,\n            phoneParent: stuppUser.phoneParent,\n            statusParent: true,\n            cinParent: stuppUser.cinParent,\n            zip_codeParent: stuppUser.zip_codeParent,\n            realmParent: stuppUser.nameParent,\n            usernameParent:\n              stuppUser.nameParent + \".\" + stuppUser.surnameParent,\n            emailParent: stuppUser.emailParent,\n            passwordParent: \"123456\",\n            emailVerifiedParent: false,\n            date_start_contract: stuppUser.date_start_contract,\n            date_end_contract: stuppUser.date_end_contract,\n            establishment_id: stuppUser.establishment_id,\n            role_id: stuppUser.role_id,\n            listOfSubjects: stuppUser.listOfSubjects,\n            class_id: stuppUser.class_id,\n            service_id: stuppUser.service_id,\n            photo: fileName1,\n            parentStudentphoto: null,\n          }\n        )\n        .then((response) => {\n          dispatch(\n            uploadFile(\n              response.data.user,\n              userPhoto,\n              stuppUser.establishment_Name,\n              fileName1\n            )\n          );\n        })\n        .catch((error) => {\n          alert(\"Merci de vérifier votre champ obligatoire\");\n        });\n    };\n  }\n}\n\nexport function uploadFile(payload, file, establishmentName, fileName) {\n  if (fileName !== null) {\n    return function(dispatch) {\n      const myNewFile = new File([file], fileName, { type: file.type });\n      let formadata = new FormData();\n      formadata.append(\"image\", myNewFile);\n      const establishLogoUrl = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n      axios({\n        url: establishLogoUrl,\n        method: \"POST\",\n        data: formadata,\n      })\n        .then((response) => {\n          dispatch({ type: \"ADD_STUPPUSER\", payload: payload });\n          alert(\"L'ajout est effectué avec succès\");\n        })\n        .catch((err) => {});\n    };\n  } else {\n    return function(dispatch) {\n      dispatch({ type: \"ADD_STUPPUSER\", payload: payload });\n      alert(\"L'ajout est effectué avec succès\");\n    };\n  }\n}\n\nexport function uploadStudentParentFile(\n  payload,\n  file,\n  file2,\n  establishmentName,\n  fileName1,\n  fileName2\n) {\n  if (fileName1 !== null && fileName2 !== null) {\n    return function(dispatch) {\n      const myNewFile = new File([file], fileName1, { type: file.type });\n      let formadata = new FormData();\n      formadata.append(\"image\", myNewFile);\n      const establishLogoUrl =\n        `${baseUrl.baseUrl}/containers/` +\n        \"classebook.data.storage\" +\n        `/upload?access_token=${localStorage.token}`;\n      axios({\n        url: establishLogoUrl,\n        method: \"POST\",\n        data: formadata,\n      })\n        .then((response) => {\n          const myNewFile2 = new File([file2], fileName2, { type: file2.type });\n          let formadata2 = new FormData();\n          formadata2.append(\"image\", myNewFile2);\n          const establishLogoUrl =\n            `${baseUrl.baseUrl}/containers/` +\n            \"classebook.data.storage\" +\n            `/upload?access_token=${localStorage.token}`;\n          axios({\n            url: establishLogoUrl,\n            method: \"POST\",\n            data: formadata2,\n          })\n            .then((response) => {\n              dispatch({ type: \"ADD_STUPPUSER\", payload: payload.user });\n              alert(\"L'ajout est effectué avec succès\");\n            })\n            .catch((err) => {});\n        })\n        .catch((err) => {});\n    };\n  } else if (fileName1 !== null && fileName2 === null) {\n    return function(dispatch) {\n      const myNewFile = new File([file], fileName1, { type: file.type });\n      let formadata = new FormData();\n      formadata.append(\"image\", myNewFile);\n      const establishLogoUrl =\n        `${baseUrl.baseUrl}/containers/` +\n        \"classebook.data.storage\" +\n        `/upload?access_token=${localStorage.token}`;\n      axios({\n        url: establishLogoUrl,\n        method: \"POST\",\n        data: formadata,\n      })\n        .then((response) => {\n          dispatch({ type: \"ADD_STUPPUSER\", payload: payload.user });\n          alert(\"L'ajout est effectué avec succès\");\n        })\n        .catch((err) => {});\n    };\n  } else if (fileName1 === null && fileName2 !== null) {\n    return function(dispatch) {\n      const myNewFile = new File([file2], fileName2, { type: file2.type });\n      let formadata = new FormData();\n      formadata.append(\"image\", myNewFile);\n      const establishLogoUrl =\n        `${baseUrl.baseUrl}/containers/` +\n        \"classebook.data.storage\" +\n        `/upload?access_token=${localStorage.token}`;\n      axios({\n        url: establishLogoUrl,\n        method: \"POST\",\n        data: formadata,\n      })\n        .then((response) => {\n          dispatch({ type: \"ADD_STUPPUSER\", payload: payload.user });\n          alert(\"L'ajout est effectué avec succès\");\n        })\n        .catch((err) => {});\n    };\n  } else {\n    return function(dispatch) {\n      dispatch({ type: \"ADD_STUPPUSER\", payload: payload.user });\n      alert(\"L'ajout est effectué avec succès\");\n    };\n  }\n}\nexport function editPassword(data) {\n  return function(dispatch) {\n    axios\n      .post(\n        `${baseUrl.baseUrl}/users/change-password?access_token=` +\n          localStorage.token,\n        {\n          oldPassword: data.currentPass,\n          newPassword: data.newPass,\n        }\n      )\n      .then((response) => {\n        dispatch({ type: \"EDIT_PASSWORD\", payload: response.data });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload:\n            \"Le changement de votre mot de passe est effectué avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      })\n      .catch((error) => {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci de vérifier votre mot de passe\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      });\n  };\n}\nexport function editStuppUser(stuppUser, file, establishmentName) {\n  if (file !== null) {\n    if (stuppUser.photo !== null) {\n      return function(dispatch) {\n        let formadata = new FormData();\n        formadata.append(\"image\", file);\n        const establishLogoUrl =\n          `${baseUrl.baseUrl}/containers/` +\n          establishmentName +\n          `/files/` +\n          stuppUser.photo +\n          `?access_token=${localStorage.token}`;\n        axios({\n          url: establishLogoUrl,\n          method: \"DELETE\",\n          data: formadata,\n        })\n          .then((response) => {\n            dispatch(uploadUserPhoto(stuppUser, file, establishmentName));\n          })\n          .catch((err) => {});\n      };\n    } else {\n      return function(dispatch) {\n        dispatch(uploadUserPhoto(stuppUser, file, establishmentName));\n      };\n    }\n  } else {\n    return function(dispatch) {\n      axios\n        .patch(\n          `${baseUrl.baseUrl}/users/` +\n            stuppUser.id +\n            `?access_token=${localStorage.token}`,\n          {\n            name: stuppUser.name,\n            surname: stuppUser.surname,\n            gender: stuppUser.gender,\n            date_of_birth: stuppUser.date_of_birth,\n            address: stuppUser.address,\n            phone: stuppUser.phone,\n            status: true,\n            cin: stuppUser.cin,\n            zip_code: stuppUser.zip_code,\n            realm: stuppUser.name,\n            username: stuppUser.name + \".\" + stuppUser.surname,\n            email: stuppUser.email,\n            photo: stuppUser.photo,\n          }\n        )\n        .then((response) => {\n          dispatch({ type: \"EDIT_STUPPUSER\", payload: response.data });\n          dispatch(editServices(stuppUser));\n        })\n        .catch(function(error) {});\n    };\n  }\n}\nexport function editServices(stuppUser) {\n  const serviceList = stuppUser.services;\n  if (stuppUser.services.length > 0) {\n    axios\n      .get(\n        `${baseUrl.baseUrl}/students/findOne?access_token=?access_token=${localStorage.token}&filter={\"where\":{\"profile_id\":` +\n          stuppUser.profile_id +\n          `}}`\n      )\n      .then((response) => {\n        const student_id = response.data.id;\n        axios\n          .get(\n            `${baseUrl.baseUrl}/students_services?access_token=${localStorage.token}&filter={\"where\":{\"student_id\":` +\n              student_id +\n              `}}`\n          )\n          .then((response) => {\n            if (response.data.length === 0) {\n              serviceList.map((service) => {\n                axios\n                  .post(\n                    `${baseUrl.baseUrl}/students_services?access_token=${localStorage.token}`,\n                    {\n                      assignment_date: new Date(),\n                      status: true,\n                      student_id: student_id,\n                      service_id: service,\n                    }\n                  )\n                  .then((response) => {})\n                  .catch((err) => {});\n              });\n            } else {\n              let oldStudentService = response.data;\n              let studentService = oldStudentService.map(\n                (service) => service.service_id\n              );\n              const servicesID = studentService.concat(serviceList);\n              const uniq = [...new Set(servicesID)];\n              const NewServices = uniq.filter(\n                (n) => !studentService.includes(n)\n              );\n              NewServices.map((service) => {\n                axios\n                  .post(\n                    `${baseUrl.baseUrl}/students_services?access_token=${localStorage.token}`,\n                    {\n                      assignment_date: new Date(),\n                      status: true,\n                      student_id: student_id,\n                      service_id: service,\n                    }\n                  )\n                  .then((response) => {})\n                  .catch((err) => {});\n              });\n            }\n          });\n        alert(\"La modification est effectué avec succès\", response.data.id);\n      })\n      .catch((err) => {});\n  } else {\n    return function(dispatch) {\n      alert(\"La modification est effectué avec succès\");\n    };\n  }\n}\n\nexport function updateUserDataPhoto(stuppUser, file, establishmentName) {\n  return function(dispatch) {\n    const fileExtension = file.name.replace(/^.*\\./, \"\");\n    const fileName = stuppUser.id + stuppUser.cin + \".\" + fileExtension;\n    axios\n      .patch(\n        `${baseUrl.baseUrl}/users/` +\n          stuppUser.id +\n          `?access_token=${localStorage.token}`,\n        {\n          name: stuppUser.name,\n          surname: stuppUser.surname,\n          gender: stuppUser.gender,\n          date_of_birth: stuppUser.date_of_birth,\n          address: stuppUser.address,\n          phone: stuppUser.phone,\n          status: true,\n          cin: stuppUser.cin,\n          zip_code: stuppUser.zip_code,\n          realm: stuppUser.name,\n          username: stuppUser.name + \".\" + stuppUser.surname,\n          email: stuppUser.email,\n          photo: fileName,\n        }\n      )\n      .then((response) => {\n        dispatch({ type: \"EDIT_STUPPUSER\", payload: response.data });\n        alert(\"La modification est effectué avec succès\");\n      })\n      .catch(function(error) {});\n  };\n}\n\nexport function deleteUser(idItem) {\n  return function(dispatch) {\n    axios\n      .get(\n        `${baseUrl.baseUrl}/users/` +\n          idItem +\n          `?access_token=${localStorage.token}`\n      )\n      .then((res) => {\n        const datastuppUser = res.data;\n        axios\n          .patch(\n            `${baseUrl.baseUrl}/users/` +\n              datastuppUser.id +\n              `?access_token=${localStorage.token}`,\n            {\n              status: false,\n            }\n          )\n          .then((response) => {\n            dispatch({ type: \"DELETE_STUPPUSER\", payload: response.data });\n            dispatch({\n              type: SHOW_SUCCESS_MESSAGE,\n              payload: \"La suppression a été effectuée avec succès\",\n            });\n\n            setTimeout(() => {\n              dispatch({ type: HIDE_SUCCESS_MESSAGE });\n            }, 2000);\n          })\n          .catch(function(error) {});\n      });\n  };\n}\n\nexport function deleteStuppUser(idItem) {\n  return function(dispatch) {\n    axios\n      .get(\n        `${baseUrl.baseUrl}/users/` +\n          idItem +\n          `?access_token=${localStorage.token}`\n      )\n      .then((res) => {\n        const datastuppUser = res.data;\n        axios\n          .put(\n            `${baseUrl.baseUrl}/users/` +\n              datastuppUser.id +\n              `?access_token=${localStorage.token}`,\n            {\n              name: datastuppUser.name,\n              surname: datastuppUser.surname,\n              gender: datastuppUser.gender,\n              date_of_birth: datastuppUser.date_of_birth,\n              address: datastuppUser.address,\n              phone: datastuppUser.phone,\n              status: false,\n              cin: datastuppUser.cin,\n              zip_code: datastuppUser.zip_code,\n              photo: datastuppUser.photo,\n              realm: datastuppUser.realm,\n              username: datastuppUser.username,\n              email: datastuppUser.email,\n              password: \"123456\",\n              emailVerified: datastuppUser.emailVerified,\n              id: datastuppUser.id,\n            }\n          )\n          .then((response) => {\n            dispatch({ type: \"DELETE_STUPPUSER\", payload: response.data });\n          })\n          .catch(function(error) {});\n      });\n  };\n}\n\nexport function uploadUserPhoto(id, stuppUser) {\n  return function(dispatch) {\n    const fileExtension = stuppUser.photo.name.replace(/^.*\\./, \"\");\n    const fileName = \"user\" + id + \".\" + fileExtension;\n    const myNewFile = new File([stuppUser.photo], fileName, {\n      type: stuppUser.photo.type,\n    });\n    let formadata = new FormData();\n    formadata.append(\"image\", myNewFile);\n    const establishLogoUrl =\n      `${baseUrl.baseUrl}/containers/` +\n      \"classebook.data.storage\" +\n      `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata,\n    })\n      .then((response) => {\n        axios\n          .patch(\n            `${baseUrl.baseUrl}/users/` +\n              id +\n              `?access_token=${localStorage.token}`,\n            { photo: fileName }\n          )\n          .then((res) => {});\n      })\n      .catch((err) => {});\n  };\n}\n\nexport function addUser(stuppUser, fileName1) {\n  return function(dispatch) {\n    axios\n      .post(\n        `${baseUrl.baseUrl}/users/create-user?access_token=${localStorage.token}`,\n        { stuppUser }\n      )\n      .then((response) => {\n        let newFormat = {\n          ...response.data.user[1],\n          user: response.data.user[0],\n          professors: [response.data.user[2]],\n          students: [response.data.user[2]],\n          parents: [],\n        };\n        if (response.data.user.statusCode === undefined) {\n          dispatch({ type: \"ADD_STUPPUSER\", payload: newFormat });\n          dispatch({\n            type: SHOW_SUCCESS_MESSAGE,\n            payload: \"La création est effectué avec succès\",\n          });\n        } else {\n          dispatch({\n            type: SHOW_ERROR_MESSAGE,\n            payload: getError(response.data.user.statusCode),\n          });\n        }\n        setTimeout(\n          function() {\n            if (response.data.user.statusCode === undefined) {\n              dispatch({ type: HIDE_SUCCESS_MESSAGE });\n              if (stuppUser.photo !== null) {\n                dispatch(uploadUserPhoto(response.data.user[0].id, stuppUser));\n              }\n            } else {\n              dispatch({ type: HIDE_ERROR_MESSAGE });\n            }\n          }.bind(this),\n          3000\n        );\n      })\n      .catch((err) => {});\n  };\n}\nexport function editUser(stuppUser) {\n  return function(dispatch) {\n    dispatch({ type: \"EDIT_STUPPUSER_COMMON_INFORMATION\", payload: stuppUser });\n  };\n}\n\nexport function addSignature(data) {\n  return function(dispatch) {\n    axios\n      .get(\n        `${baseUrl.baseUrl}/users/` +\n          data.idItem +\n          `?access_token=${localStorage.token}`\n      )\n      .then((res) => {\n        const datastuppUser = res.data;\n        const fileExtension = data.file.name.replace(/^.*\\./, \"\");\n        const fileName =\n          \"Signature_\" +\n          datastuppUser.id +\n          datastuppUser.cin +\n          \".\" +\n          fileExtension;\n        const myNewFile = new File([data.file], fileName, {\n          type: data.file.type,\n        });\n        let formadata = new FormData();\n        formadata.append(\"image\", myNewFile);\n        axios\n          .put(\n            `${baseUrl.baseUrl}/users/` +\n              datastuppUser.id +\n              `?access_token=${localStorage.token}`,\n            {\n              name: datastuppUser.name,\n              surname: datastuppUser.surname,\n              gender: datastuppUser.gender,\n              date_of_birth: datastuppUser.date_of_birth,\n              address: datastuppUser.address,\n              phone: datastuppUser.phone,\n              status: false,\n              cin: datastuppUser.cin,\n              zip_code: datastuppUser.zip_code,\n              photo: datastuppUser.photo,\n              realm: datastuppUser.realm,\n              username: datastuppUser.username,\n              email: datastuppUser.email,\n              password: \"123456\",\n              emailVerified: datastuppUser.emailVerified,\n              id: datastuppUser.id,\n              user_signature: fileName,\n            }\n          )\n          .then((response) => {\n            var object = {};\n            object.file = data.file;\n            object.fileName = fileName;\n            object.establishmentID = data.establishmentID;\n            object.user = response.data;\n            dispatch(updateSignaturePhoto(object));\n          })\n          .catch(function(error) {});\n      });\n  };\n}\n\nexport function updateSignaturePhoto(data) {\n  const fileName = data.fileName;\n  const myNewFile = new File([data.file], data.fileName, {\n    type: data.file.type,\n  });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function(dispatch) {\n    axios\n      .get(\n        `${baseUrl.baseUrl}/establishments/` +\n          data.establishmentID +\n          `?access_token=${localStorage.token}`\n      )\n      .then((res) => {\n        const establishLogoUrl = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n        axios({\n          url: establishLogoUrl,\n          method: \"POST\",\n          data: formadata,\n        })\n          .then((response) => {\n            dispatch({ type: \"EDIT_PROFILE_SIGNATURE\", payload: data.user });\n          })\n          .catch((err) => {});\n      })\n      .catch(function(error) {});\n  };\n}\n\nexport function errorHandling() {\n  return function(dispatch) {\n    dispatch({\n      type: SHOW_ERROR_MESSAGE,\n      payload:\n        \"Une erreur est survenue lors de la modification merci d'essayer à nouveau\",\n    });\n    setTimeout(() => {\n      dispatch({ type: HIDE_ERROR_MESSAGE });\n    }, 4000);\n  };\n}\n\nexport function successHandling() {\n  return function(dispatch) {\n    dispatch({\n      type: SHOW_SUCCESS_MESSAGE,\n      payload: \"La modification est effectuée avec succès\",\n    });\n    setTimeout(() => {\n      dispatch({ type: HIDE_SUCCESS_MESSAGE });\n    }, 4000);\n  };\n}\nexport function successAddUserHandling() {\n  return function(dispatch) {\n    dispatch({\n      type: SHOW_SUCCESS_MESSAGE,\n      payload: \"L'ajout est effectuée avec succès\",\n    });\n    setTimeout(() => {\n      dispatch({ type: HIDE_SUCCESS_MESSAGE });\n    }, 4000);\n  };\n}\nexport function successHandlingSteper() {\n  return function(dispatch) {\n    dispatch({\n      type: \"SHOW_SUCCESS_STEPER\",\n      payload:\n        \"La modification est effectuée avec succès pour l'étape précédente\",\n    });\n    setTimeout(() => {\n      dispatch({ type: \"HIDE_SUCCESS_STEPER\" });\n    }, 4000);\n  };\n}\nexport function errorHandlingSteper() {\n  return function(dispatch) {\n    dispatch({\n      type: \"SHOW_ERROR_STEPER\",\n      payload:\n        \"Une erreur est survenue lors de la modification merci d'essayer à nouveau\",\n    });\n    setTimeout(() => {\n      dispatch({ type: \"HIDE_ERROR_STEPER\" });\n    }, 4000);\n  };\n}\n\nexport function uploadExcel(file, establishmentId) {\n  let apiEndpoint = \"\";\n  if (file !== null) {\n    let dataEstablishment = {};\n    return (dispatch) => {\n      apiEndpoint =\n        `/establishments/` +\n        establishmentId +\n        `?access_token=${localStorage.token}`;\n      classService.get(apiEndpoint).then((response) => {\n        dataEstablishment = {\n          establishment_id: response.data.id,\n          establishment_Name: response.data.name,\n          file_name: file.name,\n        };\n        const data = new FormData();\n        data.append(\"file\", file);\n        apiEndpoint =\n          `/containers/` +\n          response.data.name +\n          `/upload?access_token=${localStorage.token}`;\n        classService.post(apiEndpoint, data).then((response) => {\n          let apiEndpoint = `/users/addUserByExcel?access_token=${localStorage.token}`;\n          classService.post(apiEndpoint, dataEstablishment).then((response) => {\n            if (response.data.users.statusCode === undefined) {\n              dispatch({ type: \"ADD_STUPPUSER\", payload: response.data.users });\n              if (!_.isEmpty(response.data.errorUser)) {\n                let emails = _.join(\n                  _.map(response.data.errorUser, \"Email\"),\n                  \" ,\"\n                );\n                dispatch({\n                  type: SHOW_WARNING_MESSAGE,\n                  payload: `Une erreur est survenue lors de la création des utilisateurs suivants: ${emails} `,\n                });\n                dispatch(getAllUsersByEstablishmentId(establishmentId));\n                setTimeout(() => {\n                  dispatch({ type: HIDE_WARNING_MESSAGE });\n                }, 6000);\n              } else {\n                dispatch(getAllUsersByEstablishmentId(establishmentId));\n                dispatch({\n                  type: SHOW_SUCCESS_MESSAGE,\n                  payload: \"La création est effectué avec succès\",\n                });\n                setTimeout(() => {\n                  dispatch({ type: HIDE_SUCCESS_MESSAGE });\n                }, 4000);\n              }\n            } else {\n              dispatch({\n                type: SHOW_ERROR_MESSAGE,\n                payload: getError(response.data.users.statusCode),\n              });\n              setTimeout(() => {\n                dispatch({ type: HIDE_ERROR_MESSAGE });\n              }, 4000);\n            }\n          });\n        });\n      });\n    };\n  } else {\n    alert(\"erreur\");\n  }\n}\n\nexport function getAllStudentByEstablishmentId(establishment_id) {\n  return function(dispatch) {\n    axios\n      .get(\n        `${baseUrl.baseUrl}/profiles?access_token=${localStorage.token}&filter[include]=user&filter[include]=students&filter[where][and][0][establishment_id]=${establishment_id}&filter[where][and][1][role_id]=${roleIdStudent}`\n      )\n      .then((res) => {\n        const list = res.data;\n        const serviceList = list.filter(\n          (element) => element.user.status === true\n        );\n        dispatch({ type: DATA_LOADED_STUPPUSER, payload: serviceList });\n      });\n  };\n}\n\nexport function addNewUser(newUser) {\n  return function(dispatch) {\n    dispatch({ type: DATA_NEW_STUPPUSER, payload: newUser });\n  };\n}\n\nexport function uploadAdminPhoto(id, stuppUser, newUser) {\n  return function(dispatch) {\n    const fileExtension = stuppUser.photo.name.replace(/^.*\\./, \"\");\n    const fileName = \"user\" + id + \".\" + fileExtension;\n    const myNewFile = new File([stuppUser.photo], fileName, {\n      type: stuppUser.photo.type,\n    });\n    let formadata = new FormData();\n    formadata.append(\"image\", myNewFile);\n    const establishLogoUrl =\n      `${baseUrl.baseUrl}/containers/` +\n      stuppUser.establishment_Name +\n      `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata,\n    })\n      .then((response) => {\n        axios\n          .patch(\n            `${baseUrl.baseUrl}/users/` +\n              id +\n              `?access_token=${localStorage.token}`,\n            { photo: fileName }\n          )\n          .then((res) => {\n            let userInfo = {\n              ...newUser,\n              user: res.data,\n            };\n            dispatch(addNewUser(userInfo));\n          });\n      })\n      .catch((err) => {});\n  };\n}\n\nexport function uploadProfAndStudentPhoto(id, stuppUser, fileName) {\n  return function(dispatch) {\n    const myNewFile = new File([stuppUser.photo], fileName, {\n      type: stuppUser.photo.type,\n    });\n    let formadata = new FormData();\n    formadata.append(\"image\", myNewFile);\n    const establishLogoUrl =\n      `${baseUrl.baseUrl}/containers/` +\n      stuppUser.establishment_Name +\n      `/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata,\n    })\n      .then((response) => {\n        axios\n          .patch(\n            `${baseUrl.baseUrl}/users/` +\n              id +\n              `?access_token=${localStorage.token}`,\n            { photo: fileName }\n          )\n          .then((res) => {});\n      })\n      .catch((err) => {});\n  };\n}\n\nexport { getUsersByRole, getUserFromProfileId };\n"]},"metadata":{},"sourceType":"module"}