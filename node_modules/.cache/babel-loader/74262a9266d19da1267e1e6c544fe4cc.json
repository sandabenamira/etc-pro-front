{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/ServiceAllocation/EditAllocationService.js\";\nimport React, { Component } from \"react\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport Auxiliary from \"../../../../../util/Auxiliary\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { FormGroup, Row, Col } from \"reactstrap\";\nimport Select from \"react-select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport EditAllocationItem from \"./ServiceAllocationComp/EditAllocationItem\";\nimport { addAllocationService, editAllocationService, getAllocationServiceByEstablishment } from \"../../../../../actions/AllocationServiceAction\";\nimport { connect } from \"react-redux\";\nimport ServiceItem from \"./ServiceItem\";\nimport _ from \"lodash\";\nimport Button from \"@material-ui/core/Button\";\nimport { UncontrolledAlert } from \"reactstrap\";\n\nclass EditAllocationService extends Component {\n  constructor(props) {\n    super(props);\n\n    this.HandleSubmitAllocationService = () => {\n      var newData = [];\n      var oldData = [];\n      this.state.servicesSelected.map((allocation, index) => {\n        var allocationData = {};\n        allocationData.fk_id_student = allocation.fk_id_student;\n        allocationData.fk_id_service = allocation.fk_id_service;\n        allocationData.allocation_month = allocation.allocation_month;\n\n        if (allocation.id === \"\") {\n          if (allocation.allocation_month.length > 0) {\n            newData.push(allocationData);\n          } else {}\n        } else {\n          allocationData.id = allocation.id;\n\n          if (allocation.allocation_month.length > 0) {\n            oldData.push(allocationData);\n            this.props.editAllocationService(allocationData, this.props.userProfile.establishment_id);\n          } else {\n            allocationData.status = false;\n            oldData.push(allocationData);\n            this.props.editAllocationService(allocationData, this.props.userProfile.establishment_id);\n          }\n        }\n      });\n\n      if (newData.length > 0) {\n        this.props.addAllocationService(newData, this.props.userProfile.establishment_id);\n      }\n\n      this.props.cancel();\n    };\n\n    this.state = {\n      open: false,\n      servicesSelected: [],\n      idServicesAffected: [],\n      firstServiceSelected: \"\",\n      alerteIcon: false\n    };\n    this.handleIcon = this.handleIcon.bind(this);\n    this.alertIcon = this.alertIcon.bind(this);\n    this.HandleSubmitAllocationService = this.HandleSubmitAllocationService.bind(this);\n  }\n\n  alertIcon(idSelected) {\n    this.setState({\n      alerteIcon: true\n    });\n    setTimeout(() => {\n      this.setState({\n        alerteIcon: false\n      });\n    }, 1500);\n  }\n\n  componentDidMount() {\n    let servicesAffected = _.map(this.props.allocationItem.services, \"service_v2\");\n\n    let idServicesAffected = _.map(servicesAffected, \"id\");\n\n    this.setState({\n      servicesSelected: this.props.allocationItem.services,\n      idServicesAffected\n    });\n  }\n\n  handleIcon(idSelected) {\n    let servicesSelected = [];\n    let serviceExistant = [];\n    let services = this.state.servicesSelected;\n    servicesSelected = this.props.services.filter(service => service.id == idSelected)[0];\n    let newService = {\n      allocation_month: [],\n      service_v2: servicesSelected,\n      id: \"\",\n      fk_id_student: this.props.allocationItem.services[0].fk_id_student,\n      fk_id_service: servicesSelected.id\n    };\n    serviceExistant = services.filter(service => service.service_v2.id == idSelected);\n    let serviceDelete = services.filter(service => service.service_v2.id != idSelected);\n\n    if (serviceExistant.length > 0) {\n      this.setState({\n        servicesSelected: serviceDelete\n      });\n    } else {\n      services.push(newService);\n      this.setState({\n        servicesSelected: services\n      });\n    }\n  }\n\n  render() {\n    let {\n      services,\n      allocationItem\n    } = this.props;\n    let {\n      servicesSelected\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.props.openEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      className: \"modal-box-header bg-primary text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, \"Modifier\", /*#__PURE__*/React.createElement(IconButton, {\n      className: \"text-white\",\n      onClick: this.props.cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(ModalBody, {\n      style: {\n        paddingLeft: \"5%\",\n        paddingRight: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, \"Information \\xE9l\\xE8ve\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"idSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \"ID\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"student_id\",\n      id: \"student_id\",\n      styles: {\n        control: base => ({ ...base,\n          \"&:hover\": {\n            borderColor: \"gray\"\n          },\n          // border style on hover\n          border: \"1px solid lightgray\",\n          // default border color\n          boxShadow: \"none\",\n          // no box-shadow\n          borderRadius: 20\n        })\n      },\n      defaultValue: {\n        value: allocationItem.services[0].fk_id_student,\n        label: allocationItem.services[0].fk_id_student\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"nomSelect\",\n      style: {\n        paddingLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, \"Nom\"), /*#__PURE__*/React.createElement(Select, {\n      id: \"nomSelect\",\n      styles: {\n        control: base => ({ ...base,\n          \"&:hover\": {\n            borderColor: \"gray\"\n          },\n          // border style on hover\n          border: \"1px solid lightgray\",\n          // default border color\n          boxShadow: \"none\",\n          // no box-shadow\n          borderTopStyle: \"none\",\n          borderRightStyle: \"none\",\n          borderLeftStyle: \"none\",\n          borderRadius: \" none\"\n        })\n      },\n      defaultValue: {\n        value: allocationItem.services[0].fk_id_student,\n        label: allocationItem.name + \" \" + allocationItem.surname\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        width: \"100%\",\n        margin: \"auto\",\n        marginTop: \"5%\",\n        marginBottom: \"5%\",\n        border: \"1px dashed #979A9A\",\n        paddingLeft: \"-100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }\n    }, \"Prestations\")), this.state.alerteIcon ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 23\n      }\n    }, \" \", \"Prestation déja affectée\"))) : \"\", /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, services.map(element => {\n      let color;\n      color = this.state.idServicesAffected.indexOf(element.id);\n      return /*#__PURE__*/React.createElement(ServiceItem, {\n        key: element.id,\n        item: element,\n        handleIcon: this.handleIcon,\n        alertIcon: this.alertIcon,\n        color: color,\n        servicesSelected: this.props.allocationItem.services,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 23\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    }, servicesSelected.map((element, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(EditAllocationItem, {\n        key: index,\n        item: element,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 27\n        }\n      }));\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      style: {\n        borderBottomLeftRadius: \"16px\",\n        borderBottomRightRadius: \"16px\",\n        borderTopLeftRadius: \"16px\",\n        borderTopRightRadius: \"16px\"\n      },\n      onClick: this.props.cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 19\n      }\n    }, \"Annuler\"), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(Button, {\n      disabled: this.state.student_id == \"\" || this.state.servicesSelected.length == 0,\n      variant: \"contained\",\n      style: {\n        borderBottomLeftRadius: \"16px\",\n        borderBottomRightRadius: \"16px\",\n        borderTopLeftRadius: \"16px\",\n        borderTopRightRadius: \"16px\"\n      },\n      className: \" bg-indigo text-white \",\n      onClick: this.HandleSubmitAllocationService,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 19\n      }\n    }, \"Modifier\", \" \")))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile\n  };\n}\n\nexport default connect(mapStateToProps, {\n  addAllocationService,\n  editAllocationService,\n  getAllocationServiceByEstablishment\n})(EditAllocationService);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/ServiceAllocation/EditAllocationService.js"],"names":["React","Component","Modal","ModalBody","ModalHeader","Auxiliary","IconButton","CloseIcon","FormGroup","Row","Col","Select","InputLabel","EditAllocationItem","addAllocationService","editAllocationService","getAllocationServiceByEstablishment","connect","ServiceItem","_","Button","UncontrolledAlert","EditAllocationService","constructor","props","HandleSubmitAllocationService","newData","oldData","state","servicesSelected","map","allocation","index","allocationData","fk_id_student","fk_id_service","allocation_month","id","length","push","userProfile","establishment_id","status","cancel","open","idServicesAffected","firstServiceSelected","alerteIcon","handleIcon","bind","alertIcon","idSelected","setState","setTimeout","componentDidMount","servicesAffected","allocationItem","services","serviceExistant","filter","service","newService","service_v2","serviceDelete","render","openEdit","paddingLeft","paddingRight","handleSubmit","color","control","base","borderColor","border","boxShadow","borderRadius","value","label","borderTopStyle","borderRightStyle","borderLeftStyle","name","surname","width","margin","marginTop","marginBottom","element","indexOf","float","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","student_id","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport Auxiliary from \"../../../../../util/Auxiliary\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { FormGroup, Row, Col } from \"reactstrap\";\nimport Select from \"react-select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport EditAllocationItem from \"./ServiceAllocationComp/EditAllocationItem\";\nimport {\n  addAllocationService,\n  editAllocationService,\n  getAllocationServiceByEstablishment,\n} from \"../../../../../actions/AllocationServiceAction\";\nimport { connect } from \"react-redux\";\nimport ServiceItem from \"./ServiceItem\";\nimport _ from \"lodash\";\nimport Button from \"@material-ui/core/Button\";\nimport { UncontrolledAlert } from \"reactstrap\";\n\nclass EditAllocationService extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      servicesSelected: [],\n      idServicesAffected: [],\n      firstServiceSelected: \"\",\n      alerteIcon: false,\n    };\n    this.handleIcon = this.handleIcon.bind(this);\n    this.alertIcon = this.alertIcon.bind(this);\n\n    this.HandleSubmitAllocationService = this.HandleSubmitAllocationService.bind(\n      this\n    );\n  }\n  alertIcon(idSelected) {\n    this.setState({\n      alerteIcon: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        alerteIcon: false,\n      });\n    }, 1500);\n  }\n\n  HandleSubmitAllocationService = () => {\n    var newData = [];\n    var oldData = [];\n\n    this.state.servicesSelected.map((allocation, index) => {\n      var allocationData = {};\n      allocationData.fk_id_student = allocation.fk_id_student;\n      allocationData.fk_id_service = allocation.fk_id_service;\n      allocationData.allocation_month = allocation.allocation_month;\n      if (allocation.id === \"\") {\n        if (allocation.allocation_month.length > 0) {\n          newData.push(allocationData);\n        } else {\n        }\n      } else {\n        allocationData.id = allocation.id;\n\n        if (allocation.allocation_month.length > 0) {\n          oldData.push(allocationData);\n          this.props.editAllocationService(\n            allocationData,\n            this.props.userProfile.establishment_id\n          );\n        } else {\n          allocationData.status = false;\n          oldData.push(allocationData);\n          this.props.editAllocationService(\n            allocationData,\n            this.props.userProfile.establishment_id\n          );\n        }\n      }\n    });\n    if (newData.length > 0) {\n      this.props.addAllocationService(\n        newData,\n        this.props.userProfile.establishment_id\n      );\n    }\n\n    this.props.cancel();\n  };\n  componentDidMount() {\n    let servicesAffected = _.map(\n      this.props.allocationItem.services,\n      \"service_v2\"\n    );\n    let idServicesAffected = _.map(servicesAffected, \"id\");\n    this.setState({\n      servicesSelected: this.props.allocationItem.services,\n      idServicesAffected,\n    });\n  }\n  handleIcon(idSelected) {\n    let servicesSelected = [];\n    let serviceExistant = [];\n\n    let services = this.state.servicesSelected;\n\n    servicesSelected = this.props.services.filter(\n      (service) => service.id == idSelected\n    )[0];\n\n    let newService = {\n      allocation_month: [],\n      service_v2: servicesSelected,\n      id: \"\",\n      fk_id_student: this.props.allocationItem.services[0].fk_id_student,\n      fk_id_service: servicesSelected.id,\n    };\n\n    serviceExistant = services.filter(\n      (service) => service.service_v2.id == idSelected\n    );\n\n    let serviceDelete = services.filter(\n      (service) => service.service_v2.id != idSelected\n    );\n\n    if (serviceExistant.length > 0) {\n      this.setState({\n        servicesSelected: serviceDelete,\n      });\n    } else {\n      services.push(newService);\n\n      this.setState({\n        servicesSelected: services,\n      });\n    }\n  }\n\n  render() {\n    let { services, allocationItem } = this.props;\n    let { servicesSelected } = this.state;\n    return (\n      <Auxiliary>\n        <Modal isOpen={this.props.openEdit}>\n          <ModalHeader className=\"modal-box-header bg-primary text-white\">\n            Modifier\n            <IconButton className=\"text-white\" onClick={this.props.cancel}>\n              <CloseIcon />\n            </IconButton>\n          </ModalHeader>\n          <ModalBody style={{ paddingLeft: \"5%\", paddingRight: \"5%\" }}>\n            <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n              <div>\n                <Row>\n                  <h3 style={{ color: \"blue\" }}>Information élève</h3>\n                </Row>\n                <br />\n                <Row>\n                  <div>\n                    <InputLabel htmlFor=\"idSelect\">ID</InputLabel>\n                  </div>\n                  <div className=\"col-md-2\">\n                    <Select\n                      name=\"student_id\"\n                      id=\"student_id\"\n                      styles={{\n                        control: (base) => ({\n                          ...base,\n                          \"&:hover\": { borderColor: \"gray\" }, // border style on hover\n                          border: \"1px solid lightgray\", // default border color\n                          boxShadow: \"none\", // no box-shadow\n                          borderRadius: 20,\n                        }),\n                      }}\n                      defaultValue={{\n                        value: allocationItem.services[0].fk_id_student,\n                        label: allocationItem.services[0].fk_id_student,\n                      }}\n                    />\n                  </div>\n                  <div className=\"col-md-4\">\n                    <InputLabel\n                      htmlFor=\"nomSelect\"\n                      style={{ paddingLeft: \"10px\" }}\n                    >\n                      Nom\n                    </InputLabel>\n                    <Select\n                      id=\"nomSelect\"\n                      styles={{\n                        control: (base) => ({\n                          ...base,\n                          \"&:hover\": { borderColor: \"gray\" }, // border style on hover\n                          border: \"1px solid lightgray\", // default border color\n                          boxShadow: \"none\", // no box-shadow\n                          borderTopStyle: \"none\",\n                          borderRightStyle: \"none\",\n                          borderLeftStyle: \"none\",\n                          borderRadius: \" none\",\n                        }),\n                      }}\n                      defaultValue={{\n                        value: allocationItem.services[0].fk_id_student,\n                        label:\n                          allocationItem.name + \" \" + allocationItem.surname,\n                      }}\n                    />\n                  </div>\n                </Row>\n                <Row>\n                  <hr\n                    style={{\n                      width: \"100%\",\n                      margin: \"auto\",\n                      marginTop: \"5%\",\n                      marginBottom: \"5%\",\n                      border: \"1px dashed #979A9A\",\n                      paddingLeft: \"-100%\",\n                    }}\n                  />\n                </Row>\n                <Row>\n                  <h3 style={{ color: \"blue\" }}>Prestations</h3>\n                </Row>\n                {this.state.alerteIcon ? (\n                  <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                    <UncontrolledAlert className=\"alert-addon-card bg-danger bg-danger text-white shadow-lg\">\n                      <span className=\"icon-addon alert-addon\">\n                        <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                      </span>\n                      <span className=\"d-inline-block\">\n                        {\" \"}\n                        {\"Prestation déja affectée\"}\n                      </span>\n                    </UncontrolledAlert>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <Row>\n                  {services.map((element) => {\n                    let color;\n                    color = this.state.idServicesAffected.indexOf(element.id);\n\n                    return (\n                      <ServiceItem\n                        key={element.id}\n                        item={element}\n                        handleIcon={this.handleIcon}\n                        alertIcon={this.alertIcon}\n                        color={color}\n                        servicesSelected={this.props.allocationItem.services}\n                      />\n                    );\n                  })}\n                </Row>\n\n                <br />\n                <Row>\n                  <div className=\"col-lg-12 col-md-12 \">\n                    {servicesSelected.map((element, index) => {\n                      return (\n                        <div key={index}>\n                          <EditAllocationItem key={index} item={element} />\n                          <br></br>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Row>\n                <Row style={{ float: \"right\" }}>\n                  <Button\n                    variant=\"contained\"\n                    style={{\n                      borderBottomLeftRadius: \"16px\",\n                      borderBottomRightRadius: \"16px\",\n                      borderTopLeftRadius: \"16px\",\n                      borderTopRightRadius: \"16px\",\n                    }}\n                    onClick={this.props.cancel}\n                  >\n                    Annuler\n                  </Button>\n                  &nbsp;&nbsp;\n                  <Button\n                    disabled={\n                      this.state.student_id == \"\" ||\n                      this.state.servicesSelected.length == 0\n                    }\n                    variant=\"contained\"\n                    style={{\n                      borderBottomLeftRadius: \"16px\",\n                      borderBottomRightRadius: \"16px\",\n                      borderTopLeftRadius: \"16px\",\n                      borderTopRightRadius: \"16px\",\n                    }}\n                    className=\" bg-indigo text-white \"\n                    onClick={this.HandleSubmitAllocationService}\n                  >\n                    Modifier{\" \"}\n                  </Button>\n                </Row>\n              </div>\n            </form>\n          </ModalBody>\n        </Modal>\n      </Auxiliary>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    addAllocationService,\n    editAllocationService,\n    getAllocationServiceByEstablishment,\n  }\n)(EditAllocationService);\n"]},"metadata":{},"sourceType":"module"}