{"ast":null,"code":"import { ARCHIVED_GET_SECTIONS, GET_SECTIONS, EDIT_SECTION, ADD_SECTION, DELETE_SECTIONS, PUBLISH_SECTIONS } from \"../constants/ActionTypes\";\nconst initialState = {\n  Section: [],\n  archivedSection: []\n};\nexport default function (state = initialState, action) {\n  if (action.type === GET_SECTIONS) {\n    return Object.assign({}, state, {\n      Section: action.payload\n    });\n  }\n\n  if (action.type === ARCHIVED_GET_SECTIONS) {\n    return Object.assign({}, state, {\n      archivedSection: action.payload\n    });\n  }\n\n  if (action.type === ADD_SECTION) {\n    return Object.assign({}, state, {\n      Section: state.Section.concat(action.payload)\n    });\n  }\n\n  if (action.type === EDIT_SECTION) {\n    return Object.assign({}, state, {\n      Section: [...state.Section.filter(element => element.id !== action.payload.id), action.payload]\n    });\n  }\n\n  if (action.type === DELETE_SECTIONS) {\n    return Object.assign({}, state, {\n      Section: [...state.Section.filter(element => element.id !== action.payload.id)],\n      archivedSection: state.archivedSection.concat(action.payload)\n    });\n  }\n\n  if (action.type === PUBLISH_SECTIONS) {\n    return Object.assign({}, state, {\n      archivedSection: [...state.archivedSection.filter(element => element.id !== action.payload.id)],\n      Section: state.Section.concat(action.payload)\n    });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/reducers/SectionsReducer.js"],"names":["ARCHIVED_GET_SECTIONS","GET_SECTIONS","EDIT_SECTION","ADD_SECTION","DELETE_SECTIONS","PUBLISH_SECTIONS","initialState","Section","archivedSection","state","action","type","Object","assign","payload","concat","filter","element","id"],"mappings":"AAAA,SACEA,qBADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,eALF,EAMEC,gBANF,QAOO,0BAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,eAAe,EAAE;AAFE,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgBV,YAApB,EAAkC;AAChC,WAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,OAAO,EAAEG,MAAM,CAACI;AADc,KAAzB,CAAP;AAGD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBX,qBAApB,EAA2C;AACzC,WAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BD,MAAAA,eAAe,EAAEE,MAAM,CAACI;AADM,KAAzB,CAAP;AAGD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBR,WAApB,EAAiC;AAC/B,WAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcQ,MAAd,CAAqBL,MAAM,CAACI,OAA5B;AADqB,KAAzB,CAAP;AAGD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBT,YAApB,EAAkC;AAChC,WAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,OAAO,EAAE,CACP,GAAGE,KAAK,CAACF,OAAN,CAAcS,MAAd,CAAsBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAAhE,CADI,EAEPR,MAAM,CAACI,OAFA;AADqB,KAAzB,CAAP;AAMD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgBP,eAApB,EAAqC;AACnC,WAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,OAAO,EAAE,CACP,GAAGE,KAAK,CAACF,OAAN,CAAcS,MAAd,CAAsBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAAhE,CADI,CADqB;AAI9BV,MAAAA,eAAe,EAAEC,KAAK,CAACD,eAAN,CAAsBO,MAAtB,CAA6BL,MAAM,CAACI,OAApC;AAJa,KAAzB,CAAP;AAMD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBN,gBAApB,EAAsC;AACpC,WAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BD,MAAAA,eAAe,EAAE,CACf,GAAGC,KAAK,CAACD,eAAN,CAAsBQ,MAAtB,CACAC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAD1C,CADY,CADa;AAM9BX,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcQ,MAAd,CAAqBL,MAAM,CAACI,OAA5B;AANqB,KAAzB,CAAP;AAQD;;AACD,SAAOL,KAAP;AACD","sourcesContent":["import {\n  ARCHIVED_GET_SECTIONS,\n  GET_SECTIONS,\n  EDIT_SECTION,\n  ADD_SECTION,\n  DELETE_SECTIONS,\n  PUBLISH_SECTIONS,\n} from \"../constants/ActionTypes\";\n\nconst initialState = {\n  Section: [],\n  archivedSection: [],\n};\n\nexport default function(state = initialState, action) {\n  if (action.type === GET_SECTIONS) {\n    return Object.assign({}, state, {\n      Section: action.payload,\n    });\n  }\n  if (action.type === ARCHIVED_GET_SECTIONS) {\n    return Object.assign({}, state, {\n      archivedSection: action.payload,\n    });\n  }\n\n  if (action.type === ADD_SECTION) {\n    return Object.assign({}, state, {\n      Section: state.Section.concat(action.payload),\n    });\n  }\n\n  if (action.type === EDIT_SECTION) {\n    return Object.assign({}, state, {\n      Section: [\n        ...state.Section.filter((element) => element.id !== action.payload.id),\n        action.payload,\n      ],\n    });\n  }\n\n  if (action.type === DELETE_SECTIONS) {\n    return Object.assign({}, state, {\n      Section: [\n        ...state.Section.filter((element) => element.id !== action.payload.id),\n      ],\n      archivedSection: state.archivedSection.concat(action.payload),\n    });\n  }\n  if (action.type === PUBLISH_SECTIONS) {\n    return Object.assign({}, state, {\n      archivedSection: [\n        ...state.archivedSection.filter(\n          (element) => element.id !== action.payload.id\n        ),\n      ],\n      Section: state.Section.concat(action.payload),\n    });\n  }\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}