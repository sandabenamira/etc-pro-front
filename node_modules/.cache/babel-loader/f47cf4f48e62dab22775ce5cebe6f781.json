{"ast":null,"code":"import { ADD_QUESTION, FETECHED_QUESTION_BY_PROFILE, EDIT_QUESTION, DELETE_QUESTION, FETECHED_LEVEL_TESTS_BY_PROFILE, FETCH_TESTS_FOR_STUDENT, FETCH_TESTS_PASSED_FOR_STUDENT, FETCH_TESTS_FOR_PARENT, DELETE_TEST } from \"../constants/ActionTypes\";\nimport _ from \"lodash\";\nconst initialState = {\n  remoteQuestion: [],\n  remoteTestProf: [],\n  remoteTestStudent: [],\n  remoteTestParent: []\n};\nexport default function (state = initialState, action) {\n  if (action.type === ADD_QUESTION) {\n    return Object.assign({}, state, {\n      remoteQuestion: state.remoteQuestion.concat(action.payload)\n    });\n  }\n\n  if (action.type === FETECHED_QUESTION_BY_PROFILE) {\n    return Object.assign({}, state, {\n      remoteQuestion: action.payload\n    });\n  }\n\n  if (action.type === FETECHED_LEVEL_TESTS_BY_PROFILE) {\n    return Object.assign({}, state, {\n      remoteTestProf: action.payload\n    });\n  }\n\n  if (action.type === FETCH_TESTS_FOR_STUDENT) {\n    return Object.assign({}, state, {\n      remoteTestStudent: action.payload\n    });\n  }\n\n  if (action.type === FETCH_TESTS_FOR_PARENT) {\n    return Object.assign({}, state, {\n      remoteTestParent: state.remoteTestParent.concat(action.payload)\n    });\n  }\n\n  if (action.type === FETCH_TESTS_PASSED_FOR_STUDENT) {\n    let newTestStudent = _.map(state.remoteTestStudent, function (el) {\n      let exist = action.payload.find(element => element.id_test == el.id_test);\n\n      if (exist == undefined) {\n        return el;\n      } else {\n        return exist;\n      }\n    });\n\n    return Object.assign({}, state, {\n      remoteTestStudent: newTestStudent\n    });\n  }\n\n  if (action.type === DELETE_QUESTION) {\n    return Object.assign({}, state, {\n      remoteQuestion: [...state.remoteQuestion.filter(element => element.id !== action.payload.id)]\n    });\n  }\n\n  if (action.type === EDIT_QUESTION) {\n    return Object.assign({}, state, {\n      remoteQuestion: [...state.remoteQuestion.filter(element => element.id !== action.payload.id), action.payload]\n    });\n  }\n\n  if (action.type === DELETE_TEST) {\n    return Object.assign({}, state, {\n      remoteTestProf: [...state.remoteTestProf.filter(element => element.id !== action.payload.id)]\n    });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/reducers/levelTestReducer.js"],"names":["ADD_QUESTION","FETECHED_QUESTION_BY_PROFILE","EDIT_QUESTION","DELETE_QUESTION","FETECHED_LEVEL_TESTS_BY_PROFILE","FETCH_TESTS_FOR_STUDENT","FETCH_TESTS_PASSED_FOR_STUDENT","FETCH_TESTS_FOR_PARENT","DELETE_TEST","_","initialState","remoteQuestion","remoteTestProf","remoteTestStudent","remoteTestParent","state","action","type","Object","assign","concat","payload","newTestStudent","map","el","exist","find","element","id_test","undefined","filter","id"],"mappings":"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","sourcesContent":["import {\n  ADD_QUESTION,\n  FETECHED_QUESTION_BY_PROFILE,\n  EDIT_QUESTION,\n  DELETE_QUESTION,\n  FETECHED_LEVEL_TESTS_BY_PROFILE,\n  FETCH_TESTS_FOR_STUDENT,\n  FETCH_TESTS_PASSED_FOR_STUDENT,\n  FETCH_TESTS_FOR_PARENT,\n  DELETE_TEST,\n} from \"../constants/ActionTypes\";\nimport _ from \"lodash\";\n\nconst initialState = {\n  remoteQuestion: [],\n  remoteTestProf: [],\n  remoteTestStudent: [],\n  remoteTestParent: [],\n};\n\nexport default function(state = initialState, action) {\n  if (action.type === ADD_QUESTION) {\n    return Object.assign({}, state, {\n      remoteQuestion: state.remoteQuestion.concat(action.payload),\n    });\n  }\n  if (action.type === FETECHED_QUESTION_BY_PROFILE) {\n    return Object.assign({}, state, {\n      remoteQuestion: action.payload,\n    });\n  }\n  if (action.type === FETECHED_LEVEL_TESTS_BY_PROFILE) {\n    return Object.assign({}, state, {\n      remoteTestProf: action.payload,\n    });\n  }\n  if (action.type === FETCH_TESTS_FOR_STUDENT) {\n    return Object.assign({}, state, {\n      remoteTestStudent: action.payload,\n    });\n  }\n  if (action.type === FETCH_TESTS_FOR_PARENT) {\n    return Object.assign({}, state, {\n      remoteTestParent: state.remoteTestParent.concat(action.payload),\n    });\n  }\n  if (action.type === FETCH_TESTS_PASSED_FOR_STUDENT) {\n    let newTestStudent = _.map(state.remoteTestStudent, function(el) {\n      let exist = action.payload.find(\n        (element) => element.id_test == el.id_test\n      );\n\n      if (exist == undefined) {\n        return el;\n      } else {\n        return exist;\n      }\n    });\n\n    return Object.assign({}, state, {\n      remoteTestStudent: newTestStudent,\n    });\n  }\n  if (action.type === DELETE_QUESTION) {\n    return Object.assign({}, state, {\n      remoteQuestion: [\n        ...state.remoteQuestion.filter(\n          (element) => element.id !== action.payload.id\n        ),\n      ],\n    });\n  }\n\n  if (action.type === EDIT_QUESTION) {\n    return Object.assign({}, state, {\n      remoteQuestion: [\n        ...state.remoteQuestion.filter(\n          (element) => element.id !== action.payload.id\n        ),\n        action.payload,\n      ],\n    });\n  }\n  if (action.type === DELETE_TEST) {\n    return Object.assign({}, state, {\n      remoteTestProf: [\n        ...state.remoteTestProf.filter(\n          (element) => element.id !== action.payload.id\n        ),\n      ],\n    });\n  }\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}