{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js\";\nimport React from 'react';\nimport IconWithTextCard from '../../../CommonComponents/IconWithTextCard';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport HomeworkInProgress from './HomeworkInProgress';\nimport CardBox from '../../../../../components/CardBox/index';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport RemoveSharpIcon from '@material-ui/icons/RemoveSharp';\nimport { connect } from 'react-redux';\nimport AddHomework from './AddHomework';\nimport { UncontrolledAlert } from 'reactstrap';\nimport { classService } from '../../../../../_services/class.service';\nimport HomeworkList from './HomeworkList';\nimport _ from 'lodash';\nimport { addNewHomework, getHomework } from '../../../../../actions/HomeworkAction';\nimport ArchivedHomework from './ArchivedHomework';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { roleIdAdmin, roleIdProfessor } from '../../../../../config/config';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { element } from 'prop-types';\n\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeFilterStatus = name => event => {\n      if (this.state.classId !== null) {\n        if (event.target.value === 'all') {\n          this.setState({\n            [name]: event.target.value,\n            homeworks: this.state.homeworkClass\n          });\n        } else {\n          let homeworks = this.state.homeworkClass.filter(element => element.status === event.target.value);\n          this.setState({\n            [name]: event.target.value,\n            homeworks\n          });\n        }\n      } else {\n        if (event.target.value === 'all') {\n          this.setState({\n            [name]: event.target.value,\n            homeworks: this.props.homeworks\n          });\n        } else {\n          let homeworks = this.props.homeworks.filter(element => element.status === event.target.value);\n          this.setState({\n            [name]: event.target.value,\n            homeworks\n          });\n        }\n      }\n    };\n\n    this.handleChangeFilterType = name => event => {\n      let homeworksList = [];\n\n      if (this.state.classId !== null) {\n        homeworksList = this.state.homeworkClass;\n      } else {\n        homeworksList = this.props.homeworks;\n      }\n\n      if (event.target.value === 'all') {\n        this.setState({\n          [name]: event.target.value,\n          homeworks: homeworksList\n        });\n      } else {\n        let homeworks = homeworksList.filter(element => element.homework.homework_type === event.target.value);\n        this.setState({\n          [name]: event.target.value,\n          homeworks\n        });\n      }\n    };\n\n    this.handleChangeFilter = name => event => {\n      let homeworks = this.props.homeworks.filter(element => element.classId === event.target.value);\n      this.setState({\n        [name]: event.target.value,\n        homeworks,\n        homeworkClass: homeworks\n      });\n    };\n\n    this.handleChangeClassList = selectedOption => {\n      if (selectedOption != null) {\n        let classesId = _.map(selectedOption, 'id');\n\n        this.setState({\n          classesId,\n          isEmptylistClass: false,\n          classesData: selectedOption\n        });\n      } else {\n        this.setState({\n          classesId: []\n        });\n      }\n    };\n\n    this.handleChangeDate = name => date => {\n      this.setState({\n        [name]: date\n      });\n\n      if (name === 'publicationDate') {\n        this.setState({\n          renderingDate: date,\n          correctionDate: date\n        });\n      } else if (name === 'renderingDate') {\n        this.setState({\n          correctionDate: date\n        });\n      }\n    };\n\n    this.handleChangePostTime = time => {\n      this.setState({\n        postTime: time._d\n      });\n    };\n\n    this.handleChangeSubject = selectedOption => {\n      this.setState({\n        subjectId: selectedOption.id,\n        subjectColor: selectedOption.color,\n        subjectName: selectedOption.label,\n        errorClass: false\n      });\n\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include]=class&filter[include]=course`;\n        classService.get(apiEndpoint).then(response => {\n          if (response) {\n            let classesSubjects = response.data.filter(element => element.status);\n            let newList = [];\n            classesSubjects.map(element => {\n              let object = {};\n\n              if (!_.isEmpty(element.course)) {\n                object.label = element.class.name;\n                object.id = element.course[0].id;\n                object.value = element.course[0].id;\n                newList.push(object);\n              }\n            });\n            this.setState({\n              classes: newList\n            });\n          }\n        });\n      } else {\n        let apiEndpoint = `/assignment_class_subjects/${selectedOption.value}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n        classService.get(apiEndpoint).then(response => {\n          if (response) {\n            let element = response.data;\n\n            if (element.status) {\n              let object = {};\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n              this.setState({\n                classes: [object]\n              });\n            }\n          }\n        });\n      }\n    };\n\n    this.handleChangeHomeworkType = selectedOption => {\n      this.setState({\n        homeworkType: selectedOption.value\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      isOpenAddModal: false,\n      openArchive: false,\n      nameFile: '',\n      HomeworkTypes: [{\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.book.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 18\n          }\n        }),\n        value: 'book',\n        id: 1\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.series.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 18\n          }\n        }),\n        value: 'serie',\n        id: 2\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.other.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 18\n          }\n        }),\n        value: 'other',\n        id: 3\n      }],\n      HomeworkStatus: [{\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"status.classe.virtual.programm\\xE9\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 18\n          }\n        }),\n        value: 'programed',\n        id: 1\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"status.classe.virtual.progr\\xE9s\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 18\n          }\n        }),\n        value: 'progress',\n        id: 2\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"status.classe.virtual.t\\xE9rmin\\xE9\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 18\n          }\n        }),\n        value: 'finished',\n        id: 3\n      }],\n      homeworkType: '',\n      subjectId: null,\n      subjectColor: '',\n      description: '',\n      courseUrl: '',\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: '',\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: '',\n      classId: null,\n      classList: [],\n      homeworks: [],\n      statusHomework: '',\n      homeworkClass: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.addNewHomework = this.addNewHomework.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.openArchive = this.openArchive.bind(this);\n    this.handleChangeFilter = this.handleChangeFilter.bind(this);\n    this.handleChangeFilterType = this.handleChangeFilterType.bind(this);\n    this.handleDate = this.handleDate.bind(this);\n    this.handleChangeFilterStatus = this.handleChangeFilterStatus.bind(this);\n  }\n\n  handleDate() {\n    let homeworksList = [];\n\n    if (this.state.classId !== null) {\n      homeworksList = this.state.homeworkClass;\n    } else {\n      homeworksList = this.props.homeworks;\n    }\n\n    let homeworks = [];\n    homeworksList.forEach(element => {\n      let item = { ...element,\n        date: new Date(element.homework.publication_date)\n      };\n      homeworks.push(item);\n    });\n    const sortedHomework = homeworks.slice().sort((a, b) => b.date - a.date);\n    this.setState({\n      homeworks: sortedHomework\n    });\n  }\n\n  cancelModal() {\n    this.setState({\n      isOpenAddModal: false,\n      nameFile: '',\n      homeworkType: '',\n      subjectId: null,\n      subjectColor: '',\n      description: '',\n      courseUrl: '',\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      eventChecked: '',\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: ''\n    });\n  }\n\n  addNewHomework(e) {\n    e.preventDefault();\n\n    if (this.state.subjectId === null) {\n      this.setState({\n        errorClass: true\n      });\n    } else if (_.isEmpty(this.state.classesId)) {\n      this.setState({\n        isEmptylistClass: true\n      });\n    } else {\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType = this.state.homeworkType;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      dataHomework.correctionDate = this.state.correctionDate;\n      dataHomework.renderingDate = this.state.renderingDate;\n      dataHomework.subjectName = this.state.subjectName;\n      this.props.dispatch(addNewHomework(dataHomework, this.state.homeworkFiles, this.state.classesData));\n      this.cancelModal();\n    }\n  }\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter(element => element != filename);\n    let homeworkFiles = this.state.homeworkFiles.filter(element => element.name != filename);\n    this.setState({\n      nameFiles,\n      homeworkFiles\n    });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map(element => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({\n        homeworkFiles: oldFiles,\n        nameFiles\n      });\n    } else {\n      this.setState({\n        messageAlerte: 'Vous avez dépasser 5 fichiers',\n        alerteStatus: true\n      });\n      setTimeout(() => {\n        this.setState({\n          messageAlerte: '',\n          alerteStatus: false\n        });\n      }, 4000);\n    }\n  }\n\n  openAddModal() {\n    this.setState({\n      isOpenAddModal: !this.state.isOpenAddModal\n    });\n  }\n\n  openArchive() {\n    this.setState(previousState => ({\n      openArchive: !previousState.openArchive\n    }));\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({\n        subjects,\n        classList: this.props.classSettings\n      });\n    } else if (this.props.userProfile.role_id === roleIdProfessor) {\n      const professorId = this.props.userProfile.user.profiles[0].professors[0].id;\n      let apiEndpoint = `/course_v4?access_token=${localStorage.token}&filter[where][fk_id_professor]=${professorId}&filter[include][assignmentClassSubject]=subject&filter[include][assignmentClassSubject]=class`;\n      classService.get(apiEndpoint).then(response => {\n        if (response) {\n          let subjects = [];\n          let classes = [];\n          response.data.map(element => {\n            let object = {};\n            let classItem = {};\n            object.label = element.assignmentClassSubject.subject.name;\n            object.id = element.assignmentClassSubject.subject.id;\n            object.value = element.assignmentClassSubject.id;\n            subjects.push(object);\n            classItem = element.assignmentClassSubject.class;\n            classes.push(classItem);\n          });\n          this.setState({\n            subjects,\n            classList: classes\n          });\n        }\n      });\n    }\n\n    this.props.dispatch(getHomework(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id, this.props.userProfile.id, this.props.userProfile.role_id));\n  }\n\n  componentDidUpdate(previouProps) {\n    if (previouProps.subjects !== this.props.subjects) {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        let subjects = createListSubject(this.props.subjects);\n        this.setState({\n          subjects\n        });\n      }\n    }\n\n    if (previouProps.classSettings !== this.props.classSettings) {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        this.setState({\n          classList: this.props.classSettings\n        });\n      }\n    }\n\n    if (previouProps.homeworks !== this.props.homeworks) {\n      this.setState({\n        homeworks: this.props.homeworks\n      });\n    }\n  }\n\n  render() {\n    let detailCards = [{\n      cardColor: 'primary',\n      imageIcon: require('../../../../../assets/images/dashboard/teams-icon.png'),\n      // title: this.props.virtualClasses.length,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `message.Numbers.of.students`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: 'secondary',\n      imageIcon: require('../../../../../assets/images/dashboard/tasks-icon.png'),\n      // title: this.state.prog,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.file`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: 'info',\n      imageIcon: require('../../../../../assets/images/dashboard/project-icon.png'),\n      // title: this.state.encours,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.uncorrected`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: 'success',\n      imageIcon: require('../../../../../assets/images/dashboard/files-icon.png'),\n      // title: this.state.encours,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.educational.files`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 19\n        }\n      })\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper col-lg-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md- col-sm-12  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }\n    }, detailCards.map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconWithTextCard, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }\n    }, this.state.alerteStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }\n    }, \" \", this.state.messageAlerte, \" \")), this.props.errorStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger   text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \")), this.props.successStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-auto \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(HomeworkInProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      size: \"small\",\n      color: \"secondary\",\n      \"aria-label\": \"Add\",\n      onClick: this.openAddModal.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 21\n      }\n    }, this.state.isOpenAddModal ? /*#__PURE__*/React.createElement(RemoveSharpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 52\n      }\n    }) : /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 74\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2\",\n      style: {\n        fontFamily: 'Roboto',\n        fontSize: '17px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"modal.addToDo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-5 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      size: \"small\",\n      \"aria-label\": \"Add\",\n      style: {\n        backgroundColor: '#ffbb33',\n        color: '#ffffff'\n      },\n      onClick: this.openArchive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2\",\n      style: {\n        fontFamily: 'Roboto',\n        fontSize: '17px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"icon.archives\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 21\n      }\n    })))), this.state.isOpenAddModal && /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AddHomework, {\n      values: this.state,\n      handleChange: this.handleChange,\n      handleChangeHomeworkType: this.handleChangeHomeworkType,\n      subjects: this.state.subjects,\n      handleChangeSubject: this.handleChangeSubject,\n      attachFile: this.attachFile,\n      deleteFile: this.deleteFile,\n      handleChangePostTime: this.handleChangePostTime,\n      handleChangeDate: this.handleChangeDate,\n      handleChangeClassList: this.handleChangeClassList,\n      addNewHomework: this.addNewHomework,\n      cancelModal: this.cancelModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap flex-row bd-highlight mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"idClasse\",\n      name: \"idClasse\",\n      select: true,\n      value: this.state.classId,\n      onChange: this.handleChangeFilter('classId'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.note.class`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 28\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 19\n      }\n    }, this.state.classList.length > 0 ? this.state.classList.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 25\n      }\n    }, option.name)) : /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 23\n      }\n    }, \"Pas de classe\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pt-5 bd-highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 17\n      }\n    }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"statusHomework\",\n      name: \"statusHomework\",\n      select: true,\n      value: this.state.statusHomework,\n      onChange: this.handleChangeFilterStatus('statusHomework'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.todo.etat`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 28\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: \"all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 21\n      }\n    }, ' ', /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `userStuppDisplay.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 24\n      }\n    })), this.state.HomeworkStatus.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 23\n      }\n    }, option.label)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pt-5 bd-highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 17\n      }\n    }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"idType\",\n      name: \"idType\",\n      select: true,\n      value: this.state.idType || '',\n      onChange: this.handleChangeFilterType('idType'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.todo.type`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 28\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: \"all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 21\n      }\n    }, ' ', /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `userStuppDisplay.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 24\n      }\n    })), this.state.HomeworkTypes.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 23\n      }\n    }, option.label)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pt-5 bd-highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 17\n      }\n    }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pt-5  bd-highlight col-lg-2 col-md-6 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      onClick: this.handleDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"complaint.date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"add-service\",\n      yes: () => /*#__PURE__*/React.createElement(React.Fragment, null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 32\n      }\n    })), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"add-service\",\n      yes: () => /*#__PURE__*/React.createElement(React.Fragment, null, this.state.openArchive ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArchivedHomework, {\n        homeworks: this.props.archivedHomework,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 29\n        }\n      })) : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 19\n      }\n    })), !this.state.openArchive ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HomeworkList, {\n      homeworks: this.state.homeworks,\n      subjects: this.state.subjects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 19\n      }\n    })) : ''))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    subjects: state.subject.subjects,\n    homeworks: state.HomeworkReducer.homeworks,\n    archivedHomework: state.HomeworkReducer.archivedHomework,\n    classSettings: state.ClassSettingsReducer.classSettings\n  };\n};\n\nexport default connect(mapStateToProps)(Homework);\n\nfunction createListSubject(subjects) {\n  let newList = subjects.map(element => {\n    let object = {};\n    object.label = element.name;\n    object.id = element.id;\n    object.value = element.id;\n    object.color = element.color;\n    return object;\n  });\n  return newList;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js"],"names":["React","IconWithTextCard","IntlMessages","HomeworkInProgress","CardBox","AddIcon","Fab","DeleteOutlineIcon","RemoveSharpIcon","connect","AddHomework","UncontrolledAlert","classService","HomeworkList","_","addNewHomework","getHomework","ArchivedHomework","Can","RoleContext","TextField","moment","roleIdAdmin","roleIdProfessor","MenuItem","element","Homework","Component","constructor","props","handleChangeFilterStatus","name","event","state","classId","target","value","setState","homeworks","homeworkClass","filter","status","handleChangeFilterType","homeworksList","homework","homework_type","handleChangeFilter","handleChangeClassList","selectedOption","classesId","map","isEmptylistClass","classesData","handleChangeDate","date","renderingDate","correctionDate","handleChangePostTime","time","postTime","_d","handleChangeSubject","subjectId","id","subjectColor","color","subjectName","label","errorClass","userProfile","role_id","apiEndpoint","localStorage","token","get","then","response","classesSubjects","data","newList","object","isEmpty","course","class","push","classes","handleChangeHomeworkType","homeworkType","handleChange","isOpenAddModal","openArchive","nameFile","HomeworkTypes","HomeworkStatus","description","courseUrl","homeworkFiles","nameFiles","publicationDate","Date","subjects","eventChecked","classList","statusHomework","bind","attachFile","deleteFile","cancelModal","handleDate","forEach","item","publication_date","sortedHomework","slice","sort","a","b","e","preventDefault","dataHomework","title","publicationTime","dispatch","filename","oldFiles","files","Object","values","undefined","length","messageAlerte","alerteStatus","setTimeout","openAddModal","previousState","UNSAFE_componentWillMount","createListSubject","classSettings","professorId","user","profiles","professors","classItem","assignmentClassSubject","subject","establishment_id","school_year_id","componentDidUpdate","previouProps","render","detailCards","cardColor","imageIcon","require","subTitle","index","errorStatus","message","successStatus","fontFamily","fontSize","backgroundColor","disableUnderline","option","idType","role","archivedHomework","mapStateToProps","auth","alert","success","error","HomeworkReducer","ClassSettingsReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,OAAP,MAAoB,yCAApB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,iBAAT,QAAkC,YAAlC;AACA,SAASC,YAAT,QAA6B,wCAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,uCAA5C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,8BAA7C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,QAAN,SAAuB1B,KAAK,CAAC2B,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqFnBC,wBArFmB,GAqFSC,IAAD,IAAWC,KAAD,IAAW;AAC9C,UAAI,KAAKC,KAAL,CAAWC,OAAX,KAAuB,IAA3B,EAAiC;AAC/B,YAAIF,KAAK,CAACG,MAAN,CAAaC,KAAb,KAAuB,KAA3B,EAAkC;AAChC,eAAKC,QAAL,CAAc;AACZ,aAACN,IAAD,GAAQC,KAAK,CAACG,MAAN,CAAaC,KADT;AAEZE,YAAAA,SAAS,EAAE,KAAKL,KAAL,CAAWM;AAFV,WAAd;AAID,SALD,MAKO;AACL,cAAID,SAAS,GAAG,KAAKL,KAAL,CAAWM,aAAX,CAAyBC,MAAzB,CACbf,OAAD,IAAaA,OAAO,CAACgB,MAAR,KAAmBT,KAAK,CAACG,MAAN,CAAaC,KAD/B,CAAhB;AAGA,eAAKC,QAAL,CAAc;AAAE,aAACN,IAAD,GAAQC,KAAK,CAACG,MAAN,CAAaC,KAAvB;AAA8BE,YAAAA;AAA9B,WAAd;AACD;AACF,OAZD,MAYO;AACL,YAAIN,KAAK,CAACG,MAAN,CAAaC,KAAb,KAAuB,KAA3B,EAAkC;AAChC,eAAKC,QAAL,CAAc;AACZ,aAACN,IAAD,GAAQC,KAAK,CAACG,MAAN,CAAaC,KADT;AAEZE,YAAAA,SAAS,EAAE,KAAKT,KAAL,CAAWS;AAFV,WAAd;AAID,SALD,MAKO;AACL,cAAIA,SAAS,GAAG,KAAKT,KAAL,CAAWS,SAAX,CAAqBE,MAArB,CACbf,OAAD,IAAaA,OAAO,CAACgB,MAAR,KAAmBT,KAAK,CAACG,MAAN,CAAaC,KAD/B,CAAhB;AAGA,eAAKC,QAAL,CAAc;AAAE,aAACN,IAAD,GAAQC,KAAK,CAACG,MAAN,CAAaC,KAAvB;AAA8BE,YAAAA;AAA9B,WAAd;AACD;AACF;AACF,KA/GkB;;AAAA,SAuInBI,sBAvImB,GAuIOX,IAAD,IAAWC,KAAD,IAAW;AAC5C,UAAIW,aAAa,GAAG,EAApB;;AACA,UAAI,KAAKV,KAAL,CAAWC,OAAX,KAAuB,IAA3B,EAAiC;AAC/BS,QAAAA,aAAa,GAAG,KAAKV,KAAL,CAAWM,aAA3B;AACD,OAFD,MAEO;AACLI,QAAAA,aAAa,GAAG,KAAKd,KAAL,CAAWS,SAA3B;AACD;;AACD,UAAIN,KAAK,CAACG,MAAN,CAAaC,KAAb,KAAuB,KAA3B,EAAkC;AAChC,aAAKC,QAAL,CAAc;AACZ,WAACN,IAAD,GAAQC,KAAK,CAACG,MAAN,CAAaC,KADT;AAEZE,UAAAA,SAAS,EAAEK;AAFC,SAAd;AAID,OALD,MAKO;AACL,YAAIL,SAAS,GAAGK,aAAa,CAACH,MAAd,CACbf,OAAD,IAAaA,OAAO,CAACmB,QAAR,CAAiBC,aAAjB,KAAmCb,KAAK,CAACG,MAAN,CAAaC,KAD/C,CAAhB;AAGA,aAAKC,QAAL,CAAc;AAAE,WAACN,IAAD,GAAQC,KAAK,CAACG,MAAN,CAAaC,KAAvB;AAA8BE,UAAAA;AAA9B,SAAd;AACD;AACF,KAzJkB;;AAAA,SA2JnBQ,kBA3JmB,GA2JGf,IAAD,IAAWC,KAAD,IAAW;AACxC,UAAIM,SAAS,GAAG,KAAKT,KAAL,CAAWS,SAAX,CAAqBE,MAArB,CACbf,OAAD,IAAaA,OAAO,CAACS,OAAR,KAAoBF,KAAK,CAACG,MAAN,CAAaC,KADhC,CAAhB;AAGA,WAAKC,QAAL,CAAc;AACZ,SAACN,IAAD,GAAQC,KAAK,CAACG,MAAN,CAAaC,KADT;AAEZE,QAAAA,SAFY;AAGZC,QAAAA,aAAa,EAAED;AAHH,OAAd;AAKD,KApKkB;;AAAA,SA0NnBS,qBA1NmB,GA0NMC,cAAD,IAAoB;AAC1C,UAAIA,cAAc,IAAI,IAAtB,EAA4B;AAC1B,YAAIC,SAAS,GAAGnC,CAAC,CAACoC,GAAF,CAAMF,cAAN,EAAsB,IAAtB,CAAhB;;AACA,aAAKX,QAAL,CAAc;AACZY,UAAAA,SADY;AAEZE,UAAAA,gBAAgB,EAAE,KAFN;AAGZC,UAAAA,WAAW,EAAEJ;AAHD,SAAd;AAKD,OAPD,MAOO;AACL,aAAKX,QAAL,CAAc;AAAEY,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;AACF,KArOkB;;AAAA,SAuOnBI,gBAvOmB,GAuOCtB,IAAD,IAAWuB,IAAD,IAAU;AACrC,WAAKjB,QAAL,CAAc;AAAE,SAACN,IAAD,GAAQuB;AAAV,OAAd;;AACA,UAAIvB,IAAI,KAAK,iBAAb,EAAgC;AAC9B,aAAKM,QAAL,CAAc;AAAEkB,UAAAA,aAAa,EAAED,IAAjB;AAAuBE,UAAAA,cAAc,EAAEF;AAAvC,SAAd;AACD,OAFD,MAEO,IAAIvB,IAAI,KAAK,eAAb,EAA8B;AACnC,aAAKM,QAAL,CAAc;AAAEmB,UAAAA,cAAc,EAAEF;AAAlB,SAAd;AACD;AACF,KA9OkB;;AAAA,SAgPnBG,oBAhPmB,GAgPKC,IAAD,IAAU;AAC/B,WAAKrB,QAAL,CAAc;AAAEsB,QAAAA,QAAQ,EAAED,IAAI,CAACE;AAAjB,OAAd;AACD,KAlPkB;;AAAA,SAiRnBC,mBAjRmB,GAiRIb,cAAD,IAAoB;AACxC,WAAKX,QAAL,CAAc;AACZyB,QAAAA,SAAS,EAAEd,cAAc,CAACe,EADd;AAEZC,QAAAA,YAAY,EAAEhB,cAAc,CAACiB,KAFjB;AAGZC,QAAAA,WAAW,EAAElB,cAAc,CAACmB,KAHhB;AAIZC,QAAAA,UAAU,EAAE;AAJA,OAAd;;AAMA,UAAI,KAAKvC,KAAL,CAAWwC,WAAX,CAAuBC,OAAvB,KAAmChD,WAAvC,EAAoD;AAClD,YAAIiD,WAAW,GAAI,2CAA0CC,YAAY,CAACC,KAAM,oCAAmCzB,cAAc,CAACZ,KAAM,+CAAxI;AACAxB,QAAAA,YAAY,CAAC8D,GAAb,CAAiBH,WAAjB,EAA8BI,IAA9B,CAAoCC,QAAD,IAAc;AAC/C,cAAIA,QAAJ,EAAc;AACZ,gBAAIC,eAAe,GAAGD,QAAQ,CAACE,IAAT,CAActC,MAAd,CAAsBf,OAAD,IAAaA,OAAO,CAACgB,MAA1C,CAAtB;AACA,gBAAIsC,OAAO,GAAG,EAAd;AACAF,YAAAA,eAAe,CAAC3B,GAAhB,CAAqBzB,OAAD,IAAa;AAC/B,kBAAIuD,MAAM,GAAG,EAAb;;AACA,kBAAI,CAAClE,CAAC,CAACmE,OAAF,CAAUxD,OAAO,CAACyD,MAAlB,CAAL,EAAgC;AAC9BF,gBAAAA,MAAM,CAACb,KAAP,GAAe1C,OAAO,CAAC0D,KAAR,CAAcpD,IAA7B;AACAiD,gBAAAA,MAAM,CAACjB,EAAP,GAAYtC,OAAO,CAACyD,MAAR,CAAe,CAAf,EAAkBnB,EAA9B;AACAiB,gBAAAA,MAAM,CAAC5C,KAAP,GAAeX,OAAO,CAACyD,MAAR,CAAe,CAAf,EAAkBnB,EAAjC;AAEAgB,gBAAAA,OAAO,CAACK,IAAR,CAAaJ,MAAb;AACD;AACF,aATD;AAUA,iBAAK3C,QAAL,CAAc;AAAEgD,cAAAA,OAAO,EAAEN;AAAX,aAAd;AACD;AACF,SAhBD;AAiBD,OAnBD,MAmBO;AACL,YAAIR,WAAW,GAAI,8BAA6BvB,cAAc,CAACZ,KAAM,iBAAgBoC,YAAY,CAACC,KAAM,+CAAxG;AACA7D,QAAAA,YAAY,CAAC8D,GAAb,CAAiBH,WAAjB,EAA8BI,IAA9B,CAAoCC,QAAD,IAAc;AAC/C,cAAIA,QAAJ,EAAc;AACZ,gBAAInD,OAAO,GAAGmD,QAAQ,CAACE,IAAvB;;AACA,gBAAIrD,OAAO,CAACgB,MAAZ,EAAoB;AAClB,kBAAIuC,MAAM,GAAG,EAAb;AACAA,cAAAA,MAAM,CAACb,KAAP,GAAe1C,OAAO,CAAC0D,KAAR,CAAcpD,IAA7B;AACAiD,cAAAA,MAAM,CAACjB,EAAP,GAAYtC,OAAO,CAACyD,MAAR,CAAe,CAAf,EAAkBnB,EAA9B;AACAiB,cAAAA,MAAM,CAAC5C,KAAP,GAAeX,OAAO,CAACyD,MAAR,CAAe,CAAf,EAAkBnB,EAAjC;AACA,mBAAK1B,QAAL,CAAc;AAAEgD,gBAAAA,OAAO,EAAE,CAACL,MAAD;AAAX,eAAd;AACD;AACF;AACF,SAXD;AAYD;AACF,KA1TkB;;AAAA,SA4TnBM,wBA5TmB,GA4TStC,cAAD,IAAoB;AAC7C,WAAKX,QAAL,CAAc;AAAEkD,QAAAA,YAAY,EAAEvC,cAAc,CAACZ;AAA/B,OAAd;AACD,KA9TkB;;AAAA,SAgUnBoD,YAhUmB,GAgUHzD,IAAD,IAAWC,KAAD,IAAW;AAClC,WAAKK,QAAL,CAAc;AAAE,SAACN,IAAD,GAAQC,KAAK,CAACG,MAAN,CAAaC;AAAvB,OAAd;AACD,KAlUkB;;AAGjB,SAAKH,KAAL,GAAa;AACXwD,MAAAA,cAAc,EAAE,KADL;AAEXC,MAAAA,WAAW,EAAE,KAFF;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,aAAa,EAAE,CACb;AACEzB,QAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,UAAA,EAAE,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADT;AAEE/B,QAAAA,KAAK,EAAE,MAFT;AAGE2B,QAAAA,EAAE,EAAE;AAHN,OADa,EAMb;AACEI,QAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,UAAA,EAAE,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADT;AAEE/B,QAAAA,KAAK,EAAE,OAFT;AAGE2B,QAAAA,EAAE,EAAE;AAHN,OANa,EAWb;AACEI,QAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,UAAA,EAAE,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADT;AAEE/B,QAAAA,KAAK,EAAE,OAFT;AAGE2B,QAAAA,EAAE,EAAE;AAHN,OAXa,CAJJ;AAsBX8B,MAAAA,cAAc,EAAE,CACd;AACE1B,QAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,UAAA,EAAE,EAAC,oCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADT;AAEE/B,QAAAA,KAAK,EAAE,WAFT;AAGE2B,QAAAA,EAAE,EAAE;AAHN,OADc,EAMd;AACEI,QAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,UAAA,EAAE,EAAC,kCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADT;AAEE/B,QAAAA,KAAK,EAAE,UAFT;AAGE2B,QAAAA,EAAE,EAAE;AAHN,OANc,EAWd;AACEI,QAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,UAAA,EAAE,EAAC,qCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADT;AAEE/B,QAAAA,KAAK,EAAE,UAFT;AAGE2B,QAAAA,EAAE,EAAE;AAHN,OAXc,CAtBL;AAwCXwB,MAAAA,YAAY,EAAE,EAxCH;AAyCXzB,MAAAA,SAAS,EAAE,IAzCA;AA0CXE,MAAAA,YAAY,EAAE,EA1CH;AA2CX8B,MAAAA,WAAW,EAAE,EA3CF;AA4CXC,MAAAA,SAAS,EAAE,EA5CA;AA6CXC,MAAAA,aAAa,EAAE,EA7CJ;AA8CXC,MAAAA,SAAS,EAAE,EA9CA;AA+CXC,MAAAA,eAAe,EAAE,IAAIC,IAAJ,EA/CN;AAgDXxC,MAAAA,QAAQ,EAAE,IAAIwC,IAAJ,EAhDC;AAiDXd,MAAAA,OAAO,EAAE,EAjDE;AAkDXe,MAAAA,QAAQ,EAAE,EAlDC;AAmDXC,MAAAA,YAAY,EAAE,EAnDH;AAoDXpD,MAAAA,SAAS,EAAE,EApDA;AAqDXmB,MAAAA,UAAU,EAAE,KArDD;AAsDXZ,MAAAA,cAAc,EAAE,IAAI2C,IAAJ,EAtDL;AAuDX5C,MAAAA,aAAa,EAAE,IAAI4C,IAAJ,EAvDJ;AAwDXhD,MAAAA,gBAAgB,EAAE,KAxDP;AAyDXC,MAAAA,WAAW,EAAE,EAzDF;AA0DXc,MAAAA,WAAW,EAAE,EA1DF;AA2DXhC,MAAAA,OAAO,EAAE,IA3DE;AA4DXoE,MAAAA,SAAS,EAAE,EA5DA;AA6DXhE,MAAAA,SAAS,EAAE,EA7DA;AA8DXiE,MAAAA,cAAc,EAAE,EA9DL;AA+DXhE,MAAAA,aAAa,EAAE;AA/DJ,KAAb;AAiEA,SAAKiD,YAAL,GAAoB,KAAKA,YAAL,CAAkBgB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKlB,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BkB,IAA9B,CAAmC,IAAnC,CAAhC;AACA,SAAK3C,mBAAL,GAA2B,KAAKA,mBAAL,CAAyB2C,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAK/C,oBAAL,GAA4B,KAAKA,oBAAL,CAA0B+C,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKnD,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBmD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKzD,qBAAL,GAA6B,KAAKA,qBAAL,CAA2ByD,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKzF,cAAL,GAAsB,KAAKA,cAAL,CAAoByF,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKG,WAAL,GAAmB,KAAKA,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKd,WAAL,GAAmB,KAAKA,WAAL,CAAiBc,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAK1D,kBAAL,GAA0B,KAAKA,kBAAL,CAAwB0D,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAK9D,sBAAL,GAA8B,KAAKA,sBAAL,CAA4B8D,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKI,UAAL,GAAkB,KAAKA,UAAL,CAAgBJ,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAK1E,wBAAL,GAAgC,KAAKA,wBAAL,CAA8B0E,IAA9B,CAAmC,IAAnC,CAAhC;AACD;;AA8BDI,EAAAA,UAAU,GAAG;AACX,QAAIjE,aAAa,GAAG,EAApB;;AACA,QAAI,KAAKV,KAAL,CAAWC,OAAX,KAAuB,IAA3B,EAAiC;AAC/BS,MAAAA,aAAa,GAAG,KAAKV,KAAL,CAAWM,aAA3B;AACD,KAFD,MAEO;AACLI,MAAAA,aAAa,GAAG,KAAKd,KAAL,CAAWS,SAA3B;AACD;;AAED,QAAIA,SAAS,GAAG,EAAhB;AACAK,IAAAA,aAAa,CAACkE,OAAd,CAAuBpF,OAAD,IAAa;AACjC,UAAIqF,IAAI,GAAG,EACT,GAAGrF,OADM;AAET6B,QAAAA,IAAI,EAAE,IAAI6C,IAAJ,CAAS1E,OAAO,CAACmB,QAAR,CAAiBmE,gBAA1B;AAFG,OAAX;AAIAzE,MAAAA,SAAS,CAAC8C,IAAV,CAAe0B,IAAf;AACD,KAND;AAOA,UAAME,cAAc,GAAG1E,SAAS,CAAC2E,KAAV,GAAkBC,IAAlB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAAC9D,IAAF,GAAS6D,CAAC,CAAC7D,IAA5C,CAAvB;AACA,SAAKjB,QAAL,CAAc;AACZC,MAAAA,SAAS,EAAE0E;AADC,KAAd;AAGD;;AAiCDL,EAAAA,WAAW,GAAG;AACZ,SAAKtE,QAAL,CAAc;AACZoD,MAAAA,cAAc,EAAE,KADJ;AAEZE,MAAAA,QAAQ,EAAE,EAFE;AAGZJ,MAAAA,YAAY,EAAE,EAHF;AAIZzB,MAAAA,SAAS,EAAE,IAJC;AAKZE,MAAAA,YAAY,EAAE,EALF;AAMZ8B,MAAAA,WAAW,EAAE,EAND;AAOZC,MAAAA,SAAS,EAAE,EAPC;AAQZC,MAAAA,aAAa,EAAE,EARH;AASZC,MAAAA,SAAS,EAAE,EATC;AAUZC,MAAAA,eAAe,EAAE,IAAIC,IAAJ,EAVL;AAWZxC,MAAAA,QAAQ,EAAE,IAAIwC,IAAJ,EAXE;AAYZd,MAAAA,OAAO,EAAE,EAZG;AAaZgB,MAAAA,YAAY,EAAE,EAbF;AAcZpD,MAAAA,SAAS,EAAE,EAdC;AAeZmB,MAAAA,UAAU,EAAE,KAfA;AAgBZZ,MAAAA,cAAc,EAAE,IAAI2C,IAAJ,EAhBJ;AAiBZ5C,MAAAA,aAAa,EAAE,IAAI4C,IAAJ,EAjBH;AAkBZhD,MAAAA,gBAAgB,EAAE,KAlBN;AAmBZC,MAAAA,WAAW,EAAE,EAnBD;AAoBZc,MAAAA,WAAW,EAAE;AApBD,KAAd;AAsBD;;AAEDnD,EAAAA,cAAc,CAACsG,CAAD,EAAI;AAChBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,KAAKrF,KAAL,CAAW6B,SAAX,KAAyB,IAA7B,EAAmC;AACjC,WAAKzB,QAAL,CAAc;AAAE+B,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,KAFD,MAEO,IAAItD,CAAC,CAACmE,OAAF,CAAU,KAAKhD,KAAL,CAAWgB,SAArB,CAAJ,EAAqC;AAC1C,WAAKZ,QAAL,CAAc;AAAEc,QAAAA,gBAAgB,EAAE;AAApB,OAAd;AACD,KAFM,MAEA;AACL,UAAIoE,YAAY,GAAG,EAAnB;AACAA,MAAAA,YAAY,CAACC,KAAb,GAAqB,KAAKvF,KAAL,CAAW0D,QAAhC;AACA4B,MAAAA,YAAY,CAAChC,YAAb,GAA4B,KAAKtD,KAAL,CAAWsD,YAAvC;AACAgC,MAAAA,YAAY,CAACzD,SAAb,GAAyB,KAAK7B,KAAL,CAAW6B,SAApC;AACAyD,MAAAA,YAAY,CAACvD,YAAb,GAA4B,KAAK/B,KAAL,CAAW+B,YAAvC;AACAuD,MAAAA,YAAY,CAACtE,SAAb,GAAyB,KAAKhB,KAAL,CAAWgB,SAApC;AACAsE,MAAAA,YAAY,CAACrB,eAAb,GAA+B,KAAKjE,KAAL,CAAWiE,eAA1C;AACAqB,MAAAA,YAAY,CAACE,eAAb,GAA+B,KAAKxF,KAAL,CAAW0B,QAA1C;AACA4D,MAAAA,YAAY,CAACxB,SAAb,GAAyB,KAAK9D,KAAL,CAAW8D,SAApC;AACAwB,MAAAA,YAAY,CAACzB,WAAb,GAA2B,KAAK7D,KAAL,CAAW6D,WAAtC;AACAyB,MAAAA,YAAY,CAAC/D,cAAb,GAA8B,KAAKvB,KAAL,CAAWuB,cAAzC;AACA+D,MAAAA,YAAY,CAAChE,aAAb,GAA6B,KAAKtB,KAAL,CAAWsB,aAAxC;AACAgE,MAAAA,YAAY,CAACrD,WAAb,GAA2B,KAAKjC,KAAL,CAAWiC,WAAtC;AACA,WAAKrC,KAAL,CAAW6F,QAAX,CACE3G,cAAc,CAACwG,YAAD,EAAe,KAAKtF,KAAL,CAAW+D,aAA1B,EAAyC,KAAK/D,KAAL,CAAWmB,WAApD,CADhB;AAGA,WAAKuD,WAAL;AACD;AACF;;AA4BDD,EAAAA,UAAU,CAACiB,QAAD,EAAW;AACnB,QAAI1B,SAAS,GAAG,KAAKhE,KAAL,CAAWgE,SAAX,CAAqBzD,MAArB,CAA6Bf,OAAD,IAAaA,OAAO,IAAIkG,QAApD,CAAhB;AAEA,QAAI3B,aAAa,GAAG,KAAK/D,KAAL,CAAW+D,aAAX,CAAyBxD,MAAzB,CAAiCf,OAAD,IAAaA,OAAO,CAACM,IAAR,IAAgB4F,QAA7D,CAApB;AAEA,SAAKtF,QAAL,CAAc;AAAE4D,MAAAA,SAAF;AAAaD,MAAAA;AAAb,KAAd;AACD;;AAEDS,EAAAA,UAAU,CAACY,CAAD,EAAI;AACZ,QAAIO,QAAQ,GAAG,KAAK3F,KAAL,CAAW+D,aAA1B;AACA,QAAI6B,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcV,CAAC,CAAClF,MAAF,CAAS0F,KAAvB,CAAZ;AACA,QAAI5B,SAAS,GAAG,KAAKhE,KAAL,CAAWgE,SAA3B;;AACA,QAAI4B,KAAK,KAAKG,SAAV,IAAuB,KAAK/F,KAAL,CAAWgE,SAAX,CAAqBgC,MAArB,GAA8BJ,KAAK,CAACI,MAApC,GAA6C,CAAxE,EAA2E;AACzEJ,MAAAA,KAAK,CAAC3E,GAAN,CAAWzB,OAAD,IAAa;AACrBwE,QAAAA,SAAS,CAACb,IAAV,CAAe3D,OAAO,CAACM,IAAvB;AACA6F,QAAAA,QAAQ,CAACxC,IAAT,CAAc3D,OAAd;AACD,OAHD;AAIA,WAAKY,QAAL,CAAc;AAAE2D,QAAAA,aAAa,EAAE4B,QAAjB;AAA2B3B,QAAAA;AAA3B,OAAd;AACD,KAND,MAMO;AACL,WAAK5D,QAAL,CAAc;AACZ6F,QAAAA,aAAa,EAAE,+BADH;AAEZC,QAAAA,YAAY,EAAE;AAFF,OAAd;AAIAC,MAAAA,UAAU,CAAC,MAAM;AACf,aAAK/F,QAAL,CAAc;AAAE6F,UAAAA,aAAa,EAAE,EAAjB;AAAqBC,UAAAA,YAAY,EAAE;AAAnC,SAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF;;AAqDDE,EAAAA,YAAY,GAAG;AACb,SAAKhG,QAAL,CAAc;AAAEoD,MAAAA,cAAc,EAAE,CAAC,KAAKxD,KAAL,CAAWwD;AAA9B,KAAd;AACD;;AACDC,EAAAA,WAAW,GAAG;AACZ,SAAKrD,QAAL,CAAeiG,aAAD,KAAoB;AAChC5C,MAAAA,WAAW,EAAE,CAAC4C,aAAa,CAAC5C;AADI,KAApB,CAAd;AAGD;;AAED6C,EAAAA,yBAAyB,GAAG;AAC1B,QAAI,KAAK1G,KAAL,CAAWwC,WAAX,CAAuBC,OAAvB,KAAmChD,WAAvC,EAAoD;AAClD,UAAI8E,QAAQ,GAAGoC,iBAAiB,CAAC,KAAK3G,KAAL,CAAWuE,QAAZ,CAAhC;AACA,WAAK/D,QAAL,CAAc;AAAE+D,QAAAA,QAAF;AAAYE,QAAAA,SAAS,EAAE,KAAKzE,KAAL,CAAW4G;AAAlC,OAAd;AACD,KAHD,MAGO,IAAI,KAAK5G,KAAL,CAAWwC,WAAX,CAAuBC,OAAvB,KAAmC/C,eAAvC,EAAwD;AAC7D,YAAMmH,WAAW,GAAG,KAAK7G,KAAL,CAAWwC,WAAX,CAAuBsE,IAAvB,CAA4BC,QAA5B,CAAqC,CAArC,EAAwCC,UAAxC,CAAmD,CAAnD,EAAsD9E,EAA1E;AACA,UAAIQ,WAAW,GAAI,2BAA0BC,YAAY,CAACC,KAAM,mCAAkCiE,WAAY,gGAA9G;AACA9H,MAAAA,YAAY,CAAC8D,GAAb,CAAiBH,WAAjB,EAA8BI,IAA9B,CAAoCC,QAAD,IAAc;AAC/C,YAAIA,QAAJ,EAAc;AACZ,cAAIwB,QAAQ,GAAG,EAAf;AACA,cAAIf,OAAO,GAAG,EAAd;AACAT,UAAAA,QAAQ,CAACE,IAAT,CAAc5B,GAAd,CAAmBzB,OAAD,IAAa;AAC7B,gBAAIuD,MAAM,GAAG,EAAb;AACA,gBAAI8D,SAAS,GAAG,EAAhB;AACA9D,YAAAA,MAAM,CAACb,KAAP,GAAe1C,OAAO,CAACsH,sBAAR,CAA+BC,OAA/B,CAAuCjH,IAAtD;AACAiD,YAAAA,MAAM,CAACjB,EAAP,GAAYtC,OAAO,CAACsH,sBAAR,CAA+BC,OAA/B,CAAuCjF,EAAnD;AACAiB,YAAAA,MAAM,CAAC5C,KAAP,GAAeX,OAAO,CAACsH,sBAAR,CAA+BhF,EAA9C;AACAqC,YAAAA,QAAQ,CAAChB,IAAT,CAAcJ,MAAd;AACA8D,YAAAA,SAAS,GAAGrH,OAAO,CAACsH,sBAAR,CAA+B5D,KAA3C;AACAE,YAAAA,OAAO,CAACD,IAAR,CAAa0D,SAAb;AACD,WATD;AAUA,eAAKzG,QAAL,CAAc;AAAE+D,YAAAA,QAAF;AAAYE,YAAAA,SAAS,EAAEjB;AAAvB,WAAd;AACD;AACF,OAhBD;AAiBD;;AACD,SAAKxD,KAAL,CAAW6F,QAAX,CACE1G,WAAW,CACT,KAAKa,KAAL,CAAWwC,WAAX,CAAuB4E,gBADd,EAET,KAAKpH,KAAL,CAAWwC,WAAX,CAAuB6E,cAFd,EAGT,KAAKrH,KAAL,CAAWwC,WAAX,CAAuBN,EAHd,EAIT,KAAKlC,KAAL,CAAWwC,WAAX,CAAuBC,OAJd,CADb;AAQD;;AACD6E,EAAAA,kBAAkB,CAACC,YAAD,EAAe;AAC/B,QAAIA,YAAY,CAAChD,QAAb,KAA0B,KAAKvE,KAAL,CAAWuE,QAAzC,EAAmD;AACjD,UAAI,KAAKvE,KAAL,CAAWwC,WAAX,CAAuBC,OAAvB,KAAmChD,WAAvC,EAAoD;AAClD,YAAI8E,QAAQ,GAAGoC,iBAAiB,CAAC,KAAK3G,KAAL,CAAWuE,QAAZ,CAAhC;AACA,aAAK/D,QAAL,CAAc;AAAE+D,UAAAA;AAAF,SAAd;AACD;AACF;;AACD,QAAIgD,YAAY,CAACX,aAAb,KAA+B,KAAK5G,KAAL,CAAW4G,aAA9C,EAA6D;AAC3D,UAAI,KAAK5G,KAAL,CAAWwC,WAAX,CAAuBC,OAAvB,KAAmChD,WAAvC,EAAoD;AAClD,aAAKe,QAAL,CAAc;AAAEiE,UAAAA,SAAS,EAAE,KAAKzE,KAAL,CAAW4G;AAAxB,SAAd;AACD;AACF;;AACD,QAAIW,YAAY,CAAC9G,SAAb,KAA2B,KAAKT,KAAL,CAAWS,SAA1C,EAAqD;AACnD,WAAKD,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE,KAAKT,KAAL,CAAWS;AAAxB,OAAd;AACD;AACF;;AAED+G,EAAAA,MAAM,GAAG;AACP,QAAIC,WAAW,GAAG,CAChB;AACEC,MAAAA,SAAS,EAAE,SADb;AAEEC,MAAAA,SAAS,EAAEC,OAAO,CAAC,uDAAD,CAFpB;AAIE;AACAC,MAAAA,QAAQ,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAG,6BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALZ,KADgB,EAQhB;AACEH,MAAAA,SAAS,EAAE,WADb;AAEEC,MAAAA,SAAS,EAAEC,OAAO,CAAC,uDAAD,CAFpB;AAGE;AACAC,MAAAA,QAAQ,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAG,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJZ,KARgB,EAchB;AACEH,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,SAAS,EAAEC,OAAO,CAAC,yDAAD,CAFpB;AAGE;AACAC,MAAAA,QAAQ,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAG,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJZ,KAdgB,EAoBhB;AACEH,MAAAA,SAAS,EAAE,SADb;AAEEC,MAAAA,SAAS,EAAEC,OAAO,CAAC,uDAAD,CAFpB;AAGE;AACAC,MAAAA,QAAQ,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAG,4BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJZ,KApBgB,CAAlB;AA2BA,wBACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,WAAW,CAACpG,GAAZ,CAAgB,CAAC4B,IAAD,EAAO6E,KAAP,kBACf;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAC,4CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE7E,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK7C,KAAL,CAAWkG,YAAX,iBACC,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC,4DAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,4CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmC,KAAKlG,KAAL,CAAWiG,aAA9C,MAJF,CAFJ,EAUG,KAAKrG,KAAL,CAAW+H,WAAX,iBACC,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC,mDAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,4CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmC,KAAK/H,KAAL,CAAWgI,OAA9C,MAJF,CAXJ,EAkBG,KAAKhI,KAAL,CAAWiI,aAAX,iBACC,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC,6DAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,4CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmC,KAAKjI,KAAL,CAAWgI,OAA9C,MAJF,CAnBJ,CARF,eAmCE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,eAOE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,oBAAW,KAHb;AAIE,MAAA,OAAO,EAAE,KAAKxB,YAAL,CAAkB7B,IAAlB,CAAuB,IAAvB,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKvE,KAAL,CAAWwD,cAAX,gBAA4B,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,gBAAkD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANrD,CADF,CADF,eAWE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEsE,QAAAA,UAAU,EAAE,QAAd;AAAwBC,QAAAA,QAAQ,EAAE;AAAlC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXF,eAeE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,oBAAW,KAFb;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,SAAnB;AAA8BhG,QAAAA,KAAK,EAAE;AAArC,OAHT;AAIE,MAAA,OAAO,EAAE,KAAKyB,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CAfF,eAyBE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEqE,QAAAA,UAAU,EAAE,QAAd;AAAwBC,QAAAA,QAAQ,EAAE;AAAlC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAzBF,CADF,CADF,EAiCG,KAAK/H,KAAL,CAAWwD,cAAX,iBACC,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAE,KAAKxD,KADf;AAEE,MAAA,YAAY,EAAE,KAAKuD,YAFrB;AAGE,MAAA,wBAAwB,EAAE,KAAKF,wBAHjC;AAIE,MAAA,QAAQ,EAAE,KAAKrD,KAAL,CAAWmE,QAJvB;AAKE,MAAA,mBAAmB,EAAE,KAAKvC,mBAL5B;AAME,MAAA,UAAU,EAAE,KAAK4C,UANnB;AAOE,MAAA,UAAU,EAAE,KAAKC,UAPnB;AAQE,MAAA,oBAAoB,EAAE,KAAKjD,oBAR7B;AASE,MAAA,gBAAgB,EAAE,KAAKJ,gBATzB;AAUE,MAAA,qBAAqB,EAAE,KAAKN,qBAV9B;AAWE,MAAA,cAAc,EAAE,KAAKhC,cAXvB;AAYE,MAAA,WAAW,EAAE,KAAK4F,WAZpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlCJ,eAmDE;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,MAAM,MAHR;AAIE,MAAA,KAAK,EAAE,KAAK1E,KAAL,CAAWC,OAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKY,kBAAL,CAAwB,SAAxB,CALZ;AAME,MAAA,WAAW,EAAE,EANf;AAOE,MAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAG,uBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPT;AAQE,MAAA,UAAU,EAAE;AAAEoH,QAAAA,gBAAgB,EAAE;AAApB,OARd;AASE,MAAA,MAAM,EAAC,QATT;AAUE,MAAA,SAAS,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYG,KAAKjI,KAAL,CAAWqE,SAAX,CAAqB2B,MAArB,GAA8B,CAA9B,GACC,KAAKhG,KAAL,CAAWqE,SAAX,CAAqBpD,GAArB,CAA0BiH,MAAD,iBACvB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAM,CAACpG,EAAtB;AAA0B,MAAA,KAAK,EAAEoG,MAAM,CAACpG,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGoG,MAAM,CAACpI,IADV,CADF,CADD,gBAOC,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAAf;AAAkB,MAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAnBJ,CADF,CADF,eA2BE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA3BF,eA6BE;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,IAAI,EAAC,gBAFP;AAGE,MAAA,MAAM,MAHR;AAIE,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWsE,cAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKzE,wBAAL,CAA8B,gBAA9B,CALZ;AAME,MAAA,WAAW,EAAE,EANf;AAOE,MAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAG,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPT;AAQE,MAAA,UAAU,EAAE;AAAEoI,QAAAA,gBAAgB,EAAE;AAApB,OARd;AASE,MAAA,MAAM,EAAC,QATT;AAUE,MAAA,SAAS,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAAf;AAAkB,MAAA,KAAK,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,eAEG,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAG,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CAZF,EAgBG,KAAKjI,KAAL,CAAW4D,cAAX,CAA0B3C,GAA1B,CAA+BiH,MAAD,iBAC7B,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAM,CAACpG,EAAtB;AAA0B,MAAA,KAAK,EAAEoG,MAAM,CAAC/H,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG+H,MAAM,CAAChG,KADV,CADD,CAhBH,CADF,CA7BF,eAqDE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WArDF,eAsDE;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,MAAM,MAHR;AAIE,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWmI,MAAX,IAAqB,EAJ9B;AAKE,MAAA,QAAQ,EAAE,KAAK1H,sBAAL,CAA4B,QAA5B,CALZ;AAME,MAAA,WAAW,EAAE,EANf;AAOE,MAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAG,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPT;AAQE,MAAA,UAAU,EAAE;AAAEwH,QAAAA,gBAAgB,EAAE;AAApB,OARd;AASE,MAAA,MAAM,EAAC,QATT;AAUE,MAAA,SAAS,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAAf;AAAkB,MAAA,KAAK,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,eAEG,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAG,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CAZF,EAgBG,KAAKjI,KAAL,CAAW2D,aAAX,CAAyB1C,GAAzB,CAA8BiH,MAAD,iBAC5B,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAM,CAACpG,EAAtB;AAA0B,MAAA,KAAK,EAAEoG,MAAM,CAAC/H,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG+H,MAAM,CAAChG,KADV,CADD,CAhBH,CADF,CAtDF,eA8EE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA9EF,eA+EE;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,OAAO,EAAE,KAAKyC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CA/EF,CAnDF,eAwIE,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEyD,MAAAA;AAAF,KAAD,kBAAc,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEA,IAAX;AAAiB,MAAA,OAAO,EAAC,aAAzB;AAAuC,MAAA,GAAG,EAAE,mBAAM,yCAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjB,CAxIF,eA4IE,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEA,MAAAA;AAAF,KAAD,kBACC,oBAAC,GAAD;AACE,MAAA,IAAI,EAAEA,IADR;AAEE,MAAA,OAAO,EAAC,aAFV;AAGE,MAAA,GAAG,EAAE,mBACH,0CACG,KAAKpI,KAAL,CAAWyD,WAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,gBAAD;AAAkB,QAAA,SAAS,EAAE,KAAK7D,KAAL,CAAWyI,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADD,GAKC,EANJ,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA5IF,EAgKG,CAAC,KAAKrI,KAAL,CAAWyD,WAAZ,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAE,KAAKzD,KAAL,CAAWK,SAApC;AAA+C,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWmE,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAKC,EArKJ,CAPF,CAnCF,CADF,CADF;AAwND;;AArnBoC;;AAunBvC,MAAMmE,eAAe,GAAItI,KAAD,IAAW;AACjC,SAAO;AACLoC,IAAAA,WAAW,EAAEpC,KAAK,CAACuI,IAAN,CAAWnG,WADnB;AAELyF,IAAAA,aAAa,EAAE7H,KAAK,CAACwI,KAAN,CAAYC,OAFtB;AAGLd,IAAAA,WAAW,EAAE3H,KAAK,CAACwI,KAAN,CAAYE,KAHpB;AAILd,IAAAA,OAAO,EAAE5H,KAAK,CAACwI,KAAN,CAAYZ,OAJhB;AAKLzD,IAAAA,QAAQ,EAAEnE,KAAK,CAAC+G,OAAN,CAAc5C,QALnB;AAML9D,IAAAA,SAAS,EAAEL,KAAK,CAAC2I,eAAN,CAAsBtI,SAN5B;AAOLgI,IAAAA,gBAAgB,EAAErI,KAAK,CAAC2I,eAAN,CAAsBN,gBAPnC;AAQL7B,IAAAA,aAAa,EAAExG,KAAK,CAAC4I,oBAAN,CAA2BpC;AARrC,GAAP;AAUD,CAXD;;AAYA,eAAehI,OAAO,CAAC8J,eAAD,CAAP,CAAyB7I,QAAzB,CAAf;;AAEA,SAAS8G,iBAAT,CAA2BpC,QAA3B,EAAqC;AACnC,MAAIrB,OAAO,GAAGqB,QAAQ,CAAClD,GAAT,CAAczB,OAAD,IAAa;AACtC,QAAIuD,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAACb,KAAP,GAAe1C,OAAO,CAACM,IAAvB;AACAiD,IAAAA,MAAM,CAACjB,EAAP,GAAYtC,OAAO,CAACsC,EAApB;AACAiB,IAAAA,MAAM,CAAC5C,KAAP,GAAeX,OAAO,CAACsC,EAAvB;AACAiB,IAAAA,MAAM,CAACf,KAAP,GAAexC,OAAO,CAACwC,KAAvB;AACA,WAAOe,MAAP;AACD,GAPa,CAAd;AAQA,SAAOD,OAAP;AACD","sourcesContent":["import React from 'react';\nimport IconWithTextCard from '../../../CommonComponents/IconWithTextCard';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport HomeworkInProgress from './HomeworkInProgress';\nimport CardBox from '../../../../../components/CardBox/index';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport RemoveSharpIcon from '@material-ui/icons/RemoveSharp';\nimport { connect } from 'react-redux';\nimport AddHomework from './AddHomework';\nimport { UncontrolledAlert } from 'reactstrap';\nimport { classService } from '../../../../../_services/class.service';\nimport HomeworkList from './HomeworkList';\nimport _ from 'lodash';\nimport { addNewHomework, getHomework } from '../../../../../actions/HomeworkAction';\nimport ArchivedHomework from './ArchivedHomework';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { roleIdAdmin, roleIdProfessor } from '../../../../../config/config';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { element } from 'prop-types';\n\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenAddModal: false,\n      openArchive: false,\n      nameFile: '',\n      HomeworkTypes: [\n        {\n          label: <IntlMessages id=\"toDo.book.exercise\" />,\n          value: 'book',\n          id: 1,\n        },\n        {\n          label: <IntlMessages id=\"toDo.series.exercise\" />,\n          value: 'serie',\n          id: 2,\n        },\n        {\n          label: <IntlMessages id=\"toDo.other.exercise\" />,\n          value: 'other',\n          id: 3,\n        },\n      ],\n\n      HomeworkStatus: [\n        {\n          label: <IntlMessages id=\"status.classe.virtual.programmé\" />,\n          value: 'programed',\n          id: 1,\n        },\n        {\n          label: <IntlMessages id=\"status.classe.virtual.progrés\" />,\n          value: 'progress',\n          id: 2,\n        },\n        {\n          label: <IntlMessages id=\"status.classe.virtual.términé\" />,\n          value: 'finished',\n          id: 3,\n        },\n      ],\n\n      homeworkType: '',\n      subjectId: null,\n      subjectColor: '',\n      description: '',\n      courseUrl: '',\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: '',\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: '',\n      classId: null,\n      classList: [],\n      homeworks: [],\n      statusHomework: '',\n      homeworkClass: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.addNewHomework = this.addNewHomework.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.openArchive = this.openArchive.bind(this);\n    this.handleChangeFilter = this.handleChangeFilter.bind(this);\n    this.handleChangeFilterType = this.handleChangeFilterType.bind(this);\n    this.handleDate = this.handleDate.bind(this);\n    this.handleChangeFilterStatus = this.handleChangeFilterStatus.bind(this);\n  }\n\n  handleChangeFilterStatus = (name) => (event) => {\n    if (this.state.classId !== null) {\n      if (event.target.value === 'all') {\n        this.setState({\n          [name]: event.target.value,\n          homeworks: this.state.homeworkClass,\n        });\n      } else {\n        let homeworks = this.state.homeworkClass.filter(\n          (element) => element.status === event.target.value\n        );\n        this.setState({ [name]: event.target.value, homeworks });\n      }\n    } else {\n      if (event.target.value === 'all') {\n        this.setState({\n          [name]: event.target.value,\n          homeworks: this.props.homeworks,\n        });\n      } else {\n        let homeworks = this.props.homeworks.filter(\n          (element) => element.status === event.target.value\n        );\n        this.setState({ [name]: event.target.value, homeworks });\n      }\n    }\n  };\n\n  handleDate() {\n    let homeworksList = [];\n    if (this.state.classId !== null) {\n      homeworksList = this.state.homeworkClass;\n    } else {\n      homeworksList = this.props.homeworks;\n    }\n\n    let homeworks = [];\n    homeworksList.forEach((element) => {\n      let item = {\n        ...element,\n        date: new Date(element.homework.publication_date),\n      };\n      homeworks.push(item);\n    });\n    const sortedHomework = homeworks.slice().sort((a, b) => b.date - a.date);\n    this.setState({\n      homeworks: sortedHomework,\n    });\n  }\n\n  handleChangeFilterType = (name) => (event) => {\n    let homeworksList = [];\n    if (this.state.classId !== null) {\n      homeworksList = this.state.homeworkClass;\n    } else {\n      homeworksList = this.props.homeworks;\n    }\n    if (event.target.value === 'all') {\n      this.setState({\n        [name]: event.target.value,\n        homeworks: homeworksList,\n      });\n    } else {\n      let homeworks = homeworksList.filter(\n        (element) => element.homework.homework_type === event.target.value\n      );\n      this.setState({ [name]: event.target.value, homeworks });\n    }\n  };\n\n  handleChangeFilter = (name) => (event) => {\n    let homeworks = this.props.homeworks.filter(\n      (element) => element.classId === event.target.value\n    );\n    this.setState({\n      [name]: event.target.value,\n      homeworks,\n      homeworkClass: homeworks,\n    });\n  };\n\n  cancelModal() {\n    this.setState({\n      isOpenAddModal: false,\n      nameFile: '',\n      homeworkType: '',\n      subjectId: null,\n      subjectColor: '',\n      description: '',\n      courseUrl: '',\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      eventChecked: '',\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: '',\n    });\n  }\n\n  addNewHomework(e) {\n    e.preventDefault();\n    if (this.state.subjectId === null) {\n      this.setState({ errorClass: true });\n    } else if (_.isEmpty(this.state.classesId)) {\n      this.setState({ isEmptylistClass: true });\n    } else {\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType = this.state.homeworkType;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      dataHomework.correctionDate = this.state.correctionDate;\n      dataHomework.renderingDate = this.state.renderingDate;\n      dataHomework.subjectName = this.state.subjectName;\n      this.props.dispatch(\n        addNewHomework(dataHomework, this.state.homeworkFiles, this.state.classesData)\n      );\n      this.cancelModal();\n    }\n  }\n\n  handleChangeClassList = (selectedOption) => {\n    if (selectedOption != null) {\n      let classesId = _.map(selectedOption, 'id');\n      this.setState({\n        classesId,\n        isEmptylistClass: false,\n        classesData: selectedOption,\n      });\n    } else {\n      this.setState({ classesId: [] });\n    }\n  };\n\n  handleChangeDate = (name) => (date) => {\n    this.setState({ [name]: date });\n    if (name === 'publicationDate') {\n      this.setState({ renderingDate: date, correctionDate: date });\n    } else if (name === 'renderingDate') {\n      this.setState({ correctionDate: date });\n    }\n  };\n\n  handleChangePostTime = (time) => {\n    this.setState({ postTime: time._d });\n  };\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter((element) => element != filename);\n\n    let homeworkFiles = this.state.homeworkFiles.filter((element) => element.name != filename);\n\n    this.setState({ nameFiles, homeworkFiles });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map((element) => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({ homeworkFiles: oldFiles, nameFiles });\n    } else {\n      this.setState({\n        messageAlerte: 'Vous avez dépasser 5 fichiers',\n        alerteStatus: true,\n      });\n      setTimeout(() => {\n        this.setState({ messageAlerte: '', alerteStatus: false });\n      }, 4000);\n    }\n  }\n\n  handleChangeSubject = (selectedOption) => {\n    this.setState({\n      subjectId: selectedOption.id,\n      subjectColor: selectedOption.color,\n      subjectName: selectedOption.label,\n      errorClass: false,\n    });\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let classesSubjects = response.data.filter((element) => element.status);\n          let newList = [];\n          classesSubjects.map((element) => {\n            let object = {};\n            if (!_.isEmpty(element.course)) {\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n\n              newList.push(object);\n            }\n          });\n          this.setState({ classes: newList });\n        }\n      });\n    } else {\n      let apiEndpoint = `/assignment_class_subjects/${selectedOption.value}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let element = response.data;\n          if (element.status) {\n            let object = {};\n            object.label = element.class.name;\n            object.id = element.course[0].id;\n            object.value = element.course[0].id;\n            this.setState({ classes: [object] });\n          }\n        }\n      });\n    }\n  };\n\n  handleChangeHomeworkType = (selectedOption) => {\n    this.setState({ homeworkType: selectedOption.value });\n  };\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  openAddModal() {\n    this.setState({ isOpenAddModal: !this.state.isOpenAddModal });\n  }\n  openArchive() {\n    this.setState((previousState) => ({\n      openArchive: !previousState.openArchive,\n    }));\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({ subjects, classList: this.props.classSettings });\n    } else if (this.props.userProfile.role_id === roleIdProfessor) {\n      const professorId = this.props.userProfile.user.profiles[0].professors[0].id;\n      let apiEndpoint = `/course_v4?access_token=${localStorage.token}&filter[where][fk_id_professor]=${professorId}&filter[include][assignmentClassSubject]=subject&filter[include][assignmentClassSubject]=class`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let subjects = [];\n          let classes = [];\n          response.data.map((element) => {\n            let object = {};\n            let classItem = {};\n            object.label = element.assignmentClassSubject.subject.name;\n            object.id = element.assignmentClassSubject.subject.id;\n            object.value = element.assignmentClassSubject.id;\n            subjects.push(object);\n            classItem = element.assignmentClassSubject.class;\n            classes.push(classItem);\n          });\n          this.setState({ subjects, classList: classes });\n        }\n      });\n    }\n    this.props.dispatch(\n      getHomework(\n        this.props.userProfile.establishment_id,\n        this.props.userProfile.school_year_id,\n        this.props.userProfile.id,\n        this.props.userProfile.role_id\n      )\n    );\n  }\n  componentDidUpdate(previouProps) {\n    if (previouProps.subjects !== this.props.subjects) {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        let subjects = createListSubject(this.props.subjects);\n        this.setState({ subjects });\n      }\n    }\n    if (previouProps.classSettings !== this.props.classSettings) {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        this.setState({ classList: this.props.classSettings });\n      }\n    }\n    if (previouProps.homeworks !== this.props.homeworks) {\n      this.setState({ homeworks: this.props.homeworks });\n    }\n  }\n\n  render() {\n    let detailCards = [\n      {\n        cardColor: 'primary',\n        imageIcon: require('../../../../../assets/images/dashboard/teams-icon.png'),\n\n        // title: this.props.virtualClasses.length,\n        subTitle: <IntlMessages id={`message.Numbers.of.students`} />,\n      },\n      {\n        cardColor: 'secondary',\n        imageIcon: require('../../../../../assets/images/dashboard/tasks-icon.png'),\n        // title: this.state.prog,\n        subTitle: <IntlMessages id={`homework.file`} />,\n      },\n      {\n        cardColor: 'info',\n        imageIcon: require('../../../../../assets/images/dashboard/project-icon.png'),\n        // title: this.state.encours,\n        subTitle: <IntlMessages id={`homework.uncorrected`} />,\n      },\n      {\n        cardColor: 'success',\n        imageIcon: require('../../../../../assets/images/dashboard/files-icon.png'),\n        // title: this.state.encours,\n        subTitle: <IntlMessages id={`homework.educational.files`} />,\n      },\n    ];\n    return (\n      <div className=\"app-wrapper col-lg-12 col-md-12\">\n        <div className=\"d-flex flex-column mb-3\">\n          <div className=\"row col-lg-12 col-md- col-sm-12  \">\n            {detailCards.map((data, index) => (\n              <div key={index} className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\">\n                <IconWithTextCard data={data} />\n              </div>\n            ))}\n          </div>\n          <div>\n            {this.state.alerteStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-danger bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.state.messageAlerte} </span>\n              </UncontrolledAlert>\n            )}\n\n            {this.props.errorStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-danger   text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            )}\n            {this.props.successStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            )}\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-md-auto \">\n              <CardBox styleName=\"row\">\n                <HomeworkInProgress />\n              </CardBox>\n            </div>\n\n            <div className=\"col \">\n              <CardBox styleName=\"col-lg-12 \">\n                <div className=\"row\">\n                  <div>\n                    <Fab\n                      size=\"small\"\n                      color=\"secondary\"\n                      aria-label=\"Add\"\n                      onClick={this.openAddModal.bind(this)}\n                    >\n                      {this.state.isOpenAddModal ? <RemoveSharpIcon /> : <AddIcon />}\n                    </Fab>\n                  </div>\n                  <div className=\"p-2\" style={{ fontFamily: 'Roboto', fontSize: '17px' }}>\n                    <IntlMessages id=\"modal.addToDo\" />\n                  </div>\n\n                  <div className=\"pl-5 \">\n                    <Fab\n                      size=\"small\"\n                      aria-label=\"Add\"\n                      style={{ backgroundColor: '#ffbb33', color: '#ffffff' }}\n                      onClick={this.openArchive}\n                    >\n                      <DeleteOutlineIcon />\n                    </Fab>\n                  </div>\n                  <div className=\"p-2\" style={{ fontFamily: 'Roboto', fontSize: '17px' }}>\n                    <IntlMessages id=\"icon.archives\" />\n                  </div>\n                </div>\n              </CardBox>\n\n              {this.state.isOpenAddModal && (\n                <CardBox styleName=\"col-lg-12\">\n                  <AddHomework\n                    values={this.state}\n                    handleChange={this.handleChange}\n                    handleChangeHomeworkType={this.handleChangeHomeworkType}\n                    subjects={this.state.subjects}\n                    handleChangeSubject={this.handleChangeSubject}\n                    attachFile={this.attachFile}\n                    deleteFile={this.deleteFile}\n                    handleChangePostTime={this.handleChangePostTime}\n                    handleChangeDate={this.handleChangeDate}\n                    handleChangeClassList={this.handleChangeClassList}\n                    addNewHomework={this.addNewHomework}\n                    cancelModal={this.cancelModal}\n                  />\n                </CardBox>\n              )}\n              <div className=\"d-flex flex-wrap flex-row bd-highlight mb-3\">\n                <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-5\">\n                  <TextField\n                    id=\"idClasse\"\n                    name=\"idClasse\"\n                    select\n                    value={this.state.classId}\n                    onChange={this.handleChangeFilter('classId')}\n                    SelectProps={{}}\n                    label={<IntlMessages id={`components.note.class`} />}\n                    InputProps={{ disableUnderline: true }}\n                    margin=\"normal\"\n                    fullWidth\n                  >\n                    {this.state.classList.length > 0 ? (\n                      this.state.classList.map((option) => (\n                        <MenuItem key={option.id} value={option.id}>\n                          {option.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <MenuItem key={0} value={0}>\n                        Pas de classe\n                      </MenuItem>\n                    )}\n                  </TextField>\n                </div>\n                <div className=\"pt-5 bd-highlight\">|</div>\n\n                <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                  <TextField\n                    id=\"statusHomework\"\n                    name=\"statusHomework\"\n                    select\n                    value={this.state.statusHomework}\n                    onChange={this.handleChangeFilterStatus('statusHomework')}\n                    SelectProps={{}}\n                    label={<IntlMessages id={`components.todo.etat`} />}\n                    InputProps={{ disableUnderline: true }}\n                    margin=\"normal\"\n                    fullWidth\n                  >\n                    <MenuItem key={0} value=\"all\">\n                      {' '}\n                      {<IntlMessages id={`userStuppDisplay.all`} />}\n                    </MenuItem>\n                    {this.state.HomeworkStatus.map((option) => (\n                      <MenuItem key={option.id} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </div>\n                <div className=\"pt-5 bd-highlight\">|</div>\n                <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                  <TextField\n                    id=\"idType\"\n                    name=\"idType\"\n                    select\n                    value={this.state.idType || ''}\n                    onChange={this.handleChangeFilterType('idType')}\n                    SelectProps={{}}\n                    label={<IntlMessages id={`components.todo.type`} />}\n                    InputProps={{ disableUnderline: true }}\n                    margin=\"normal\"\n                    fullWidth\n                  >\n                    <MenuItem key={0} value=\"all\">\n                      {' '}\n                      {<IntlMessages id={`userStuppDisplay.all`} />}\n                    </MenuItem>\n                    {this.state.HomeworkTypes.map((option) => (\n                      <MenuItem key={option.id} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </div>\n                <div className=\"pt-5 bd-highlight\">|</div>\n                <div className=\"pt-5  bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                  <h5 onClick={this.handleDate}>\n                    <IntlMessages id=\"complaint.date\" />\n                  </h5>\n                </div>\n              </div>\n              <RoleContext.Consumer>\n                {({ role }) => <Can role={role} perform=\"add-service\" yes={() => <></>} />}\n              </RoleContext.Consumer>\n\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"add-service\"\n                    yes={() => (\n                      <>\n                        {this.state.openArchive ? (\n                          <div>\n                            <ArchivedHomework homeworks={this.props.archivedHomework} />\n                          </div>\n                        ) : (\n                          ''\n                        )}\n                      </>\n                    )}\n                  />\n                )}\n              </RoleContext.Consumer>\n\n              {!this.state.openArchive ? (\n                <div>\n                  <HomeworkList homeworks={this.state.homeworks} subjects={this.state.subjects} />\n                </div>\n              ) : (\n                ''\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    subjects: state.subject.subjects,\n    homeworks: state.HomeworkReducer.homeworks,\n    archivedHomework: state.HomeworkReducer.archivedHomework,\n    classSettings: state.ClassSettingsReducer.classSettings,\n  };\n};\nexport default connect(mapStateToProps)(Homework);\n\nfunction createListSubject(subjects) {\n  let newList = subjects.map((element) => {\n    let object = {};\n    object.label = element.name;\n    object.id = element.id;\n    object.value = element.id;\n    object.color = element.color;\n    return object;\n  });\n  return newList;\n}\n"]},"metadata":{},"sourceType":"module"}