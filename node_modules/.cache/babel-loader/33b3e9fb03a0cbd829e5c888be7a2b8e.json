{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/FinancialManagement/routes/ServiceAllocation/ServiceAllocation.js\";\nimport React from 'react';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { connect } from 'react-redux';\nimport IconWithTextCard from '../ServiceAllocation/ServiceAllocationComp/IconWithTextCard';\nimport TextField from '@material-ui/core/TextField';\nimport RemoveSharpIcon from '@material-ui/icons/RemoveSharp';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport ListServiceAllocation from './ListServiceAllocation';\nimport AddAllocationService from './AddAllocationService';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { getServiceV2 } from '../../../../../actions/ServiceAction';\nimport { getAllocationServiceByEstablishment } from '../../../../../actions/AllocationServiceAction';\nimport _ from 'lodash';\nimport { UncontrolledAlert } from 'reactstrap';\nimport { fetchStudentByEstablishmentId } from '../../../../../actions/studentAction';\nimport CardBox from '../../../../../components/CardBox/index';\n\nclass ServiceAllocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = name => event => {\n      let allocationServerFiltred = this.props.allocationService.filter(element => element.services[0].service_v2.fk_id_schol_year_v2 === event.target.value);\n      this.setState({\n        [name]: event.target.value,\n        allocationServicesList: allocationServerFiltred\n      });\n    };\n\n    this.handleChangeSection = name => event => {\n      let allocationServerFiltred = this.props.allocationService.filter(element => element.Class.section_id === event.target.value);\n      this.setState({\n        [name]: event.target.value,\n        allocationServicesList: allocationServerFiltred\n      });\n    };\n\n    this.handleChangeClass = name => event => {\n      let obj = JSON.parse(event.target.value);\n      this.setState({\n        classSection: event.target.value,\n        idClasse: obj.classId,\n        idSection: obj.sectionId\n      });\n      let allocationServerFiltred = this.props.allocationService.filter(element => element.Class.id === event.target.value);\n      let sectionFiltred = this.props.sections.filter(element => element.id === obj.sectionId);\n      this.setState({\n        [name]: event.target.value,\n        allocationServicesList: allocationServerFiltred,\n        sections: sectionFiltred\n      });\n    };\n\n    this.handleChangeLevel = name => event => {\n      this.setState({\n        [name]: event.target.value,\n        idSection: null\n      });\n      let allocationServerFiltred = this.props.allocationService.filter(element => element.level.id === event.target.value);\n      let classesListFiltred = this.props.classes.filter(element => element.fk_id_level_v4 === event.target.value);\n      this.setState({\n        allocationServicesList: allocationServerFiltred,\n        classesList: classesListFiltred\n      });\n    };\n\n    this.state = {\n      open: false,\n      studentList: [],\n      classesList: [],\n      classLevel: null,\n      sections: [],\n      allocationServicesList: [],\n      sectionStatus: false,\n      idSection: '',\n      idClasse: '',\n      classSection: ''\n    };\n    this.openAddModal = this.openAddModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeLevel = this.handleChangeLevel.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSection = this.handleChangeSection.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.dispatch(getServiceV2(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id));\n    this.props.dispatch(getAllocationServiceByEstablishment(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id));\n    this.props.dispatch(fetchStudentByEstablishmentId(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.userProfile.school_year_id !== this.props.userProfile.school_year_id) {\n      this.props.dispatch(getServiceV2(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id));\n      this.props.dispatch(getAllocationServiceByEstablishment(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id));\n      this.props.dispatch(fetchStudentByEstablishmentId(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id));\n    }\n\n    if (prevProps.classes !== this.props.classes) {\n      this.setState({\n        classesList: this.props.classes\n      });\n    }\n\n    if (prevProps.allocationService !== this.props.allocationService) {\n      this.setState({\n        allocationServicesList: this.props.allocationService\n      });\n    }\n\n    if (prevProps.classLevels !== this.props.classLevels) {\n      this.setState({\n        sectionStatus: true\n      });\n    }\n\n    if (prevProps.students !== this.props.students) {\n      this.setState({\n        studentList: this.props.students\n      });\n    }\n  }\n\n  openAddModal() {\n    this.setState(previousState => ({\n      open: !previousState.open\n    }));\n  }\n\n  render() {\n    let {\n      services,\n      classLevels\n    } = this.props;\n    let {\n      classesList,\n      sections,\n      allocationServicesList\n    } = this.state; // let allserviceAllocated = [];\n    // allocationServicesList.map((data, index) => allserviceAllocated.push(data.services));\n    // allserviceAllocated = allserviceAllocated.flat();\n    // let serviceAllocated = _.intersectionWith(\n    //   services,\n    //   allserviceAllocated,\n    //   (a, b) => a.id == b.fk_id_service\n    // );\n\n    let detailCards = [{\n      cardColor: 'primary',\n      imageIcon: require('../ServiceAllocation/Icone/project-icon.png'),\n      title: services.length,\n      subTitle: 'Prestations'\n    }, {\n      cardColor: 'secondary',\n      imageIcon: require('../ServiceAllocation/Icone/tasks-icon.png'),\n      title: allocationServicesList.length,\n      subTitle: 'Affectations'\n    }, {\n      cardColor: 'info',\n      imageIcon: require('../ServiceAllocation/Icone/teams-icon.png'),\n      title: this.state.studentList.length,\n      subTitle: 'Inscrit'\n    }, {\n      cardColor: 'warning',\n      imageIcon: require('../ServiceAllocation/Icone/files-icon.png'),\n      // title: serviceAllocated.length,\n      subTitle: 'Prestations affectÃ©es'\n    }]; //console.log(this.state.allocationServicesList,'this.state.allocationServicesList');\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard animated slideInUpTiny animation-duration-3\",\n      style: {\n        marginLeft: '5%',\n        marginRight: '4%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, detailCards.map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconWithTextCard, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }))), this.props.successStatus ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \"))) : '', this.props.errorStatus ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \"))) : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: \" bd-highlight\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12 col-md-12 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex flex-row bd-highlight mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"p-2 bd-highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"newAllocation\",\n      style: {\n        color: '#0000FF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"new.allocation.service\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"p-2 bd-highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, ' ', /*#__PURE__*/React.createElement(Fab, {\n      name: \"newAllocation\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"Add\",\n      onClick: this.openAddModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }, this.state.open ? /*#__PURE__*/React.createElement(RemoveSharpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 40\n      }\n    }) : /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 62\n      }\n    })))))), this.state.open ? /*#__PURE__*/React.createElement(AddAllocationService, {\n      services: services,\n      studentList: this.state.studentList,\n      openAddModal: this.openAddModal,\n      userProfile: this.props.userProfile,\n      allocationService: allocationServicesList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }) : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-1 col-lg-1 col-md-2 col-sm-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"classLevel\",\n      name: \"classLevel\",\n      select: true,\n      value: this.state.classLevel //onChange={this.handleChangeLevel('classLevel')}\n      ,\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.note.niveau`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 24\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }, classLevels.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 19\n      }\n    }, option.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-1 col-lg-1 col-md-2 col-sm-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"classSection\",\n      name: \"classSection\",\n      select: true,\n      value: this.state.classSection || '' //onChange={this.handleChangeClass('classSection')}\n      ,\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.note.class`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 24\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 15\n      }\n    }, classesList.map(option => {\n      let data = {\n        classId: option.id,\n        sectionId: option.fk_id_section_v4\n      };\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: option.id,\n        value: JSON.stringify(data),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }\n      }, option.name);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-1 col-lg-1 col-md-2 col-sm-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"idSection\",\n      name: \"idSection\",\n      select: true,\n      value: this.state.idSection //onChange={this.handleChangeSection('idSection')}\n      ,\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.class.level.input.label.section`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 24\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 15\n      }\n    }, sections.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 19\n      }\n    }, option.name))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListServiceAllocation, {\n      allocationService: this.props.allocationService,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    services: state.service.servicesV2,\n    sections: state.classSections.remoteSections,\n    allocationService: state.allocationService.allocationServiceList,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    classes: state.ClassSettingsReducer.classSettings,\n    classLevels: state.levelsReducer.levels,\n    sections: state.SectionsReducer.Section,\n    students: state.student.remoteStudents\n  };\n};\n\nexport default connect(mapStateToProps)(ServiceAllocation);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/app/routes/FinancialManagement/routes/ServiceAllocation/ServiceAllocation.js"],"names":["React","IntlMessages","connect","IconWithTextCard","TextField","RemoveSharpIcon","AddIcon","Fab","ListServiceAllocation","AddAllocationService","MenuItem","InputLabel","getServiceV2","getAllocationServiceByEstablishment","_","UncontrolledAlert","fetchStudentByEstablishmentId","CardBox","ServiceAllocation","Component","constructor","props","handleChange","name","event","allocationServerFiltred","allocationService","filter","element","services","service_v2","fk_id_schol_year_v2","target","value","setState","allocationServicesList","handleChangeSection","Class","section_id","handleChangeClass","obj","JSON","parse","classSection","idClasse","classId","idSection","sectionId","id","sectionFiltred","sections","handleChangeLevel","level","classesListFiltred","classes","fk_id_level_v4","classesList","state","open","studentList","classLevel","sectionStatus","openAddModal","bind","componentWillMount","dispatch","userProfile","establishment_id","school_year_id","componentDidUpdate","prevProps","prevState","classLevels","students","previousState","render","detailCards","cardColor","imageIcon","require","title","length","subTitle","marginLeft","marginRight","map","data","index","successStatus","message","errorStatus","width","color","disableUnderline","option","fk_id_section_v4","stringify","mapStateToProps","auth","service","servicesV2","classSections","remoteSections","allocationServiceList","alert","success","error","ClassSettingsReducer","classSettings","levelsReducer","levels","SectionsReducer","Section","student","remoteStudents"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { connect } from 'react-redux';\nimport IconWithTextCard from '../ServiceAllocation/ServiceAllocationComp/IconWithTextCard';\nimport TextField from '@material-ui/core/TextField';\nimport RemoveSharpIcon from '@material-ui/icons/RemoveSharp';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport ListServiceAllocation from './ListServiceAllocation';\nimport AddAllocationService from './AddAllocationService';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { getServiceV2 } from '../../../../../actions/ServiceAction';\nimport { getAllocationServiceByEstablishment } from '../../../../../actions/AllocationServiceAction';\nimport _ from 'lodash';\nimport { UncontrolledAlert } from 'reactstrap';\nimport { fetchStudentByEstablishmentId } from '../../../../../actions/studentAction';\nimport CardBox from '../../../../../components/CardBox/index';\n\nclass ServiceAllocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      studentList: [],\n      classesList: [],\n      classLevel: null,\n      sections: [],\n      allocationServicesList: [],\n      sectionStatus: false,\n      idSection: '',\n      idClasse: '',\n      classSection: '',\n    };\n    this.openAddModal = this.openAddModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeLevel = this.handleChangeLevel.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSection = this.handleChangeSection.bind(this);\n  }\n\n  handleChange = (name) => (event) => {\n    let allocationServerFiltred = this.props.allocationService.filter(\n      (element) => element.services[0].service_v2.fk_id_schol_year_v2 === event.target.value\n    );\n    this.setState({\n      [name]: event.target.value,\n      allocationServicesList: allocationServerFiltred,\n    });\n  };\n\n  handleChangeSection = (name) => (event) => {\n    let allocationServerFiltred = this.props.allocationService.filter(\n      (element) => element.Class.section_id === event.target.value\n    );\n    this.setState({\n      [name]: event.target.value,\n      allocationServicesList: allocationServerFiltred,\n    });\n  };\n\n  handleChangeClass = (name) => (event) => {\n    let obj = JSON.parse(event.target.value);\n    this.setState({\n      classSection: event.target.value,\n      idClasse: obj.classId,\n      idSection: obj.sectionId,\n    });\n    let allocationServerFiltred = this.props.allocationService.filter(\n      (element) => element.Class.id === event.target.value\n    );\n\n    let sectionFiltred = this.props.sections.filter((element) => element.id === obj.sectionId);\n\n    this.setState({\n      [name]: event.target.value,\n      allocationServicesList: allocationServerFiltred,\n      sections: sectionFiltred,\n    });\n  };\n\n  handleChangeLevel = (name) => (event) => {\n    this.setState({ [name]: event.target.value, idSection: null });\n    let allocationServerFiltred = this.props.allocationService.filter(\n      (element) => element.level.id === event.target.value\n    );\n\n    let classesListFiltred = this.props.classes.filter(\n      (element) => element.fk_id_level_v4 === event.target.value\n    );\n\n    this.setState({\n      allocationServicesList: allocationServerFiltred,\n      classesList: classesListFiltred,\n    });\n  };\n\n  componentWillMount() {\n    this.props.dispatch(\n      getServiceV2(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id)\n    );\n    this.props.dispatch(\n      getAllocationServiceByEstablishment(\n        this.props.userProfile.establishment_id,\n        this.props.userProfile.school_year_id\n      )\n    );\n    this.props.dispatch(\n      fetchStudentByEstablishmentId(\n        this.props.userProfile.establishment_id,\n        this.props.userProfile.school_year_id\n      )\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.userProfile.school_year_id !== this.props.userProfile.school_year_id) {\n      this.props.dispatch(\n        getServiceV2(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id)\n      );\n      this.props.dispatch(\n        getAllocationServiceByEstablishment(\n          this.props.userProfile.establishment_id,\n          this.props.userProfile.school_year_id\n        )\n      );\n      this.props.dispatch(\n        fetchStudentByEstablishmentId(\n          this.props.userProfile.establishment_id,\n          this.props.userProfile.school_year_id\n        )\n      );\n    }\n    if (prevProps.classes !== this.props.classes) {\n      this.setState({\n        classesList: this.props.classes,\n      });\n    }\n    if (prevProps.allocationService !== this.props.allocationService) {\n      this.setState({\n        allocationServicesList: this.props.allocationService,\n      });\n    }\n\n    if (prevProps.classLevels !== this.props.classLevels) {\n      this.setState({\n        sectionStatus: true,\n      });\n    }\n\n    if (prevProps.students !== this.props.students) {\n      this.setState({\n        studentList: this.props.students,\n      });\n    }\n  }\n\n  openAddModal() {\n    this.setState((previousState) => ({\n      open: !previousState.open,\n    }));\n  }\n\n  render() {\n     \n    let { services, classLevels } = this.props;\n    let { classesList, sections, allocationServicesList } = this.state;\n    // let allserviceAllocated = [];\n    // allocationServicesList.map((data, index) => allserviceAllocated.push(data.services));\n    // allserviceAllocated = allserviceAllocated.flat();\n    // let serviceAllocated = _.intersectionWith(\n    //   services,\n    //   allserviceAllocated,\n    //   (a, b) => a.id == b.fk_id_service\n    // );\n\n    let detailCards = [\n      {\n        cardColor: 'primary',\n        imageIcon: require('../ServiceAllocation/Icone/project-icon.png'),\n        title: services.length,\n        subTitle: 'Prestations',\n      },\n      {\n        cardColor: 'secondary',\n        imageIcon: require('../ServiceAllocation/Icone/tasks-icon.png'),\n        title: allocationServicesList.length,\n        subTitle: 'Affectations',\n      },\n      {\n        cardColor: 'info',\n        imageIcon: require('../ServiceAllocation/Icone/teams-icon.png'),\n        title: this.state.studentList.length,\n        subTitle: 'Inscrit',\n      },\n      {\n        cardColor: 'warning',\n        imageIcon: require('../ServiceAllocation/Icone/files-icon.png'),\n       // title: serviceAllocated.length,\n        subTitle: 'Prestations affectÃ©es',\n      },\n    ];\n    //console.log(this.state.allocationServicesList,'this.state.allocationServicesList');\n    return (\n      <div\n        className=\"dashboard animated slideInUpTiny\n      animation-duration-3\"\n        style={{\n          marginLeft: '5%',\n          marginRight: '4%',\n        }}\n      >\n        <div className=\"row col-lg-12 col-md-12\">\n          {detailCards.map((data, index) => (\n            <div key={index} className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\">\n              <IconWithTextCard data={data} />\n            </div>\n          ))}\n          {this.props.successStatus ? (\n            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n              <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            </div>\n          ) : (\n            ''\n          )}\n          {this.props.errorStatus ? (\n            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n              <UncontrolledAlert className=\"alert-addon-card bg-danger bg-danger text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            </div>\n          ) : (\n            ''\n          )}\n          <div className=\" bd-highlight\" style={{ width: '100%' }}>\n            <CardBox styleName=\"col-lg-12 col-md-12 \">\n              <div class=\"d-flex flex-row bd-highlight mb-3\">\n                <div class=\"p-2 bd-highlight\">\n                  <InputLabel htmlFor=\"newAllocation\" style={{ color: '#0000FF' }}>\n                    <IntlMessages id=\"new.allocation.service\" />\n                  </InputLabel>\n                </div>\n                <div class=\"p-2 bd-highlight\">\n                  {' '}\n                  <Fab\n                    name=\"newAllocation\"\n                    size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"Add\"\n                    onClick={this.openAddModal}\n                  >\n                    {this.state.open ? <RemoveSharpIcon /> : <AddIcon />}\n                  </Fab>\n                </div>\n              </div>\n            </CardBox>\n          </div>\n\n          {/* <div className=\" bd-highlight \" style={{ width: '99%' }}>\n            <CardBox styleName=\"col-lg-12 col-md-12\">\n           \n            </CardBox>\n          </div> */}\n          {this.state.open ? (\n            <AddAllocationService\n              services={services}\n              studentList={this.state.studentList}\n              openAddModal={this.openAddModal}\n              userProfile={this.props.userProfile}\n              allocationService={allocationServicesList}\n            />\n          ) : (\n            ''\n          )}\n          <div className=\"row col-lg-12 col-md-12\">\n            <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-2 col-12\">\n              <TextField\n                id=\"classLevel\"\n                name=\"classLevel\"\n                select\n                value={this.state.classLevel}\n                //onChange={this.handleChangeLevel('classLevel')}\n                SelectProps={{}}\n                label={<IntlMessages id={`components.note.niveau`} />}\n                InputProps={{ disableUnderline: true }}\n                margin=\"normal\"\n                fullWidth\n              >\n                {classLevels.map((option) => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n            <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-2 col-12\">\n              <TextField\n                id=\"classSection\"\n                name=\"classSection\"\n                select\n                value={this.state.classSection || ''}\n                //onChange={this.handleChangeClass('classSection')}\n                SelectProps={{}}\n                label={<IntlMessages id={`components.note.class`} />}\n                InputProps={{ disableUnderline: true }}\n                margin=\"normal\"\n                fullWidth\n              >\n                {classesList.map((option) => {\n                  let data = {\n                    classId: option.id,\n                    sectionId: option.fk_id_section_v4,\n                  };\n                  return (\n                    <MenuItem key={option.id} value={JSON.stringify(data)}>\n                      {option.name}\n                    </MenuItem>\n                  );\n                })}\n              </TextField>\n            </div>\n\n            <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-2 col-12\">\n              <TextField\n                id=\"idSection\"\n                name=\"idSection\"\n                select\n                value={this.state.idSection}\n                //onChange={this.handleChangeSection('idSection')}\n                SelectProps={{}}\n                label={<IntlMessages id={`components.class.level.input.label.section`} />}\n                InputProps={{ disableUnderline: true }}\n                margin=\"normal\"\n                fullWidth\n              >\n                {sections.map((option) => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n          </div>\n          <div className=\"row col-lg-12 col-md-12\"> \n          <ListServiceAllocation allocationService={this.props.allocationService} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.auth.userProfile,\n    services: state.service.servicesV2,\n    sections: state.classSections.remoteSections,\n    allocationService: state.allocationService.allocationServiceList,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    classes: state.ClassSettingsReducer.classSettings,\n    classLevels: state.levelsReducer.levels,\n    sections: state.SectionsReducer.Section,\n    students: state.student.remoteStudents,\n  };\n};\n\nexport default connect(mapStateToProps)(ServiceAllocation);\n"]},"metadata":{},"sourceType":"module"}