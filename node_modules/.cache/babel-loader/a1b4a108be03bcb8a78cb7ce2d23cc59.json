{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js\";\nimport React from \"react\";\nimport IconWithTextCard from \"../../../CommonComponents/IconWithTextCard\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport HomeworkInProgress from \"./HomeworkInProgress\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport RemoveSharpIcon from \"@material-ui/icons/RemoveSharp\";\nimport { connect } from \"react-redux\";\nimport AddHomework from \"./AddHomework\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport { classService } from \"../../../../../_services/class.service\";\nimport HomeworkList from \"./HomeworkList\";\nimport _ from \"lodash\";\nimport { addNewHomework, getHomework } from \"../../../../../actions/HomeworkAction\";\nimport ArchivedHomework from \"./ArchivedHomework\";\nimport Can from \"../../../../../can\";\nimport { RoleContext } from \"../../../../../Context\";\nimport TextField from \"@material-ui/core/TextField\";\nimport moment from \"moment\";\nimport { roleIdAdmin, roleIdProfessor } from \"../../../../../config/config\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { element } from \"prop-types\";\n\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeFilterStatus = name => event => {\n      this.setState({\n        idType: \"\"\n      });\n      let homeworksList = [];\n\n      if (this.state.classId !== null) {\n        homeworksList = this.state.homeworkClass;\n      } else {\n        homeworksList = this.props.homeworks;\n      }\n\n      if (event.target.value === \"all\") {\n        this.setState({\n          [name]: event.target.value,\n          homeworks: homeworksList\n        });\n      } else {\n        let homeworks = homeworksList.filter(element => element.status === event.target.value);\n        this.setState({\n          [name]: event.target.value,\n          homeworks,\n          homeworksListForStudent: homeworks\n        });\n      }\n    };\n\n    this.handleChangeFilterType = name => event => {\n      let homeworksList = [];\n\n      if (this.state.classId !== null) {\n        homeworksList = this.state.homeworkClass;\n      }\n\n      if (this.state.statusHomework !== null) {\n        homeworksList = this.state.homeworksListForStudent;\n      } else {\n        console.log('elseee');\n        homeworksList = this.props.homeworks;\n      }\n\n      if (event.target.value === \"all\") {\n        this.setState({\n          [name]: event.target.value,\n          homeworks: homeworksList\n        });\n      } else {\n        let homeworks = homeworksList.filter(element => element.homework.homework_type === event.target.value);\n        this.setState({\n          [name]: event.target.value,\n          homeworks\n        });\n      }\n    };\n\n    this.handleChangeFilter = name => event => {\n      let homeworks = this.props.homeworks.filter(element => element.classId === event.target.value);\n      this.setState({\n        [name]: event.target.value,\n        homeworks,\n        homeworkClass: homeworks,\n        statusHomework: \"\",\n        idType: \"\"\n      });\n    };\n\n    this.handleChangeClassList = selectedOption => {\n      if (selectedOption != null) {\n        let classesId = _.map(selectedOption, \"id\");\n\n        this.setState({\n          classesId,\n          isEmptylistClass: false,\n          classesData: selectedOption\n        });\n      } else {\n        this.setState({\n          classesId: []\n        });\n      }\n    };\n\n    this.handleChangeDate = name => date => {\n      this.setState({\n        [name]: date\n      });\n\n      if (name === \"publicationDate\") {\n        this.setState({\n          renderingDate: date,\n          correctionDate: date\n        });\n      } else if (name === \"renderingDate\") {\n        this.setState({\n          correctionDate: date\n        });\n      }\n    };\n\n    this.handleChangePostTime = time => {\n      this.setState({\n        postTime: time._d\n      });\n    };\n\n    this.handleChangeSubject = selectedOption => {\n      this.setState({\n        subjectId: selectedOption.id,\n        subjectColor: selectedOption.color,\n        subjectName: selectedOption.label,\n        errorClass: false\n      });\n\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include]=class&filter[include]=course`;\n        classService.get(apiEndpoint).then(response => {\n          if (response) {\n            let classesSubjects = response.data.filter(element => element.status);\n            let newList = [];\n            classesSubjects.map(element => {\n              let object = {};\n\n              if (!_.isEmpty(element.course)) {\n                object.label = element.class.name;\n                object.id = element.course[0].id;\n                object.value = element.course[0].id;\n                newList.push(object);\n              }\n            });\n            this.setState({\n              classes: newList\n            });\n          }\n        });\n      } else {\n        let apiEndpoint = `/assignment_class_subjects/${selectedOption.value}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n        classService.get(apiEndpoint).then(response => {\n          if (response) {\n            let element = response.data;\n\n            if (element.status) {\n              let object = {};\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n              this.setState({\n                classes: [object]\n              });\n            }\n          }\n        });\n      }\n    };\n\n    this.handleChangeHomeworkType = selectedOption => {\n      this.setState({\n        homeworkType: selectedOption.value\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      isOpenAddModal: false,\n      openArchive: false,\n      nameFile: \"\",\n      HomeworkTypes: [{\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.book.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 18\n          }\n        }),\n        value: \"book\",\n        id: 1\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.series.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 18\n          }\n        }),\n        value: \"serie\",\n        id: 2\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.other.exercise\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 18\n          }\n        }),\n        value: \"other\",\n        id: 3\n      }],\n      HomeworkStatus: [{\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"status.classe.virtual.programm\\xE9\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 18\n          }\n        }),\n        value: \"programed\",\n        id: 1\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"status.classe.virtual.progr\\xE9s\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 18\n          }\n        }),\n        value: \"progress\",\n        id: 2\n      }, {\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"status.classe.virtual.t\\xE9rmin\\xE9\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 18\n          }\n        }),\n        value: \"finished\",\n        id: 3\n      }],\n      homeworkType: \"\",\n      subjectId: null,\n      subjectColor: \"\",\n      description: \"\",\n      courseUrl: \"\",\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: \"\",\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: \"\",\n      classId: null,\n      classList: [],\n      homeworks: [],\n      statusHomework: null,\n      homeworkClass: [],\n      idType: \"\",\n      homeworksListForStudent: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.addNewHomework = this.addNewHomework.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.openArchive = this.openArchive.bind(this);\n    this.handleChangeFilter = this.handleChangeFilter.bind(this);\n    this.handleChangeFilterType = this.handleChangeFilterType.bind(this);\n    this.handleDate = this.handleDate.bind(this);\n    this.handleChangeFilterStatus = this.handleChangeFilterStatus.bind(this);\n  }\n\n  handleDate() {\n    let homeworksList = [];\n\n    if (this.state.classId !== null) {\n      homeworksList = this.state.homeworkClass;\n    } else {\n      homeworksList = this.props.homeworks;\n    }\n\n    let homeworks = [];\n    homeworksList.forEach(element => {\n      let item = { ...element,\n        date: new Date(element.homework.publication_date)\n      };\n      homeworks.push(item);\n    });\n    const sortedHomework = homeworks.slice().sort((a, b) => b.date - a.date);\n    this.setState({\n      homeworks: sortedHomework\n    });\n  }\n\n  cancelModal() {\n    this.setState({\n      isOpenAddModal: false,\n      nameFile: \"\",\n      homeworkType: \"\",\n      subjectId: null,\n      subjectColor: \"\",\n      description: \"\",\n      courseUrl: \"\",\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      eventChecked: \"\",\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: \"\"\n    });\n  }\n\n  addNewHomework(e) {\n    e.preventDefault();\n\n    if (this.state.subjectId === null) {\n      this.setState({\n        errorClass: true\n      });\n    } else if (_.isEmpty(this.state.classesId)) {\n      this.setState({\n        isEmptylistClass: true\n      });\n    } else {\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType = this.state.homeworkType;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      dataHomework.correctionDate = this.state.correctionDate;\n      dataHomework.renderingDate = this.state.renderingDate;\n      dataHomework.subjectName = this.state.subjectName;\n      this.props.dispatch(addNewHomework(dataHomework, this.state.homeworkFiles, this.state.classesData));\n      this.cancelModal();\n    }\n  }\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter(element => element != filename);\n    let homeworkFiles = this.state.homeworkFiles.filter(element => element.name != filename);\n    this.setState({\n      nameFiles,\n      homeworkFiles\n    });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map(element => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({\n        homeworkFiles: oldFiles,\n        nameFiles\n      });\n    } else {\n      this.setState({\n        messageAlerte: \"Vous avez dépasser 5 fichiers\",\n        alerteStatus: true\n      });\n      setTimeout(() => {\n        this.setState({\n          messageAlerte: \"\",\n          alerteStatus: false\n        });\n      }, 4000);\n    }\n  }\n\n  openAddModal() {\n    this.setState({\n      isOpenAddModal: !this.state.isOpenAddModal\n    });\n  }\n\n  openArchive() {\n    this.setState(previousState => ({\n      openArchive: !previousState.openArchive\n    }));\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({\n        subjects,\n        classList: this.props.classSettings\n      });\n    } else if (this.props.userProfile.role_id === roleIdProfessor) {\n      const professorId = this.props.userProfile.user.profiles[0].professors[0].id;\n      let apiEndpoint = `/course_v4?access_token=${localStorage.token}&filter[where][fk_id_professor]=${professorId}&filter[include][assignmentClassSubject]=subject&filter[include][assignmentClassSubject]=class`;\n      classService.get(apiEndpoint).then(response => {\n        if (response) {\n          let subjects = [];\n          let classes = [];\n          response.data.map(element => {\n            let object = {};\n            let classItem = {};\n            object.label = element.assignmentClassSubject.subject.name;\n            object.id = element.assignmentClassSubject.subject.id;\n            object.value = element.assignmentClassSubject.id;\n            subjects.push(object);\n            classItem = element.assignmentClassSubject.class;\n            classes.push(classItem);\n          });\n          this.setState({\n            subjects,\n            classList: classes\n          });\n        }\n      });\n    } else {\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({\n        subjects\n      });\n    }\n\n    this.props.dispatch(getHomework(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id, this.props.userProfile.id, this.props.userProfile.role_id));\n  }\n\n  componentDidUpdate(previouProps) {\n    if (previouProps.subjects !== this.props.subjects) {\n      if (this.props.userProfile.role_id !== roleIdProfessor) {\n        let subjects = createListSubject(this.props.subjects);\n        this.setState({\n          subjects\n        });\n      }\n    }\n\n    if (previouProps.classSettings !== this.props.classSettings) {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        this.setState({\n          classList: this.props.classSettings\n        });\n      }\n    }\n\n    if (previouProps.homeworks !== this.props.homeworks) {\n      this.setState({\n        homeworks: this.props.homeworks\n      });\n    }\n  }\n\n  render() {\n    let detailCards = [{\n      cardColor: \"primary\",\n      imageIcon: require(\"../../../../../assets/images/dashboard/teams-icon.png\"),\n      // title: this.props.virtualClasses.length,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `message.Numbers.of.students`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: \"secondary\",\n      imageIcon: require(\"../../../../../assets/images/dashboard/tasks-icon.png\"),\n      // title: this.state.prog,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.file`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: \"info\",\n      imageIcon: require(\"../../../../../assets/images/dashboard/project-icon.png\"),\n      // title: this.state.encours,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.uncorrected`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 19\n        }\n      })\n    }, {\n      cardColor: \"success\",\n      imageIcon: require(\"../../../../../assets/images/dashboard/files-icon.png\"),\n      // title: this.state.encours,\n      subTitle: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `homework.educational.files`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 19\n        }\n      })\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper col-lg-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md- col-sm-12  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }\n    }, detailCards.map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconWithTextCard, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }\n    }, this.state.alerteStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }\n    }, \" \", this.state.messageAlerte, \" \")), this.props.errorStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger   text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \")), this.props.successStatus && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-auto \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(HomeworkInProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: \"add-homework\",\n        permissionList: this.props.userPermission\n      },\n      yes: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardBox, {\n        styleName: \"col-lg-12 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        size: \"small\",\n        color: \"secondary\",\n        \"aria-label\": \"Add\",\n        onClick: this.openAddModal.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 31\n        }\n      }, this.state.isOpenAddModal ? /*#__PURE__*/React.createElement(RemoveSharpIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 35\n        }\n      }) : /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 35\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2\",\n        style: {\n          fontFamily: \"Roboto\",\n          fontSize: \"17px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"modal.addToDo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pl-5 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        size: \"small\",\n        \"aria-label\": \"Add\",\n        style: {\n          backgroundColor: \"#ffbb33\",\n          color: \"#ffffff\"\n        },\n        onClick: this.openArchive,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2\",\n        style: {\n          fontFamily: \"Roboto\",\n          fontSize: \"17px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"icon.archives\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 31\n        }\n      })))), this.state.isOpenAddModal && /*#__PURE__*/React.createElement(CardBox, {\n        styleName: \"col-lg-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(AddHomework, {\n        values: this.state,\n        handleChange: this.handleChange,\n        handleChangeHomeworkType: this.handleChangeHomeworkType,\n        subjects: this.state.subjects,\n        handleChangeSubject: this.handleChangeSubject,\n        attachFile: this.attachFile,\n        deleteFile: this.deleteFile,\n        handleChangePostTime: this.handleChangePostTime,\n        handleChangeDate: this.handleChangeDate,\n        handleChangeClassList: this.handleChangeClassList,\n        addNewHomework: this.addNewHomework,\n        cancelModal: this.cancelModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 29\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: \"get-homework\",\n        permissionList: this.props.userPermission\n      },\n      yes: () => /*#__PURE__*/React.createElement(React.Fragment, null, this.state.openArchive ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArchivedHomework, {\n        homeworks: this.props.archivedHomework,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 29\n        }\n      })) : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: \"get-homework\",\n        permissionList: this.props.userPermission\n      },\n      yes: () => /*#__PURE__*/React.createElement(React.Fragment, null, !this.state.openArchive ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-wrap flex-row bd-highlight mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"homework-filter-class\",\n        yes: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-2 s bd-highlight col-lg-2 col-md-6 col-sm-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          id: \"idClasse\",\n          name: \"idClasse\",\n          select: true,\n          value: this.state.classId,\n          onChange: this.handleChangeFilter(\"classId\"),\n          SelectProps: {},\n          label: /*#__PURE__*/React.createElement(IntlMessages, {\n            id: `components.note.class`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 43\n            }\n          }),\n          InputProps: {\n            disableUnderline: true\n          },\n          margin: \"normal\",\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 39\n          }\n        }, this.state.classList.length > 0 ? this.state.classList.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n          key: option.id,\n          value: option.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 45\n          }\n        }, option.name)) : /*#__PURE__*/React.createElement(MenuItem, {\n          key: 0,\n          value: 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 43\n          }\n        }, \"Pas de classe\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pt-5 bd-highlight\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 37\n          }\n        }, \"|\")),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"statusHomework\",\n        name: \"statusHomework\",\n        select: true,\n        value: this.state.statusHomework,\n        onChange: this.handleChangeFilterStatus(\"statusHomework\"),\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.todo.etat`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 37\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        key: 0,\n        value: \"all\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 35\n        }\n      }, \" \", /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `userStuppDisplay.all`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 39\n        }\n      })), this.state.HomeworkStatus.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n        key: option.id,\n        value: option.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 37\n        }\n      }, option.label)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 31\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"idType\",\n        name: \"idType\",\n        select: true,\n        value: this.state.idType || \"\",\n        onChange: this.handleChangeFilterType(\"idType\"),\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: `components.todo.type`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 37\n          }\n        }),\n        InputProps: {\n          disableUnderline: true\n        },\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        key: 0,\n        value: \"all\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 35\n        }\n      }, \" \", /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `userStuppDisplay.all`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 39\n        }\n      })), this.state.HomeworkTypes.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n        key: option.id,\n        value: option.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 37\n        }\n      }, option.label)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5 bd-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 31\n        }\n      }, \"|\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-5  bd-highlight col-lg-2 col-md-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        onClick: this.handleDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"complaint.date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 35\n        }\n      })))), /*#__PURE__*/React.createElement(HomeworkList, {\n        homeworks: this.state.homeworks,\n        subjects: this.state.subjects,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 29\n        }\n      })) : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    subjects: state.subject.subjects,\n    homeworks: state.HomeworkReducer.homeworks,\n    archivedHomework: state.HomeworkReducer.archivedHomework,\n    classSettings: state.ClassSettingsReducer.classSettings,\n    userPermission: state.PermissionReducer.userPermission\n  };\n};\n\nexport default connect(mapStateToProps)(Homework);\n\nfunction createListSubject(subjects) {\n  let newList = subjects.map(element => {\n    let object = {};\n    object.label = element.name;\n    object.id = element.id;\n    object.value = element.id;\n    object.color = element.color;\n    return object;\n  });\n  return newList;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/Homeworks/Homework.js"],"names":["React","IconWithTextCard","IntlMessages","HomeworkInProgress","CardBox","AddIcon","Fab","DeleteOutlineIcon","RemoveSharpIcon","connect","AddHomework","UncontrolledAlert","classService","HomeworkList","_","addNewHomework","getHomework","ArchivedHomework","Can","RoleContext","TextField","moment","roleIdAdmin","roleIdProfessor","MenuItem","element","Homework","Component","constructor","props","handleChangeFilterStatus","name","event","setState","idType","homeworksList","state","classId","homeworkClass","homeworks","target","value","filter","status","homeworksListForStudent","handleChangeFilterType","statusHomework","console","log","homework","homework_type","handleChangeFilter","handleChangeClassList","selectedOption","classesId","map","isEmptylistClass","classesData","handleChangeDate","date","renderingDate","correctionDate","handleChangePostTime","time","postTime","_d","handleChangeSubject","subjectId","id","subjectColor","color","subjectName","label","errorClass","userProfile","role_id","apiEndpoint","localStorage","token","get","then","response","classesSubjects","data","newList","object","isEmpty","course","class","push","classes","handleChangeHomeworkType","homeworkType","handleChange","isOpenAddModal","openArchive","nameFile","HomeworkTypes","HomeworkStatus","description","courseUrl","homeworkFiles","nameFiles","publicationDate","Date","subjects","eventChecked","classList","bind","attachFile","deleteFile","cancelModal","handleDate","forEach","item","publication_date","sortedHomework","slice","sort","a","b","e","preventDefault","dataHomework","title","publicationTime","dispatch","filename","oldFiles","files","Object","values","undefined","length","messageAlerte","alerteStatus","setTimeout","openAddModal","previousState","UNSAFE_componentWillMount","createListSubject","classSettings","professorId","user","profiles","professors","classItem","assignmentClassSubject","subject","establishment_id","school_year_id","componentDidUpdate","previouProps","render","detailCards","cardColor","imageIcon","require","subTitle","index","errorStatus","message","successStatus","role","permission","permissionList","userPermission","fontFamily","fontSize","backgroundColor","archivedHomework","disableUnderline","option","mapStateToProps","auth","alert","success","error","HomeworkReducer","ClassSettingsReducer","PermissionReducer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IconWithTextCard from \"../../../CommonComponents/IconWithTextCard\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport HomeworkInProgress from \"./HomeworkInProgress\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport RemoveSharpIcon from \"@material-ui/icons/RemoveSharp\";\nimport { connect } from \"react-redux\";\nimport AddHomework from \"./AddHomework\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport { classService } from \"../../../../../_services/class.service\";\nimport HomeworkList from \"./HomeworkList\";\nimport _ from \"lodash\";\nimport {\n  addNewHomework,\n  getHomework,\n} from \"../../../../../actions/HomeworkAction\";\nimport ArchivedHomework from \"./ArchivedHomework\";\nimport Can from \"../../../../../can\";\nimport { RoleContext } from \"../../../../../Context\";\nimport TextField from \"@material-ui/core/TextField\";\nimport moment from \"moment\";\nimport { roleIdAdmin, roleIdProfessor } from \"../../../../../config/config\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { element } from \"prop-types\";\n\nclass Homework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenAddModal: false,\n      openArchive: false,\n      nameFile: \"\",\n      HomeworkTypes: [\n        {\n          label: <IntlMessages id=\"toDo.book.exercise\" />,\n          value: \"book\",\n          id: 1,\n        },\n        {\n          label: <IntlMessages id=\"toDo.series.exercise\" />,\n          value: \"serie\",\n          id: 2,\n        },\n        {\n          label: <IntlMessages id=\"toDo.other.exercise\" />,\n          value: \"other\",\n          id: 3,\n        },\n      ],\n\n      HomeworkStatus: [\n        {\n          label: <IntlMessages id=\"status.classe.virtual.programmé\" />,\n          value: \"programed\",\n          id: 1,\n        },\n        {\n          label: <IntlMessages id=\"status.classe.virtual.progrés\" />,\n          value: \"progress\",\n          id: 2,\n        },\n        {\n          label: <IntlMessages id=\"status.classe.virtual.términé\" />,\n          value: \"finished\",\n          id: 3,\n        },\n      ],\n\n      homeworkType: \"\",\n      subjectId: null,\n      subjectColor: \"\",\n      description: \"\",\n      courseUrl: \"\",\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      subjects: [],\n      eventChecked: \"\",\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: \"\",\n      classId: null,\n      classList: [],\n      homeworks: [],\n      statusHomework: null,\n      homeworkClass: [],\n      idType: \"\",\n      homeworksListForStudent:[]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeHomeworkType = this.handleChangeHomeworkType.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.handleChangePostTime = this.handleChangePostTime.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeClassList = this.handleChangeClassList.bind(this);\n    this.addNewHomework = this.addNewHomework.bind(this);\n    this.cancelModal = this.cancelModal.bind(this);\n    this.openArchive = this.openArchive.bind(this);\n    this.handleChangeFilter = this.handleChangeFilter.bind(this);\n    this.handleChangeFilterType = this.handleChangeFilterType.bind(this);\n    this.handleDate = this.handleDate.bind(this);\n    this.handleChangeFilterStatus = this.handleChangeFilterStatus.bind(this);\n  }\n\n  handleChangeFilterStatus = (name) => (event) => {\n    this.setState({idType:\"\"})\n    let homeworksList = [];\n    if (this.state.classId !== null) {\n      homeworksList = this.state.homeworkClass;\n    } else {\n      homeworksList = this.props.homeworks;\n     \n    }\n\n    if (event.target.value === \"all\") {\n      this.setState({\n        [name]: event.target.value,\n        homeworks: homeworksList,\n      });\n    } else {\n      let homeworks = homeworksList.filter(\n        (element) => element.status === event.target.value\n      );\n      this.setState({ [name]: event.target.value, homeworks ,  homeworksListForStudent : homeworks});\n    }\n  };\n\n  handleDate() {\n    let homeworksList = [];\n    if (this.state.classId !== null) {\n      homeworksList = this.state.homeworkClass;\n    } else {\n      homeworksList = this.props.homeworks;\n    }\n\n    let homeworks = [];\n    homeworksList.forEach((element) => {\n      let item = {\n        ...element,\n        date: new Date(element.homework.publication_date),\n      };\n      homeworks.push(item);\n    });\n    const sortedHomework = homeworks.slice().sort((a, b) => b.date - a.date);\n    this.setState({\n      homeworks: sortedHomework,\n    });\n  }\n\n  handleChangeFilterType = (name) => (event) => {\n    let homeworksList = [];\n    if (this.state.classId !== null) {\n\n      homeworksList = this.state.homeworkClass;\n    }\n    if (this.state.statusHomework !== null) {\n\n      homeworksList = this.state.homeworksListForStudent\n    }\n    else {\n      console.log('elseee');\n      homeworksList = this.props.homeworks;\n    }\n    if (event.target.value === \"all\") {\n      this.setState({\n        [name]: event.target.value,\n        homeworks: homeworksList,\n      });\n    } else {\n      let homeworks = homeworksList.filter(\n        (element) => element.homework.homework_type === event.target.value\n      );\n      this.setState({ [name]: event.target.value, homeworks });\n    }\n  };\n\n  handleChangeFilter = (name) => (event) => {\n    let homeworks = this.props.homeworks.filter(\n      (element) => element.classId === event.target.value\n    );\n    this.setState({\n      [name]: event.target.value,\n      homeworks,\n      homeworkClass: homeworks,\n      statusHomework: \"\",\n      idType: \"\",\n    });\n  };\n\n  cancelModal() {\n    this.setState({\n      isOpenAddModal: false,\n      nameFile: \"\",\n      homeworkType: \"\",\n      subjectId: null,\n      subjectColor: \"\",\n      description: \"\",\n      courseUrl: \"\",\n      homeworkFiles: [],\n      nameFiles: [],\n      publicationDate: new Date(),\n      postTime: new Date(),\n      classes: [],\n      eventChecked: \"\",\n      classesId: [],\n      errorClass: false,\n      correctionDate: new Date(),\n      renderingDate: new Date(),\n      isEmptylistClass: false,\n      classesData: [],\n      subjectName: \"\",\n    });\n  }\n\n  addNewHomework(e) {\n    e.preventDefault();\n    if (this.state.subjectId === null) {\n      this.setState({ errorClass: true });\n    } else if (_.isEmpty(this.state.classesId)) {\n      this.setState({ isEmptylistClass: true });\n    } else {\n      let dataHomework = {};\n      dataHomework.title = this.state.nameFile;\n      dataHomework.homeworkType = this.state.homeworkType;\n      dataHomework.subjectId = this.state.subjectId;\n      dataHomework.subjectColor = this.state.subjectColor;\n      dataHomework.classesId = this.state.classesId;\n      dataHomework.publicationDate = this.state.publicationDate;\n      dataHomework.publicationTime = this.state.postTime;\n      dataHomework.courseUrl = this.state.courseUrl;\n      dataHomework.description = this.state.description;\n      dataHomework.correctionDate = this.state.correctionDate;\n      dataHomework.renderingDate = this.state.renderingDate;\n      dataHomework.subjectName = this.state.subjectName;\n      this.props.dispatch(\n        addNewHomework(\n          dataHomework,\n          this.state.homeworkFiles,\n          this.state.classesData\n        )\n      );\n      this.cancelModal();\n    }\n  }\n\n  handleChangeClassList = (selectedOption) => {\n    if (selectedOption != null) {\n      let classesId = _.map(selectedOption, \"id\");\n      this.setState({\n        classesId,\n        isEmptylistClass: false,\n        classesData: selectedOption,\n      });\n    } else {\n      this.setState({ classesId: [] });\n    }\n  };\n\n  handleChangeDate = (name) => (date) => {\n    this.setState({ [name]: date });\n    if (name === \"publicationDate\") {\n      this.setState({ renderingDate: date, correctionDate: date });\n    } else if (name === \"renderingDate\") {\n      this.setState({ correctionDate: date });\n    }\n  };\n\n  handleChangePostTime = (time) => {\n    this.setState({ postTime: time._d });\n  };\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter(\n      (element) => element != filename\n    );\n\n    let homeworkFiles = this.state.homeworkFiles.filter(\n      (element) => element.name != filename\n    );\n\n    this.setState({ nameFiles, homeworkFiles });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.homeworkFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map((element) => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({ homeworkFiles: oldFiles, nameFiles });\n    } else {\n      this.setState({\n        messageAlerte: \"Vous avez dépasser 5 fichiers\",\n        alerteStatus: true,\n      });\n      setTimeout(() => {\n        this.setState({ messageAlerte: \"\", alerteStatus: false });\n      }, 4000);\n    }\n  }\n\n  handleChangeSubject = (selectedOption) => {\n    this.setState({\n      subjectId: selectedOption.id,\n      subjectColor: selectedOption.color,\n      subjectName: selectedOption.label,\n      errorClass: false,\n    });\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let apiEndpoint = `/assignment_class_subjects?access_token=${localStorage.token}&filter[where][fk_id_subject_v4]=${selectedOption.value}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let classesSubjects = response.data.filter(\n            (element) => element.status\n          );\n          let newList = [];\n          classesSubjects.map((element) => {\n            let object = {};\n            if (!_.isEmpty(element.course)) {\n              object.label = element.class.name;\n              object.id = element.course[0].id;\n              object.value = element.course[0].id;\n\n              newList.push(object);\n            }\n          });\n          this.setState({ classes: newList });\n        }\n      });\n    } else {\n      let apiEndpoint = `/assignment_class_subjects/${selectedOption.value}?access_token=${localStorage.token}&filter[include]=class&filter[include]=course`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let element = response.data;\n          if (element.status) {\n            let object = {};\n            object.label = element.class.name;\n            object.id = element.course[0].id;\n            object.value = element.course[0].id;\n            this.setState({ classes: [object] });\n          }\n        }\n      });\n    }\n  };\n\n  handleChangeHomeworkType = (selectedOption) => {\n    this.setState({ homeworkType: selectedOption.value });\n  };\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  openAddModal() {\n    this.setState({ isOpenAddModal: !this.state.isOpenAddModal });\n  }\n  openArchive() {\n    this.setState((previousState) => ({\n      openArchive: !previousState.openArchive,\n    }));\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.userProfile.role_id === roleIdAdmin) {\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({ subjects, classList: this.props.classSettings });\n    } else if (this.props.userProfile.role_id === roleIdProfessor) {\n      const professorId = this.props.userProfile.user.profiles[0].professors[0]\n        .id;\n      let apiEndpoint = `/course_v4?access_token=${localStorage.token}&filter[where][fk_id_professor]=${professorId}&filter[include][assignmentClassSubject]=subject&filter[include][assignmentClassSubject]=class`;\n      classService.get(apiEndpoint).then((response) => {\n        if (response) {\n          let subjects = [];\n          let classes = [];\n          response.data.map((element) => {\n            let object = {};\n            let classItem = {};\n            object.label = element.assignmentClassSubject.subject.name;\n            object.id = element.assignmentClassSubject.subject.id;\n            object.value = element.assignmentClassSubject.id;\n            subjects.push(object);\n            classItem = element.assignmentClassSubject.class;\n            classes.push(classItem);\n          });\n          this.setState({ subjects, classList: classes });\n        }\n      });\n    } else {\n      let subjects = createListSubject(this.props.subjects);\n      this.setState({ subjects });\n    }\n    this.props.dispatch(\n      getHomework(\n        this.props.userProfile.establishment_id,\n        this.props.userProfile.school_year_id,\n        this.props.userProfile.id,\n        this.props.userProfile.role_id\n      )\n    );\n  }\n  componentDidUpdate(previouProps) {\n    if (previouProps.subjects !== this.props.subjects) {\n      if (this.props.userProfile.role_id !== roleIdProfessor) {\n        let subjects = createListSubject(this.props.subjects);\n        this.setState({ subjects });\n      }\n    }\n    if (previouProps.classSettings !== this.props.classSettings) {\n      if (this.props.userProfile.role_id === roleIdAdmin) {\n        this.setState({ classList: this.props.classSettings });\n      }\n    }\n    if (previouProps.homeworks !== this.props.homeworks) {\n      this.setState({ homeworks: this.props.homeworks });\n    }\n  }\n\n  render() {\n    let detailCards = [\n      {\n        cardColor: \"primary\",\n        imageIcon: require(\"../../../../../assets/images/dashboard/teams-icon.png\"),\n\n        // title: this.props.virtualClasses.length,\n        subTitle: <IntlMessages id={`message.Numbers.of.students`} />,\n      },\n      {\n        cardColor: \"secondary\",\n        imageIcon: require(\"../../../../../assets/images/dashboard/tasks-icon.png\"),\n        // title: this.state.prog,\n        subTitle: <IntlMessages id={`homework.file`} />,\n      },\n      {\n        cardColor: \"info\",\n        imageIcon: require(\"../../../../../assets/images/dashboard/project-icon.png\"),\n        // title: this.state.encours,\n        subTitle: <IntlMessages id={`homework.uncorrected`} />,\n      },\n      {\n        cardColor: \"success\",\n        imageIcon: require(\"../../../../../assets/images/dashboard/files-icon.png\"),\n        // title: this.state.encours,\n        subTitle: <IntlMessages id={`homework.educational.files`} />,\n      },\n    ];\n    return (\n      <div className=\"app-wrapper col-lg-12 col-md-12\">\n        <div className=\"d-flex flex-column mb-3\">\n          <div className=\"row col-lg-12 col-md- col-sm-12  \">\n            {detailCards.map((data, index) => (\n              <div\n                key={index}\n                className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\"\n              >\n                <IconWithTextCard data={data} />\n              </div>\n            ))}\n          </div>\n          <div>\n            {this.state.alerteStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-danger bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\">\n                  {\" \"}\n                  {this.state.messageAlerte}{\" \"}\n                </span>\n              </UncontrolledAlert>\n            )}\n\n            {this.props.errorStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-danger   text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            )}\n            {this.props.successStatus && (\n              <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            )}\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-md-auto \">\n              <CardBox styleName=\"row\">\n                <HomeworkInProgress />\n              </CardBox>\n            </div>\n\n            <div className=\"col \">\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: \"add-homework\",\n                      permissionList: this.props.userPermission,\n                    }}\n                    yes={() => (\n                      <>\n                        <CardBox styleName=\"col-lg-12 \">\n                          <div className=\"row\">\n                            <div>\n                              <Fab\n                                size=\"small\"\n                                color=\"secondary\"\n                                aria-label=\"Add\"\n                                onClick={this.openAddModal.bind(this)}\n                              >\n                                {this.state.isOpenAddModal ? (\n                                  <RemoveSharpIcon />\n                                ) : (\n                                  <AddIcon />\n                                )}\n                              </Fab>\n                            </div>\n                            <div\n                              className=\"p-2\"\n                              style={{ fontFamily: \"Roboto\", fontSize: \"17px\" }}\n                            >\n                              <IntlMessages id=\"modal.addToDo\" />\n                            </div>\n\n                            <div className=\"pl-5 \">\n                              <Fab\n                                size=\"small\"\n                                aria-label=\"Add\"\n                                style={{\n                                  backgroundColor: \"#ffbb33\",\n                                  color: \"#ffffff\",\n                                }}\n                                onClick={this.openArchive}\n                              >\n                                <DeleteOutlineIcon />\n                              </Fab>\n                            </div>\n                            <div\n                              className=\"p-2\"\n                              style={{ fontFamily: \"Roboto\", fontSize: \"17px\" }}\n                            >\n                              <IntlMessages id=\"icon.archives\" />\n                            </div>\n                          </div>\n                        </CardBox>\n\n                        {this.state.isOpenAddModal && (\n                          <CardBox styleName=\"col-lg-12\">\n                            <AddHomework\n                              values={this.state}\n                              handleChange={this.handleChange}\n                              handleChangeHomeworkType={\n                                this.handleChangeHomeworkType\n                              }\n                              subjects={this.state.subjects}\n                              handleChangeSubject={this.handleChangeSubject}\n                              attachFile={this.attachFile}\n                              deleteFile={this.deleteFile}\n                              handleChangePostTime={this.handleChangePostTime}\n                              handleChangeDate={this.handleChangeDate}\n                              handleChangeClassList={this.handleChangeClassList}\n                              addNewHomework={this.addNewHomework}\n                              cancelModal={this.cancelModal}\n                            />\n                          </CardBox>\n                        )}\n                      </>\n                    )}\n                  />\n                )}\n              </RoleContext.Consumer>\n\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: \"get-homework\",\n                      permissionList: this.props.userPermission,\n                    }}\n                    yes={() => (\n                      <>\n                        {this.state.openArchive ? (\n                          <div>\n                            <ArchivedHomework\n                              homeworks={this.props.archivedHomework}\n                            />\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n                      </>\n                    )}\n                  />\n                )}\n              </RoleContext.Consumer>\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: \"get-homework\",\n                      permissionList: this.props.userPermission,\n                    }}\n                    yes={() => (\n                      <>\n                        {!this.state.openArchive ? (\n                          <div>\n                            <div className=\"d-flex flex-wrap flex-row bd-highlight mb-3\">\n                              <Can\n                                role={role}\n                                perform=\"homework-filter-class\"\n                                yes={() => (\n                                  <>\n                                    <div className=\"p-2 s bd-highlight col-lg-2 col-md-6 col-sm-5\">\n                                      <TextField\n                                        id=\"idClasse\"\n                                        name=\"idClasse\"\n                                        select\n                                        value={this.state.classId}\n                                        onChange={this.handleChangeFilter(\n                                          \"classId\"\n                                        )}\n                                        SelectProps={{}}\n                                        label={\n                                          <IntlMessages\n                                            id={`components.note.class`}\n                                          />\n                                        }\n                                        InputProps={{ disableUnderline: true }}\n                                        margin=\"normal\"\n                                        fullWidth\n                                      >\n                                        {this.state.classList.length > 0 ? (\n                                          this.state.classList.map((option) => (\n                                            <MenuItem\n                                              key={option.id}\n                                              value={option.id}\n                                            >\n                                              {option.name}\n                                            </MenuItem>\n                                          ))\n                                        ) : (\n                                          <MenuItem key={0} value={0}>\n                                            Pas de classe\n                                          </MenuItem>\n                                        )}\n                                      </TextField>\n                                    </div>\n\n                                    <div className=\"pt-5 bd-highlight\">|</div>\n                                  </>\n                                )}\n                              />\n                              <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                                <TextField\n                                  id=\"statusHomework\"\n                                  name=\"statusHomework\"\n                                  select\n                                  value={this.state.statusHomework}\n                                  onChange={this.handleChangeFilterStatus(\n                                    \"statusHomework\"\n                                  )}\n                                  SelectProps={{}}\n                                  label={\n                                    <IntlMessages id={`components.todo.etat`} />\n                                  }\n                                  InputProps={{ disableUnderline: true }}\n                                  margin=\"normal\"\n                                  fullWidth\n                                >\n                                  <MenuItem key={0} value=\"all\">\n                                    {\" \"}\n                                    {\n                                      <IntlMessages\n                                        id={`userStuppDisplay.all`}\n                                      />\n                                    }\n                                  </MenuItem>\n                                  {this.state.HomeworkStatus.map((option) => (\n                                    <MenuItem\n                                      key={option.id}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </div>\n                              <div className=\"pt-5 bd-highlight\">|</div>\n                              <div className=\"p-2 bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                                <TextField\n                                  id=\"idType\"\n                                  name=\"idType\"\n                                  select\n                                  value={this.state.idType || \"\"}\n                                  onChange={this.handleChangeFilterType(\n                                    \"idType\"\n                                  )}\n                                  SelectProps={{}}\n                                  label={\n                                    <IntlMessages id={`components.todo.type`} />\n                                  }\n                                  InputProps={{ disableUnderline: true }}\n                                  margin=\"normal\"\n                                  fullWidth\n                                >\n                                  <MenuItem key={0} value=\"all\">\n                                    {\" \"}\n                                    {\n                                      <IntlMessages\n                                        id={`userStuppDisplay.all`}\n                                      />\n                                    }\n                                  </MenuItem>\n                                  {this.state.HomeworkTypes.map((option) => (\n                                    <MenuItem\n                                      key={option.id}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </div>\n                              <div className=\"pt-5 bd-highlight\">|</div>\n                              <div className=\"pt-5  bd-highlight col-lg-2 col-md-6 col-sm-6\">\n                                <h5 onClick={this.handleDate}>\n                                  <IntlMessages id=\"complaint.date\" />\n                                </h5>\n                              </div>\n                            </div>\n\n                            <HomeworkList\n                              homeworks={this.state.homeworks}\n                              subjects={this.state.subjects}\n                            />\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n                      </>\n                    )}\n                  />\n                )}\n              </RoleContext.Consumer>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    subjects: state.subject.subjects,\n    homeworks: state.HomeworkReducer.homeworks,\n    archivedHomework: state.HomeworkReducer.archivedHomework,\n    classSettings: state.ClassSettingsReducer.classSettings,\n    userPermission: state.PermissionReducer.userPermission,\n  };\n};\nexport default connect(mapStateToProps)(Homework);\n\nfunction createListSubject(subjects) {\n  let newList = subjects.map((element) => {\n    let object = {};\n    object.label = element.name;\n    object.id = element.id;\n    object.value = element.id;\n    object.color = element.color;\n    return object;\n  });\n  return newList;\n}\n"]},"metadata":{},"sourceType":"module"}