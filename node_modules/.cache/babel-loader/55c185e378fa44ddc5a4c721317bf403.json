{"ast":null,"code":"import { getName } from './countriesAction';\nimport _ from 'lodash';\nimport { classService } from '../_services/class.service';\n\nfunction getSectionName(sections, section_id) {\n  let sectionName = sections.map(element => {\n    if (element.id === section_id) {\n      return element.name;\n    } else {\n      return null;\n    }\n  });\n  let result = sectionName.filter(element => element);\n  return _.first(result);\n}\n\nfunction getSectionFromLevel(sections, level_id) {\n  let sectionList = [];\n\n  if (level_id < 11) {\n    sectionList = [];\n  } else {\n    sectionList = Array.from(sections).filter(element => element.level_id === level_id);\n  }\n\n  return sectionList;\n}\n\nfunction getSections() {\n  return dispatch => {\n    let apiEndpoint = `/section_by_levels?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      let sectionsList = [];\n      response.data.forEach(element => {\n        sectionsList.push({\n          \"id\": element.id,\n          \"name\": getName(element),\n          \"level_id\": element.level_id\n        });\n      });\n      dispatch({\n        type: \"DATA_LOADED_SECTIONS\",\n        payload: sectionsList\n      });\n    });\n  };\n}\n\nexport function getSectionsByLevelId(levelId) {\n  return dispatch => {\n    let apiEndpoint = `/section_by_levels?access_token=${localStorage.token}&filter[where][level_id]=${levelId}`;\n    classService.get(apiEndpoint).then(response => {\n      let sectionsList = [];\n      response.data.forEach(element => {\n        sectionsList.push({\n          \"id\": element.id,\n          \"name\": getName(element),\n          \"level_id\": element.level_id\n        });\n      });\n      dispatch({\n        type: \"DATA_LOADED_SECTIONS\",\n        payload: sectionsList\n      });\n    });\n  };\n}\nexport { getSectionName, getSections, getSectionFromLevel };","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/actions/sectionAction.js"],"names":["getName","_","classService","getSectionName","sections","section_id","sectionName","map","element","id","name","result","filter","first","getSectionFromLevel","level_id","sectionList","Array","from","getSections","dispatch","apiEndpoint","localStorage","token","get","then","response","sectionsList","data","forEach","push","type","payload","getSectionsByLevelId","levelId"],"mappings":"AACA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,YAAT,QAA6B,4BAA7B;;AAGA,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAC5C,MAAIC,WAAW,GAAGF,QAAQ,CAACG,GAAT,CAAaC,OAAO,IAAI;AACxC,QAAIA,OAAO,CAACC,EAAR,KAAeJ,UAAnB,EAA+B;AAAE,aAAOG,OAAO,CAACE,IAAf;AAAqB,KAAtD,MAA4D;AAAE,aAAO,IAAP;AAAa;AAC5E,GAFiB,CAAlB;AAGA,MAAIC,MAAM,GAAGL,WAAW,CAACM,MAAZ,CAAmBJ,OAAO,IAAIA,OAA9B,CAAb;AACA,SAAOP,CAAC,CAACY,KAAF,CAAQF,MAAR,CAAP;AACD;;AAED,SAASG,mBAAT,CAA6BV,QAA7B,EAAuCW,QAAvC,EAAiD;AAC/C,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAID,QAAQ,GAAG,EAAf,EAAmB;AACjBC,IAAAA,WAAW,GAAG,EAAd;AACD,GAFD,MAEO;AACLA,IAAAA,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAWd,QAAX,EAAqBQ,MAArB,CAA4BJ,OAAO,IAAIA,OAAO,CAACO,QAAR,KAAqBA,QAA5D,CAAd;AACD;;AACD,SAAOC,WAAP;AACD;;AAED,SAASG,WAAT,GAAuB;AACrB,SAAOC,QAAQ,IAAI;AACjB,QAAIC,WAAW,GAAI,mCAAkCC,YAAY,CAACC,KAAM,EAAxE;AACArB,IAAAA,YAAY,CAACsB,GAAb,CAAiBH,WAAjB,EACGI,IADH,CACSC,QAAD,IAAc;AAClB,UAAIC,YAAY,GAAG,EAAnB;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBrB,OAAO,IAAI;AAC/BmB,QAAAA,YAAY,CAACG,IAAb,CAAkB;AAAE,gBAAMtB,OAAO,CAACC,EAAhB;AAAoB,kBAAQT,OAAO,CAACQ,OAAD,CAAnC;AAA8C,sBAAYA,OAAO,CAACO;AAAlE,SAAlB;AACD,OAFD;AAGAK,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE,sBAAR;AAAgCC,QAAAA,OAAO,EAAEL;AAAzC,OAAD,CAAR;AACD,KAPH;AASD,GAXD;AAYD;;AAED,OAAO,SAASM,oBAAT,CAA8BC,OAA9B,EAAuC;AAC5C,SAAOd,QAAQ,IAAI;AACjB,QAAIC,WAAW,GAAI,mCAAkCC,YAAY,CAACC,KAAM,4BAA2BW,OAAQ,EAA3G;AACAhC,IAAAA,YAAY,CAACsB,GAAb,CAAiBH,WAAjB,EACGI,IADH,CACSC,QAAD,IAAc;AAClB,UAAIC,YAAY,GAAG,EAAnB;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBrB,OAAO,IAAI;AAC/BmB,QAAAA,YAAY,CAACG,IAAb,CAAkB;AAAE,gBAAMtB,OAAO,CAACC,EAAhB;AAAoB,kBAAQT,OAAO,CAACQ,OAAD,CAAnC;AAA8C,sBAAYA,OAAO,CAACO;AAAlE,SAAlB;AACD,OAFD;AAGAK,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE,sBAAR;AAAgCC,QAAAA,OAAO,EAAEL;AAAzC,OAAD,CAAR;AACD,KAPH;AASD,GAXD;AAYD;AAKD,SAASxB,cAAT,EAAyBgB,WAAzB,EAAsCL,mBAAtC","sourcesContent":["\nimport { getName } from './countriesAction';\nimport _ from 'lodash';\nimport { classService } from '../_services/class.service';\n\n\nfunction getSectionName(sections, section_id) {\n  let sectionName = sections.map(element => {\n    if (element.id === section_id) { return element.name } else { return null }\n  })\n  let result = sectionName.filter(element => element)\n  return _.first(result)\n}\n\nfunction getSectionFromLevel(sections, level_id) {\n  let sectionList = [];\n  if (level_id < 11) {\n    sectionList = [];\n  } else {\n    sectionList = Array.from(sections).filter(element => element.level_id === level_id)\n  }\n  return sectionList\n}\n\nfunction getSections() {\n  return dispatch => {\n    let apiEndpoint = `/section_by_levels?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint)\n      .then((response) => {\n        let sectionsList = [];\n        response.data.forEach(element => {\n          sectionsList.push({ \"id\": element.id, \"name\": getName(element), \"level_id\": element.level_id })\n        });\n        dispatch({ type: \"DATA_LOADED_SECTIONS\", payload: sectionsList });\n      });\n\n  };\n}\n\nexport function getSectionsByLevelId(levelId) {\n  return dispatch => {\n    let apiEndpoint = `/section_by_levels?access_token=${localStorage.token}&filter[where][level_id]=${levelId}`;\n    classService.get(apiEndpoint)\n      .then((response) => {\n        let sectionsList = [];\n        response.data.forEach(element => {\n          sectionsList.push({ \"id\": element.id, \"name\": getName(element), \"level_id\": element.level_id })\n        });\n        dispatch({ type: \"DATA_LOADED_SECTIONS\", payload: sectionsList });\n      });\n\n  };\n}\n\n\n\n\nexport { getSectionName, getSections, getSectionFromLevel }"]},"metadata":{},"sourceType":"module"}