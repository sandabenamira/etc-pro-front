{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/todo/Devoir/AddHomework.js\";\nimport React from 'react';\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport IntlMessages from '../../../../util/IntlMessages';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Auxiliary from \"../../../../util/Auxiliary\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from \"react-redux\";\nimport { addAndAssignHomework } from '../../../../actions/ToDo';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { classService } from \"../../../../_services/class.service\";\nimport CardBox from '../../../../components/CardBox/index';\nimport { getSectionsByLevelId } from \"../../../../actions/sectionAction\";\nimport { subjectsByLevelBySection } from '../../../../actions/subjectAction';\nimport { roleIdProfessor } from '../../../../config/config';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/moment';\nimport Can from '../../../../can';\nimport { RoleContext } from '../../../../Context';\nimport _ from \"lodash\";\nimport { element } from 'prop-types';\nconst titles = [{\n  value: 'Exercice de livre',\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"toDo.book.exercise\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }\n  })\n}, {\n  value: 'Serie d\\'exercice',\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"toDo.series.exercise\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }\n  })\n}, {\n  value: 'Autre',\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"toDo.other.exercise\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }\n  })\n}];\n\nclass AddHomework extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeSection = name => event => {\n      let sectionId = event.target.value;\n\n      if (this.props.userProfile.role_id === roleIdProfessor) {\n        let data = this.state.subjectsAffectedToProf;\n        let listSubject = subjectsByLevelBySection(this.props.subjects, this.state.levelId, sectionId);\n        let dataSubjectsFiltred = [];\n        data.forEach(item => {\n          let dataFiltred = listSubject.filter(element => element.id === item);\n\n          if (!_.isEmpty(dataFiltred[0])) {\n            dataSubjectsFiltred.push(dataFiltred[0]);\n          }\n\n          this.setState({\n            subjectList: dataSubjectsFiltred\n          });\n        });\n      } else {\n        this.setState({\n          subjectList: subjectsByLevelBySection(this.props.subjects, this.state.levelId, sectionId)\n        });\n      }\n    };\n\n    this.handleChangeLevel = name => event => {\n      let classesFiltredByLevel = this.state.classes.filter(element => element.level_id === event.target.value);\n      this.setState({\n        classesFiltredByLevel\n      });\n      let levelId = event.target.value;\n\n      if (levelId > 10) {\n        this.setState({\n          sectionsDisable: false\n        });\n      } else {\n        if (this.props.userProfile.role_id === roleIdProfessor) {\n          let data = this.state.subjectsAffectedToProf;\n          let listSubject = subjectsByLevelBySection(this.props.subjects, levelId, 0);\n          let dataSubjectsFiltred = [];\n          data.forEach(item => {\n            let dataFiltred = listSubject.filter(element => element.id === item);\n\n            if (!_.isEmpty(dataFiltred[0])) {\n              dataSubjectsFiltred.push(dataFiltred[0]);\n            }\n\n            this.setState({\n              subjectList: dataSubjectsFiltred,\n              levelId: levelId\n            });\n          });\n        } else {\n          this.setState({\n            subjectList: subjectsByLevelBySection(this.props.subjects, levelId, 0),\n            levelId: levelId\n          });\n        }\n      }\n\n      this.props.dispatch(getSectionsByLevelId(levelId));\n    };\n\n    this.assignNewClass = index => {\n      this.setState(prevState => ({\n        assignHomeworkList: [...prevState.assignHomeworkList, {\n          id: index\n        }]\n      }));\n    };\n\n    this.handleChangeSubject = name => event => {\n      let apiEndpoint = `/prof_subjects?access_token=${localStorage.token}&filter[include][professor][profile][user]&filter[where][subject_id]=${event.target.value}`;\n      classService.get(apiEndpoint).then(res => {\n        if (res) {\n          const data = res.data;\n          let listProfByEstablishment = data.filter(element => element.professor.profile.establishment_id === this.props.userProfile.establishment_id);\n          this.setState({\n            professorList: listProfByEstablishment\n          });\n        }\n      });\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let date = new Date();\n      const title = this.state.title;\n      const description = this.state.description;\n      const date_creation = date;\n      const professor_id = this.state.professor_id;\n      const subject_id = this.state.subject_id;\n      const establishment_id = this.props.userProfile.establishment_id;\n      const assignHomeworkList = this.state.assignHomeworkList;\n      const files_name = this.state.inputText;\n      const data = {\n        title,\n        description,\n        date_creation,\n        professor_id,\n        subject_id,\n        establishment_id,\n        assignHomeworkList,\n        files_name\n      };\n      this.props.dispatch(addAndAssignHomework(data, this.state.fileList));\n      this.setState({\n        title: '',\n        subject_id: 0,\n        description: '',\n        professor_id: 0,\n        assignHomeworkList: [{\n          id: 0\n        }]\n      });\n      this.props.cancelModal();\n    };\n\n    this.onDrop = e => {\n      let file = e.target.files[0];\n      this.setState({\n        fileList: file,\n        inputText: file.name\n      });\n    };\n\n    this.state = {\n      previewVisible: true,\n      title: '',\n      subject_id: '',\n      description: '',\n      professor_id: 0,\n      subject: [],\n      subjectList: [],\n      sectionsDisable: true,\n      modal: false,\n      pictures: [],\n      file: null,\n      fileList: null,\n      inputText: '',\n      levelId: 0,\n      assignHomeworkList: [{\n        id: 0\n      }],\n      professorList: [],\n      subjectsAffectedToProf: [],\n      classes: [],\n      levels: [],\n      classesFiltredByLevel: []\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.handleChangeLevel = this.handleChangeLevel.bind(this);\n    this.handleChangeSection = this.handleChangeSection.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.assignClass = this.assignClass.bind(this);\n    this.assignNewClass = this.assignNewClass.bind(this);\n  }\n\n  componentDidMount() {\n    let levelsAffectedToProf = [];\n\n    if (this.props.userProfile.role_id === roleIdProfessor) {\n      let apiEndpoint = `/professors?access_token=${localStorage.token}&filter[where][profile_id]=` + this.props.userProfile.id + `&filter[include][profSubjects][subject]`;\n      classService.get(apiEndpoint).then(res => {\n        if (res) {\n          const professorsData = res.data;\n\n          let subjectsAffectedToProf = _.map(professorsData[0].profSubjects, 'subject_id');\n\n          let levelsId = _.uniqBy(_.map(professorsData[0].profSubjects, 'level_id'));\n\n          _.forEach(levelsId, function (value) {\n            levelsAffectedToProf.push({\n              'id': value\n            });\n          });\n\n          let levels = _.intersectionBy(this.props.levels, levelsAffectedToProf, 'id');\n\n          this.setState({\n            subject: professorsData[0].profSubjects,\n            professor_id: professorsData[0].profSubjects[0].professor_id,\n            subjectsAffectedToProf: subjectsAffectedToProf,\n            levels: levels\n          });\n        }\n      });\n      this.setState({\n        classes: this.props.classesList\n      });\n    } else {\n      this.setState({\n        classes: this.props.classes,\n        levels: this.props.levels\n      });\n    }\n  }\n\n  handleCancel() {\n    this.props.cancelModal();\n  }\n\n  assignClass(event, name, index) {\n    if (name === \"classId\") {\n      let newList = this.state.assignHomeworkList.map(objSubject => objSubject.id === index ? { ...objSubject,\n        classId: event.target.value\n      } : objSubject);\n      this.setState({\n        assignHomeworkList: newList\n      });\n    } else {\n      let newList = this.state.assignHomeworkList.map(objSubject => objSubject.id === index ? { ...objSubject,\n        correctionDate: event._d\n      } : objSubject);\n      this.setState({\n        assignHomeworkList: newList\n      });\n    }\n  }\n\n  render() {\n    let {\n      sections\n    } = this.props;\n    let {\n      sectionsDisable,\n      subjectList,\n      assignHomeworkList,\n      professorList,\n      classesFiltredByLevel,\n      levels\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.previewVisible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      className: \"modal-box-header bg-primary text-white\",\n      toggle: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"modal.addToDo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 29\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"homework-filter:visit\",\n      yes: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(CardBox, {\n        styleName: \"col-lg-12 text-primary\",\n        heading: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"component.etablishments.info.general\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 102\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"level_id\",\n        name: \"level_id\",\n        select: true,\n        defaultValue: \" \",\n        onChange: this.handleChangeLevel(),\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.note.niveau\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 72\n          }\n        }),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 61\n        }\n      }, levels.map(level => /*#__PURE__*/React.createElement(MenuItem, {\n        key: level.id,\n        value: level.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 69\n        }\n      }, level.name)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"section_id\",\n        name: \"section_id\",\n        select: true,\n        onChange: this.handleChangeSection(),\n        disabled: sectionsDisable,\n        SelectProps: {},\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"components.class.level.input.label.section\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 72\n          }\n        }),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 61\n        }\n      }, sections.map(section => /*#__PURE__*/React.createElement(MenuItem, {\n        key: section.id,\n        value: section.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 69\n        }\n      }, section.name)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        select: true,\n        id: \"subject_id\",\n        name: \"subject_id\",\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"sidebar.subjects\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 72\n          }\n        }),\n        value: this.state.subject_id,\n        onChange: this.handleChangeSubject('subject_id'),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 61\n        }\n      }, subjectList.map(subject => /*#__PURE__*/React.createElement(MenuItem, {\n        key: subject.id,\n        value: subject.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 69\n        }\n      }, subject.name)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"title\",\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"toDo.titre\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 72\n          }\n        }),\n        value: this.state.title,\n        onChange: this.handleChange('title'),\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Can, {\n        role: role,\n        perform: \"homework-filter-professor:visit\",\n        yes: () => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          id: \"professor_id\",\n          name: \"professor_id\",\n          select: true,\n          label: /*#__PURE__*/React.createElement(IntlMessages, {\n            id: \"toDo.professor\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 80\n            }\n          }),\n          value: this.state.professor_id,\n          onChange: this.handleChange('professor_id'),\n          SelectProps: {},\n          margin: \"normal\",\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 69\n          }\n        }, professorList.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n          key: option.professor.id,\n          value: option.professor.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 77\n          }\n        }, option.professor.profile.user.name + ' ' + option.professor.profile.user.surname)))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        name: \"description\",\n        variant: \"outlined\",\n        multiline: true,\n        rows: 3,\n        id: \"description\",\n        label: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"room.description\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 72\n          }\n        }),\n        onChange: this.handleChange('description'),\n        value: this.state.description,\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 61\n        }\n      })))), /*#__PURE__*/React.createElement(CardBox, {\n        styleName: \"col-lg-12 text-primary\",\n        heading: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"stuppUser.formadd.file\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 102\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"name-multiple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.homework.task\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 98\n        }\n      })), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 159\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"files\",\n        className: \"btn\",\n        style: {\n          cursor: \"pointer\",\n          color: \"white\",\n          fontWeight: \"bold\",\n          backgroundColor: '#4B58B9',\n          borderRadius: '4rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 217\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"stuppUser.formadd.file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 226\n        }\n      }))), \" \", /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"files\",\n        className: \"btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 289\n        }\n      }, this.state.inputText), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"files\",\n        type: \"file\",\n        style: {\n          visibility: \"hidden\"\n        },\n        onChange: e => this.onDrop(e),\n        accept: \"application/pdf,image/*, application/txt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 61\n        }\n      })))), /*#__PURE__*/React.createElement(CardBox, {\n        styleName: \"col-12\",\n        heading: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: \"modal.assign_homework\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 86\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 53\n        }\n      }, assignHomeworkList.map((val, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 69\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 73\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          required: true,\n          id: `${index}`,\n          variant: \"outlined\",\n          select: true,\n          label: /*#__PURE__*/React.createElement(IntlMessages, {\n            id: \"sidebar.classes\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 88\n            }\n          }),\n          onChange: event => this.assignClass(event, \"classId\", index),\n          name: \"classId\",\n          SelectProps: {\n            native: true\n          },\n          margin: \"normal\",\n          fullWidth: true,\n          size: \"small\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 77\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 81\n          }\n        }), classesFiltredByLevel.map(itemClass => /*#__PURE__*/React.createElement(\"option\", {\n          key: itemClass.id,\n          value: itemClass.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 85\n          }\n        }, itemClass.name)))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 73\n          }\n        }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 77\n          }\n        }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n          label: /*#__PURE__*/React.createElement(IntlMessages, {\n            id: \"toDo.correctionDate\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 92\n            }\n          }),\n          fullWidth: true,\n          id: `${index}`,\n          name: \"correctionDate\",\n          value: val.correctionDate,\n          onChange: event => this.assignClass(event, \"correctionDate\", index),\n          format: \"MM-DD-YYYY\",\n          autoOk: true,\n          minDate: new Date(),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 81\n          }\n        }))));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 pt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"font\", {\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 57\n        }\n      }, \"*\"), \" \", /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"component.required_fields\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 85\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12 text-left \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"jr-btn bg-indigo text-white \",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.establishments.formadd.buttonAdd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 138\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"jr-btn bg-grey text-white \",\n        onClick: this.handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.establishments.formadd.buttonCancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 149\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 37\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    levels: state.ClassLevels.remoteLevels,\n    subjects: state.subject.remoteSubjects,\n    sections: state.classSections.remoteSections,\n    classes: state.classes\n  };\n};\n\nexport default connect(mapStateToProps)(AddHomework);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/todo/Devoir/AddHomework.js"],"names":["React","Modal","ModalBody","ModalHeader","IntlMessages","TextField","Button","Auxiliary","MenuItem","connect","addAndAssignHomework","InputLabel","classService","CardBox","getSectionsByLevelId","subjectsByLevelBySection","roleIdProfessor","AddIcon","Fab","KeyboardDatePicker","MuiPickersUtilsProvider","DateFnsUtils","Can","RoleContext","_","element","titles","value","label","AddHomework","Component","constructor","props","handleChange","name","event","setState","target","handleChangeSection","sectionId","userProfile","role_id","data","state","subjectsAffectedToProf","listSubject","subjects","levelId","dataSubjectsFiltred","forEach","item","dataFiltred","filter","id","isEmpty","push","subjectList","handleChangeLevel","classesFiltredByLevel","classes","level_id","sectionsDisable","dispatch","assignNewClass","index","prevState","assignHomeworkList","handleChangeSubject","apiEndpoint","localStorage","token","get","then","res","listProfByEstablishment","professor","profile","establishment_id","professorList","handleSubmit","e","preventDefault","date","Date","title","description","date_creation","professor_id","subject_id","files_name","inputText","fileList","cancelModal","onDrop","file","files","previewVisible","subject","modal","pictures","levels","handleCancel","bind","assignClass","componentDidMount","levelsAffectedToProf","professorsData","map","profSubjects","levelsId","uniqBy","intersectionBy","classesList","newList","objSubject","classId","correctionDate","_d","render","sections","role","level","section","option","user","surname","cursor","color","fontWeight","backgroundColor","borderRadius","visibility","val","native","itemClass","mapStateToProps","auth","ClassLevels","remoteLevels","remoteSubjects","classSections","remoteSections"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport IntlMessages from '../../../../util/IntlMessages';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Auxiliary from \"../../../../util/Auxiliary\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from \"react-redux\";\nimport { addAndAssignHomework } from '../../../../actions/ToDo';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { classService } from \"../../../../_services/class.service\";\nimport CardBox from '../../../../components/CardBox/index';\nimport { getSectionsByLevelId } from \"../../../../actions/sectionAction\";\nimport { subjectsByLevelBySection } from '../../../../actions/subjectAction'\nimport { roleIdProfessor } from '../../../../config/config';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/moment';\nimport Can from '../../../../can';\nimport { RoleContext } from '../../../../Context';\nimport _ from \"lodash\";\nimport { element } from 'prop-types';\n\nconst titles = [\n    {\n        value: 'Exercice de livre',\n        label: <IntlMessages id=\"toDo.book.exercise\" />,\n    },\n    {\n        value: 'Serie d\\'exercice',\n        label: <IntlMessages id=\"toDo.series.exercise\" />,\n    },\n    {\n        value: 'Autre',\n        label: <IntlMessages id=\"toDo.other.exercise\" />,\n    }\n\n];\n\nclass AddHomework extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            previewVisible: true,\n            title: '',\n            subject_id: '',\n            description: '',\n            professor_id: 0,\n            subject: [],\n            subjectList: [],\n            sectionsDisable: true,\n            modal: false,\n            pictures: [],\n            file: null,\n            fileList: null,\n            inputText: '',\n            levelId: 0,\n            assignHomeworkList: [{ id: 0 }],\n            professorList: [],\n            subjectsAffectedToProf: [],\n            classes: [],\n            levels: [],\n            classesFiltredByLevel:[]\n        };\n        this.handleCancel = this.handleCancel.bind(this);\n        this.handleChangeSubject = this.handleChangeSubject.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.handleChangeLevel = this.handleChangeLevel.bind(this);\n        this.handleChangeSection = this.handleChangeSection.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.assignClass = this.assignClass.bind(this);\n        this.assignNewClass = this.assignNewClass.bind(this);\n\n\n    };\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    }\n    handleChangeSection = name => event => {\n        let sectionId = event.target.value;\n        if (this.props.userProfile.role_id === roleIdProfessor) {\n            let data = this.state.subjectsAffectedToProf;\n            let listSubject = subjectsByLevelBySection(this.props.subjects, this.state.levelId, sectionId);\n            let dataSubjectsFiltred = []\n            data.forEach(item => {\n                let dataFiltred = listSubject.filter(element => element.id === item)\n                if (!_.isEmpty(dataFiltred[0])) {\n                    dataSubjectsFiltred.push(dataFiltred[0])\n                }\n                this.setState({ subjectList: dataSubjectsFiltred });\n            });\n        } else {\n            this.setState({ subjectList: subjectsByLevelBySection(this.props.subjects, this.state.levelId, sectionId) })\n        }\n    }\n\n    handleChangeLevel = name => event => {\n        let classesFiltredByLevel = this.state.classes.filter(element => element.level_id === event.target.value)\n      this.setState({classesFiltredByLevel})\n        let levelId = event.target.value;\n        if (levelId > 10) {\n            this.setState({ sectionsDisable: false })\n        } else {\n            if (this.props.userProfile.role_id === roleIdProfessor) {\n                let data = this.state.subjectsAffectedToProf;\n                let listSubject = subjectsByLevelBySection(this.props.subjects, levelId, 0);\n                let dataSubjectsFiltred = []\n                data.forEach(item => {\n                    let dataFiltred = listSubject.filter(element => element.id === item)\n                    if (!_.isEmpty(dataFiltred[0])) {\n                        dataSubjectsFiltred.push(dataFiltred[0])\n                    }\n                    this.setState({ subjectList: dataSubjectsFiltred, levelId: levelId });\n                });\n\n            } else {\n                this.setState({ subjectList: subjectsByLevelBySection(this.props.subjects, levelId, 0), levelId: levelId });\n            }\n\n        }\n        this.props.dispatch(getSectionsByLevelId(levelId))\n\n    }\n\n    componentDidMount() {\n        let levelsAffectedToProf = []\n        if (this.props.userProfile.role_id === roleIdProfessor) {\n            let apiEndpoint = `/professors?access_token=${localStorage.token}&filter[where][profile_id]=` + this.props.userProfile.id + `&filter[include][profSubjects][subject]`\n            classService.get(apiEndpoint)\n                .then(res => {\n                    if (res) {\n                        const professorsData = res.data;\n\n                        let subjectsAffectedToProf = _.map(professorsData[0].profSubjects, 'subject_id')\n                        let levelsId = _.uniqBy(_.map(professorsData[0].profSubjects, 'level_id'))\n                        _.forEach(levelsId, function (value) {\n                            levelsAffectedToProf.push({ 'id': value })\n                        });\n                        let levels = _.intersectionBy(this.props.levels, levelsAffectedToProf, 'id');\n                        this.setState({\n                            subject: professorsData[0].profSubjects, professor_id: professorsData[0].profSubjects[0].professor_id, subjectsAffectedToProf: subjectsAffectedToProf,\n                            levels: levels\n                        })\n                    }\n                });\n\n            this.setState({ classes: this.props.classesList })\n        } else {\n            this.setState({ classes: this.props.classes, levels: this.props.levels })\n        }\n\n    }\n\n    handleCancel() {\n        this.props.cancelModal();\n    };\n\n    assignNewClass = index => {\n        this.setState(prevState => ({\n            assignHomeworkList: [\n                ...prevState.assignHomeworkList,\n                {\n                    id: index\n\n                }\n            ]\n        }));\n    };\n\n    assignClass(event, name, index) {\n        if (name === \"classId\") {\n            let newList = this.state.assignHomeworkList.map(objSubject =>\n                objSubject.id === index\n                    ? { ...objSubject, classId: event.target.value }\n                    : objSubject\n            )\n            this.setState({ assignHomeworkList: newList })\n\n        } else {\n            let newList = this.state.assignHomeworkList.map(objSubject =>\n                objSubject.id === index\n                    ? { ...objSubject, correctionDate: event._d }\n                    : objSubject\n            )\n            this.setState({ assignHomeworkList: newList })\n\n        }\n    }\n    handleChangeSubject = name => event => {\n\n        let apiEndpoint = `/prof_subjects?access_token=${localStorage.token}&filter[include][professor][profile][user]&filter[where][subject_id]=${event.target.value}`\n        classService.get(apiEndpoint)\n            .then(res => {\n                if (res) {\n                    const data = res.data;\n                    let listProfByEstablishment = data.filter(element => element.professor.profile.establishment_id === this.props.userProfile.establishment_id)\n                    this.setState({ professorList: listProfByEstablishment })\n                }\n            });\n\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let date = new Date();\n        const title = this.state.title;\n        const description = this.state.description;\n        const date_creation = date;\n        const professor_id = this.state.professor_id;\n        const subject_id = this.state.subject_id;\n        const establishment_id = this.props.userProfile.establishment_id;\n        const assignHomeworkList = this.state.assignHomeworkList;\n        const files_name = this.state.inputText;\n        const data = { title, description, date_creation, professor_id, subject_id, establishment_id, assignHomeworkList, files_name };        \n        this.props.dispatch(addAndAssignHomework(data, this.state.fileList));\n        this.setState({\n            title: '',\n            subject_id: 0,\n            description: '',\n            professor_id: 0,\n            assignHomeworkList: [{ id: 0 }]\n        });\n        this.props.cancelModal();\n    };\n\n\n\n    onDrop = e => {        \n        let file = e.target.files[0]\n        this.setState({\n            fileList: file,\n            inputText: file.name\n        });\n    };\n\n\n\n\n    render() {\n        let { sections } = this.props;\n        let { sectionsDisable, subjectList, assignHomeworkList, professorList, classesFiltredByLevel, levels } = this.state;\n        return (\n            <Auxiliary>\n                <Modal isOpen={this.state.previewVisible}>\n                    <ModalHeader className=\"modal-box-header bg-primary text-white\"\n                    toggle={this.handleCancel}\n                    >         \n                        {<IntlMessages id=\"modal.addToDo\" />}\n                    </ModalHeader>\n                    <ModalBody>\n                        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n                            <RoleContext.Consumer>\n                                {({ role }) => (\n                                    <Can\n                                        role={role}\n                                        perform=\"homework-filter:visit\"\n                                        yes={() => (\n                                            <div>\n                                                <CardBox styleName=\"col-lg-12 text-primary\" heading={<IntlMessages id=\"component.etablishments.info.general\" />} >\n                                                    <div className=\"row\">\n                                                        <div className=\"col-md-6\">\n\n                                                            <TextField\n                                                                id=\"level_id\"\n                                                                name=\"level_id\"\n                                                                select\n                                                                defaultValue=\" \"\n                                                                onChange={this.handleChangeLevel()}\n                                                                SelectProps={{}}\n                                                                label={<IntlMessages id=\"components.note.niveau\" />}\n                                                                margin=\"normal\"\n                                                                fullWidth\n                                                            >\n                                                                {levels.map((level) => (\n                                                                    <MenuItem key={level.id} value={level.id}>\n                                                                        {level.name}\n                                                                    </MenuItem>\n                                                                ))}\n                                                            </TextField>\n\n                                                        </div>\n                                                        <div className=\"col-md-6\">\n\n                                                            <TextField\n                                                                id=\"section_id\"\n                                                                name=\"section_id\"\n                                                                select\n                                                                onChange={this.handleChangeSection()}\n                                                                disabled={sectionsDisable}\n                                                                SelectProps={{}}\n                                                                label={<IntlMessages id=\"components.class.level.input.label.section\" />}\n                                                                margin=\"normal\"\n                                                                fullWidth\n                                                            >\n                                                                {sections.map((section) => (\n                                                                    <MenuItem key={section.id} value={section.id}>\n                                                                        {section.name}\n                                                                    </MenuItem>\n                                                                ))}\n                                                            </TextField>\n\n                                                        </div>\n                                                        <div className=\"col-sm-6\">\n                                                            <TextField\n                                                                required\n                                                                select\n                                                                id=\"subject_id\"\n                                                                name='subject_id'\n                                                                label={<IntlMessages id=\"sidebar.subjects\" />}\n                                                                value={this.state.subject_id}\n                                                                onChange={this.handleChangeSubject('subject_id')}\n                                                                margin=\"normal\"\n                                                                fullWidth\n                                                            >\n                                                                {subjectList.map(subject => (\n                                                                    <MenuItem key={subject.id} value={subject.id}>\n                                                                        {subject.name}\n                                                                    </MenuItem>\n                                                                ))}\n                                                            </TextField>\n                                                        </div>\n                                                        <div className=\"col-sm-6\">\n                                                            <TextField\n                                                                required\n                                                                id=\"title\"\n                                                                label={<IntlMessages id=\"toDo.titre\" />}\n                                                                value={this.state.title}\n                                                                onChange={this.handleChange('title')}\n                                                                margin=\"normal\"\n                                                                fullWidth />\n                                                             \n                                                            \n                                                        </div>\n                                                        <Can\n                                                            role={role}\n                                                            perform=\"homework-filter-professor:visit\"\n                                                            yes={() => (\n                                                                <div className=\"col-md-6\">\n\n                                                                    <TextField\n                                                                        id=\"professor_id\"\n                                                                        name=\"professor_id\"\n                                                                        select\n                                                                        label={<IntlMessages id=\"toDo.professor\" />}\n                                                                        value={this.state.professor_id}\n                                                                        onChange={this.handleChange('professor_id')}\n                                                                        SelectProps={{}}\n                                                                        margin=\"normal\"\n                                                                        fullWidth\n                                                                    >\n                                                                        {professorList.map((option) => (\n                                                                            <MenuItem\n                                                                                key={option.professor.id}\n                                                                                value={option.professor.id}\n                                                                            >\n                                                                                {option.professor.profile.user.name +\n                                                                                    ' ' +\n                                                                                    option.professor.profile.user.surname}\n                                                                            </MenuItem>\n                                                                        ))}\n                                                                    </TextField>\n\n                                                                </div>\n\n                                                            )}\n                                                        />\n\n                                                        <div className=\"col-sm-12\">\n                                                            <TextField\n                                                                name='description'\n                                                                variant=\"outlined\"\n                                                                multiline\n                                                                rows={3}\n                                                                id=\"description\"\n                                                                label={<IntlMessages id=\"room.description\" />}\n                                                                onChange={this.handleChange('description')}\n                                                                value={this.state.description}\n                                                                margin=\"normal\"\n                                                                fullWidth\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </CardBox>\n\n                                                <CardBox styleName=\"col-lg-12 text-primary\" heading={<IntlMessages id=\"stuppUser.formadd.file\" />} >\n\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-12 pt-3\">\n                                                            <InputLabel htmlFor=\"name-multiple\">{<IntlMessages id=\"components.homework.task\" />}</InputLabel> <br />\n                                                            <label htmlFor=\"files\" className=\"btn\" style={{ cursor: \"pointer\", color: \"white\", fontWeight: \"bold\", backgroundColor: '#4B58B9', borderRadius: '4rem' }} ><strong>{<IntlMessages id=\"stuppUser.formadd.file\" />}</strong></label> <label htmlFor=\"files\" className=\"btn\">{this.state.inputText}</label>\n                                                            <input id=\"files\" type=\"file\" style={{ visibility: \"hidden\" }} onChange={(e) => this.onDrop(e)} accept=\"application/pdf,image/*, application/txt\" />\n                                                        </div>\n                                                    </div>\n                                                </CardBox>\n                                                <CardBox styleName=\"col-12\" heading={<IntlMessages id=\"modal.assign_homework\" />} >\n                                                    <div >\n                                                        {\n                                                            assignHomeworkList.map((val, index) => {\n                                                                return (\n                                                                    <div className=\"row\" key={index}>\n                                                                        <div className=\"col-sm-6\">\n                                                                            <TextField\n                                                                                required\n                                                                                id={`${index}`}\n                                                                                variant=\"outlined\"\n                                                                                select\n                                                                                label={<IntlMessages id=\"sidebar.classes\" />}\n                                                                                onChange={event =>\n                                                                                    this.assignClass(event, \"classId\", index)\n                                                                                }\n                                                                                name=\"classId\"\n                                                                                SelectProps={{\n                                                                                    native: true\n                                                                                }}\n                                                                                margin=\"normal\"\n                                                                                fullWidth\n                                                                                size=\"small\"\n                                                                            >\n                                                                                <option></option>\n                                                                                {classesFiltredByLevel.map(itemClass => (\n                                                                                    <option key={itemClass.id} value={itemClass.id}>\n                                                                                        {itemClass.name}\n                                                                                    </option>\n                                                                                ))}\n                                                                            </TextField>\n                                                                        </div>\n                                                                        <div className=\"col-sm-6\">\n\n                                                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                                                <KeyboardDatePicker\n                                                                                    label={<IntlMessages id=\"toDo.correctionDate\" />}\n                                                                                    fullWidth\n                                                                                    id={`${index}`}\n                                                                                    name=\"correctionDate\"\n                                                                                    value={val.correctionDate}\n                                                                                    onChange={event =>\n                                                                                        this.assignClass(event, \"correctionDate\", index)\n                                                                                    }\n                                                                                    format=\"MM-DD-YYYY\"\n                                                                                    autoOk\n                                                                                    minDate={new Date()}\n                                                                                    required\n                                                                                />\n                                                                            </MuiPickersUtilsProvider>\n                                                                        </div>\n\n\n                                                                        {/* <div className=\"col-sm-2\">\n                                                                            <Fab\n                                                                                size=\"small\"\n                                                                                value={`${index}`}\n                                                                                color=\"primary\"\n                                                                                aria-label=\"Add\"\n                                                                                onClick={() => this.assignNewClass(index + 1)}\n                                                                            >\n                                                                                <AddIcon />\n                                                                            </Fab>\n                                                                        </div> */}\n                                                                    </div>\n                                                                )\n                                                            })\n                                                        }\n                                                    </div>\n                                                </CardBox>\n                                                <div className=\"col-sm-12 pt-4\">\n                                                    <h4><font color=\"red\">*</font> {<IntlMessages id=\"component.required_fields\" />}</h4>\n                                                </div>\n                                                <div className=\"col-md-12 text-left \">\n                                                    <Button variant=\"contained\" className=\"jr-btn bg-indigo text-white \" type=\"submit\" >{<IntlMessages id=\"components.establishments.formadd.buttonAdd\" />}</Button>\n                                                    <Button variant=\"contained\" className=\"jr-btn bg-grey text-white \" onClick={this.handleCancel}>{<IntlMessages id=\"components.establishments.formadd.buttonCancel\" />}</Button>\n                                                </div>\n                                            </div>\n\n                                        )}\n                                    />\n                                )}\n                            </RoleContext.Consumer>\n                        </form>\n                    </ModalBody>\n\n                </Modal>\n            </Auxiliary>\n        )\n    };\n}\nconst mapStateToProps = (state) => {\n    return {\n        userProfile: state.auth.userProfile,\n        levels: state.ClassLevels.remoteLevels,\n        subjects: state.subject.remoteSubjects,\n        sections: state.classSections.remoteSections,\n        classes: state.classes,\n    }\n}\nexport default connect(mapStateToProps)(AddHomework);"]},"metadata":{},"sourceType":"module"}