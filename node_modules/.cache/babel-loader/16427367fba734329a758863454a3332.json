{"ast":null,"code":"import baseUrl from \"../config/config\";\nimport axios from \"axios\";\nimport { FETCH_ALL_ROLE, ADD_USER, GET_ALL_USERS_FOR_ADMIN, GET_ALL_USERS_FOR_SUPER_ADMIN, EDIT_USER, DELETE_USER, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE, HIDE_WARNING_MESSAGE, SHOW_WARNING_MESSAGE, SHOW_LOADER, HIDE_LOADER } from \"../constants/ActionTypes\";\nimport _ from \"lodash\";\nimport { getError } from \"../Error/Error\";\nimport { classService } from \"../_services/class.service\";\nimport { roleIdStudent } from \"../config/config\";\nexport function getAllRole() {\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/roles?access_token=${localStorage.token}`).then(res => {\n      dispatch({\n        type: FETCH_ALL_ROLE,\n        payload: res.data\n      });\n    });\n  };\n}\nexport function getAllUsersForAdmin(establishmentId, schoolYearId) {\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/users/${establishmentId}/${schoolYearId}?access_token=${localStorage.token}`).then(res => {\n      dispatch({\n        type: GET_ALL_USERS_FOR_ADMIN,\n        payload: res.data.users\n      });\n    });\n  };\n}\nexport function getAllUsersForSuperAdministrator() {\n  return function (dispatch) {\n    axios.get(`${baseUrl.baseUrl}/users?access_token=${localStorage.token}`).then(res => {\n      dispatch({\n        type: GET_ALL_USERS_FOR_SUPER_ADMIN,\n        payload: res.data\n      });\n    });\n  };\n}\nexport const addUsers = data => {\n  return dispatch => {\n    let dataUser = {\n      name: data.name,\n      surname: data.surname,\n      gender: data.gender,\n      dateOfBirth: data.dateOfBirth,\n      address: data.address,\n      phone: data.phone,\n      cin: data.cin,\n      zipCode: data.zipCode,\n      country: data.userCountry,\n      photo: data.photo,\n      name_ar: data.name_ar,\n      surname_ar: data.surname_ar,\n      creation_date: new Date(),\n      nationality: data.nationality,\n      placeOfBirth: data.placeOfBirth,\n      email: data.email,\n      roleId: data.roleId,\n      establishmentId: data.establishmentId,\n      assignClassSubject: data.assignClassSubject,\n      classId: data.studentClass,\n      schoolYearId: data.schoolyearId,\n      paperFiles: null,\n      creation_date: Date(),\n      functionName: data.functionName,\n      password: data.password,\n      login: data.login,\n      levelId: data.levelId,\n      sectionId: data.sectionId,\n      usefulInformation: data.usefulInformation,\n      parentId: data.parentId,\n      studentId: data.studentId\n    };\n    console.log(dataUser, 'dataUser apres action');\n    let apiEndpoint = `/users/createByRole?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, dataUser).then(response => {\n      let userId = response.data.existe.userData.id;\n\n      if (data.userPhoto.name != undefined) {\n        let photoUser = data.userPhoto;\n        var object = {};\n        object.file = photoUser;\n        object.fileName = \"user\" + userId;\n        const myNewFile = new File([object.file], photoUser.name, {\n          type: object.file.type\n        });\n        let formadata = new FormData();\n        formadata.append(\"file\", myNewFile);\n        dispatch({\n          type: SHOW_LOADER,\n          payload: true\n        });\n        const photoUrl = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n        axios({\n          url: photoUrl,\n          method: \"POST\",\n          data: formadata\n        }).then(response => {\n          let urlPhotoUser = `${baseUrl.baseUrl}/users/` + userId + `?access_token=${localStorage.token}`;\n          axios.patch(urlPhotoUser, {\n            id: userId,\n            photo: response.data.result.files.file[0].providerResponse.location\n          }).then(response => {\n            if (response) {} else {\n              console.log(response.data, \"photo not upload\");\n            }\n          });\n        });\n      }\n\n      if (response && data.userPapiersFiles.length > 0) {\n        let formadata = new FormData();\n        data.userPapiersFiles.map((element, index) => {\n          let userPapiersFile = element;\n          const fileExtension = userPapiersFile.name.replace(/^.*\\./, \"\");\n          const fileName = \"userPapiersfile\" + userId + index + String(Date.now()).slice(-2) + \".\" + fileExtension;\n          var object = {};\n          object.file = userPapiersFile;\n          object.fileName = fileName;\n          const myNewFile = new File([object.file], fileName, {\n            type: object.file.type\n          });\n          formadata.append(\"file\", myNewFile);\n        });\n        let filesURL = [];\n        const URLUserPapiersFiles = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n        axios({\n          url: URLUserPapiersFiles,\n          method: \"POST\",\n          data: formadata\n        }).then(response => {\n          if (response) {\n            filesURL = response.data.result.files.file.map((urlFile, index) => {\n              return urlFile.providerResponse.location;\n            });\n            let urlPhotoUser = `${baseUrl.baseUrl}/users/` + userId + `?access_token=${localStorage.token}`;\n            axios.patch(urlPhotoUser, {\n              id: userId,\n              paper_files: filesURL\n            }).then(response => {\n              if (response) {\n                console.log(\"response photo\", response);\n              } else {\n                console.log(response.data, \"photo not upload\");\n              }\n            });\n          }\n        }).catch(err => {});\n      } else if (!response) {\n        console.log(\"erreur\", response);\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/usersAction.js"],"names":["baseUrl","axios","FETCH_ALL_ROLE","ADD_USER","GET_ALL_USERS_FOR_ADMIN","GET_ALL_USERS_FOR_SUPER_ADMIN","EDIT_USER","DELETE_USER","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","HIDE_WARNING_MESSAGE","SHOW_WARNING_MESSAGE","SHOW_LOADER","HIDE_LOADER","_","getError","classService","roleIdStudent","getAllRole","dispatch","get","localStorage","token","then","res","type","payload","data","getAllUsersForAdmin","establishmentId","schoolYearId","users","getAllUsersForSuperAdministrator","addUsers","dataUser","name","surname","gender","dateOfBirth","address","phone","cin","zipCode","country","userCountry","photo","name_ar","surname_ar","creation_date","Date","nationality","placeOfBirth","email","roleId","assignClassSubject","classId","studentClass","schoolyearId","paperFiles","functionName","password","login","levelId","sectionId","usefulInformation","parentId","studentId","console","log","apiEndpoint","post","response","userId","existe","userData","id","userPhoto","undefined","photoUser","object","file","fileName","myNewFile","File","formadata","FormData","append","photoUrl","url","method","urlPhotoUser","patch","result","files","providerResponse","location","userPapiersFiles","length","map","element","index","userPapiersFile","fileExtension","replace","String","now","slice","filesURL","URLUserPapiersFiles","urlFile","paper_files","catch","err","setTimeout"],"mappings":"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","sourcesContent":["import baseUrl from \"../config/config\";\nimport axios from \"axios\";\nimport {\n  FETCH_ALL_ROLE,\n  ADD_USER,\n  GET_ALL_USERS_FOR_ADMIN,\n  GET_ALL_USERS_FOR_SUPER_ADMIN,\n  EDIT_USER,\n  DELETE_USER,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n  HIDE_WARNING_MESSAGE,\n  SHOW_WARNING_MESSAGE,\n  SHOW_LOADER,\n  HIDE_LOADER,\n} from \"../constants/ActionTypes\";\nimport _ from \"lodash\";\nimport { getError } from \"../Error/Error\";\nimport { classService } from \"../_services/class.service\";\nimport { roleIdStudent } from \"../config/config\";\n\nexport function getAllRole() {\n  return function(dispatch) {\n    axios\n      .get(`${baseUrl.baseUrl}/roles?access_token=${localStorage.token}`)\n      .then((res) => {\n        dispatch({ type: FETCH_ALL_ROLE, payload: res.data });\n      });\n  };\n}\nexport function getAllUsersForAdmin(establishmentId, schoolYearId) {\n  return function(dispatch) {\n    axios\n      .get(\n        `${baseUrl.baseUrl}/users/${establishmentId}/${schoolYearId}?access_token=${localStorage.token}`\n      )\n      .then((res) => {\n         dispatch({ type: GET_ALL_USERS_FOR_ADMIN, payload: res.data.users });\n      });\n  };\n}\nexport function getAllUsersForSuperAdministrator() {\n  return function(dispatch) {\n    axios\n      .get(`${baseUrl.baseUrl}/users?access_token=${localStorage.token}`)\n      .then((res) => {\n         dispatch({ type: GET_ALL_USERS_FOR_SUPER_ADMIN, payload: res.data });\n      });\n  };\n}\nexport const addUsers = (data) => {\n  return (dispatch) => {\n    let dataUser = {\n      name: data.name,\n      surname: data.surname,\n      gender: data.gender,\n      dateOfBirth: data.dateOfBirth,\n      address: data.address,\n      phone: data.phone,\n      cin: data.cin,\n      zipCode: data.zipCode,\n      country: data.userCountry,\n      photo: data.photo,\n      name_ar: data.name_ar,\n      surname_ar: data.surname_ar,\n      creation_date: new Date(),\n      nationality: data.nationality,\n      placeOfBirth: data.placeOfBirth,\n      email: data.email,\n      roleId: data.roleId,\n      establishmentId: data.establishmentId,\n      assignClassSubject: data.assignClassSubject,\n      classId: data.studentClass,\n      schoolYearId: data.schoolyearId,\n      paperFiles: null,\n      creation_date: Date(),\n      functionName: data.functionName,\n      password: data.password,\n      login: data.login,\n      levelId: data.levelId,\n      sectionId: data.sectionId,\n      usefulInformation: data.usefulInformation,\n      parentId: data.parentId,\n      studentId: data.studentId,\n    };\n    console.log(dataUser,'dataUser apres action');\n     let apiEndpoint = `/users/createByRole?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, dataUser).then((response) => {\n      let userId = response.data.existe.userData.id;\n      if (data.userPhoto.name != undefined) {\n        let photoUser = data.userPhoto;\n        var object = {};\n        object.file = photoUser;\n        object.fileName = \"user\" + userId;\n        const myNewFile = new File([object.file], photoUser.name, {\n          type: object.file.type,\n        });\n        let formadata = new FormData();\n        formadata.append(\"file\", myNewFile);\n        dispatch({\n          type: SHOW_LOADER,\n          payload: true,\n        });\n        const photoUrl = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n        axios({\n          url: photoUrl,\n          method: \"POST\",\n          data: formadata,\n        }).then((response) => {\n          let urlPhotoUser =\n            `${baseUrl.baseUrl}/users/` +\n            userId +\n            `?access_token=${localStorage.token}`;\n\n          axios\n            .patch(urlPhotoUser, {\n              id: userId,\n              photo:\n                response.data.result.files.file[0].providerResponse.location,\n            })\n            .then((response) => {\n              if (response) {\n               } else {\n                console.log(response.data, \"photo not upload\");\n              }\n            });\n        });\n      }\n      if (response && data.userPapiersFiles.length > 0) {\n        let formadata = new FormData();\n        data.userPapiersFiles.map((element, index) => {\n          let userPapiersFile = element;\n          const fileExtension = userPapiersFile.name.replace(/^.*\\./, \"\");\n          const fileName =\n            \"userPapiersfile\" +\n            userId +\n            index +\n            String(Date.now()).slice(-2) +\n            \".\" +\n            fileExtension;\n          var object = {};\n          object.file = userPapiersFile;\n          object.fileName = fileName;\n          const myNewFile = new File([object.file], fileName, {\n            type: object.file.type,\n          });\n          formadata.append(\"file\", myNewFile);\n        });\n\n        let filesURL = [];\n\n        const URLUserPapiersFiles = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n        axios({\n          url: URLUserPapiersFiles,\n          method: \"POST\",\n          data: formadata,\n        })\n          .then((response) => {\n            if (response) {\n              filesURL = response.data.result.files.file.map(\n                (urlFile, index) => {\n                  return urlFile.providerResponse.location;\n                }\n              );\n              let urlPhotoUser =\n                `${baseUrl.baseUrl}/users/` +\n                userId +\n                `?access_token=${localStorage.token}`;\n\n              axios\n                .patch(urlPhotoUser, {\n                  id: userId,\n                  paper_files: filesURL,\n                })\n                .then((response) => {\n                  if (response) {\n                    console.log(\"response photo\", response);\n                  } else {\n                    console.log(response.data, \"photo not upload\");\n                  }\n                });\n            }\n          })\n          .catch((err) => {});\n      } else if (!response) {\n        console.log(\"erreur\", response);\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}