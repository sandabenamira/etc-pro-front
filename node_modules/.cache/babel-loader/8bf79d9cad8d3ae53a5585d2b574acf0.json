{"ast":null,"code":"import { classService } from '../_services/class.service';\nimport { GENERATE_BILLS, FETECHED_ALL_BILLS, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from '../constants/ActionTypes';\nexport const generateBillForEstablishment = idEstablishment => {\n  return dispatch => {\n    let apiEndpoint = `/allocation_service_v2/generateBillForEstablishment/${idEstablishment}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      dispatch({\n        type: GENERATE_BILLS,\n        payload: response.data.invoices\n      });\n    });\n  };\n};\nexport const getInvoicesByEstablishmentId = idEstablishment => {\n  return dispatch => {\n    let apiEndpoint = `/bills/fetchInvoicesByEstablishmentId/${idEstablishment}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      dispatch({\n        type: FETECHED_ALL_BILLS,\n        payload: response.data.Invoices\n      });\n    });\n  };\n};\nexport const invoiceNotificationWithMail = data => {\n  return dispatch => {\n    let apiEndpoint = `/bills/invoiceNotificationWithMail?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then(response => {\n      if (response) {\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'L\\'envoie de mail est effectué avec succès'\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de l\\'envoie de mail, merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};\nexport const invoiceNotificationWithSMS = data => {\n  return dispatch => {\n    let apiEndpoint = `/bills/invoiceNotificationWithSMS?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then(response => {\n      if (response) {\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'L\\'envoie de SMS est effectué avec succès'\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de SMS de mail, merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};\nexport const SendInvoice = data => {\n  return dispatch => {\n    console.log('Object to send ', data);\n    let apiEndpoint = `/bills/sendInvoice?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then(response => {\n      if (response) {} else {}\n    });\n  };\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/BillAction.js"],"names":["classService","GENERATE_BILLS","FETECHED_ALL_BILLS","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","generateBillForEstablishment","idEstablishment","dispatch","apiEndpoint","localStorage","token","get","then","response","type","payload","data","invoices","getInvoicesByEstablishmentId","Invoices","invoiceNotificationWithMail","post","setTimeout","invoiceNotificationWithSMS","SendInvoice","console","log"],"mappings":"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","sourcesContent":["import { classService } from '../_services/class.service';\nimport {\n  GENERATE_BILLS,\n  FETECHED_ALL_BILLS,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n} from '../constants/ActionTypes';\nexport const generateBillForEstablishment = (idEstablishment) => {\n  return (dispatch) => {\n    let apiEndpoint = `/allocation_service_v2/generateBillForEstablishment/${idEstablishment}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then((response) => {\n      dispatch({ type: GENERATE_BILLS, payload: response.data.invoices });\n    });\n  };\n};\n\n\n\nexport const getInvoicesByEstablishmentId = (idEstablishment) => {\n  return (dispatch) => {\n    let apiEndpoint = `/bills/fetchInvoicesByEstablishmentId/${idEstablishment}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then((response) => {\n      dispatch({ type: FETECHED_ALL_BILLS, payload: response.data.Invoices });\n    });\n  };\n};\n\nexport const invoiceNotificationWithMail = (data) => {\n  return (dispatch) => {\n    let apiEndpoint = `/bills/invoiceNotificationWithMail?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then((response) => {\n      if (response) {\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'L\\'envoie de mail est effectué avec succès',\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de l\\'envoie de mail, merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n\nexport const invoiceNotificationWithSMS = (data) => {\n  return (dispatch) => {\n    let apiEndpoint = `/bills/invoiceNotificationWithSMS?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then((response) => {\n      if (response) {\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'L\\'envoie de SMS est effectué avec succès',\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de SMS de mail, merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n\n\nexport const SendInvoice = (data) => {\n  return (dispatch) => {\n    console.log('Object to send ',data)\n    let apiEndpoint = `/bills/sendInvoice?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then((response) => {\n      if (response) {\n       \n      } else {\n      \n      }\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}