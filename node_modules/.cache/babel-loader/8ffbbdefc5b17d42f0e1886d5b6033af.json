{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/ServiceAllocation/ServiceAllocation.js\";\nimport React from \"react\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport { connect } from \"react-redux\";\nimport IconWithTextCard from \"../ServiceAllocation/ServiceAllocationComp/IconWithTextCard\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { classService } from \"../../../../../_services/class.service\";\nimport RemoveSharpIcon from \"@material-ui/icons/RemoveSharp\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport ListServiceAllocation from \"./ListServiceAllocation\";\nimport AddAllocationService from \"./AddAllocationService\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { getServiceV2 } from \"../../../../../actions/ServiceAction\";\nimport { getLevelByEstablishmentId } from \"../../../../../actions/classLevelAction\";\nimport { getClassesByEstablishmentId } from \"../../../../../actions/classeAction\";\nimport { getSubjectsByEstablishmentId } from \"../../../../../actions/subjectAction\";\nimport { getAllocationServiceByEstablishment } from \"../../../../../actions/AllocationServiceAction\";\nimport _ from \"lodash\";\nimport { UncontrolledAlert } from \"reactstrap\";\nconst idHighSchool = 2;\n\nclass ServiceAllocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = name => event => {\n      let allocationServerFiltred = this.props.allocationService.filter(element => element.services[0].service_v2.fk_id_schol_year_v2 === event.target.value);\n      this.setState({\n        [name]: event.target.value,\n        allocationServicesList: allocationServerFiltred\n      });\n    };\n\n    this.handleChangeSection = name => event => {\n      let allocationServerFiltred = this.props.allocationService.filter(element => element.Class.section_id === event.target.value);\n      this.setState({\n        [name]: event.target.value,\n        allocationServicesList: allocationServerFiltred\n      });\n    };\n\n    this.handleChangeClass = name => event => {\n      let allocationServerFiltred = this.props.allocationService.filter(element => element.Class.id === event.target.value);\n      this.setState({\n        [name]: event.target.value,\n        allocationServicesList: allocationServerFiltred\n      });\n    };\n\n    this.handleChangeLevel = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      let allocationServerFiltred = this.props.allocationService.filter(element => element.level.id === event.target.value);\n      let classesListFiltred = this.props.classes.filter(element => element.level_id === event.target.value);\n      this.setState({\n        allocationServicesList: allocationServerFiltred,\n        classesList: classesListFiltred\n      });\n      let apiEndpoint = `/section_by_levels?access_token=${localStorage.token}&filter[where][level_id]=${event.target.value}`;\n      classService.get(apiEndpoint).then(response => {\n        this.setState({\n          sections: response.data\n        });\n      });\n    };\n\n    this.state = {\n      open: false,\n      studentList: [],\n      classesList: [],\n      classLevel: 0,\n      sections: [],\n      schoolYearsV2: [],\n      allocationServicesList: [],\n      sectionStatus: false,\n      idSection: \"\",\n      idClasse: \"\",\n      idSchoolYearsV2: \"\"\n    };\n    this.openAddModal = this.openAddModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeLevel = this.handleChangeLevel.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSection = this.handleChangeSection.bind(this);\n  }\n\n  componentWillMount() {\n    const establishmentId = this.props.userProfile.establishment_id;\n    this.props.dispatch(getServiceV2(this.props.userProfile.establishment_id));\n    this.props.dispatch(getAllocationServiceByEstablishment(this.props.userProfile.establishment_id));\n    this.props.dispatch(getLevelByEstablishmentId(establishmentId));\n  }\n\n  componentDidMount() {\n    let apiEndpoint = \"\";\n    const establishmentId = this.props.userProfile.establishment_id;\n    apiEndpoint = `/students/fetchStudentByEstablishmentId/${this.props.userProfile.establishment_id}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(res => {\n      if (res) {\n        this.setState({\n          studentList: res.data.students\n        });\n      }\n    });\n    apiEndpoint = `/school_years_v2?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(res => {\n      if (res) {\n        this.setState({\n          schoolYearsV2: res.data\n        });\n      }\n    });\n    this.props.dispatch(getClassesByEstablishmentId(establishmentId));\n    this.props.dispatch(getSubjectsByEstablishmentId(establishmentId));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.classes !== this.props.classes) {\n      this.setState({\n        classesList: this.props.classes\n      });\n    }\n\n    if (prevProps.allocationService !== this.props.allocationService) {\n      this.setState({\n        allocationServicesList: this.props.allocationService\n      });\n    }\n\n    if (prevProps.classLevels !== this.props.classLevels) {\n      this.setState({\n        sectionStatus: true\n      });\n    }\n  }\n\n  openAddModal() {\n    this.setState(previousState => ({\n      open: !previousState.open\n    }));\n  }\n\n  render() {\n    let {\n      services,\n      classLevels\n    } = this.props;\n    let {\n      classesList,\n      sections,\n      schoolYearsV2,\n      allocationServicesList\n    } = this.state;\n    let allserviceAllocated = [];\n    allocationServicesList.map((data, index) => allserviceAllocated.push(data.services));\n    allserviceAllocated = allserviceAllocated.flat();\n\n    let serviceAllocated = _.intersectionWith(services, allserviceAllocated, (a, b) => a.id == b.fk_id_service);\n\n    let detailCards = [{\n      cardColor: \"primary\",\n      imageIcon: require(\"../ServiceAllocation/Icone/project-icon.png\"),\n      title: services.length,\n      subTitle: \"Prestations\"\n    }, {\n      cardColor: \"secondary\",\n      imageIcon: require(\"../ServiceAllocation/Icone/tasks-icon.png\"),\n      title: allocationServicesList.length,\n      subTitle: \"Affectations\"\n    }, {\n      cardColor: \"info\",\n      imageIcon: require(\"../ServiceAllocation/Icone/teams-icon.png\"),\n      title: this.state.studentList.length,\n      subTitle: \"Inscrit\"\n    }, {\n      cardColor: \"warning\",\n      imageIcon: require(\"../ServiceAllocation/Icone/files-icon.png\"),\n      title: serviceAllocated.length,\n      subTitle: \"Prestations affectÃ©es\"\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard animated slideInUpTiny animation-duration-3\",\n      style: {\n        marginLeft: \"5%\",\n        marginRight: \"4%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }, detailCards.map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconWithTextCard, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }))), this.props.successStatus ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \"))) : \"\", this.props.errorStatus ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, \" \", this.props.message, \" \"))) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row col-lg-12 col-md-12\",\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-1 col-lg-1 col-md-2 col-sm-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"classLevel\",\n      name: \"classLevel\",\n      select: true,\n      value: this.state.idClasse,\n      onChange: this.handleChangeLevel(\"classLevel\"),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.note.niveau`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 24\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    }, classLevels.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }\n    }, option.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-1 col-lg-1 col-md-2 col-sm-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"idClasse\",\n      name: \"idClasse\",\n      select: true,\n      value: this.state.idClasse,\n      onChange: this.handleChangeClass(\"idClasse\"),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.note.class`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 24\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }\n    }, classesList.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 19\n      }\n    }, option.name)))), this.state.sectionStatus && this.props.classLevels[0].estab_type_id !== idHighSchool ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-1 col-lg-1 col-md-2 col-sm-2 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"idSection\",\n      name: \"idSection\",\n      select: true,\n      value: this.state.idSection,\n      onChange: this.handleChangeSection(\"idSection\"),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.class.level.input.label.section`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, sections.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }, option.name_FR)))) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-2 col-lg-2 col-md-6 col-sm-6 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"schoolYearsV2\",\n      name: \"schoolYearsV2\",\n      select: true,\n      value: this.state.idSchoolYearsV2,\n      onChange: this.handleChange(\"idSchoolYearsV2\"),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `filter.school.years`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 24\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 15\n      }\n    }, schoolYearsV2.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }, option.name_school_year)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-6 col-lg-6 col-md-4 col-sm-4 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"newAllocation\",\n      style: {\n        color: \"#0000FF\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 15\n      }\n    }, \"Nouvelle Affectation\")), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      name: \"newAllocation\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"Add\",\n      onClick: this.openAddModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 15\n      }\n    }, this.state.open ? /*#__PURE__*/React.createElement(RemoveSharpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 36\n      }\n    }) : /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 58\n      }\n    })))), this.state.open ? /*#__PURE__*/React.createElement(AddAllocationService, {\n      services: services,\n      studentList: this.state.studentList,\n      openAddModal: this.openAddModal,\n      establishmentId: this.props.userProfile.establishment_id,\n      allocationService: allocationServicesList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(ListServiceAllocation, {\n      allocationService: allocationServicesList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    services: state.service.servicesV2,\n    classLevels: state.ClassLevels.remoteLevels,\n    classes: state.classes,\n    sections: state.classSections.remoteSections,\n    allocationService: state.allocationService.allocationServiceList,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message\n  };\n};\n\nexport default connect(mapStateToProps)(ServiceAllocation);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/ServiceAllocation/ServiceAllocation.js"],"names":["React","IntlMessages","connect","IconWithTextCard","TextField","classService","RemoveSharpIcon","AddIcon","Fab","ListServiceAllocation","AddAllocationService","MenuItem","InputLabel","getServiceV2","getLevelByEstablishmentId","getClassesByEstablishmentId","getSubjectsByEstablishmentId","getAllocationServiceByEstablishment","_","UncontrolledAlert","idHighSchool","ServiceAllocation","Component","constructor","props","handleChange","name","event","allocationServerFiltred","allocationService","filter","element","services","service_v2","fk_id_schol_year_v2","target","value","setState","allocationServicesList","handleChangeSection","Class","section_id","handleChangeClass","id","handleChangeLevel","level","classesListFiltred","classes","level_id","classesList","apiEndpoint","localStorage","token","get","then","response","sections","data","state","open","studentList","classLevel","schoolYearsV2","sectionStatus","idSection","idClasse","idSchoolYearsV2","openAddModal","bind","componentWillMount","establishmentId","userProfile","establishment_id","dispatch","componentDidMount","res","students","componentDidUpdate","prevProps","prevState","classLevels","previousState","render","allserviceAllocated","map","index","push","flat","serviceAllocated","intersectionWith","a","b","fk_id_service","detailCards","cardColor","imageIcon","require","title","length","subTitle","marginLeft","marginRight","successStatus","message","errorStatus","display","alignItems","disableUnderline","option","estab_type_id","name_FR","name_school_year","color","mapStateToProps","auth","service","servicesV2","ClassLevels","remoteLevels","classSections","remoteSections","allocationServiceList","alert","success","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport { connect } from \"react-redux\";\nimport IconWithTextCard from \"../ServiceAllocation/ServiceAllocationComp/IconWithTextCard\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { classService } from \"../../../../../_services/class.service\";\nimport RemoveSharpIcon from \"@material-ui/icons/RemoveSharp\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport ListServiceAllocation from \"./ListServiceAllocation\";\nimport AddAllocationService from \"./AddAllocationService\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { getServiceV2 } from \"../../../../../actions/ServiceAction\";\nimport { getLevelByEstablishmentId } from \"../../../../../actions/classLevelAction\";\nimport { getClassesByEstablishmentId } from \"../../../../../actions/classeAction\";\nimport { getSubjectsByEstablishmentId } from \"../../../../../actions/subjectAction\";\nimport { getAllocationServiceByEstablishment } from \"../../../../../actions/AllocationServiceAction\";\nimport _ from \"lodash\";\nimport { UncontrolledAlert } from \"reactstrap\";\n\nconst idHighSchool = 2;\n\nclass ServiceAllocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      studentList: [],\n      classesList: [],\n      classLevel: 0,\n      sections: [],\n      schoolYearsV2: [],\n      allocationServicesList: [],\n      sectionStatus: false,\n      idSection: \"\",\n      idClasse: \"\",\n      idSchoolYearsV2: \"\",\n    };\n    this.openAddModal = this.openAddModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeLevel = this.handleChangeLevel.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSection = this.handleChangeSection.bind(this);\n  }\n\n  handleChange = (name) => (event) => {\n    let allocationServerFiltred = this.props.allocationService.filter(\n      (element) =>\n        element.services[0].service_v2.fk_id_schol_year_v2 ===\n        event.target.value\n    );\n    this.setState({\n      [name]: event.target.value,\n      allocationServicesList: allocationServerFiltred,\n    });\n  };\n\n  handleChangeSection = (name) => (event) => {\n    let allocationServerFiltred = this.props.allocationService.filter(\n      (element) => element.Class.section_id === event.target.value\n    );\n    this.setState({\n      [name]: event.target.value,\n      allocationServicesList: allocationServerFiltred,\n    });\n  };\n\n  handleChangeClass = (name) => (event) => {\n    let allocationServerFiltred = this.props.allocationService.filter(\n      (element) => element.Class.id === event.target.value\n    );\n    this.setState({\n      [name]: event.target.value,\n      allocationServicesList: allocationServerFiltred,\n    });\n  };\n\n  handleChangeLevel = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    let allocationServerFiltred = this.props.allocationService.filter(\n      (element) => element.level.id === event.target.value\n    );\n    let classesListFiltred = this.props.classes.filter(\n      (element) => element.level_id === event.target.value\n    );\n    this.setState({\n      allocationServicesList: allocationServerFiltred,\n      classesList: classesListFiltred,\n    });\n    let apiEndpoint = `/section_by_levels?access_token=${localStorage.token}&filter[where][level_id]=${event.target.value}`;\n    classService.get(apiEndpoint).then((response) => {\n      this.setState({ sections: response.data });\n    });\n  };\n\n  componentWillMount() {\n    const establishmentId = this.props.userProfile.establishment_id;\n    this.props.dispatch(getServiceV2(this.props.userProfile.establishment_id));\n    this.props.dispatch(\n      getAllocationServiceByEstablishment(\n        this.props.userProfile.establishment_id\n      )\n    );\n    this.props.dispatch(getLevelByEstablishmentId(establishmentId));\n  }\n  componentDidMount() {\n    let apiEndpoint = \"\";\n    const establishmentId = this.props.userProfile.establishment_id;\n    apiEndpoint = `/students/fetchStudentByEstablishmentId/${this.props.userProfile.establishment_id}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then((res) => {\n      if (res) {\n        this.setState({ studentList: res.data.students });\n      }\n    });\n\n    apiEndpoint = `/school_years_v2?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then((res) => {\n      if (res) {\n        this.setState({ schoolYearsV2: res.data });\n      }\n    });\n\n    this.props.dispatch(getClassesByEstablishmentId(establishmentId));\n    this.props.dispatch(getSubjectsByEstablishmentId(establishmentId));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.classes !== this.props.classes) {\n      this.setState({\n        classesList: this.props.classes,\n      });\n    }\n    if (prevProps.allocationService !== this.props.allocationService) {\n      this.setState({\n        allocationServicesList: this.props.allocationService,\n      });\n    }\n\n    if (prevProps.classLevels !== this.props.classLevels) {\n      this.setState({\n        sectionStatus: true,\n      });\n    }\n  }\n\n  openAddModal() {\n    this.setState((previousState) => ({\n      open: !previousState.open,\n    }));\n  }\n\n  render() {\n    let { services, classLevels } = this.props;\n    let {\n      classesList,\n      sections,\n      schoolYearsV2,\n      allocationServicesList,\n    } = this.state;\n    let allserviceAllocated = [];\n    allocationServicesList.map((data, index) =>\n      allserviceAllocated.push(data.services)\n    );\n    allserviceAllocated = allserviceAllocated.flat();\n    let serviceAllocated = _.intersectionWith(\n      services,\n      allserviceAllocated,\n      (a, b) => a.id == b.fk_id_service\n    );\n\n    let detailCards = [\n      {\n        cardColor: \"primary\",\n        imageIcon: require(\"../ServiceAllocation/Icone/project-icon.png\"),\n        title: services.length,\n        subTitle: \"Prestations\",\n      },\n      {\n        cardColor: \"secondary\",\n        imageIcon: require(\"../ServiceAllocation/Icone/tasks-icon.png\"),\n        title: allocationServicesList.length,\n        subTitle: \"Affectations\",\n      },\n      {\n        cardColor: \"info\",\n        imageIcon: require(\"../ServiceAllocation/Icone/teams-icon.png\"),\n        title: this.state.studentList.length,\n        subTitle: \"Inscrit\",\n      },\n      {\n        cardColor: \"warning\",\n        imageIcon: require(\"../ServiceAllocation/Icone/files-icon.png\"),\n        title: serviceAllocated.length,\n        subTitle: \"Prestations affectÃ©es\",\n      },\n    ];\n\n    return (\n      <div\n        className=\"dashboard animated slideInUpTiny\n      animation-duration-3\"\n        style={{\n          marginLeft: \"5%\",\n          marginRight: \"4%\",\n        }}\n      >\n        <div className=\"row col-lg-12 col-md-12\">\n          {detailCards.map((data, index) => (\n            <div\n              key={index}\n              className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\"\n            >\n              <IconWithTextCard data={data} />\n            </div>\n          ))}\n          {this.props.successStatus ? (\n            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n              <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {this.props.errorStatus ? (\n            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n              <UncontrolledAlert className=\"alert-addon-card bg-danger bg-danger text-white shadow-lg\">\n                <span className=\"icon-addon alert-addon\">\n                  <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                </span>\n                <span className=\"d-inline-block\"> {this.props.message} </span>\n              </UncontrolledAlert>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div\n            className=\"row col-lg-12 col-md-12\"\n            style={{ display: \"flex\", alignItems: \"center\" }}\n          >\n            <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-2 col-12\">\n              <TextField\n                id=\"classLevel\"\n                name=\"classLevel\"\n                select\n                value={this.state.idClasse}\n                onChange={this.handleChangeLevel(\"classLevel\")}\n                SelectProps={{}}\n                label={<IntlMessages id={`components.note.niveau`} />}\n                InputProps={{ disableUnderline: true }}\n                margin=\"normal\"\n                fullWidth\n              >\n                {classLevels.map((option) => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n            <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-2 col-12\">\n              <TextField\n                id=\"idClasse\"\n                name=\"idClasse\"\n                select\n                value={this.state.idClasse}\n                onChange={this.handleChangeClass(\"idClasse\")}\n                SelectProps={{}}\n                label={<IntlMessages id={`components.note.class`} />}\n                InputProps={{ disableUnderline: true }}\n                margin=\"normal\"\n                fullWidth\n              >\n                {classesList.map((option) => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n            {this.state.sectionStatus &&\n            this.props.classLevels[0].estab_type_id !== idHighSchool ? (\n              <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-2 col-12\">\n                <TextField\n                  id=\"idSection\"\n                  name=\"idSection\"\n                  select\n                  value={this.state.idSection}\n                  onChange={this.handleChangeSection(\"idSection\")}\n                  SelectProps={{}}\n                  label={\n                    <IntlMessages\n                      id={`components.class.level.input.label.section`}\n                    />\n                  }\n                  InputProps={{ disableUnderline: true }}\n                  margin=\"normal\"\n                  fullWidth\n                >\n                  {sections.map((option) => (\n                    <MenuItem key={option.id} value={option.id}>\n                      {option.name_FR}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"col-xl-2 col-lg-2 col-md-6 col-sm-6 col-12\">\n              <TextField\n                id=\"schoolYearsV2\"\n                name=\"schoolYearsV2\"\n                select\n                value={this.state.idSchoolYearsV2}\n                onChange={this.handleChange(\"idSchoolYearsV2\")}\n                SelectProps={{}}\n                label={<IntlMessages id={`filter.school.years`} />}\n                InputProps={{ disableUnderline: true }}\n                margin=\"normal\"\n                fullWidth\n              >\n                {schoolYearsV2.map((option) => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.name_school_year}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n            <div className=\"col-xl-6 col-lg-6 col-md-4 col-sm-4 col-12\"></div>\n            <div>\n              <InputLabel htmlFor=\"newAllocation\" style={{ color: \"#0000FF\" }}>\n                Nouvelle Affectation\n              </InputLabel>\n            </div>\n            &nbsp;&nbsp;&nbsp;\n            <div>\n              <Fab\n                name=\"newAllocation\"\n                size=\"small\"\n                color=\"primary\"\n                aria-label=\"Add\"\n                onClick={this.openAddModal}\n              >\n                {this.state.open ? <RemoveSharpIcon /> : <AddIcon />}\n              </Fab>\n            </div>\n          </div>\n\n          {this.state.open ? (\n            <AddAllocationService\n              services={services}\n              studentList={this.state.studentList}\n              openAddModal={this.openAddModal}\n              establishmentId={this.props.userProfile.establishment_id}\n              allocationService={allocationServicesList}\n            />\n          ) : (\n            \"\"\n          )}\n          <ListServiceAllocation allocationService={allocationServicesList} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.auth.userProfile,\n    services: state.service.servicesV2,\n    classLevels: state.ClassLevels.remoteLevels,\n    classes: state.classes,\n    sections: state.classSections.remoteSections,\n    allocationService: state.allocationService.allocationServiceList,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n  };\n};\n\nexport default connect(mapStateToProps)(ServiceAllocation);\n"]},"metadata":{},"sourceType":"module"}