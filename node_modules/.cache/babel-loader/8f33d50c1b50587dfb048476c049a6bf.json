{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Mail/Mail.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport folders from './data/folders';\nimport filters from './data/filters';\nimport labels from './data/labels';\nimport options from './data/options';\nimport MailList from '../../../components/mail/MailList';\nimport ComposeMail from '../../../components/mail/Compose';\nimport MailDetail from '../../../components/mail/MailDetail/index';\nimport { fetchMails, getAllMail, getImportantMail, getMailNavFilters, getMailNavLabels, getNavFolders, getReadMail, getStarredMail, getUnimportantMail, getUnreadMail, getUnselectedAllMail, getUnStarredMail, handleMailRequestClose, hideMailLoader, onAllMailSelect, onComposeMail, onDeleteMail, onFolderMenuItemSelect, onFolderSelect, onImportantSelect, onMailChecked, onMailLabelMenuItemSelect, onMailLabelSelect, onMailOptionMenuSelect, onMailSelect, onMailSend, onMailToggleDrawer, onOptionMenuItemSelect, onSearchMail, onStartSelect, setCurrentMailNull, updateMailSearch } from '../../../actions/Mail';\nimport IntlMessages from '../../../util/IntlMessages';\nimport CustomScrollbars from '../../../util/CustomScrollbars';\n\nclass Mail extends Component {\n  getName(id) {\n    this.props.getNameSender(id);\n  }\n\n  constructor() {\n    super();\n\n    this.MailSideBar = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-side-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-email mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"mail.mailbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-side-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CustomScrollbars, {\n        className: \"module-side-scroll scrollbar\",\n        style: {\n          height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-add-task\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"btn-block\",\n        onClick: () => {\n          this.props.onComposeMail();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-edit mr-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"mail.compose\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }), ' ')), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"module-nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, this.getNavFolders()))));\n    };\n\n    this.onDeleteMail = () => {\n      this.props.onDeleteMail();\n    };\n\n    this.getNavFolders = () => {\n      return folders.map((folder, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          this.props.getNavFolders(folder);\n          setTimeout(() => {\n            this.props.hideMailLoader();\n          }, 1500);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: `jr-link ${this.props.selectedFolder === folder.id ? 'active' : ''}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `zmdi zmdi-${folder.icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, folder.title))));\n    };\n\n    this.onFolderMenuItemSelect = folderId => {\n      this.props.handleMailRequestClose();\n      this.props.onFolderMenuItemSelect(folderId);\n    };\n\n    this.onLabelMenuItemSelect = label => {\n      this.props.handleMailRequestClose();\n      this.props.onMailLabelMenuItemSelect(label);\n    };\n\n    this.handleRequestClose = () => {\n      this.props.handleMailRequestClose();\n    };\n\n    this.getNavFilters = () => {\n      return filters.map((filter, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"jr-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `zmdi zmdi-${filter.icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      }, filter.title))));\n    };\n\n    this.onFolderSelect = event => {\n      this.props.onFolderSelect();\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.onLabelSelect = event => {\n      this.props.onMailLabelSelect();\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.onOptionMenuSelect = event => {\n      this.props.onMailOptionMenuSelect();\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.onOptionMenuItemSelect = option => {\n      switch (option.title) {\n        case 'All':\n          this.props.handleMailRequestClose();\n          this.props.getAllMail();\n          break;\n\n        case 'None':\n          this.props.handleMailRequestClose();\n          this.props.getUnselectedAllMail();\n          break;\n\n        case 'Read':\n          this.props.handleMailRequestClose();\n          this.props.getReadMail();\n          break;\n\n        case 'Unread':\n          this.props.handleMailRequestClose();\n          this.props.getUnreadMail();\n          break;\n\n        case 'Starred':\n          this.props.handleMailRequestClose();\n          this.props.getStarredMail();\n          break;\n\n        case 'Unstarred':\n          this.props.handleMailRequestClose();\n          this.props.getUnStarredMail();\n          break;\n\n        case 'Important':\n          this.props.handleMailRequestClose();\n          this.props.getImportantMail();\n          break;\n\n        case 'Unimportant':\n          this.props.handleMailRequestClose();\n          this.props.getUnimportantMail();\n          break;\n\n        default:\n          this.props.handleMailRequestClose();\n          this.props.getAllMail();\n      }\n    };\n\n    this.getAllMail = () => {\n      this.props.getAllMail();\n    };\n\n    this.getUnselectedAllMail = () => {\n      this.props.getUnselectedAllMail();\n    };\n\n    this.getReadMail = () => {\n      this.props.getReadMail();\n    };\n\n    this.getUnreadMail = () => {\n      this.props.getUnreadMail();\n    };\n\n    this.getStarredMail = () => {\n      this.props.getStarredMail();\n    };\n\n    this.getUnStarredMail = () => {\n      this.props.getUnStarredMail();\n    };\n\n    this.getImportantMail = () => {\n      this.props.getImportantMail();\n    };\n\n    this.getUnimportantMail = () => {\n      this.props.getUnimportantMail();\n    };\n\n    this.getNavLabels = () => {\n      return labels.map((label, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"jr-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `zmdi zmdi-label-alt text-${label.color}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }\n      }, label.title))));\n    };\n\n    this.searchMail = searchText => {\n      this.props.onSearchMail(searchText);\n    };\n\n    this.displayMail = (currentMail, folderMails, noContentFoundMessage) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-box-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 7\n        }\n      }, currentMail === null ? folderMails.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        style: {\n          height: this.props.width >= 1200 ? 'calc(100vh - 265px)' : 'calc(100vh - 245px)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }, noContentFoundMessage) : /*#__PURE__*/React.createElement(MailList, {\n        mails: folderMails,\n        onStartSelect: this.onStartSelect.bind(this),\n        onMailSelect: this.onMailSelect.bind(this),\n        width: this.props.width,\n        onMailChecked: this.onMailChecked.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(MailDetail, {\n        mail: currentMail,\n        onStartSelect: this.onStartSelect.bind(this),\n        onMailSend: this.onMailSend.bind(this),\n        width: this.props.width,\n        onImportantSelect: this.onImportantSelect.bind(this),\n        user: this.props.user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }\n      }));\n    };\n\n    this.getMailActions = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.onFolderSelect.bind(this),\n        className: \"icon-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-folder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.onDeleteMail.bind(this),\n        className: \"icon-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.onLabelSelect.bind(this),\n        className: \"icon-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-label-alt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    this.state = {\n      anchorEl: null\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchMails();\n  }\n\n  onMailChecked(data) {\n    this.props.onMailChecked(data);\n  }\n\n  onAllMailSelect() {\n    const selectAll = this.props.selectedMails <= this.props.folderMails.length;\n\n    if (selectAll) {\n      this.getAllMail();\n    } else {\n      this.getUnselectedAllMail();\n    }\n  }\n\n  onStartSelect(data) {\n    this.props.onStartSelect(data);\n  }\n\n  onImportantSelect(data) {\n    this.props.onImportantSelect(data);\n  }\n\n  onMailSend(data) {\n    this.props.onMailSend(data);\n  }\n\n  onMailSelect(mail) {\n    this.props.onMailSelect(mail);\n    setTimeout(() => {\n      this.props.hideMailLoader();\n    }, 1500);\n  }\n\n  updateSearch(evt) {\n    this.props.updateMailSearch(evt.target.value);\n    this.props.onSearchMail(evt.target.value);\n  }\n\n  onToggleDrawer() {\n    this.props.onMailToggleDrawer();\n  }\n\n  render() {\n    const {\n      selectedMails,\n      loader,\n      currentMail,\n      folderMails,\n      composeMail,\n      user,\n      alertMessage,\n      showMessage,\n      noContentFoundMessage\n    } = this.props;\n    console.log(folderMails);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated slideInUpTiny animation-duration-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-module\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-block d-xl-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Drawer, {\n      open: this.props.drawerState,\n      onClose: this.onToggleDrawer.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 15\n      }\n    }, this.MailSideBar())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-module-sidenav d-none d-xl-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }\n    }, this.MailSideBar()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-box-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: \"drawer-btn d-block d-xl-none\",\n      \"aria-label\": \"Menu\",\n      onClick: this.onToggleDrawer.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-box-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-box-topbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }\n    }, this.props.currentMail === null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      onClick: this.onOptionMenuSelect.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"px-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 25\n      }\n    }, \" \", this.props.optionName), /*#__PURE__*/React.createElement(IconButton, {\n      className: \"icon-btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-caret-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 27\n      }\n    })))) : /*#__PURE__*/React.createElement(IconButton, {\n      className: \"icon-btn\",\n      onClick: () => {\n        this.props.setCurrentMailNull();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-arrow-back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 23\n      }\n    })), selectedMails > 0 && this.getMailActions(), /*#__PURE__*/React.createElement(Menu, {\n      id: \"option-menu\",\n      anchorEl: this.state.anchorEl,\n      open: false,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 19\n      }\n    }, options.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.title,\n      onClick: this.onOptionMenuItemSelect.bind(this, option),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 23\n      }\n    }, option.title))), /*#__PURE__*/React.createElement(Menu, {\n      id: \"folder-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.props.folderMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 19\n      }\n    }, folders.map(folder => /*#__PURE__*/React.createElement(MenuItem, {\n      key: folder.id,\n      onClick: this.onFolderMenuItemSelect.bind(this, folder.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 23\n      }\n    }, folder.title))), /*#__PURE__*/React.createElement(Menu, {\n      id: \"label-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.props.labelMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 19\n      }\n    }, labels.map(label => /*#__PURE__*/React.createElement(MenuItem, {\n      key: label.id,\n      onClick: this.onLabelMenuItemSelect.bind(this, label),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 23\n      }\n    }, label.title)))), loader ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader-view\",\n      style: {\n        height: this.props.width >= 1200 ? 'calc(100vh - 265px)' : 'calc(100vh - 245px)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 21\n      }\n    })) : this.displayMail(currentMail, folderMails, noContentFoundMessage), /*#__PURE__*/React.createElement(ComposeMail, {\n      open: composeMail,\n      user: user,\n      subjectReply: '',\n      emailReplay: '',\n      onClose: this.handleRequestClose.bind(this),\n      onMailSend: this.onMailSend.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: showMessage,\n      autoHideDuration: 3000,\n      onClose: this.handleRequestClose,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: /*#__PURE__*/React.createElement(\"span\", {\n        id: \"message-id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 22\n        }\n      }, alertMessage),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  mail,\n  settings\n}) => {\n  const {\n    width\n  } = settings;\n  const {\n    searchMail,\n    noContentFoundMessage,\n    alertMessage,\n    showMessage,\n    drawerState,\n    anchorEl,\n    allMail,\n    optionName,\n    loader,\n    currentMail,\n    user,\n    selectedMails,\n    selectedFolder,\n    composeMail,\n    labelMenuState,\n    folderMenuState,\n    optionMenuState,\n    folderMails\n  } = mail;\n  return {\n    width,\n    searchMail,\n    noContentFoundMessage,\n    alertMessage,\n    showMessage,\n    drawerState,\n    anchorEl,\n    allMail,\n    optionName,\n    loader,\n    currentMail,\n    user,\n    selectedMails,\n    selectedFolder,\n    composeMail,\n    labelMenuState,\n    folderMenuState,\n    optionMenuState,\n    folderMails\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllMail,\n  fetchMails,\n  getImportantMail,\n  getMailNavFilters,\n  getMailNavLabels,\n  getNavFolders,\n  getReadMail,\n  getStarredMail,\n  getUnimportantMail,\n  getUnreadMail,\n  getUnselectedAllMail,\n  getUnStarredMail,\n  handleMailRequestClose,\n  hideMailLoader,\n  onAllMailSelect,\n  onComposeMail,\n  onDeleteMail,\n  onFolderMenuItemSelect,\n  onFolderSelect,\n  onImportantSelect,\n  onMailChecked,\n  onMailLabelMenuItemSelect,\n  onMailLabelSelect,\n  onMailOptionMenuSelect,\n  onMailSelect,\n  onMailSend,\n  onMailToggleDrawer,\n  onOptionMenuItemSelect,\n  onSearchMail,\n  onStartSelect,\n  setCurrentMailNull,\n  updateMailSearch\n})(Mail);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Mail/Mail.js"],"names":["React","Component","connect","Button","Drawer","Snackbar","IconButton","Menu","MenuItem","CircularProgress","folders","filters","labels","options","MailList","ComposeMail","MailDetail","fetchMails","getAllMail","getImportantMail","getMailNavFilters","getMailNavLabels","getNavFolders","getReadMail","getStarredMail","getUnimportantMail","getUnreadMail","getUnselectedAllMail","getUnStarredMail","handleMailRequestClose","hideMailLoader","onAllMailSelect","onComposeMail","onDeleteMail","onFolderMenuItemSelect","onFolderSelect","onImportantSelect","onMailChecked","onMailLabelMenuItemSelect","onMailLabelSelect","onMailOptionMenuSelect","onMailSelect","onMailSend","onMailToggleDrawer","onOptionMenuItemSelect","onSearchMail","onStartSelect","setCurrentMailNull","updateMailSearch","IntlMessages","CustomScrollbars","Mail","getName","id","props","getNameSender","constructor","MailSideBar","height","width","map","folder","index","setTimeout","selectedFolder","icon","title","folderId","onLabelMenuItemSelect","label","handleRequestClose","getNavFilters","filter","event","setState","anchorEl","currentTarget","onLabelSelect","onOptionMenuSelect","option","getNavLabels","color","searchMail","searchText","displayMail","currentMail","folderMails","noContentFoundMessage","length","bind","user","getMailActions","state","componentWillMount","data","selectAll","selectedMails","mail","updateSearch","evt","target","value","onToggleDrawer","render","loader","composeMail","alertMessage","showMessage","console","log","drawerState","optionName","style","folderMenuState","labelMenuState","vertical","horizontal","mapStateToProps","settings","allMail","optionMenuState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AAEA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,SACEC,UADF,EAEEC,UAFF,EAGEC,gBAHF,EAIEC,iBAJF,EAKEC,gBALF,EAMEC,aANF,EAOEC,WAPF,EAQEC,cARF,EASEC,kBATF,EAUEC,aAVF,EAWEC,oBAXF,EAYEC,gBAZF,EAaEC,sBAbF,EAcEC,cAdF,EAeEC,eAfF,EAgBEC,aAhBF,EAiBEC,YAjBF,EAkBEC,sBAlBF,EAmBEC,cAnBF,EAoBEC,iBApBF,EAqBEC,aArBF,EAsBEC,yBAtBF,EAuBEC,iBAvBF,EAwBEC,sBAxBF,EAyBEC,YAzBF,EA0BEC,UA1BF,EA2BEC,kBA3BF,EA4BEC,sBA5BF,EA6BEC,YA7BF,EA8BEC,aA9BF,EA+BEC,kBA/BF,EAgCEC,gBAhCF,QAiCO,uBAjCP;AAkCA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;AAEA,MAAMC,IAAN,SAAmBlD,SAAnB,CAA6B;AAoM3BmD,EAAAA,OAAO,CAACC,EAAD,EAAK;AACV,SAAKC,KAAL,CAAWC,aAAX,CAAyBF,EAAzB;AACD;;AA2EDG,EAAAA,WAAW,GAAG;AACZ;;AADY,SAhRdC,WAgRc,GAhRA,MAAM;AAClB,0BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF,CADF,eAUE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,gBAAD;AACE,QAAA,SAAS,EAAC,8BADZ;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EACJ,KAAKJ,KAAL,CAAWK,KAAX,IAAoB,IAApB,GACI,qBADJ,GAEI;AAJD,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,SAAS,EAAC,WAHZ;AAIE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKL,KAAL,CAAWtB,aAAX;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,eASE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EASqC,GATrC,CADF,CATF,eAuBE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,aAAL,EADH,CAvBF,CADF,CAVF,CADF;AAsDD,KAyNa;;AAAA,SAvNdW,YAuNc,GAvNC,MAAM;AACnB,WAAKqB,KAAL,CAAWrB,YAAX;AACD,KAqNa;;AAAA,SApNdX,aAoNc,GApNE,MAAM;AACpB,aAAOZ,OAAO,CAACkD,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACjB;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKR,KAAL,CAAWhC,aAAX,CAAyBuC,MAAzB;AACAE,UAAAA,UAAU,CAAC,MAAM;AACf,iBAAKT,KAAL,CAAWxB,cAAX;AACD,WAFS,EAEP,IAFO,CAAV;AAGD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASE;AACE,QAAA,SAAS,EAAG,WACV,KAAKwB,KAAL,CAAWU,cAAX,KAA8BH,MAAM,CAACR,EAArC,GAA0C,QAA1C,GAAqD,EACtD,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAG,QAAA,SAAS,EAAG,aAAYQ,MAAM,CAACI,IAAK,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOJ,MAAM,CAACK,KAAd,CANF,CATF,CADK,CAAP;AAoBD,KA+La;;AAAA,SA9LdhC,sBA8Lc,GA9LWiC,QAAQ,IAAI;AACnC,WAAKb,KAAL,CAAWzB,sBAAX;AACA,WAAKyB,KAAL,CAAWpB,sBAAX,CAAkCiC,QAAlC;AACD,KA2La;;AAAA,SA1LdC,qBA0Lc,GA1LUC,KAAK,IAAI;AAC/B,WAAKf,KAAL,CAAWzB,sBAAX;AACA,WAAKyB,KAAL,CAAWhB,yBAAX,CAAqC+B,KAArC;AACD,KAuLa;;AAAA,SAtLdC,kBAsLc,GAtLO,MAAM;AACzB,WAAKhB,KAAL,CAAWzB,sBAAX;AACD,KAoLa;;AAAA,SAnLd0C,aAmLc,GAnLE,MAAM;AACpB,aAAO5D,OAAO,CAACiD,GAAR,CAAY,CAACY,MAAD,EAASV,KAAT,kBACjB;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAG,aAAYU,MAAM,CAACP,IAAK,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOO,MAAM,CAACN,KAAd,CAFF,CADF,CADK,CAAP;AAQD,KA0Ka;;AAAA,SAxKd/B,cAwKc,GAxKGsC,KAAK,IAAI;AACxB,WAAKnB,KAAL,CAAWnB,cAAX;AACA,WAAKuC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAEF,KAAK,CAACG;AADJ,OAAd;AAGD,KAmKa;;AAAA,SAlKdC,aAkKc,GAlKEJ,KAAK,IAAI;AACvB,WAAKnB,KAAL,CAAWf,iBAAX;AACA,WAAKmC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAEF,KAAK,CAACG;AADJ,OAAd;AAGD,KA6Ja;;AAAA,SA5JdE,kBA4Jc,GA5JOL,KAAK,IAAI;AAC5B,WAAKnB,KAAL,CAAWd,sBAAX;AACA,WAAKkC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAEF,KAAK,CAACG;AADJ,OAAd;AAGD,KAuJa;;AAAA,SAtJdhC,sBAsJc,GAtJWmC,MAAM,IAAI;AACjC,cAAQA,MAAM,CAACb,KAAf;AACE,aAAK,KAAL;AACE,eAAKZ,KAAL,CAAWzB,sBAAX;AACA,eAAKyB,KAAL,CAAWpC,UAAX;AACA;;AACF,aAAK,MAAL;AACE,eAAKoC,KAAL,CAAWzB,sBAAX;AACA,eAAKyB,KAAL,CAAW3B,oBAAX;AACA;;AACF,aAAK,MAAL;AACE,eAAK2B,KAAL,CAAWzB,sBAAX;AACA,eAAKyB,KAAL,CAAW/B,WAAX;AACA;;AACF,aAAK,QAAL;AACE,eAAK+B,KAAL,CAAWzB,sBAAX;AACA,eAAKyB,KAAL,CAAW5B,aAAX;AACA;;AACF,aAAK,SAAL;AACE,eAAK4B,KAAL,CAAWzB,sBAAX;AACA,eAAKyB,KAAL,CAAW9B,cAAX;AACA;;AACF,aAAK,WAAL;AACE,eAAK8B,KAAL,CAAWzB,sBAAX;AACA,eAAKyB,KAAL,CAAW1B,gBAAX;AACA;;AACF,aAAK,WAAL;AACE,eAAK0B,KAAL,CAAWzB,sBAAX;AACA,eAAKyB,KAAL,CAAWnC,gBAAX;AACA;;AACF,aAAK,aAAL;AACE,eAAKmC,KAAL,CAAWzB,sBAAX;AACA,eAAKyB,KAAL,CAAW7B,kBAAX;AACA;;AACF;AACE,eAAK6B,KAAL,CAAWzB,sBAAX;AACA,eAAKyB,KAAL,CAAWpC,UAAX;AAnCJ;AAqCD,KAgHa;;AAAA,SA/GdA,UA+Gc,GA/GD,MAAM;AACjB,WAAKoC,KAAL,CAAWpC,UAAX;AACD,KA6Ga;;AAAA,SA5GdS,oBA4Gc,GA5GS,MAAM;AAC3B,WAAK2B,KAAL,CAAW3B,oBAAX;AACD,KA0Ga;;AAAA,SAzGdJ,WAyGc,GAzGA,MAAM;AAClB,WAAK+B,KAAL,CAAW/B,WAAX;AACD,KAuGa;;AAAA,SAtGdG,aAsGc,GAtGE,MAAM;AACpB,WAAK4B,KAAL,CAAW5B,aAAX;AACD,KAoGa;;AAAA,SAnGdF,cAmGc,GAnGG,MAAM;AACrB,WAAK8B,KAAL,CAAW9B,cAAX;AACD,KAiGa;;AAAA,SAhGdI,gBAgGc,GAhGK,MAAM;AACvB,WAAK0B,KAAL,CAAW1B,gBAAX;AACD,KA8Fa;;AAAA,SA7FdT,gBA6Fc,GA7FK,MAAM;AACvB,WAAKmC,KAAL,CAAWnC,gBAAX;AACD,KA2Fa;;AAAA,SA1FdM,kBA0Fc,GA1FO,MAAM;AACzB,WAAK6B,KAAL,CAAW7B,kBAAX;AACD,KAwFa;;AAAA,SAvFduD,YAuFc,GAvFC,MAAM;AACnB,aAAOpE,MAAM,CAACgD,GAAP,CAAW,CAACS,KAAD,EAAQP,KAAR,kBAChB;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAG,4BAA2BO,KAAK,CAACY,KAAM,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOZ,KAAK,CAACH,KAAb,CAFF,CADF,CADK,CAAP;AAQD,KA8Ea;;AAAA,SAzEdgB,UAyEc,GAzEDC,UAAU,IAAI;AACzB,WAAK7B,KAAL,CAAWT,YAAX,CAAwBsC,UAAxB;AACD,KAuEa;;AAAA,SAtEdC,WAsEc,GAtEA,CAACC,WAAD,EAAcC,WAAd,EAA2BC,qBAA3B,KAAqD;AACjE,0BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,WAAW,KAAK,IAAhB,GACCC,WAAW,CAACE,MAAZ,KAAuB,CAAvB,gBACE;AACE,QAAA,SAAS,EAAC,kDADZ;AAEE,QAAA,KAAK,EAAE;AACL9B,UAAAA,MAAM,EACJ,KAAKJ,KAAL,CAAWK,KAAX,IAAoB,IAApB,GACI,qBADJ,GAEI;AAJD,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASG4B,qBATH,CADF,gBAaE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAED,WADT;AAEE,QAAA,aAAa,EAAE,KAAKxC,aAAL,CAAmB2C,IAAnB,CAAwB,IAAxB,CAFjB;AAGE,QAAA,YAAY,EAAE,KAAKhD,YAAL,CAAkBgD,IAAlB,CAAuB,IAAvB,CAHhB;AAIE,QAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWK,KAJpB;AAKE,QAAA,aAAa,EAAE,KAAKtB,aAAL,CAAmBoD,IAAnB,CAAwB,IAAxB,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdH,gBAuBC,oBAAC,UAAD;AACE,QAAA,IAAI,EAAEJ,WADR;AAEE,QAAA,aAAa,EAAE,KAAKvC,aAAL,CAAmB2C,IAAnB,CAAwB,IAAxB,CAFjB;AAGE,QAAA,UAAU,EAAE,KAAK/C,UAAL,CAAgB+C,IAAhB,CAAqB,IAArB,CAHd;AAIE,QAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWK,KAJpB;AAKE,QAAA,iBAAiB,EAAE,KAAKvB,iBAAL,CAAuBqD,IAAvB,CAA4B,IAA5B,CALrB;AAME,QAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWoC,IANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBJ,CADF;AAoCD,KAiCa;;AAAA,SAhCdC,cAgCc,GAhCG,MAAM;AACrB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE,KAAKxD,cAAL,CAAoBsD,IAApB,CAAyB,IAAzB,CADX;AAEE,QAAA,SAAS,EAAC,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,eAQE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKxD,YAAL,CAAkBwD,IAAlB,CAAuB,IAAvB,CAArB;AAAmD,QAAA,SAAS,EAAC,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARF,eAYE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE,KAAKZ,aAAL,CAAmBY,IAAnB,CAAwB,IAAxB,CADX;AAEE,QAAA,SAAS,EAAC,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAZF,CADF;AA6BD,KAEa;;AAEZ,SAAKG,KAAL,GAAa;AACXjB,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDkB,EAAAA,kBAAkB,GAAG;AACnB,SAAKvC,KAAL,CAAWrC,UAAX;AACD;;AAEDoB,EAAAA,aAAa,CAACyD,IAAD,EAAO;AAClB,SAAKxC,KAAL,CAAWjB,aAAX,CAAyByD,IAAzB;AACD;;AAED/D,EAAAA,eAAe,GAAG;AAChB,UAAMgE,SAAS,GAAG,KAAKzC,KAAL,CAAW0C,aAAX,IAA4B,KAAK1C,KAAL,CAAWgC,WAAX,CAAuBE,MAArE;;AACA,QAAIO,SAAJ,EAAe;AACb,WAAK7E,UAAL;AACD,KAFD,MAEO;AACL,WAAKS,oBAAL;AACD;AACF;;AAEDmB,EAAAA,aAAa,CAACgD,IAAD,EAAO;AAClB,SAAKxC,KAAL,CAAWR,aAAX,CAAyBgD,IAAzB;AACD;;AAED1D,EAAAA,iBAAiB,CAAC0D,IAAD,EAAO;AACtB,SAAKxC,KAAL,CAAWlB,iBAAX,CAA6B0D,IAA7B;AACD;;AAEDpD,EAAAA,UAAU,CAACoD,IAAD,EAAO;AACf,SAAKxC,KAAL,CAAWZ,UAAX,CAAsBoD,IAAtB;AACD;;AAEDrD,EAAAA,YAAY,CAACwD,IAAD,EAAO;AACjB,SAAK3C,KAAL,CAAWb,YAAX,CAAwBwD,IAAxB;AACAlC,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKT,KAAL,CAAWxB,cAAX;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;;AAEDoE,EAAAA,YAAY,CAACC,GAAD,EAAM;AAChB,SAAK7C,KAAL,CAAWN,gBAAX,CAA4BmD,GAAG,CAACC,MAAJ,CAAWC,KAAvC;AACA,SAAK/C,KAAL,CAAWT,YAAX,CAAwBsD,GAAG,CAACC,MAAJ,CAAWC,KAAnC;AACD;;AAEDC,EAAAA,cAAc,GAAG;AACf,SAAKhD,KAAL,CAAWX,kBAAX;AACD;;AACD4D,EAAAA,MAAM,GAAG;AACP,UAAM;AACJP,MAAAA,aADI;AAEJQ,MAAAA,MAFI;AAGJnB,MAAAA,WAHI;AAIJC,MAAAA,WAJI;AAKJmB,MAAAA,WALI;AAMJf,MAAAA,IANI;AAOJgB,MAAAA,YAPI;AAQJC,MAAAA,WARI;AASJpB,MAAAA;AATI,QAUF,KAAKjC,KAVT;AAWAsD,IAAAA,OAAO,CAACC,GAAR,CAAYvB,WAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWwD,WADnB;AAEE,MAAA,OAAO,EAAE,KAAKR,cAAL,CAAoBb,IAApB,CAAyB,IAAzB,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKhC,WAAL,EAJH,CADF,CADF,eASE;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,WAAL,EADH,CATF,eAaE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAC,8BADZ;AAEE,oBAAW,MAFb;AAGE,MAAA,OAAO,EAAE,KAAK6C,cAAL,CAAoBb,IAApB,CAAyB,IAAzB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF,eAcE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnC,KAAL,CAAW+B,WAAX,KAA2B,IAA3B,gBACC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,OAAO,EAAE,KAAKP,kBAAL,CAAwBW,IAAxB,CAA6B,IAA7B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAyB,KAAKnC,KAAL,CAAWyD,UAApC,CAJF,eAKE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CAPF,CADD,gBAmBC,oBAAC,UAAD;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKzD,KAAL,CAAWP,kBAAX;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CApBJ,EA8BGiD,aAAa,GAAG,CAAhB,IAAqB,KAAKL,cAAL,EA9BxB,eAgCE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWjB,QAFvB;AAGE,MAAA,IAAI,EAAE,KAHR;AAIE,MAAA,OAAO,EAAE,KAAKL,kBAJhB;AAKE,MAAA,aAAa,EAAE;AACb0C,QAAAA,KAAK,EAAE;AACLrD,UAAAA,KAAK,EAAE;AADF;AADM,OALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWG9C,OAAO,CAAC+C,GAAR,CAAYmB,MAAM,iBACjB,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,MAAM,CAACb,KADd;AAEE,MAAA,OAAO,EAAE,KAAKtB,sBAAL,CAA4B6C,IAA5B,CAAiC,IAAjC,EAAuCV,MAAvC,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,MAAM,CAACb,KAJV,CADD,CAXH,CAhCF,eAqDE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,QAAQ,EAAE,KAAK0B,KAAL,CAAWjB,QAFvB;AAGE,MAAA,IAAI,EAAE,KAAKrB,KAAL,CAAW2D,eAHnB;AAIE,MAAA,OAAO,EAAE,KAAK3C,kBAJhB;AAKE,MAAA,aAAa,EAAE;AACb0C,QAAAA,KAAK,EAAE;AACLrD,UAAAA,KAAK,EAAE;AADF;AADM,OALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWGjD,OAAO,CAACkD,GAAR,CAAYC,MAAM,iBACjB,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,MAAM,CAACR,EADd;AAEE,MAAA,OAAO,EAAE,KAAKnB,sBAAL,CAA4BuD,IAA5B,CACP,IADO,EAEP5B,MAAM,CAACR,EAFA,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGQ,MAAM,CAACK,KAPV,CADD,CAXH,CArDF,eA4EE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,QAAQ,EAAE,KAAK0B,KAAL,CAAWjB,QAFvB;AAGE,MAAA,IAAI,EAAE,KAAKrB,KAAL,CAAW4D,cAHnB;AAIE,MAAA,OAAO,EAAE,KAAK5C,kBAJhB;AAKE,MAAA,aAAa,EAAE;AACb0C,QAAAA,KAAK,EAAE;AACLrD,UAAAA,KAAK,EAAE;AADF;AADM,OALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWG/C,MAAM,CAACgD,GAAP,CAAWS,KAAK,iBACf,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAAChB,EADb;AAEE,MAAA,OAAO,EAAE,KAAKe,qBAAL,CAA2BqB,IAA3B,CAAgC,IAAhC,EAAsCpB,KAAtC,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,KAAK,CAACH,KAJT,CADD,CAXH,CA5EF,CADF,EAmGGsC,MAAM,gBACL;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,KAAK,EAAE;AACL9C,QAAAA,MAAM,EACJ,KAAKJ,KAAL,CAAWK,KAAX,IAAoB,IAApB,GACI,qBADJ,GAEI;AAJD,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADK,GAaL,KAAKyB,WAAL,CACEC,WADF,EAEEC,WAFF,EAGEC,qBAHF,CAhHJ,eAuHE,oBAAC,WAAD;AACE,MAAA,IAAI,EAAEkB,WADR;AAEE,MAAA,IAAI,EAAEf,IAFR;AAGE,MAAA,YAAY,EAAE,EAHhB;AAIE,MAAA,WAAW,EAAE,EAJf;AAKE,MAAA,OAAO,EAAE,KAAKpB,kBAAL,CAAwBmB,IAAxB,CAA6B,IAA7B,CALX;AAME,MAAA,UAAU,EAAE,KAAK/C,UAAL,CAAgB+C,IAAhB,CAAqB,IAArB,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvHF,CAdF,CAbF,CADF,eA8JE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE;AAAE0B,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OADhB;AAEE,MAAA,IAAI,EAAET,WAFR;AAGE,MAAA,gBAAgB,EAAE,IAHpB;AAIE,MAAA,OAAO,EAAE,KAAKrC,kBAJhB;AAKE,MAAA,YAAY,EAAE;AACZ,4BAAoB;AADR,OALhB;AAQE,MAAA,OAAO,eAAE;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBoC,YAAvB,CARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9JF,CADF,CADF;AA6KD;;AA9f0B;;AAigB7B,MAAMW,eAAe,GAAG,CAAC;AAAEpB,EAAAA,IAAF;AAAQqB,EAAAA;AAAR,CAAD,KAAwB;AAC9C,QAAM;AAAE3D,IAAAA;AAAF,MAAY2D,QAAlB;AACA,QAAM;AACJpC,IAAAA,UADI;AAEJK,IAAAA,qBAFI;AAGJmB,IAAAA,YAHI;AAIJC,IAAAA,WAJI;AAKJG,IAAAA,WALI;AAMJnC,IAAAA,QANI;AAOJ4C,IAAAA,OAPI;AAQJR,IAAAA,UARI;AASJP,IAAAA,MATI;AAUJnB,IAAAA,WAVI;AAWJK,IAAAA,IAXI;AAYJM,IAAAA,aAZI;AAaJhC,IAAAA,cAbI;AAcJyC,IAAAA,WAdI;AAeJS,IAAAA,cAfI;AAgBJD,IAAAA,eAhBI;AAiBJO,IAAAA,eAjBI;AAkBJlC,IAAAA;AAlBI,MAmBFW,IAnBJ;AAqBA,SAAO;AACLtC,IAAAA,KADK;AAELuB,IAAAA,UAFK;AAGLK,IAAAA,qBAHK;AAILmB,IAAAA,YAJK;AAKLC,IAAAA,WALK;AAMLG,IAAAA,WANK;AAOLnC,IAAAA,QAPK;AAQL4C,IAAAA,OARK;AASLR,IAAAA,UATK;AAULP,IAAAA,MAVK;AAWLnB,IAAAA,WAXK;AAYLK,IAAAA,IAZK;AAaLM,IAAAA,aAbK;AAcLhC,IAAAA,cAdK;AAeLyC,IAAAA,WAfK;AAgBLS,IAAAA,cAhBK;AAiBLD,IAAAA,eAjBK;AAkBLO,IAAAA,eAlBK;AAmBLlC,IAAAA;AAnBK,GAAP;AAqBD,CA5CD;;AA8CA,eAAepF,OAAO,CACpBmH,eADoB,EAEpB;AACEnG,EAAAA,UADF;AAEED,EAAAA,UAFF;AAGEE,EAAAA,gBAHF;AAIEC,EAAAA,iBAJF;AAKEC,EAAAA,gBALF;AAMEC,EAAAA,aANF;AAOEC,EAAAA,WAPF;AAQEC,EAAAA,cARF;AASEC,EAAAA,kBATF;AAUEC,EAAAA,aAVF;AAWEC,EAAAA,oBAXF;AAYEC,EAAAA,gBAZF;AAaEC,EAAAA,sBAbF;AAcEC,EAAAA,cAdF;AAeEC,EAAAA,eAfF;AAgBEC,EAAAA,aAhBF;AAiBEC,EAAAA,YAjBF;AAkBEC,EAAAA,sBAlBF;AAmBEC,EAAAA,cAnBF;AAoBEC,EAAAA,iBApBF;AAqBEC,EAAAA,aArBF;AAsBEC,EAAAA,yBAtBF;AAuBEC,EAAAA,iBAvBF;AAwBEC,EAAAA,sBAxBF;AAyBEC,EAAAA,YAzBF;AA0BEC,EAAAA,UA1BF;AA2BEC,EAAAA,kBA3BF;AA4BEC,EAAAA,sBA5BF;AA6BEC,EAAAA,YA7BF;AA8BEC,EAAAA,aA9BF;AA+BEC,EAAAA,kBA/BF;AAgCEC,EAAAA;AAhCF,CAFoB,CAAP,CAoCbG,IApCa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport folders from './data/folders';\nimport filters from './data/filters';\nimport labels from './data/labels';\nimport options from './data/options';\nimport MailList from '../../../components/mail/MailList';\n\nimport ComposeMail from '../../../components/mail/Compose';\nimport MailDetail from '../../../components/mail/MailDetail/index';\nimport {\n  fetchMails,\n  getAllMail,\n  getImportantMail,\n  getMailNavFilters,\n  getMailNavLabels,\n  getNavFolders,\n  getReadMail,\n  getStarredMail,\n  getUnimportantMail,\n  getUnreadMail,\n  getUnselectedAllMail,\n  getUnStarredMail,\n  handleMailRequestClose,\n  hideMailLoader,\n  onAllMailSelect,\n  onComposeMail,\n  onDeleteMail,\n  onFolderMenuItemSelect,\n  onFolderSelect,\n  onImportantSelect,\n  onMailChecked,\n  onMailLabelMenuItemSelect,\n  onMailLabelSelect,\n  onMailOptionMenuSelect,\n  onMailSelect,\n  onMailSend,\n  onMailToggleDrawer,\n  onOptionMenuItemSelect,\n  onSearchMail,\n  onStartSelect,\n  setCurrentMailNull,\n  updateMailSearch\n} from '../../../actions/Mail';\nimport IntlMessages from '../../../util/IntlMessages';\nimport CustomScrollbars from '../../../util/CustomScrollbars';\n\nclass Mail extends Component {\n  MailSideBar = () => {\n    return (\n      <div className=\"module-side\">\n        <div className=\"module-side-header\">\n          <div className=\"module-logo\">\n            <i className=\"zmdi zmdi-email mr-4\" />\n            <span>\n              <IntlMessages id=\"mail.mailbox\" />\n            </span>\n          </div>\n        </div>\n\n        <div className=\"module-side-content\">\n          <CustomScrollbars\n            className=\"module-side-scroll scrollbar\"\n            style={{\n              height:\n                this.props.width >= 1200\n                  ? 'calc(100vh - 200px)'\n                  : 'calc(100vh - 80px)'\n            }}\n          >\n            <div className=\"module-add-task\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"btn-block\"\n                onClick={() => {\n                  this.props.onComposeMail();\n                }}\n              >\n                <i className=\"zmdi zmdi-edit mr-3\" />\n                <IntlMessages id=\"mail.compose\" />{' '}\n              </Button>\n            </div>\n\n            <ul className=\"module-nav\">\n              {this.getNavFolders()}\n              {/* \n            <li className=\"module-nav-label\">\n              <IntlMessages id=\"mail.filters\" />\n            </li>\n\n            {this.getNavFilters()}\n\n            <li className=\"module-nav-label\">\n              <IntlMessages id=\"mail.labels\" />\n            </li> */}\n\n              {/* {this.getNavLabels()} */}\n            </ul>\n          </CustomScrollbars>\n        </div>\n      </div>\n    );\n  };\n\n  onDeleteMail = () => {\n    this.props.onDeleteMail();\n  };\n  getNavFolders = () => {\n    return folders.map((folder, index) => (\n      <li\n        key={index}\n        onClick={() => {\n          this.props.getNavFolders(folder);\n          setTimeout(() => {\n            this.props.hideMailLoader();\n          }, 1500);\n        }}\n      >\n        <span\n          className={`jr-link ${\n            this.props.selectedFolder === folder.id ? 'active' : ''\n          }`}\n        >\n          <i className={`zmdi zmdi-${folder.icon}`} />\n          <span>{folder.title}</span>\n        </span>\n      </li>\n    ));\n  };\n  onFolderMenuItemSelect = folderId => {\n    this.props.handleMailRequestClose();\n    this.props.onFolderMenuItemSelect(folderId);\n  };\n  onLabelMenuItemSelect = label => {\n    this.props.handleMailRequestClose();\n    this.props.onMailLabelMenuItemSelect(label);\n  };\n  handleRequestClose = () => {\n    this.props.handleMailRequestClose();\n  };\n  getNavFilters = () => {\n    return filters.map((filter, index) => (\n      <li key={index}>\n        <span className=\"jr-link\">\n          <i className={`zmdi zmdi-${filter.icon}`} />\n          <span>{filter.title}</span>\n        </span>\n      </li>\n    ));\n  };\n\n  onFolderSelect = event => {\n    this.props.onFolderSelect();\n    this.setState({\n      anchorEl: event.currentTarget\n    });\n  };\n  onLabelSelect = event => {\n    this.props.onMailLabelSelect();\n    this.setState({\n      anchorEl: event.currentTarget\n    });\n  };\n  onOptionMenuSelect = event => {\n    this.props.onMailOptionMenuSelect();\n    this.setState({\n      anchorEl: event.currentTarget\n    });\n  };\n  onOptionMenuItemSelect = option => {\n    switch (option.title) {\n      case 'All':\n        this.props.handleMailRequestClose();\n        this.props.getAllMail();\n        break;\n      case 'None':\n        this.props.handleMailRequestClose();\n        this.props.getUnselectedAllMail();\n        break;\n      case 'Read':\n        this.props.handleMailRequestClose();\n        this.props.getReadMail();\n        break;\n      case 'Unread':\n        this.props.handleMailRequestClose();\n        this.props.getUnreadMail();\n        break;\n      case 'Starred':\n        this.props.handleMailRequestClose();\n        this.props.getStarredMail();\n        break;\n      case 'Unstarred':\n        this.props.handleMailRequestClose();\n        this.props.getUnStarredMail();\n        break;\n      case 'Important':\n        this.props.handleMailRequestClose();\n        this.props.getImportantMail();\n        break;\n      case 'Unimportant':\n        this.props.handleMailRequestClose();\n        this.props.getUnimportantMail();\n        break;\n      default:\n        this.props.handleMailRequestClose();\n        this.props.getAllMail();\n    }\n  };\n  getAllMail = () => {\n    this.props.getAllMail();\n  };\n  getUnselectedAllMail = () => {\n    this.props.getUnselectedAllMail();\n  };\n  getReadMail = () => {\n    this.props.getReadMail();\n  };\n  getUnreadMail = () => {\n    this.props.getUnreadMail();\n  };\n  getStarredMail = () => {\n    this.props.getStarredMail();\n  };\n  getUnStarredMail = () => {\n    this.props.getUnStarredMail();\n  };\n  getImportantMail = () => {\n    this.props.getImportantMail();\n  };\n  getUnimportantMail = () => {\n    this.props.getUnimportantMail();\n  };\n  getNavLabels = () => {\n    return labels.map((label, index) => (\n      <li key={index}>\n        <span className=\"jr-link\">\n          <i className={`zmdi zmdi-label-alt text-${label.color}`} />\n          <span>{label.title}</span>\n        </span>\n      </li>\n    ));\n  };\n  getName(id) {\n    this.props.getNameSender(id);\n  }\n\n  searchMail = searchText => {\n    this.props.onSearchMail(searchText);\n  };\n  displayMail = (currentMail, folderMails, noContentFoundMessage) => {\n    return (\n      <div className=\"module-box-column\">\n        {currentMail === null ? (\n          folderMails.length === 0 ? (\n            <div\n              className=\"d-flex align-items-center justify-content-center\"\n              style={{\n                height:\n                  this.props.width >= 1200\n                    ? 'calc(100vh - 265px)'\n                    : 'calc(100vh - 245px)'\n              }}\n            >\n              {noContentFoundMessage}\n            </div>\n          ) : (\n            <MailList\n              mails={folderMails}\n              onStartSelect={this.onStartSelect.bind(this)}\n              onMailSelect={this.onMailSelect.bind(this)}\n              width={this.props.width}\n              onMailChecked={this.onMailChecked.bind(this)}\n            />\n          )\n        ) : (\n          <MailDetail\n            mail={currentMail}\n            onStartSelect={this.onStartSelect.bind(this)}\n            onMailSend={this.onMailSend.bind(this)}\n            width={this.props.width}\n            onImportantSelect={this.onImportantSelect.bind(this)}\n            user={this.props.user}\n          />\n        )}\n      </div>\n    );\n  };\n  getMailActions = () => {\n    return (\n      <div>\n        <IconButton\n          onClick={this.onFolderSelect.bind(this)}\n          className=\"icon-btn\"\n        >\n          <i className=\"zmdi zmdi-folder\" />\n        </IconButton>\n\n        <IconButton onClick={this.onDeleteMail.bind(this)} className=\"icon-btn\">\n          <i className=\"zmdi zmdi-delete\" />\n        </IconButton>\n\n        <IconButton\n          onClick={this.onLabelSelect.bind(this)}\n          className=\"icon-btn\"\n        >\n          <i className=\"zmdi zmdi-label-alt\" />\n        </IconButton>\n        {/* <a className=\"icon-btn\" href={this.state.url} target=\"_blank\" style={{display: \"table-cell\"}}>\n                      <IconButton className=\"icon-btn\" >\n                      <i className=\"zmdi zmdi-eye\" />\n                  </IconButton>  </a>\n                  <a className=\"icon-btn\" href={this.state.url} download>\n                      <IconButton className=\"icon-btn\" >\n                      <i className=\"zmdi zmdi-download\" />\n                  </IconButton>  </a> */}\n      </div>\n    );\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      anchorEl: null\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchMails();\n  }\n\n  onMailChecked(data) {\n    this.props.onMailChecked(data);\n  }\n\n  onAllMailSelect() {\n    const selectAll = this.props.selectedMails <= this.props.folderMails.length;\n    if (selectAll) {\n      this.getAllMail();\n    } else {\n      this.getUnselectedAllMail();\n    }\n  }\n\n  onStartSelect(data) {\n    this.props.onStartSelect(data);\n  }\n\n  onImportantSelect(data) {\n    this.props.onImportantSelect(data);\n  }\n\n  onMailSend(data) {\n    this.props.onMailSend(data);\n  }\n\n  onMailSelect(mail) {\n    this.props.onMailSelect(mail);\n    setTimeout(() => {\n      this.props.hideMailLoader();\n    }, 1500);\n  }\n\n  updateSearch(evt) {\n    this.props.updateMailSearch(evt.target.value);\n    this.props.onSearchMail(evt.target.value);\n  }\n\n  onToggleDrawer() {\n    this.props.onMailToggleDrawer();\n  }\n  render() {\n    const {\n      selectedMails,\n      loader,\n      currentMail,\n      folderMails,\n      composeMail,\n      user,\n      alertMessage,\n      showMessage,\n      noContentFoundMessage\n    } = this.props;\n    console.log(folderMails);\n    return (\n      <div className=\"app-wrapper\">\n        <div className=\"animated slideInUpTiny animation-duration-3\">\n          <div className=\"app-module\">\n            <div className=\"d-block d-xl-none\">\n              <Drawer\n                open={this.props.drawerState}\n                onClose={this.onToggleDrawer.bind(this)}\n              >\n                {this.MailSideBar()}\n              </Drawer>\n            </div>\n            <div className=\"app-module-sidenav d-none d-xl-flex\">\n              {this.MailSideBar()}\n            </div>\n\n            <div className=\"module-box\">\n              <div className=\"module-box-header\">\n                <IconButton\n                  className=\"drawer-btn d-block d-xl-none\"\n                  aria-label=\"Menu\"\n                  onClick={this.onToggleDrawer.bind(this)}\n                >\n                  <i className=\"zmdi zmdi-menu\" />\n                </IconButton>\n                {/* <AppModuleHeader user={this.props.user}\n                  onChange={this.updateSearch.bind(this)}\n                  value={this.props.searchMail} /> */}\n              </div>\n\n              <div className=\"module-box-content\">\n                <div className=\"module-box-topbar\">\n                  {this.props.currentMail === null ? (\n                    <div className=\"d-flex\">\n                      {/* <Checkbox color=\"primary\"\n                        indeterminate={selectedMails > 0 && selectedMails < folderMails.length}\n                        checked={selectedMails > 0}\n                        onChange={this.onAllMailSelect.bind(this)}\n                        value=\"SelectMail\" /> */}\n\n                      <div\n                        className=\"d-flex align-items-center\"\n                        onClick={this.onOptionMenuSelect.bind(this)}\n                      >\n                        <span className=\"px-2\"> {this.props.optionName}</span>\n                        <IconButton className=\"icon-btn-sm\">\n                          <i className=\"zmdi zmdi-caret-down\" />\n                        </IconButton>\n                      </div>\n                    </div>\n                  ) : (\n                    <IconButton\n                      className=\"icon-btn\"\n                      onClick={() => {\n                        this.props.setCurrentMailNull();\n                      }}\n                    >\n                      <i className=\"zmdi zmdi-arrow-back\" />\n                    </IconButton>\n                  )}\n\n                  {selectedMails > 0 && this.getMailActions()}\n\n                  <Menu\n                    id=\"option-menu\"\n                    anchorEl={this.state.anchorEl}\n                    open={false}\n                    onClose={this.handleRequestClose}\n                    MenuListProps={{\n                      style: {\n                        width: 150\n                      }\n                    }}\n                  >\n                    {options.map(option => (\n                      <MenuItem\n                        key={option.title}\n                        onClick={this.onOptionMenuItemSelect.bind(this, option)}\n                      >\n                        {option.title}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n\n                  <Menu\n                    id=\"folder-menu\"\n                    anchorEl={this.state.anchorEl}\n                    open={this.props.folderMenuState}\n                    onClose={this.handleRequestClose}\n                    MenuListProps={{\n                      style: {\n                        width: 150\n                      }\n                    }}\n                  >\n                    {folders.map(folder => (\n                      <MenuItem\n                        key={folder.id}\n                        onClick={this.onFolderMenuItemSelect.bind(\n                          this,\n                          folder.id\n                        )}\n                      >\n                        {folder.title}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                  <Menu\n                    id=\"label-menu\"\n                    anchorEl={this.state.anchorEl}\n                    open={this.props.labelMenuState}\n                    onClose={this.handleRequestClose}\n                    MenuListProps={{\n                      style: {\n                        width: 150\n                      }\n                    }}\n                  >\n                    {labels.map(label => (\n                      <MenuItem\n                        key={label.id}\n                        onClick={this.onLabelMenuItemSelect.bind(this, label)}\n                      >\n                        {label.title}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                </div>\n\n                {loader ? (\n                  <div\n                    className=\"loader-view\"\n                    style={{\n                      height:\n                        this.props.width >= 1200\n                          ? 'calc(100vh - 265px)'\n                          : 'calc(100vh - 245px)'\n                    }}\n                  >\n                    <CircularProgress />\n                  </div>\n                ) : (\n                  this.displayMail(\n                    currentMail,\n                    folderMails,\n                    noContentFoundMessage\n                  )\n                )}\n\n                <ComposeMail\n                  open={composeMail}\n                  user={user}\n                  subjectReply={''}\n                  emailReplay={''}\n                  onClose={this.handleRequestClose.bind(this)}\n                  onMailSend={this.onMailSend.bind(this)}\n                />\n              </div>\n            </div>\n          </div>\n          <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            open={showMessage}\n            autoHideDuration={3000}\n            onClose={this.handleRequestClose}\n            ContentProps={{\n              'aria-describedby': 'message-id'\n            }}\n            message={<span id=\"message-id\">{alertMessage}</span>}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ mail, settings }) => {\n  const { width } = settings;\n  const {\n    searchMail,\n    noContentFoundMessage,\n    alertMessage,\n    showMessage,\n    drawerState,\n    anchorEl,\n    allMail,\n    optionName,\n    loader,\n    currentMail,\n    user,\n    selectedMails,\n    selectedFolder,\n    composeMail,\n    labelMenuState,\n    folderMenuState,\n    optionMenuState,\n    folderMails\n  } = mail;\n\n  return {\n    width,\n    searchMail,\n    noContentFoundMessage,\n    alertMessage,\n    showMessage,\n    drawerState,\n    anchorEl,\n    allMail,\n    optionName,\n    loader,\n    currentMail,\n    user,\n    selectedMails,\n    selectedFolder,\n    composeMail,\n    labelMenuState,\n    folderMenuState,\n    optionMenuState,\n    folderMails\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    getAllMail,\n    fetchMails,\n    getImportantMail,\n    getMailNavFilters,\n    getMailNavLabels,\n    getNavFolders,\n    getReadMail,\n    getStarredMail,\n    getUnimportantMail,\n    getUnreadMail,\n    getUnselectedAllMail,\n    getUnStarredMail,\n    handleMailRequestClose,\n    hideMailLoader,\n    onAllMailSelect,\n    onComposeMail,\n    onDeleteMail,\n    onFolderMenuItemSelect,\n    onFolderSelect,\n    onImportantSelect,\n    onMailChecked,\n    onMailLabelMenuItemSelect,\n    onMailLabelSelect,\n    onMailOptionMenuSelect,\n    onMailSelect,\n    onMailSend,\n    onMailToggleDrawer,\n    onOptionMenuItemSelect,\n    onSearchMail,\n    onStartSelect,\n    setCurrentMailNull,\n    updateMailSearch\n  }\n)(Mail);\n"]},"metadata":{},"sourceType":"module"}