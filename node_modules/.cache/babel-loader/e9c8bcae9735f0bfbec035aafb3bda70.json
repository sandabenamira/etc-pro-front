{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/UsersManagement/UsersList.js\";\nimport React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport EditUsers from './EditUsers';\nimport _ from 'lodash';\nimport UsersListItem from './UsersListItem';\nimport DeleteUsersItem from './DeleteUsers';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport { roleIdSuperAdmin, roleIdAdmin, roleIdProfessor, roleIdStudent, roleIdDirector, roleIdParent, roleIdSupervisor } from '../../../../../config/config';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ModalDetailsUser from './ModalDetailsUser';\nconst listRole = [// { id: 0, label: <IntlMessages id={`permission.role.all`} /> },\n{\n  id: roleIdAdmin,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `role.admin`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  })\n}, {\n  id: roleIdDirector,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `component.etablishments.info.director`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 32\n    }\n  })\n}, {\n  id: roleIdSupervisor,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `role.supervisor`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 34\n    }\n  })\n}, {\n  id: roleIdProfessor,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `toDo.professor`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }\n  })\n}, {\n  id: roleIdStudent,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `userStuppDisplay.Student`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 31\n    }\n  })\n}, {\n  id: roleIdParent,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `userStuppDisplay.Parent`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 30\n    }\n  })\n}];\n\nclass UsersList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEdit = (item, event) => {\n      event.preventDefault();\n      this.setState({\n        isOpen: true,\n        item: item,\n        id: item.id,\n        educationItem: item.educationType\n      });\n    };\n\n    this.handleDelete = (item, event) => {\n      event.preventDefault();\n      this.setState({\n        deleteIsopen: true,\n        deleteItem: item\n      });\n    };\n\n    this.handleChangeRole = name => event => {\n      this.setState({\n        [name]: event.target.value,\n        usersList: this.props.usersList,\n        filterSubjectProfId: 0,\n        filterClassProfId: 0,\n        filterLevelStudentId: 0,\n        filterClassStudentId: 0\n      });\n    };\n\n    this.handleChangeFilterProf = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      let classIdFilter = this.state.filterClassProfId;\n      let subjectIdFilter = this.state.filterSubjectProfId;\n\n      function filterClassProf(item) {\n        let listClass = [];\n\n        if (subjectIdFilter == 0) {\n          if (event.target.value == 0) {\n            return true;\n          } else {\n            listClass = item.inforamtionsProf.filter(element => element.ClassId == event.target.value);\n          }\n        } else {\n          if (event.target.value == 0) {\n            listClass = item.inforamtionsProf.filter(element => element.subjectId == subjectIdFilter);\n          } else {\n            listClass = item.inforamtionsProf.filter(element => element.ClassId == event.target.value && element.subjectId == subjectIdFilter);\n          }\n        }\n\n        return listClass.length > 0;\n      }\n\n      function filterSubjectProf(item) {\n        let listClass = [];\n\n        if (classIdFilter == 0) {\n          if (event.target.value == 0) {\n            return true;\n          } else {\n            listClass = item.inforamtionsProf.filter(element => element.subjectId == event.target.value);\n          }\n        } else {\n          if (event.target.value == 0) {\n            listClass = item.inforamtionsProf.filter(element => element.ClassId == classIdFilter);\n          } else {\n            listClass = item.inforamtionsProf.filter(element => element.subjectId == event.target.value && element.ClassId == classIdFilter);\n          }\n        }\n\n        return listClass.length > 0;\n      }\n\n      if (name === 'filterClassProfId') {\n        let classFiltred = _.filter(this.props.usersList.professors, filterClassProf);\n\n        let newUserList = { ...this.props.usersList,\n          professors: classFiltred\n        };\n        this.setState({\n          usersList: newUserList\n        });\n      }\n\n      if (name === 'filterSubjectProfId') {\n        let subjectFiltred = _.filter(this.props.usersList.professors, filterSubjectProf);\n\n        let newUserList = { ...this.props.usersList,\n          professors: subjectFiltred\n        };\n        this.setState({\n          usersList: newUserList\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.handleCancel();\n    };\n\n    this.handleChangeFilterStudent = name => event => {\n      console.log(event.target.value, 'eveeent');\n      this.setState({\n        [name]: event.target.value\n      });\n\n      if (name === 'filterLevelStudentId') {\n        if (event.target.value == 0) {\n          this.setState({\n            usersList: this.props.usersList,\n            filterClassStudentId: 0,\n            classStudentFilter: []\n          });\n        } else {\n          let classStudentFilter = this.props.listClassFilter.filter(element => element.levelId == event.target.value);\n          let studentByLevel = this.props.usersList.students.filter(element => element.inforamtionsStudent.classInformation.levelId == event.target.value);\n          let newUserList = { ...this.props.usersList,\n            students: studentByLevel\n          };\n          this.setState({\n            usersList: newUserList,\n            classStudentFilter,\n            filterClassStudentId: 0\n          });\n        }\n      }\n\n      if (name === 'filterClassStudentId') {\n        if (event.target.value == 0) {\n          if (this.state.filterLevelStudentId == 0) {\n            this.setState({\n              usersList: this.props.usersList\n            });\n          } else {\n            let studentByLevel = this.props.usersList.students.filter(element => element.inforamtionsStudent.classInformation.levelId == this.state.filterLevelStudentId);\n            let newUserList = { ...this.props.usersList,\n              students: studentByLevel\n            };\n            this.setState({\n              usersList: newUserList\n            });\n          }\n        } else {\n          let studentByLevel = this.props.usersList.students.filter(element => element.inforamtionsStudent.classInformation.classId == event.target.value);\n          let classSelected = this.state.classStudentFilter.find(element => element.id == event.target.value);\n          let listGroupFilter;\n\n          if (classSelected != undefined) {\n            listGroupFilter = classSelected.group;\n          }\n\n          let newUserList = { ...this.props.usersList,\n            students: studentByLevel\n          };\n          this.setState({\n            usersList: newUserList\n          });\n        }\n      }\n    };\n\n    this.state = {\n      isOpen: false,\n      item: {},\n      deleteIsopen: false,\n      deleteItem: {},\n      roleIdFilter: 0,\n      filterClassProfId: 0,\n      filterSubjectProfId: 0,\n      filterLevelStudentId: 0,\n      filterClassStudentId: 0,\n      usersList: {\n        users: [],\n        students: [],\n        parents: [],\n        professors: [],\n        admins: [],\n        directors: [],\n        supervisors: []\n      },\n      classStudentFilter: []\n    };\n    this.handleAnnule = this.handleAnnule.bind(this);\n    this.handleChangeRole = this.handleChangeRole.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChangeFilterProf = this.handleChangeFilterProf.bind(this);\n    this.handleChangeFilterStudent = this.handleChangeFilterStudent.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      usersList: this.props.usersList\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.usersList !== this.props.usersList) {\n      this.setState({\n        usersList: this.props.usersList\n      });\n    }\n  }\n\n  handleCancel() {\n    this.setState({\n      isOpen: false,\n      deleteIsopen: false\n    });\n  }\n\n  handleAnnule() {\n    this.handleCancel();\n  }\n\n  handleToggle() {\n    this.handleCancel();\n  }\n\n  render() {\n    console.log(this.state.classStudentFilter, 'this.state.classStudentFilter');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive-material\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"users.list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    })), ' ', \"console.log(this.props.listClassFilter,'this.props.listClassFilter');\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap flex-row bd-highlight mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 bd-highlight col-lg-2 col-md-4 col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"filterRoleId\",\n      name: \"filterRoleId\",\n      select: true,\n      value: this.state.roleIdFilter,\n      onChange: this.handleChangeRole('roleIdFilter'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `stuppUser.steps.role`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 22\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `permission.role.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    })), listRole.map(role => /*#__PURE__*/React.createElement(MenuItem, {\n      key: role.id,\n      value: role.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, role.label)))), this.state.roleIdFilter == roleIdProfessor ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"idClasse\",\n      name: \"idClasse\",\n      select: true,\n      value: this.state.filterClassProfId,\n      onChange: this.handleChangeFilterProf('filterClassProfId'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.note.class`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 26\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `extraPages.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    })), this.props.listClassFilter.map(classeItem => /*#__PURE__*/React.createElement(MenuItem, {\n      key: classeItem.id,\n      value: classeItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }\n    }, classeItem.label)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"idSubject\",\n      name: \"idSubject\",\n      select: true,\n      value: this.state.filterSubjectProfId,\n      onChange: this.handleChangeFilterProf('filterSubjectProfId'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.note.subject`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 26\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `extraPages.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }\n    })), this.props.subjects.map(subjectItem => /*#__PURE__*/React.createElement(MenuItem, {\n      key: subjectItem.id,\n      value: subjectItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }\n    }, subjectItem.name))))) : '', this.state.roleIdFilter == roleIdStudent ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"idLevel\",\n      name: \"idLevel\",\n      select: true,\n      value: this.state.filterLevelStudentId,\n      onChange: this.handleChangeFilterStudent('filterLevelStudentId'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.note.niveau`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 26\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `extraPages.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    })), this.props.levels.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }\n    }, option.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"idClasseStudent\",\n      name: \"idClasseStudent\",\n      select: true,\n      value: this.state.filterClassStudentId,\n      onChange: this.handleChangeFilterStudent('filterClassStudentId'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `components.note.class`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 26\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `extraPages.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 21\n      }\n    })), this.state.classStudentFilter.map(classeItem => /*#__PURE__*/React.createElement(MenuItem, {\n      key: classeItem.id,\n      value: classeItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 21\n      }\n    }, classeItem.label))))) : ''), /*#__PURE__*/React.createElement(Table, {\n      className: \"default-table table-unbordered table table-sm table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      className: \"th-border-b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.last.name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }\n    })), this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"role.user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 19\n      }\n    })) : null, this.state.roleIdFilter == roleIdProfessor ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `components.note.subject`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdProfessor ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `components.note.class`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdStudent ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `components.note.class`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdStudent ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }\n    }, \"Parent\") : '', this.state.roleIdFilter == roleIdParent ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 19\n      }\n    }, \"enfant \")) : '', this.state.roleIdFilter == roleIdParent ? /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }\n    }, ' ', /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `components.note.class`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdAdmin || this.state.roleIdFilter == roleIdDirector || this.state.roleIdFilter == roleIdSupervisor || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 19\n      }\n    })) : '', /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.phone.number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"user.options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }\n    }, this.state.roleIdFilter == roleIdAdmin || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-admin',\n        permissionList: this.props.permissionList\n      },\n      yes: () => this.state.usersList.admins.map(element => {\n        return /*#__PURE__*/React.createElement(UsersListItem, {\n          user: element,\n          handleEdit: this.handleEdit,\n          handleDelete: this.handleDelete,\n          archived: false,\n          roleIdFilter: this.state.roleIdFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 27\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdSupervisor || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-school-life',\n        permissionList: this.props.permissionList\n      },\n      yes: () => this.state.usersList.supervisors.map(element => {\n        return /*#__PURE__*/React.createElement(UsersListItem, {\n          user: element,\n          handleEdit: this.handleEdit,\n          handleDelete: this.handleDelete,\n          archived: false,\n          roleIdFilter: this.state.roleIdFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 27\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdDirector || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-direction-membre',\n        permissionList: this.props.permissionList\n      },\n      yes: () => this.state.usersList.directors.map(element => {\n        return /*#__PURE__*/React.createElement(UsersListItem, {\n          user: element,\n          handleEdit: this.handleEdit,\n          handleDelete: this.handleDelete,\n          archived: false,\n          roleIdFilter: this.state.roleIdFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 27\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdProfessor || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-prof',\n        permissionList: this.props.permissionList\n      },\n      yes: () => this.state.usersList.professors.map(element => {\n        return /*#__PURE__*/React.createElement(UsersListItem, {\n          user: element,\n          handleEdit: this.handleEdit,\n          handleDelete: this.handleDelete,\n          archived: false,\n          roleIdFilter: this.state.roleIdFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 27\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdParent || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-parent',\n        permissionList: this.props.permissionList\n      },\n      yes: () => this.state.usersList.parents.map(element => {\n        return /*#__PURE__*/React.createElement(UsersListItem, {\n          roleIdFilter: this.state.roleIdFilter,\n          user: element,\n          handleEdit: this.handleEdit,\n          handleDelete: this.handleDelete,\n          archived: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 27\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 19\n      }\n    })) : '', this.state.roleIdFilter == roleIdStudent || this.state.roleIdFilter == 0 ? /*#__PURE__*/React.createElement(RoleContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 15\n      }\n    }, ({\n      role\n    }) => /*#__PURE__*/React.createElement(Can, {\n      role: role,\n      perform: \"user-permission\",\n      data: {\n        permission: 'get-student',\n        permissionList: this.props.permissionList\n      },\n      yes: () => this.state.usersList.students.map(element => {\n        return /*#__PURE__*/React.createElement(UsersListItem, {\n          roleIdFilter: this.state.roleIdFilter,\n          user: element,\n          handleEdit: this.handleEdit,\n          handleDelete: this.handleDelete,\n          archived: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 27\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 19\n      }\n    })) : '')), this.state.isOpen ? /*#__PURE__*/React.createElement(EditUsers, {\n      schoolSession: this.state.item,\n      closeModal: this.handleCancel,\n      isOpen: this.state.isOpen,\n      values: this.state,\n      handleAnnule: this.handleAnnule,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      handleToggle: this.handleToggle,\n      handleChangeDateStart: this.handleChangeDateStart,\n      handleChangeDateEnd: this.handleChangeDateEnd,\n      handleChangeStartDate: this.handleChangeStartDate,\n      handleChangeEndDate: this.handleChangeEndDate,\n      educationTypes: this.props.educationTypes,\n      handleChangeEducationType: this.handleChangeEducationType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 11\n      }\n    }) : '', this.state.deleteIsopen === true ? /*#__PURE__*/React.createElement(DeleteUsersItem, {\n      handleDeleteSchoolSession: this.handleDeleteSchoolSession,\n      deleteItem: this.state.deleteItem,\n      handleCancel: this.handleCancel,\n      deleteIsopen: this.state.deleteIsopen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 11\n      }\n    }) : '');\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    subjects: state.subject.subjects,\n    levels: state.levelsReducer.levels\n  };\n}\n\nexport default connect(mapStateToProps, {})(UsersList);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/UsersManagement/UsersList.js"],"names":["React","Table","TableBody","TableCell","TableHead","TableRow","IntlMessages","EditUsers","_","UsersListItem","DeleteUsersItem","connect","TextField","Can","RoleContext","roleIdSuperAdmin","roleIdAdmin","roleIdProfessor","roleIdStudent","roleIdDirector","roleIdParent","roleIdSupervisor","MenuItem","ModalDetailsUser","listRole","id","label","UsersList","Component","constructor","props","handleEdit","item","event","preventDefault","setState","isOpen","educationItem","educationType","handleDelete","deleteIsopen","deleteItem","handleChangeRole","name","target","value","usersList","filterSubjectProfId","filterClassProfId","filterLevelStudentId","filterClassStudentId","handleChangeFilterProf","classIdFilter","state","subjectIdFilter","filterClassProf","listClass","inforamtionsProf","filter","element","ClassId","subjectId","length","filterSubjectProf","classFiltred","professors","newUserList","subjectFiltred","handleSubmit","e","handleCancel","handleChangeFilterStudent","console","log","classStudentFilter","listClassFilter","levelId","studentByLevel","students","inforamtionsStudent","classInformation","classId","classSelected","find","listGroupFilter","undefined","group","roleIdFilter","users","parents","admins","directors","supervisors","handleAnnule","bind","handleToggle","componentDidMount","componentDidUpdate","prevProps","render","disableUnderline","map","role","classeItem","subjects","subjectItem","levels","option","permission","permissionList","handleChange","handleChangeDateStart","handleChangeDateEnd","handleChangeStartDate","handleChangeEndDate","educationTypes","handleChangeEducationType","handleDeleteSchoolSession","mapStateToProps","subject","levelsReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport EditUsers from './EditUsers';\nimport _ from 'lodash';\nimport UsersListItem from './UsersListItem';\nimport DeleteUsersItem from './DeleteUsers';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport {\n  roleIdSuperAdmin,\n  roleIdAdmin,\n  roleIdProfessor,\n  roleIdStudent,\n  roleIdDirector,\n  roleIdParent,\n  roleIdSupervisor,\n} from '../../../../../config/config';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport ModalDetailsUser from './ModalDetailsUser';\nconst listRole = [\n  // { id: 0, label: <IntlMessages id={`permission.role.all`} /> },\n  { id: roleIdAdmin, label: <IntlMessages id={`role.admin`} /> },\n  { id: roleIdDirector, label: <IntlMessages id={`component.etablishments.info.director`} /> },\n  { id: roleIdSupervisor, label: <IntlMessages id={`role.supervisor`} /> },\n  { id: roleIdProfessor, label: <IntlMessages id={`toDo.professor`} /> },\n  { id: roleIdStudent, label: <IntlMessages id={`userStuppDisplay.Student`} /> },\n  { id: roleIdParent, label: <IntlMessages id={`userStuppDisplay.Parent`} /> },\n];\nclass UsersList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      item: {},\n      deleteIsopen: false,\n      deleteItem: {},\n      roleIdFilter: 0,\n      filterClassProfId: 0,\n      filterSubjectProfId: 0,\n      filterLevelStudentId: 0,\n      filterClassStudentId: 0,\n      usersList: {\n        users: [],\n        students: [],\n        parents: [],\n        professors: [],\n        admins: [],\n        directors: [],\n        supervisors: [],\n      },\n      classStudentFilter: [],\n    };\n    this.handleAnnule = this.handleAnnule.bind(this);\n    this.handleChangeRole = this.handleChangeRole.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChangeFilterProf = this.handleChangeFilterProf.bind(this);\n    this.handleChangeFilterStudent = this.handleChangeFilterStudent.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ usersList: this.props.usersList });\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.usersList !== this.props.usersList) {\n      this.setState({ usersList: this.props.usersList });\n    }\n  }\n\n  handleCancel() {\n    this.setState({ isOpen: false, deleteIsopen: false });\n  }\n  handleEdit = (item, event) => {\n    event.preventDefault();\n    this.setState({\n      isOpen: true,\n      item: item,\n      id: item.id,\n      educationItem: item.educationType,\n    });\n  };\n  handleDelete = (item, event) => {\n    event.preventDefault();\n    this.setState({ deleteIsopen: true, deleteItem: item });\n  };\n\n  handleAnnule() {\n    this.handleCancel();\n  }\n\n  handleChangeRole = (name) => (event) => {\n    this.setState({\n      [name]: event.target.value,\n      usersList: this.props.usersList,\n      filterSubjectProfId: 0,\n      filterClassProfId: 0,\n      filterLevelStudentId: 0,\n      filterClassStudentId: 0,\n    });\n  };\n  handleChangeFilterProf = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    let classIdFilter = this.state.filterClassProfId;\n    let subjectIdFilter = this.state.filterSubjectProfId;\n    function filterClassProf(item) {\n      let listClass = [];\n\n      if (subjectIdFilter == 0) {\n        if (event.target.value == 0) {\n          return true;\n        } else {\n          listClass = item.inforamtionsProf.filter(\n            (element) => element.ClassId == event.target.value\n          );\n        }\n      } else {\n        if (event.target.value == 0) {\n          listClass = item.inforamtionsProf.filter(\n            (element) => element.subjectId == subjectIdFilter\n          );\n        } else {\n          listClass = item.inforamtionsProf.filter(\n            (element) =>\n              element.ClassId == event.target.value && element.subjectId == subjectIdFilter\n          );\n        }\n      }\n      return listClass.length > 0;\n    }\n\n    function filterSubjectProf(item) {\n      let listClass = [];\n      if (classIdFilter == 0) {\n        if (event.target.value == 0) {\n          return true;\n        } else {\n          listClass = item.inforamtionsProf.filter(\n            (element) => element.subjectId == event.target.value\n          );\n        }\n      } else {\n        if (event.target.value == 0) {\n          listClass = item.inforamtionsProf.filter((element) => element.ClassId == classIdFilter);\n        } else {\n          listClass = item.inforamtionsProf.filter(\n            (element) => element.subjectId == event.target.value && element.ClassId == classIdFilter\n          );\n        }\n      }\n      return listClass.length > 0;\n    }\n\n    if (name === 'filterClassProfId') {\n      let classFiltred = _.filter(this.props.usersList.professors, filterClassProf);\n      let newUserList = { ...this.props.usersList, professors: classFiltred };\n      this.setState({ usersList: newUserList });\n    }\n    if (name === 'filterSubjectProfId') {\n      let subjectFiltred = _.filter(this.props.usersList.professors, filterSubjectProf);\n      let newUserList = { ...this.props.usersList, professors: subjectFiltred };\n      this.setState({ usersList: newUserList });\n    }\n  };\n  handleToggle() {\n    this.handleCancel();\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.handleCancel();\n  };\n  handleChangeFilterStudent = (name) => (event) => {\n    console.log(event.target.value, 'eveeent');\n    this.setState({ [name]: event.target.value });\n    if (name === 'filterLevelStudentId') {\n      if (event.target.value == 0) {\n        this.setState({\n          usersList: this.props.usersList,\n          filterClassStudentId: 0,\n          classStudentFilter: [],\n        });\n      } else {\n        let classStudentFilter = this.props.listClassFilter.filter(\n          (element) => element.levelId == event.target.value\n        );\n        let studentByLevel = this.props.usersList.students.filter(\n          (element) => element.inforamtionsStudent.classInformation.levelId == event.target.value\n        );\n        let newUserList = { ...this.props.usersList, students: studentByLevel };\n        this.setState({ usersList: newUserList, classStudentFilter, filterClassStudentId: 0 });\n      }\n    }\n    if (name === 'filterClassStudentId') {\n      if (event.target.value == 0) {\n        if (this.state.filterLevelStudentId == 0) {\n          this.setState({ usersList: this.props.usersList });\n        } else {\n          let studentByLevel = this.props.usersList.students.filter(\n            (element) =>\n              element.inforamtionsStudent.classInformation.levelId ==\n              this.state.filterLevelStudentId\n          );\n          let newUserList = { ...this.props.usersList, students: studentByLevel };\n          this.setState({ usersList: newUserList });\n        }\n      } else {\n        let studentByLevel = this.props.usersList.students.filter(\n          (element) => element.inforamtionsStudent.classInformation.classId == event.target.value\n        );\n        let classSelected = this.state.classStudentFilter.find(\n          (element) => element.id == event.target.value\n        );\n        let listGroupFilter;\n        if (classSelected != undefined) {\n          listGroupFilter = classSelected.group;\n        }\n        let newUserList = { ...this.props.usersList, students: studentByLevel };\n        this.setState({ usersList: newUserList });\n      }\n    }\n  };\n  render() {\n    console.log(this.state.classStudentFilter, 'this.state.classStudentFilter');\n    return (\n      <div className=\"table-responsive-material\">\n        <div>\n          <h1>\n            <b>\n              <IntlMessages id=\"users.list\" />\n            </b>{' '}\n            console.log(this.props.listClassFilter,'this.props.listClassFilter');\n          </h1>\n        </div>\n        <div className=\"d-flex flex-wrap flex-row bd-highlight mb-3\">\n          <div className=\"p-2 bd-highlight col-lg-2 col-md-4 col-sm-2\">\n            <TextField\n              id=\"filterRoleId\"\n              name=\"filterRoleId\"\n              select\n              value={this.state.roleIdFilter}\n              onChange={this.handleChangeRole('roleIdFilter')}\n              SelectProps={{}}\n              label={<IntlMessages id={`stuppUser.steps.role`} />}\n              InputProps={{ disableUnderline: true }}\n              margin=\"normal\"\n              fullWidth\n            >\n              <MenuItem key={0} value={0}>\n                <IntlMessages id={`permission.role.all`} />\n              </MenuItem>\n              {listRole.map((role) => (\n                <MenuItem key={role.id} value={role.id}>\n                  {role.label}\n                </MenuItem>\n              ))}\n            </TextField>\n          </div>\n          {this.state.roleIdFilter == roleIdProfessor ? (\n            <>\n              <div className=\"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\">\n                <TextField\n                  id=\"idClasse\"\n                  name=\"idClasse\"\n                  select\n                  value={this.state.filterClassProfId}\n                  onChange={this.handleChangeFilterProf('filterClassProfId')}\n                  SelectProps={{}}\n                  label={<IntlMessages id={`components.note.class`} />}\n                  InputProps={{ disableUnderline: true }}\n                  margin=\"normal\"\n                  fullWidth\n                >\n                  <MenuItem key={0} value={0}>\n                    <IntlMessages id={`extraPages.all`} />\n                  </MenuItem>\n                  {this.props.listClassFilter.map((classeItem) => (\n                    <MenuItem key={classeItem.id} value={classeItem.id}>\n                      {classeItem.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </div>\n              <div className=\"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\">\n                <TextField\n                  id=\"idSubject\"\n                  name=\"idSubject\"\n                  select\n                  value={this.state.filterSubjectProfId}\n                  onChange={this.handleChangeFilterProf('filterSubjectProfId')}\n                  SelectProps={{}}\n                  label={<IntlMessages id={`components.note.subject`} />}\n                  InputProps={{ disableUnderline: true }}\n                  margin=\"normal\"\n                  fullWidth\n                >\n                  <MenuItem key={0} value={0}>\n                    <IntlMessages id={`extraPages.all`} />\n                  </MenuItem>\n                  {this.props.subjects.map((subjectItem) => (\n                    <MenuItem key={subjectItem.id} value={subjectItem.id}>\n                      {subjectItem.name}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </div>\n            </>\n          ) : (\n            ''\n          )}\n          {this.state.roleIdFilter == roleIdStudent ? (\n            <>\n              <div className=\"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\">\n                <TextField\n                  id=\"idLevel\"\n                  name=\"idLevel\"\n                  select\n                  value={this.state.filterLevelStudentId}\n                  onChange={this.handleChangeFilterStudent('filterLevelStudentId')}\n                  SelectProps={{}}\n                  label={<IntlMessages id={`components.note.niveau`} />}\n                  InputProps={{ disableUnderline: true }}\n                  margin=\"normal\"\n                  fullWidth\n                >\n                  <MenuItem key={0} value={0}>\n                    <IntlMessages id={`extraPages.all`} />\n                  </MenuItem>\n                  {this.props.levels.map((option) => (\n                    <MenuItem key={option.id} value={option.id}>\n                      {option.name}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </div>\n              {/* <div className=\"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\">\n                <TextField\n                  id=\"idClasse\"\n                  name=\"idClasse\"\n                  select\n                  value={this.state.filterClassStudentId}\n                  onChange={this.handleChangeFilterStudent('filterClassStudentId')}\n                  SelectProps={{}}\n                  label={<IntlMessages id={`components.note.class`} />}\n                  InputProps={{ disableUnderline: true }}\n                  margin=\"normal\"\n                  fullWidth\n                >\n                  <MenuItem key={0} value={0}>\n                    <IntlMessages id={`extraPages.all`} />\n                  </MenuItem>\n                  {this.state.classStudentFilter.map((classeItem) => (\n                    <MenuItem key={classeItem.id} value={classeItem.id}>\n                      {classeItem.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </div> */}\n              <div className=\"p-2 bd-highlight col-lg-1 col-md-4 col-sm-2\">\n                <TextField\n                  id=\"idClasseStudent\"\n                  name=\"idClasseStudent\"\n                  select\n                  value={this.state.filterClassStudentId}\n                  onChange={this.handleChangeFilterStudent('filterClassStudentId')}\n                  SelectProps={{}}\n                  label={<IntlMessages id={`components.note.class`} />}\n                  InputProps={{ disableUnderline: true }}\n                  margin=\"normal\"\n                  fullWidth\n                >\n                  <MenuItem key={0} value={0}>\n                    <IntlMessages id={`extraPages.all`} />\n                  </MenuItem>\n                  {this.state.classStudentFilter.map((classeItem) => (\n                    <MenuItem key={classeItem.id} value={classeItem.id}>\n                      {classeItem.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </div>\n            </>\n          ) : (\n            ''\n          )}\n        </div>\n        <Table className=\"default-table table-unbordered table table-sm table-hover\">\n          <TableHead className=\"th-border-b\">\n            <TableRow>\n              <TableCell align=\"left\">\n                <IntlMessages id=\"user.photo\" />\n              </TableCell>\n              <TableCell align=\"left\">\n                <IntlMessages id=\"user.id\" />\n              </TableCell>\n              <TableCell align=\"left\">\n                <IntlMessages id=\"user.name\" />\n              </TableCell>\n              <TableCell align=\"left\">\n                <IntlMessages id=\"user.last.name\" />\n              </TableCell>\n\n              {this.state.roleIdFilter == 0 ? (\n                <TableCell align=\"left\">\n                  <IntlMessages id=\"role.user\" />\n                </TableCell>\n              ) : null}\n              {/* ------------     affichage classe et matiére pour prof -------------------------------------------*/}\n\n              {this.state.roleIdFilter == roleIdProfessor ? (\n                <TableCell align=\"left\">\n                  <IntlMessages id={`components.note.subject`} />\n                </TableCell>\n              ) : (\n                ''\n              )}\n              {this.state.roleIdFilter == roleIdProfessor ? (\n                <TableCell align=\"left\">\n                  <IntlMessages id={`components.note.class`} />\n                </TableCell>\n              ) : (\n                ''\n              )}\n              {/* ------------     affichage classe et parent pour student -------------------------------------------*/}\n              {this.state.roleIdFilter == roleIdStudent ? (\n                <TableCell align=\"left\">\n                  <IntlMessages id={`components.note.class`} />\n                </TableCell>\n              ) : (\n                ''\n              )}\n              {this.state.roleIdFilter == roleIdStudent ? (\n                <TableCell align=\"left\">Parent</TableCell>\n              ) : (\n                ''\n              )}\n              {/* ------------     affichage enfant et classe pour parent -------------------------------------------*/}\n              {this.state.roleIdFilter == roleIdParent ? (\n                <TableCell align=\"left\">\n                  <TableCell align=\"left\">enfant </TableCell>\n                </TableCell>\n              ) : (\n                ''\n              )}\n              {this.state.roleIdFilter == roleIdParent ? (\n                <TableCell align=\"left\">\n                  {' '}\n                  <IntlMessages id={`components.note.class`} />\n                </TableCell>\n              ) : (\n                ''\n              )}\n              {/* ------------     éliminer colonne email  -------------------------------------------*/}\n\n              {this.state.roleIdFilter == roleIdAdmin ||\n              this.state.roleIdFilter == roleIdDirector ||\n              this.state.roleIdFilter == roleIdSupervisor ||\n              this.state.roleIdFilter == 0 ? (\n                <TableCell>\n                  <IntlMessages id=\"user.mail\" />\n                </TableCell>\n              ) : (\n                ''\n              )}\n\n              <TableCell>\n                <IntlMessages id=\"user.phone.number\" />\n              </TableCell>\n              <TableCell align=\"center\">\n                <IntlMessages id=\"user.options\" />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.roleIdFilter == roleIdAdmin || this.state.roleIdFilter == 0 ? (\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-admin',\n                      permissionList: this.props.permissionList,\n                    }}\n                    yes={() =>\n                      this.state.usersList.admins.map((element) => {\n                        return (\n                          <UsersListItem\n                            user={element}\n                            handleEdit={this.handleEdit}\n                            handleDelete={this.handleDelete}\n                            archived={false}\n                            roleIdFilter={this.state.roleIdFilter}\n                          />\n                        );\n                      })\n                    }\n                  />\n                )}\n              </RoleContext.Consumer>\n            ) : (\n              ''\n            )}\n            {this.state.roleIdFilter == roleIdSupervisor || this.state.roleIdFilter == 0 ? (\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-school-life',\n                      permissionList: this.props.permissionList,\n                    }}\n                    yes={() =>\n                      this.state.usersList.supervisors.map((element) => {\n                        return (\n                          <UsersListItem\n                            user={element}\n                            handleEdit={this.handleEdit}\n                            handleDelete={this.handleDelete}\n                            archived={false}\n                            roleIdFilter={this.state.roleIdFilter}\n                          />\n                        );\n                      })\n                    }\n                  />\n                )}\n              </RoleContext.Consumer>\n            ) : (\n              ''\n            )}\n            {this.state.roleIdFilter == roleIdDirector || this.state.roleIdFilter == 0 ? (\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-direction-membre',\n                      permissionList: this.props.permissionList,\n                    }}\n                    yes={() =>\n                      this.state.usersList.directors.map((element) => {\n                        return (\n                          <UsersListItem\n                            user={element}\n                            handleEdit={this.handleEdit}\n                            handleDelete={this.handleDelete}\n                            archived={false}\n                            roleIdFilter={this.state.roleIdFilter}\n                          />\n                        );\n                      })\n                    }\n                  />\n                )}\n              </RoleContext.Consumer>\n            ) : (\n              ''\n            )}\n            {this.state.roleIdFilter == roleIdProfessor || this.state.roleIdFilter == 0 ? (\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-prof',\n                      permissionList: this.props.permissionList,\n                    }}\n                    yes={() =>\n                      this.state.usersList.professors.map((element) => {\n                        return (\n                          <UsersListItem\n                            user={element}\n                            handleEdit={this.handleEdit}\n                            handleDelete={this.handleDelete}\n                            archived={false}\n                            roleIdFilter={this.state.roleIdFilter}\n                          />\n                        );\n                      })\n                    }\n                  />\n                )}\n              </RoleContext.Consumer>\n            ) : (\n              ''\n            )}\n            {this.state.roleIdFilter == roleIdParent || this.state.roleIdFilter == 0 ? (\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-parent',\n                      permissionList: this.props.permissionList,\n                    }}\n                    yes={() =>\n                      this.state.usersList.parents.map((element) => {\n                        return (\n                          <UsersListItem\n                            roleIdFilter={this.state.roleIdFilter}\n                            user={element}\n                            handleEdit={this.handleEdit}\n                            handleDelete={this.handleDelete}\n                            archived={false}\n                          />\n                        );\n                      })\n                    }\n                  />\n                )}\n              </RoleContext.Consumer>\n            ) : (\n              ''\n            )}\n            {this.state.roleIdFilter == roleIdStudent || this.state.roleIdFilter == 0 ? (\n              <RoleContext.Consumer>\n                {({ role }) => (\n                  <Can\n                    role={role}\n                    perform=\"user-permission\"\n                    data={{\n                      permission: 'get-student',\n                      permissionList: this.props.permissionList,\n                    }}\n                    yes={() =>\n                      this.state.usersList.students.map((element) => {\n                        return (\n                          <UsersListItem\n                            roleIdFilter={this.state.roleIdFilter}\n                            user={element}\n                            handleEdit={this.handleEdit}\n                            handleDelete={this.handleDelete}\n                            archived={false}\n                          />\n                        );\n                      })\n                    }\n                  />\n                )}\n              </RoleContext.Consumer>\n            ) : (\n              ''\n            )}\n          </TableBody>\n        </Table>\n        {this.state.isOpen ? (\n          <EditUsers\n            schoolSession={this.state.item}\n            closeModal={this.handleCancel}\n            isOpen={this.state.isOpen}\n            values={this.state}\n            handleAnnule={this.handleAnnule}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            handleToggle={this.handleToggle}\n            handleChangeDateStart={this.handleChangeDateStart}\n            handleChangeDateEnd={this.handleChangeDateEnd}\n            handleChangeStartDate={this.handleChangeStartDate}\n            handleChangeEndDate={this.handleChangeEndDate}\n            educationTypes={this.props.educationTypes}\n            handleChangeEducationType={this.handleChangeEducationType}\n          />\n        ) : (\n          ''\n        )}\n\n        {this.state.deleteIsopen === true ? (\n          <DeleteUsersItem\n            handleDeleteSchoolSession={this.handleDeleteSchoolSession}\n            deleteItem={this.state.deleteItem}\n            handleCancel={this.handleCancel}\n            deleteIsopen={this.state.deleteIsopen}\n          />\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    subjects: state.subject.subjects,\n    levels: state.levelsReducer.levels,\n  };\n}\n\nexport default connect(mapStateToProps, {})(UsersList);\n"]},"metadata":{},"sourceType":"module"}