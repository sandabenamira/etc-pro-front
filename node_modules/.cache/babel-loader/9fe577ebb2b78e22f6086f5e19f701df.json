{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport { FETECHED_ALL_SCHOOL_YEAR_ETAB, ADD_SCHOOL_YEAR_ETAB, EDIT_SCHOOL_YEAR_ETAB, DELETE_SCHOOL_YEAR_ETAB, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE, GET_USER_PROFILE } from \"../constants/ActionTypes\";\nimport _ from \"lodash\";\nexport const addSchoolYearEtab = data => {\n  //1\n  return dispatch => {\n    let apiEndpoint = `/school_year_etablissements?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(res => {\n      if (res.data.some(arrayTest => arrayTest.establishment_id == data.establishment_id && arrayTest.school_year_id == data.school_year_id)) {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"L'anneé Scolaire existe déja pour cette établissement\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      } else {\n        classService.post(apiEndpoint, data).then(response => {\n          if (response) {\n            dispatch({\n              type: ADD_SCHOOL_YEAR_ETAB,\n              payload: response.data\n            });\n            dispatch({\n              type: SHOW_SUCCESS_MESSAGE,\n              payload: \"La création est effectuée avec succès\"\n            });\n            setTimeout(() => {\n              dispatch({\n                type: HIDE_SUCCESS_MESSAGE\n              });\n            }, 4000);\n          } else {\n            dispatch({\n              type: SHOW_ERROR_MESSAGE,\n              payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n            });\n            setTimeout(() => {\n              dispatch({\n                type: HIDE_ERROR_MESSAGE\n              });\n            }, 4000);\n          }\n        });\n      }\n    });\n  };\n};\nexport const getSchoolYearEtabs = () => {\n  return dispatch => {\n    let apiEndpoint = `/school_years?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      dispatch({\n        type: FETECHED_ALL_SCHOOL_YEAR_ETAB,\n        payload: response.data\n      });\n    }).catch(err => {});\n  };\n};\nexport const updateShoolYear = data => {\n  return dispatch => {\n    dispatch({\n      type: GET_USER_PROFILE,\n      payload: data\n    });\n  };\n};","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/actions/SchoolYearEtabAction.js"],"names":["classService","FETECHED_ALL_SCHOOL_YEAR_ETAB","ADD_SCHOOL_YEAR_ETAB","EDIT_SCHOOL_YEAR_ETAB","DELETE_SCHOOL_YEAR_ETAB","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","GET_USER_PROFILE","_","addSchoolYearEtab","data","dispatch","apiEndpoint","localStorage","token","get","then","res","some","arrayTest","establishment_id","school_year_id","type","payload","setTimeout","post","response","getSchoolYearEtabs","catch","err","updateShoolYear"],"mappings":"AAAA,SAASA,YAAT,QAA6B,4BAA7B;AACA,SACEC,6BADF,EAEEC,oBAFF,EAGEC,qBAHF,EAIEC,uBAJF,EAKEC,kBALF,EAMEC,kBANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,gBATF,QAUO,0BAVP;AAYA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,IAAD,IAAU;AACzC;AACA,SAAQC,QAAD,IAAc;AACnB,QAAIC,WAAW,GAAI,4CAA2CC,YAAY,CAACC,KAAM,EAAjF;AACAhB,IAAAA,YAAY,CAACiB,GAAb,CAAiBH,WAAjB,EAA8BI,IAA9B,CAAoCC,GAAD,IAAS;AAC1C,UACEA,GAAG,CAACP,IAAJ,CAASQ,IAAT,CACGC,SAAD,IACEA,SAAS,CAACC,gBAAV,IAA8BV,IAAI,CAACU,gBAAnC,IACAD,SAAS,CAACE,cAAV,IAA4BX,IAAI,CAACW,cAHrC,CADF,EAME;AACAV,QAAAA,QAAQ,CAAC;AACPW,UAAAA,IAAI,EAAEnB,kBADC;AAEPoB,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAIAC,QAAAA,UAAU,CAAC,MAAM;AACfb,UAAAA,QAAQ,CAAC;AAAEW,YAAAA,IAAI,EAAElB;AAAR,WAAD,CAAR;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OAdD,MAcO;AACLN,QAAAA,YAAY,CAAC2B,IAAb,CAAkBb,WAAlB,EAA+BF,IAA/B,EAAqCM,IAArC,CAA2CU,QAAD,IAAc;AACtD,cAAIA,QAAJ,EAAc;AACZf,YAAAA,QAAQ,CAAC;AAAEW,cAAAA,IAAI,EAAEtB,oBAAR;AAA8BuB,cAAAA,OAAO,EAAEG,QAAQ,CAAChB;AAAhD,aAAD,CAAR;AACAC,YAAAA,QAAQ,CAAC;AACPW,cAAAA,IAAI,EAAEhB,oBADC;AAEPiB,cAAAA,OAAO,EAAE;AAFF,aAAD,CAAR;AAIAC,YAAAA,UAAU,CAAC,MAAM;AACfb,cAAAA,QAAQ,CAAC;AAAEW,gBAAAA,IAAI,EAAEjB;AAAR,eAAD,CAAR;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WATD,MASO;AACLM,YAAAA,QAAQ,CAAC;AACPW,cAAAA,IAAI,EAAEnB,kBADC;AAEPoB,cAAAA,OAAO,EACL;AAHK,aAAD,CAAR;AAKAC,YAAAA,UAAU,CAAC,MAAM;AACfb,cAAAA,QAAQ,CAAC;AAAEW,gBAAAA,IAAI,EAAElB;AAAR,eAAD,CAAR;AACD,aAFS,EAEP,IAFO,CAAV;AAGD;AACF,SApBD;AAqBD;AACF,KAtCD;AAuCD,GAzCD;AA0CD,CA5CM;AA6CP,OAAO,MAAMuB,kBAAkB,GAAG,MAAM;AACtC,SAAQhB,QAAD,IAAc;AACnB,QAAIC,WAAW,GAAI,8BAA6BC,YAAY,CAACC,KAAM,EAAnE;AACAhB,IAAAA,YAAY,CACTiB,GADH,CACOH,WADP,EAEGI,IAFH,CAESU,QAAD,IAAc;AAClBf,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEvB,6BADC;AAEPwB,QAAAA,OAAO,EAAEG,QAAQ,CAAChB;AAFX,OAAD,CAAR;AAID,KAPH,EAQGkB,KARH,CAQUC,GAAD,IAAS,CAAE,CARpB;AASD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMC,eAAe,GAAIpB,IAAD,IAAU;AACvC,SAAQC,QAAD,IAAc;AACfA,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEf,gBADC;AAEPgB,MAAAA,OAAO,EAAEb;AAFF,KAAD,CAAR;AAIL,GALD;AAMD,CAPM","sourcesContent":["import { classService } from \"../_services/class.service\";\nimport {\n  FETECHED_ALL_SCHOOL_YEAR_ETAB,\n  ADD_SCHOOL_YEAR_ETAB,\n  EDIT_SCHOOL_YEAR_ETAB,\n  DELETE_SCHOOL_YEAR_ETAB,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n  GET_USER_PROFILE\n} from \"../constants/ActionTypes\";\n\nimport _ from \"lodash\";\n\nexport const addSchoolYearEtab = (data) => {\n  //1\n  return (dispatch) => {\n    let apiEndpoint = `/school_year_etablissements?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then((res) => {\n      if (\n        res.data.some(\n          (arrayTest) =>\n            arrayTest.establishment_id == data.establishment_id &&\n            arrayTest.school_year_id == data.school_year_id\n        )\n      ) {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"L'anneé Scolaire existe déja pour cette établissement\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      } else {\n        classService.post(apiEndpoint, data).then((response) => {\n          if (response) {\n            dispatch({ type: ADD_SCHOOL_YEAR_ETAB, payload: response.data });\n            dispatch({\n              type: SHOW_SUCCESS_MESSAGE,\n              payload: \"La création est effectuée avec succès\",\n            });\n            setTimeout(() => {\n              dispatch({ type: HIDE_SUCCESS_MESSAGE });\n            }, 4000);\n          } else {\n            dispatch({\n              type: SHOW_ERROR_MESSAGE,\n              payload:\n                \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n            });\n            setTimeout(() => {\n              dispatch({ type: HIDE_ERROR_MESSAGE });\n            }, 4000);\n          }\n        });\n      }\n    });\n  };\n};\nexport const getSchoolYearEtabs = () => {\n  return (dispatch) => {\n    let apiEndpoint = `/school_years?access_token=${localStorage.token}`;\n    classService\n      .get(apiEndpoint)\n      .then((response) => {\n        dispatch({\n          type: FETECHED_ALL_SCHOOL_YEAR_ETAB,\n          payload: response.data,\n        });\n      })\n      .catch((err) => {});\n  };\n};\n\nexport const updateShoolYear = (data) => {\n  return (dispatch) => {\n        dispatch({\n          type: GET_USER_PROFILE,\n          payload: data,\n        }); \n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}