{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/ServiceAllocation/ListServiceAllocation.js\";\nimport React, { Component } from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Form, FormGroup, Label, Input, FormText, Row, Col } from 'reactstrap';\nimport CardBox from '../../../../../components/CardBox/index';\nimport ServiceAllocationItem from './ServiceAllocationItem';\nimport { ListItem } from '@material-ui/core';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { connect } from 'react-redux';\nimport EditAllocationService from './EditAllocationService';\nimport DeleteAllcation from './DeleteAllocation';\nimport { addAllocationService, editAllocationService, getAllocationServiceByEstablishment } from '../../../../../actions/AllocationServiceAction';\nimport _ from 'lodash';\nexport class ListServiceAllocation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.HandleSubmitAllocationService = () => {\n      var newData = [];\n      var oldData = [];\n      this.state.servicesSelected.map((allocation, index) => {\n        var allocationData = {};\n        allocationData.fk_id_student = allocation.fk_id_student;\n        allocationData.fk_id_service = allocation.fk_id_service;\n        allocationData.allocation_month = allocation.allocation_month;\n\n        if (allocation.id === '') {\n          if (allocation.allocation_month.length > 0) {\n            newData.push(allocationData);\n          }\n        } else {\n          allocationData.id = allocation.id;\n\n          if (allocation.allocation_month.length > 0) {\n            oldData.push(allocationData); // this.props.editAllocationService(\n            //   allocationData,\n            //   this.props.userProfile.establishment_id,\n            //   this.props.userProfile.school_year_id\n            // );\n          } else {\n            allocationData.status = false;\n            oldData.push(allocationData); // this.props.editAllocationService(\n            //   allocationData,\n            //   this.props.userProfile.establishment_id,\n            //   this.props.userProfile.school_year_id\n            // );\n          }\n        }\n      });\n      this.props.editAllocationService(oldData, this.props.userProfile.establishment_id, this.props.userProfile.school_year_id);\n\n      if (newData.length > 0) {\n        this.props.addAllocationService(newData, this.props.userProfile.establishment_id, this.props.userProfile.school_year_id);\n      }\n\n      this.setState({\n        openEdit: false\n      });\n    };\n\n    this.handleEdit = item => {\n      let obj = {};\n      obj.Class = item.Class;\n      obj.address = item.address;\n      obj.id = item.id;\n      obj.level = item.level;\n      obj.name = item.name;\n      obj.name_ar = item.name_ar;\n      obj.parents = item.parents;\n      obj.phone = item.phone;\n      obj.photo = item.photo;\n      obj.surname = item.surname;\n      obj.surname_ar = item.surname_ar;\n      obj.zip_code = item.zip_code;\n      let servicesSelected = item.services.filter(element => element.id != '');\n      let idServicesAffected = servicesSelected.map(element => element.fk_id_service);\n      this.setState({\n        servicesSelected: servicesSelected,\n        idServicesAffected,\n        openEdit: true,\n        allocationItemEdit: obj\n      });\n    };\n\n    this.handleDelete = item => {\n      this.setState({\n        openDelete: true,\n        allocationItem: item\n      });\n    };\n\n    this.state = {\n      openEdit: false,\n      allocationItemEdit: {},\n      servicesSelected: [],\n      idServicesAffected: [],\n      serviceDefault: [],\n      openDelete: false\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleIcon = this.handleIcon.bind(this);\n    this.HandleSubmitAllocationService = this.HandleSubmitAllocationService.bind(this);\n  }\n\n  handleIcon(itemSelected) {\n    let serviceExistant = [];\n    let idServices = this.state.idServicesAffected;\n    let monthSelected = itemSelected.fk_id_frequency == 7 ? [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] : [];\n    let newService = {\n      allocation_month: monthSelected,\n      service_v2: itemSelected,\n      id: '',\n      fk_id_student: this.state.servicesSelected[0].fk_id_student,\n      fk_id_service: itemSelected.id\n    };\n    serviceExistant = this.state.servicesSelected.filter(service => service.service_v2.id == itemSelected.id);\n    let serviceDelete = this.state.servicesSelected.filter(service => service.service_v2.id != itemSelected.id);\n    let idServicesDelete = idServices.filter(service => service != itemSelected.id);\n\n    if (serviceExistant.length > 0) {\n      this.setState({\n        servicesSelected: serviceDelete,\n        idServicesAffected: idServicesDelete\n      });\n    } else {\n      var newServicesSelected = this.state.servicesSelected;\n      newServicesSelected.push(newService);\n      idServices.push(itemSelected.id);\n      this.setState({\n        servicesSelected: newServicesSelected,\n        idServicesAffected: idServices\n      });\n    }\n  }\n\n  handleCancel() {\n    this.setState({\n      openEdit: false,\n      openDelete: false,\n      allocationItemEdit: {},\n      servicesSelected: [],\n      idServicesAffected: []\n    });\n    this.props.getAllocationServiceByEstablishment(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"text-black col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, this.props.allocationService.map(item => /*#__PURE__*/React.createElement(ServiceAllocationItem, {\n      key: item.id,\n      allocationItem: item,\n      languageId: this.props.settings.languageId,\n      idEstablishment: this.props.userProfile.establishment_id,\n      users: this.props.users,\n      handleEdit: this.handleEdit,\n      handleDelete: this.handleDelete,\n      handleCancel: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    })))), this.state.openEdit ? /*#__PURE__*/React.createElement(EditAllocationService, {\n      openEdit: this.state.openEdit,\n      cancel: this.handleCancel,\n      handleIcon: this.handleIcon,\n      HandleSubmitAllocationService: this.HandleSubmitAllocationService,\n      services: this.props.services,\n      allocationItemEdit: this.state.allocationItemEdit,\n      servicesSelected: this.state.servicesSelected,\n      idServicesAffected: this.state.idServicesAffected,\n      values: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }) : '');\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    settings: state.settings.locale,\n    users: state.stuppUsers.remoteStuppUsers,\n    services: state.service.servicesV2\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addAllocationService,\n  editAllocationService,\n  getAllocationServiceByEstablishment\n})(ListServiceAllocation);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/ServiceAllocation/ListServiceAllocation.js"],"names":["React","Component","Select","MenuItem","IntlMessages","TextField","InputLabel","makeStyles","Form","FormGroup","Label","Input","FormText","Row","Col","CardBox","ServiceAllocationItem","ListItem","TablePagination","connect","EditAllocationService","DeleteAllcation","addAllocationService","editAllocationService","getAllocationServiceByEstablishment","_","ListServiceAllocation","constructor","props","HandleSubmitAllocationService","newData","oldData","state","servicesSelected","map","allocation","index","allocationData","fk_id_student","fk_id_service","allocation_month","id","length","push","status","userProfile","establishment_id","school_year_id","setState","openEdit","handleEdit","item","obj","Class","address","level","name","name_ar","parents","phone","photo","surname","surname_ar","zip_code","services","filter","element","idServicesAffected","allocationItemEdit","handleDelete","openDelete","allocationItem","serviceDefault","handleCancel","bind","handleIcon","itemSelected","serviceExistant","idServices","monthSelected","fk_id_frequency","newService","service_v2","service","serviceDelete","idServicesDelete","newServicesSelected","render","allocationService","settings","languageId","users","mapStateToProps","auth","locale","stuppUsers","remoteStuppUsers","servicesV2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Form, FormGroup, Label, Input, FormText, Row, Col } from 'reactstrap';\nimport CardBox from '../../../../../components/CardBox/index';\nimport ServiceAllocationItem from './ServiceAllocationItem';\nimport { ListItem } from '@material-ui/core';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { connect } from 'react-redux';\nimport EditAllocationService from './EditAllocationService';\nimport DeleteAllcation from './DeleteAllocation';\nimport {\n  addAllocationService,\n  editAllocationService,\n  getAllocationServiceByEstablishment,\n} from '../../../../../actions/AllocationServiceAction';\n\nimport _ from 'lodash';\n\nexport class ListServiceAllocation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      openEdit: false,\n      allocationItemEdit: {},\n      servicesSelected: [],\n      idServicesAffected: [],\n      serviceDefault: [],\n      openDelete: false,\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleIcon = this.handleIcon.bind(this);\n    this.HandleSubmitAllocationService = this.HandleSubmitAllocationService.bind(this);\n  }\n\n  HandleSubmitAllocationService = () => {\n    var newData = [];\n    var oldData = [];\n    this.state.servicesSelected.map((allocation, index) => {\n      var allocationData = {};\n      allocationData.fk_id_student = allocation.fk_id_student;\n      allocationData.fk_id_service = allocation.fk_id_service;\n      allocationData.allocation_month = allocation.allocation_month;\n      if (allocation.id === '') {\n        if (allocation.allocation_month.length > 0) {\n          newData.push(allocationData);\n        }\n      } else {\n        allocationData.id = allocation.id;\n\n        if (allocation.allocation_month.length > 0) {\n          oldData.push(allocationData);\n          // this.props.editAllocationService(\n          //   allocationData,\n          //   this.props.userProfile.establishment_id,\n          //   this.props.userProfile.school_year_id\n          // );\n        } else {\n          allocationData.status = false;\n          oldData.push(allocationData);\n          // this.props.editAllocationService(\n          //   allocationData,\n          //   this.props.userProfile.establishment_id,\n          //   this.props.userProfile.school_year_id\n          // );\n        }\n      }\n    });\n\n    this.props.editAllocationService(\n      oldData,\n      this.props.userProfile.establishment_id,\n      this.props.userProfile.school_year_id\n    );\n    if (newData.length > 0) {\n      this.props.addAllocationService(\n        newData,\n        this.props.userProfile.establishment_id,\n        this.props.userProfile.school_year_id\n      );\n    }\n    this.setState({\n      openEdit: false,\n    });\n  };\n  handleIcon(itemSelected) {\n    let serviceExistant = [];\n    let idServices = this.state.idServicesAffected;\n    let monthSelected =\n      itemSelected.fk_id_frequency == 7 ? [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] : [];\n    let newService = {\n      allocation_month: monthSelected,\n      service_v2: itemSelected,\n      id: '',\n      fk_id_student: this.state.servicesSelected[0].fk_id_student,\n      fk_id_service: itemSelected.id,\n    };\n\n    serviceExistant = this.state.servicesSelected.filter(\n      (service) => service.service_v2.id == itemSelected.id\n    );\n\n    let serviceDelete = this.state.servicesSelected.filter(\n      (service) => service.service_v2.id != itemSelected.id\n    );\n    let idServicesDelete = idServices.filter((service) => service != itemSelected.id);\n    if (serviceExistant.length > 0) {\n      this.setState({\n        servicesSelected: serviceDelete,\n        idServicesAffected: idServicesDelete,\n      });\n    } else {\n      var newServicesSelected = this.state.servicesSelected;\n      newServicesSelected.push(newService);\n      idServices.push(itemSelected.id);\n      this.setState({\n        servicesSelected: newServicesSelected,\n        idServicesAffected: idServices,\n      });\n    }\n  }\n  handleEdit = (item) => {\n    let obj = {};\n    obj.Class = item.Class;\n    obj.address = item.address;\n    obj.id = item.id;\n    obj.level = item.level;\n    obj.name = item.name;\n    obj.name_ar = item.name_ar;\n    obj.parents = item.parents;\n    obj.phone = item.phone;\n    obj.photo = item.photo;\n    obj.surname = item.surname;\n    obj.surname_ar = item.surname_ar;\n    obj.zip_code = item.zip_code;\n    let servicesSelected = item.services.filter((element) => element.id != '');\n    let idServicesAffected = servicesSelected.map((element) => element.fk_id_service);\n    this.setState({\n      servicesSelected: servicesSelected,\n      idServicesAffected,\n      openEdit: true,\n      allocationItemEdit: obj,\n    });\n  };\n  handleDelete = (item) => {\n    this.setState({ openDelete: true, allocationItem: item });\n  };\n\n  handleCancel() {\n    this.setState({\n      openEdit: false,\n      openDelete: false,\n      allocationItemEdit: {},\n      servicesSelected: [],\n      idServicesAffected: [],\n    });\n    this.props.getAllocationServiceByEstablishment(\n      this.props.userProfile.establishment_id,\n      this.props.userProfile.school_year_id\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <CardBox styleName=\"text-black col-lg-12\">\n          <div className=\"row d-flex \">\n            {this.props.allocationService.map((item) => (\n              <ServiceAllocationItem\n                key={item.id}\n                allocationItem={item}\n                languageId={this.props.settings.languageId}\n                idEstablishment={this.props.userProfile.establishment_id}\n                users={this.props.users}\n                handleEdit={this.handleEdit}\n                handleDelete={this.handleDelete}\n                handleCancel={this.handleCancel}\n              />\n            ))}\n          </div>\n        </CardBox>\n        {this.state.openEdit ? (\n          <EditAllocationService\n            openEdit={this.state.openEdit}\n            cancel={this.handleCancel}\n            handleIcon={this.handleIcon}\n            HandleSubmitAllocationService={this.HandleSubmitAllocationService}\n            services={this.props.services}\n            allocationItemEdit={this.state.allocationItemEdit}\n            servicesSelected={this.state.servicesSelected}\n            idServicesAffected={this.state.idServicesAffected}\n            values={this.state}\n          />\n        ) : (\n          ''\n        )}\n        {/* {this.state.openDelete ? (\n          <DeleteAllcation cancelModalDelete={this.handleCancel} item={this.state.allocationItem} />\n        ) : (\n          ''\n        )} */}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.auth.userProfile,\n    settings: state.settings.locale,\n    users: state.stuppUsers.remoteStuppUsers,\n    services: state.service.servicesV2,\n  };\n};\nexport default connect(mapStateToProps, {\n  addAllocationService,\n  editAllocationService,\n  getAllocationServiceByEstablishment,\n})(ListServiceAllocation);\n"]},"metadata":{},"sourceType":"module"}