{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Community/routes/InternalMail/Mail.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport mails from \"./mails\";\nimport folders from \"./folders\";\nimport filters from \"./filters\";\nimport labels from \"./labels\";\nimport options from \"./options\";\nimport MailList from \"./MailList\";\nimport ComposeMail from \"./Compose\";\nimport AppModuleHeader from \"./AppModuleHeader\";\nimport MailDetail from \"./MailDetail\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport CustomScrollbars from \"./CustomScrollbars\";\nimport { classService } from \"../../../../../_services/class.service\";\nimport { roleIdAdmin, roleIdProfessor, roleIdStudent, roleIdDirector, roleIdParent, roleIdSupervisor } from \"../../../../../config/config\";\nimport _ from \"lodash\";\nimport { sendMail } from \"../../../../../actions/MailAction\";\n\nclass Mail extends Component {\n  constructor() {\n    super();\n\n    this.sendMail = () => {\n      let dataMail = {};\n      dataMail.status = true;\n      dataMail.subject = this.state.subject;\n      dataMail.message = this.state.message;\n      dataMail.date_mail = new Date();\n      dataMail.read = false;\n      dataMail.starred = false;\n      dataMail.important = false;\n      dataMail.fk_id_sender_profile = this.props.userProfile.id;\n      this.props.dispatch(sendMail(dataMail, this.state.receivers, this.state.mailFiles));\n      this.setState({\n        classes: [],\n        professorsIds: [],\n        subject: \"\",\n        roleId: null,\n        classId: null,\n        professorsFiltred: [],\n        adminsIds: [],\n        receivers: [],\n        mailFiles: [],\n        nameFiles: [],\n        users: [],\n        message: \"\",\n        classStudentFilter: [],\n        studentFiltred: [],\n        studentsIds: [],\n        filterLevelStudentId: null,\n        filterClassStudentId: null,\n        parentsIds: [],\n        parentFiltred: []\n      });\n    };\n\n    this.handleChangeRole = event => {\n      this.setState({\n        roleId: event.target.value\n      });\n\n      if (event.target.value !== 0) {\n        let receivers = [];\n\n        switch (event.target.value) {\n          case roleIdAdmin:\n            receivers = _.map(this.props.admins, \"profileId\");\n            this.setState({\n              receivers,\n              users: this.props.admins\n            });\n            break;\n\n          case roleIdProfessor:\n            receivers = _.map(this.props.professors, \"profileId\");\n            this.setState({\n              receivers,\n              professorsFiltred: [],\n              professorsIds: []\n            });\n            break;\n\n          case roleIdStudent:\n            receivers = _.map(this.props.students, \"profileId\");\n            this.setState({\n              receivers,\n              studentsIds: [],\n              filterLevelStudentId: null\n            });\n            break;\n\n          case roleIdSupervisor:\n            receivers = _.map(this.props.supervisors, \"profileId\");\n            this.setState({\n              receivers,\n              users: this.props.supervisors\n            });\n            break;\n\n          case roleIdDirector:\n            receivers = _.map(this.props.directors, \"profileId\");\n            this.setState({\n              receivers,\n              users: this.props.directors\n            });\n            break;\n\n          default:\n            break;\n        }\n      } else {\n        this.setState({\n          receivers: [],\n          adminsIds: []\n        });\n      }\n    };\n\n    this.handleChangeClass = event => {\n      this.setState({\n        classId: event.target.value,\n        professorsIds: []\n      });\n      let professorsFiltred = [];\n      let receivers = [];\n      this.props.professors.forEach(professor => {\n        professor.inforamtionsProf.forEach(element => {\n          if (element.ClassId === event.target.value) {\n            professorsFiltred.push(professor);\n            receivers.push(professor.profileId);\n          }\n        });\n      });\n      this.setState({\n        professorsFiltred,\n        receivers\n      });\n    };\n\n    this.handleChangeSubject = event => {\n      this.setState({\n        subject: event.target.value\n      });\n    };\n\n    this.handleChangeEditor = event => {\n      let message = \"\";\n      event.blocks.map(element => {\n        message = message + \" \" + element.text;\n      });\n      this.setState({\n        message\n      });\n    };\n\n    this.handleChangeProfessorIds = event => {\n      this.setState({\n        professorsIds: event.target.value,\n        receivers: event.target.value\n      });\n    };\n\n    this.handleChangeAdminsIds = event => {\n      this.setState({\n        adminsIds: event.target.value,\n        receivers: event.target.value\n      });\n    };\n\n    this.handleChangeStudentsIds = event => {\n      this.setState({\n        studentsIds: event.target.value,\n        receivers: event.target.value\n      });\n\n      if (this.state.roleId === roleIdParent) {\n        let parentFiltred = [];\n        this.props.parents.forEach(element => {\n          element.inforamtionsParent.forEach(item => {\n            event.target.value.forEach(id => {\n              if (id == item.studentProfileId) {\n                parentFiltred.push(element);\n              }\n            });\n          });\n        });\n        this.setState({\n          parentFiltred\n        });\n      }\n    };\n\n    this.handleChangeParentsIds = event => {\n      this.setState({\n        parentsIds: event.target.value,\n        receivers: event.target.value\n      });\n    };\n\n    this.handleChangeFilterStudent = name => event => {\n      if (name === \"filterLevelStudentId\") {\n        let classStudentFilter = this.props.classes.filter(element => element.fk_id_level_v4 === event.target.value);\n        this.setState({\n          classStudentFilter,\n          studentsIds: [],\n          filterLevelStudentId: event.target.value,\n          filterClassStudentId: null\n        });\n      }\n\n      if (name === \"filterClassStudentId\") {\n        let studentFiltred = [];\n        this.props.students.forEach(student => {\n          if (student.inforamtionsStudent.classInformation.classId === event.target.value) {\n            studentFiltred.push(student);\n          }\n        });\n        this.setState({\n          studentFiltred,\n          studentsIds: [],\n          filterClassStudentId: event.target.value\n        });\n      }\n    };\n\n    this.MailSideBar = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-side-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-email mr-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"mail.mailbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-side-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CustomScrollbars, {\n        className: \"module-side-scroll scrollbar\",\n        style: {\n          height: this.props.width >= 1200 ? \"calc(100vh - 200px)\" : \"calc(100vh - 80px)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-add-task\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"btn-block\",\n        onClick: () => {\n          this.setState({\n            composeMail: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-edit zmdi-hc-fw\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"mail.compose\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 17\n        }\n      }), \" \")), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"module-nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }\n      }, this.getNavFolders(), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"mail.filters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }\n      })), this.getNavFilters(), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"mail.labels\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 17\n        }\n      })), this.getNavLabels()))));\n    };\n\n    this.onDeleteMail = () => {\n      const mails = this.state.allMail.map(mail => mail.selected && mail.folder === this.state.selectedFolder ? { ...mail,\n        folder: 4,\n        selected: false\n      } : mail);\n      this.setState({\n        alertMessage: \"Mail Deleted Successfully\",\n        showMessage: true,\n        selectedMails: 0,\n        allMail: mails,\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.getNavFolders = () => {\n      return folders.map((folder, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          const filterMails = this.state.allMail.filter(mail => mail.folder === folder.id);\n          this.setState({\n            selectedFolder: folder.id,\n            noContentFoundMessage: \"No mail found in selected folder\",\n            currentMail: null,\n            loader: true,\n            folderMails: filterMails\n          });\n          setTimeout(() => {\n            this.setState({\n              loader: false\n            });\n          }, 1500);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: `jr-link ${this.state.selectedFolder === folder.id ? \"active\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `zmdi zmdi-${folder.icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }\n      }, folder.title))));\n    };\n\n    this.onFolderMenuItemSelect = folderId => {\n      this.handleRequestClose();\n      const mails = this.state.allMail.map(mail => mail.selected && mail.folder === this.state.selectedFolder ? { ...mail,\n        folder: folderId,\n        selected: false\n      } : mail);\n      this.setState({\n        selectedMails: 0,\n        allMail: mails,\n        noContentFoundMessage: \"No mail found in selected folder\",\n        alertMessage: \"Mail has been moved successfully\",\n        showMessage: true,\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.onLabelMenuItemSelect = label => {\n      this.handleRequestClose();\n      const mails = this.state.allMail.map(mail => {\n        if (mail.selected && mail.folder === this.state.selectedFolder) {\n          if (mail.labels.includes(label.id)) {\n            return { ...mail,\n              labels: this.removeLabel(mail, label.id)\n            };\n          } else {\n            return { ...mail,\n              labels: this.addLabel(mail, label.id)\n            };\n          }\n        } else {\n          return mail;\n        }\n      });\n      this.setState({\n        noContentFoundMessage: \"No mail found in selected label\",\n        alertMessage: \"Label Updated Successfully\",\n        showMessage: true,\n        allMail: mails,\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.handleRequestClose = () => {\n      this.setState({\n        composeMail: false,\n        showMessage: false,\n        folderMenuState: false,\n        labelMenuState: false,\n        optionMenuState: false,\n        classes: [],\n        professorsIds: [],\n        subject: \"\",\n        roleId: null,\n        classId: null,\n        professorsFiltred: [],\n        adminsIds: [],\n        receivers: [],\n        mailFiles: [],\n        nameFiles: [],\n        users: [],\n        message: \"\",\n        classStudentFilter: [],\n        studentFiltred: [],\n        studentsIds: [],\n        filterLevelStudentId: null,\n        filterClassStudentId: null,\n        parentsIds: [],\n        parentFiltred: []\n      });\n    };\n\n    this.getNavFilters = () => {\n      return filters.map((filter, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          const filterMails = this.state.allMail.filter(mail => {\n            if (filter.id === 0 && mail.starred) {\n              return mail;\n            } else if (filter.id === 1 && mail.important) {\n              return mail;\n            }\n\n            return null;\n          });\n          this.setState({\n            noContentFoundMessage: \"No mail found in selected filter\",\n            loader: true,\n            folderMails: filterMails\n          });\n          setTimeout(() => {\n            this.setState({\n              loader: false\n            });\n          }, 1500);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"jr-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `zmdi zmdi-${filter.icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }\n      }, filter.title))));\n    };\n\n    this.onFolderSelect = event => {\n      this.setState({\n        anchorEl: event.currentTarget,\n        folderMenuState: !this.state.folderMenuState\n      });\n    };\n\n    this.onLabelSelect = event => {\n      this.setState({\n        anchorEl: event.currentTarget,\n        labelMenuState: !this.state.labelMenuState\n      });\n    };\n\n    this.onOptionMenuSelect = event => {\n      this.setState({\n        anchorEl: event.currentTarget,\n        optionMenuState: !this.state.optionMenuState\n      });\n    };\n\n    this.onOptionMenuItemSelect = option => {\n      switch (option.title) {\n        case \"All\":\n          this.handleRequestClose();\n          this.getAllMail();\n          break;\n\n        case \"None\":\n          this.handleRequestClose();\n          this.getUnselectedAllMail();\n          break;\n\n        case \"Read\":\n          this.handleRequestClose();\n          this.getReadMail();\n          break;\n\n        case \"Unread\":\n          this.handleRequestClose();\n          this.getUnreadMail();\n          break;\n\n        case \"Starred\":\n          this.handleRequestClose();\n          this.getStarredMail();\n          break;\n\n        case \"Unstarred\":\n          this.handleRequestClose();\n          this.getUnStarredMail();\n          break;\n\n        case \"Important\":\n          this.handleRequestClose();\n          this.getImportantMail();\n          break;\n\n        case \"Unimportant\":\n          this.handleRequestClose();\n          this.getUnimportantMail();\n          break;\n\n        default:\n          this.handleRequestClose();\n          this.getAllMail();\n      }\n    };\n\n    this.getAllMail = () => {\n      let mails = this.state.allMail.map(mail => mail.folder === this.state.selectedFolder ? { ...mail,\n        selected: true\n      } : mail);\n      this.setState({\n        selectedMails: mails.length,\n        allMail: mails,\n        optionName: \"All\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.getUnselectedAllMail = () => {\n      let mails = this.state.allMail.map(mail => mail.folder === this.state.selectedFolder ? { ...mail,\n        selected: false\n      } : mail);\n      this.setState({\n        selectedMails: 0,\n        allMail: mails,\n        optionName: \"None\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.getReadMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (mail.read) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: \"Read\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getUnreadMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (!mail.read) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: \"Unread\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getStarredMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (mail.starred) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: \"Starred\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getUnStarredMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (!mail.starred) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: \"UnStarred\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getImportantMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (mail.important) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: \"Important\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getUnimportantMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (!mail.important) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        optionName: \"Unimportant\",\n        allMail: mails,\n        noContentFoundMessage: \"No Mail found in selected Label\",\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getNavLabels = () => {\n      return labels.map((label, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          const filterMails = this.state.allMail.filter(mail => mail.labels.includes(label.id));\n          this.setState({\n            loader: true,\n            noContentFoundMessage: \"No mail found in selected label\",\n            folderMails: filterMails\n          });\n          setTimeout(() => {\n            this.setState({\n              loader: false\n            });\n          }, 1500);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"jr-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `zmdi zmdi-circle text-${label.color}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }\n      }, label.title))));\n    };\n\n    this.searchMail = searchText => {\n      if (searchText === \"\") {\n        this.setState({\n          folderMails: this.state.allMail.filter(mail => !mail.deleted)\n        });\n      } else {\n        const searchMails = this.state.allMail.filter(mail => !mail.deleted && mail.subject.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n        this.setState({\n          folderMails: searchMails\n        });\n      }\n    };\n\n    this.displayMail = (currentMail, folderMails, noContentFoundMessage) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"module-box-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 7\n        }\n      }, currentMail === null ? folderMails.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        style: {\n          height: this.props.width >= 1200 ? \"calc(100vh - 265px)\" : \"calc(100vh - 245px)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 13\n        }\n      }, noContentFoundMessage) : /*#__PURE__*/React.createElement(MailList, {\n        mails: folderMails,\n        onStartSelect: this.onStartSelect.bind(this),\n        onMailSelect: this.onMailSelect.bind(this),\n        width: this.props.width,\n        onMailChecked: this.onMailChecked.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(MailDetail, {\n        mail: currentMail,\n        onStartSelect: this.onStartSelect.bind(this),\n        width: this.props.width,\n        onImportantSelect: this.onImportantSelect.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 11\n        }\n      }));\n    };\n\n    this.getMailActions = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.onFolderSelect.bind(this),\n        className: \"icon-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-folder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.onDeleteMail.bind(this),\n        className: \"icon-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.onLabelSelect.bind(this),\n        className: \"icon-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"zmdi zmdi-label-alt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    this.state = {\n      searchMail: \"\",\n      noContentFoundMessage: \"No mail found in selected folder\",\n      alertMessage: \"\",\n      showMessage: false,\n      drawerState: false,\n      optionName: \"None\",\n      anchorEl: null,\n      allMail: mails,\n      loader: true,\n      currentMail: null,\n      user: {\n        name: \"Robert Johnson\",\n        email: \"robert@example.com\",\n        avatar: \"https://via.placeholder.com/150x150\"\n      },\n      selectedMails: 0,\n      selectedFolder: 0,\n      composeMail: false,\n      labelMenuState: false,\n      folderMenuState: false,\n      optionMenuState: false,\n      folderMails: mails.filter(mail => mail.folder === 0),\n      classes: [],\n      professorsIds: [],\n      subject: \"\",\n      roleId: null,\n      classId: null,\n      professorsFiltred: [],\n      adminsIds: [],\n      receivers: [],\n      mailFiles: [],\n      nameFiles: [],\n      users: [],\n      message: \"\",\n      classStudentFilter: [],\n      studentFiltred: [],\n      studentsIds: [],\n      filterLevelStudentId: null,\n      filterClassStudentId: null,\n      parentsIds: [],\n      parentFiltred: []\n    };\n  }\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter(element => element != filename);\n    let mailFiles = this.state.mailFiles.filter(element => element.name != filename);\n    this.setState({\n      nameFiles,\n      mailFiles\n    });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.mailFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map(element => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({\n        mailFiles: oldFiles,\n        nameFiles\n      });\n    } else {\n      this.setState({\n        messageAlerte: \"Vous avez dépasser 5 fichiers\",\n        alerteStatus: true\n      });\n      setTimeout(() => {\n        this.setState({\n          messageAlerte: \"\",\n          alerteStatus: false\n        });\n      }, 4000);\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        loader: false\n      });\n    }, 1500);\n  }\n\n  onMailChecked(data) {\n    data.selected = !data.selected;\n    let selectedMail = 0;\n    const mails = this.state.folderMails.map(mail => {\n      if (mail.selected) {\n        selectedMail++;\n      }\n\n      if (mail.id === data.id) {\n        if (mail.selected) {\n          selectedMail++;\n        }\n\n        return data;\n      } else {\n        return mail;\n      }\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      folderMails: mails\n    });\n  }\n\n  onAllMailSelect() {\n    const selectAll = this.state.selectedMails <= this.state.folderMails.length;\n\n    if (selectAll) {\n      this.getAllMail();\n    } else {\n      this.getUnselectedAllMail();\n    }\n  }\n\n  removeLabel(mail, label) {\n    mail.labels.splice(mail.labels.indexOf(label), 1);\n\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\n      this.setState({\n        currentMail: { ...mail,\n          labels: mail.labels\n        }\n      });\n    }\n\n    return mail.labels;\n  }\n\n  onStartSelect(data) {\n    data.starred = !data.starred;\n    this.setState({\n      alertMessage: data.starred ? \"Mail Mark as Star\" : \"Mail Remove as Star\",\n      showMessage: true,\n      folderMails: this.state.folderMails.map(mail => mail.id === data.id ? data : mail)\n    });\n  }\n\n  onImportantSelect(data) {\n    data.important = !data.important;\n    this.setState({\n      alertMessage: data.important ? \"Mail Mark as Important\" : \"Mail Remove as Important\",\n      showMessage: true,\n      folderMails: this.state.folderMails.map(mail => mail.id === data.id ? data : mail)\n    });\n  } // onMailSend(data) {\n  //   this.setState({\n  //     alertMessage: \"Mail Sent Successfully\",\n  //     showMessage: true,\n  //     folderMails: this.state.allMail.concat(data),\n  //     allMail: this.state.allMail.concat(data),\n  //   });\n  // }\n\n\n  onMailSelect(mail) {\n    this.setState({\n      loader: true,\n      currentMail: mail\n    });\n    setTimeout(() => {\n      this.setState({\n        loader: false\n      });\n    }, 1500);\n  }\n\n  addLabel(mail, label) {\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\n      this.setState({\n        currentMail: { ...mail,\n          labels: mail.labels.concat(label)\n        }\n      });\n    }\n\n    return mail.labels.concat(label);\n  }\n\n  updateSearch(evt) {\n    this.setState({\n      searchMail: evt.target.value\n    });\n    this.searchMail(evt.target.value);\n  }\n\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState\n    });\n  }\n\n  render() {\n    const {\n      selectedMails,\n      loader,\n      currentMail,\n      folderMails,\n      composeMail,\n      user,\n      alertMessage,\n      showMessage,\n      noContentFoundMessage\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated slideInUpTiny animation-duration-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-module\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-block d-xl-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Drawer, {\n      open: this.state.drawerState,\n      onClose: this.onToggleDrawer.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 15\n      }\n    }, this.MailSideBar())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-module-sidenav d-none d-xl-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 13\n      }\n    }, this.MailSideBar()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-box-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 970,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: \"drawer-btn d-block d-xl-none\",\n      \"aria-label\": \"Menu\",\n      onClick: this.onToggleDrawer.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(AppModuleHeader, {\n      placeholder: \"Search mails\",\n      user: this.state.user,\n      onChange: this.updateSearch.bind(this),\n      value: this.state.searchMail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-box-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-box-topbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 17\n      }\n    }, this.state.currentMail === null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      indeterminate: selectedMails > 0 && selectedMails < folderMails.length,\n      checked: selectedMails > 0,\n      onChange: this.onAllMailSelect.bind(this),\n      value: \"SelectMail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      onClick: this.onOptionMenuSelect.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"px-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 25\n      }\n    }, \" \", this.state.optionName), /*#__PURE__*/React.createElement(IconButton, {\n      className: \"icon-btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1005,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-caret-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 27\n      }\n    })))) : /*#__PURE__*/React.createElement(IconButton, {\n      className: \"icon-btn\",\n      onClick: () => {\n        this.setState({\n          currentMail: null\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-arrow-back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 23\n      }\n    })), selectedMails > 0 && this.getMailActions(), /*#__PURE__*/React.createElement(Menu, {\n      id: \"option-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.state.optionMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 19\n      }\n    }, options.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.title,\n      onClick: this.onOptionMenuItemSelect.bind(this, option),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 23\n      }\n    }, option.title))), /*#__PURE__*/React.createElement(Menu, {\n      id: \"folder-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.state.folderMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 19\n      }\n    }, folders.map(folder => /*#__PURE__*/React.createElement(MenuItem, {\n      key: folder.id,\n      onClick: this.onFolderMenuItemSelect.bind(this, folder.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1058,\n        columnNumber: 23\n      }\n    }, folder.title))), /*#__PURE__*/React.createElement(Menu, {\n      id: \"label-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.state.labelMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 19\n      }\n    }, labels.map(label => /*#__PURE__*/React.createElement(MenuItem, {\n      key: label.id,\n      onClick: this.onLabelMenuItemSelect.bind(this, label),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 23\n      }\n    }, label.title)))), loader ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader-view\",\n      style: {\n        height: this.props.width >= 1200 ? \"calc(100vh - 265px)\" : \"calc(100vh - 245px)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 21\n      }\n    })) : this.displayMail(currentMail, folderMails, noContentFoundMessage), /*#__PURE__*/React.createElement(ComposeMail, {\n      open: composeMail,\n      user: user,\n      onClose: this.handleRequestClose.bind(this) // onMailSend={this.onMailSend.bind(this)}\n      ,\n      handleChangeClass: this.handleChangeClass.bind(this),\n      handleChangeSubject: this.handleChangeSubject.bind(this),\n      handleChangeEditor: this.handleChangeEditor.bind(this),\n      handleChangeRole: this.handleChangeRole.bind(this),\n      handleChangeProfessorIds: this.handleChangeProfessorIds.bind(this),\n      handleChangeAdminsIds: this.handleChangeAdminsIds.bind(this),\n      sendMail: this.sendMail.bind(this),\n      attachFile: this.attachFile.bind(this),\n      deleteFile: this.deleteFile.bind(this),\n      values: this.state,\n      professors: this.props.professors,\n      admins: this.props.admins,\n      classes: this.props.classes,\n      levels: this.props.levels,\n      handleChangeFilterStudent: this.handleChangeFilterStudent.bind(this),\n      handleChangeStudentsIds: this.handleChangeStudentsIds.bind(this),\n      handleChangeParentsIds: this.handleChangeParentsIds.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: this.props.showMessage,\n      autoHideDuration: 3000,\n      onClose: this.handleRequestClose,\n      ContentProps: {\n        \"aria-describedby\": \"message-id\"\n      },\n      message: /*#__PURE__*/React.createElement(\"span\", {\n        id: \"message-id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 22\n        }\n      }, this.props.alertMessage),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1145,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    professors: state.usersReducer.professors,\n    admins: state.usersReducer.admins,\n    supervisors: state.usersReducer.supervisors,\n    directors: state.usersReducer.directors,\n    classes: state.ClassSettingsReducer.classSettings,\n    students: state.usersReducer.students,\n    levels: state.levelsReducer.levels,\n    alertMessage: state.MailReducer.alertMessage,\n    showMessage: state.MailReducer.showMessage,\n    parents: state.usersReducer.parents\n  };\n};\n\nexport default connect(mapStateToProps)(Mail);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Community/routes/InternalMail/Mail.js"],"names":["React","Component","Button","Drawer","Checkbox","Snackbar","connect","IconButton","Menu","MenuItem","CircularProgress","mails","folders","filters","labels","options","MailList","ComposeMail","AppModuleHeader","MailDetail","IntlMessages","CustomScrollbars","classService","roleIdAdmin","roleIdProfessor","roleIdStudent","roleIdDirector","roleIdParent","roleIdSupervisor","_","sendMail","Mail","constructor","dataMail","status","subject","state","message","date_mail","Date","read","starred","important","fk_id_sender_profile","props","userProfile","id","dispatch","receivers","mailFiles","setState","classes","professorsIds","roleId","classId","professorsFiltred","adminsIds","nameFiles","users","classStudentFilter","studentFiltred","studentsIds","filterLevelStudentId","filterClassStudentId","parentsIds","parentFiltred","handleChangeRole","event","target","value","map","admins","professors","students","supervisors","directors","handleChangeClass","forEach","professor","inforamtionsProf","element","ClassId","push","profileId","handleChangeSubject","handleChangeEditor","blocks","text","handleChangeProfessorIds","handleChangeAdminsIds","handleChangeStudentsIds","parents","inforamtionsParent","item","studentProfileId","handleChangeParentsIds","handleChangeFilterStudent","name","filter","fk_id_level_v4","student","inforamtionsStudent","classInformation","MailSideBar","height","width","composeMail","getNavFolders","getNavFilters","getNavLabels","onDeleteMail","allMail","mail","selected","folder","selectedFolder","alertMessage","showMessage","selectedMails","folderMails","index","filterMails","noContentFoundMessage","currentMail","loader","setTimeout","icon","title","onFolderMenuItemSelect","folderId","handleRequestClose","onLabelMenuItemSelect","label","includes","removeLabel","addLabel","folderMenuState","labelMenuState","optionMenuState","onFolderSelect","anchorEl","currentTarget","onLabelSelect","onOptionMenuSelect","onOptionMenuItemSelect","option","getAllMail","getUnselectedAllMail","getReadMail","getUnreadMail","getStarredMail","getUnStarredMail","getImportantMail","getUnimportantMail","length","optionName","selectedMail","color","searchMail","searchText","deleted","searchMails","toLowerCase","indexOf","displayMail","onStartSelect","bind","onMailSelect","onMailChecked","onImportantSelect","getMailActions","drawerState","user","email","avatar","deleteFile","filename","attachFile","e","oldFiles","files","Object","values","undefined","messageAlerte","alerteStatus","componentDidMount","data","onAllMailSelect","selectAll","splice","concat","updateSearch","evt","onToggleDrawer","render","style","levels","vertical","horizontal","mapStateToProps","auth","successStatus","alert","success","errorStatus","error","usersReducer","ClassSettingsReducer","classSettings","levelsReducer","MailReducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport mails from \"./mails\";\nimport folders from \"./folders\";\nimport filters from \"./filters\";\nimport labels from \"./labels\";\nimport options from \"./options\";\nimport MailList from \"./MailList\";\n\nimport ComposeMail from \"./Compose\";\nimport AppModuleHeader from \"./AppModuleHeader\";\nimport MailDetail from \"./MailDetail\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport CustomScrollbars from \"./CustomScrollbars\";\nimport { classService } from \"../../../../../_services/class.service\";\nimport {\n  roleIdAdmin,\n  roleIdProfessor,\n  roleIdStudent,\n  roleIdDirector,\n  roleIdParent,\n  roleIdSupervisor,\n} from \"../../../../../config/config\";\nimport _ from \"lodash\";\nimport { sendMail } from \"../../../../../actions/MailAction\";\n\nclass Mail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchMail: \"\",\n      noContentFoundMessage: \"No mail found in selected folder\",\n      alertMessage: \"\",\n      showMessage: false,\n      drawerState: false,\n      optionName: \"None\",\n      anchorEl: null,\n      allMail: mails,\n      loader: true,\n      currentMail: null,\n      user: {\n        name: \"Robert Johnson\",\n        email: \"robert@example.com\",\n        avatar: \"https://via.placeholder.com/150x150\",\n      },\n      selectedMails: 0,\n      selectedFolder: 0,\n      composeMail: false,\n      labelMenuState: false,\n      folderMenuState: false,\n      optionMenuState: false,\n      folderMails: mails.filter((mail) => mail.folder === 0),\n\n      classes: [],\n      professorsIds: [],\n      subject: \"\",\n      roleId: null,\n      classId: null,\n      professorsFiltred: [],\n      adminsIds: [],\n      receivers: [],\n      mailFiles: [],\n      nameFiles: [],\n      users: [],\n      message: \"\",\n      classStudentFilter: [],\n      studentFiltred: [],\n      studentsIds: [],\n      filterLevelStudentId: null,\n      filterClassStudentId: null,\n      parentsIds: [],\n      parentFiltred: [],\n    };\n  }\n\n  sendMail = () => {\n    let dataMail = {};\n    dataMail.status = true;\n    dataMail.subject = this.state.subject;\n    dataMail.message = this.state.message;\n    dataMail.date_mail = new Date();\n    dataMail.read = false;\n    dataMail.starred = false;\n    dataMail.important = false;\n    dataMail.fk_id_sender_profile = this.props.userProfile.id;\n    this.props.dispatch(\n      sendMail(dataMail, this.state.receivers, this.state.mailFiles)\n    );\n    this.setState({\n      classes: [],\n      professorsIds: [],\n      subject: \"\",\n      roleId: null,\n      classId: null,\n      professorsFiltred: [],\n      adminsIds: [],\n      receivers: [],\n      mailFiles: [],\n      nameFiles: [],\n      users: [],\n      message: \"\",\n      classStudentFilter: [],\n      studentFiltred: [],\n      studentsIds: [],\n      filterLevelStudentId: null,\n      filterClassStudentId: null,\n      parentsIds: [],\n      parentFiltred: [],\n\n    });\n  };\n\n  handleChangeRole = (event) => {\n    this.setState({ roleId: event.target.value });\n    if (event.target.value !== 0) {\n      let receivers = [];\n      switch (event.target.value) {\n        case roleIdAdmin:\n          receivers = _.map(this.props.admins, \"profileId\");\n          this.setState({ receivers, users: this.props.admins });\n          break;\n        case roleIdProfessor:\n          receivers = _.map(this.props.professors, \"profileId\");\n          this.setState({\n            receivers,\n            professorsFiltred: [],\n            professorsIds: [],\n          });\n          break;\n        case roleIdStudent:\n          receivers = _.map(this.props.students, \"profileId\");\n          this.setState({\n            receivers,\n            studentsIds: [],\n            filterLevelStudentId: null,\n          });\n          break;\n        case roleIdSupervisor:\n          receivers = _.map(this.props.supervisors, \"profileId\");\n          this.setState({ receivers, users: this.props.supervisors });\n          break;\n        case roleIdDirector:\n          receivers = _.map(this.props.directors, \"profileId\");\n          this.setState({ receivers, users: this.props.directors });\n          break;\n        default:\n          break;\n      }\n    } else {\n      this.setState({ receivers: [], adminsIds: [] });\n    }\n  };\n\n  handleChangeClass = (event) => {\n    this.setState({ classId: event.target.value, professorsIds: [] });\n    let professorsFiltred = [];\n    let receivers = [];\n    this.props.professors.forEach((professor) => {\n      professor.inforamtionsProf.forEach((element) => {\n        if (element.ClassId === event.target.value) {\n          professorsFiltred.push(professor);\n          receivers.push(professor.profileId);\n        }\n      });\n    });\n    this.setState({ professorsFiltred, receivers });\n  };\n\n  handleChangeSubject = (event) => {\n    this.setState({ subject: event.target.value });\n  };\n\n  handleChangeEditor = (event) => {\n    let message = \"\";\n    event.blocks.map((element) => {\n      message = message + \" \" + element.text;\n    });\n    this.setState({ message });\n  };\n\n  handleChangeProfessorIds = (event) => {\n    this.setState({\n      professorsIds: event.target.value,\n      receivers: event.target.value,\n    });\n  };\n  handleChangeAdminsIds = (event) => {\n    this.setState({\n      adminsIds: event.target.value,\n      receivers: event.target.value,\n    });\n  };\n  handleChangeStudentsIds = (event) => {\n    this.setState({\n      studentsIds: event.target.value,\n      receivers: event.target.value,\n    });\n    if (this.state.roleId === roleIdParent) {\n      let parentFiltred = [];\n      this.props.parents.forEach((element) => {\n        element.inforamtionsParent.forEach((item) => {\n          event.target.value.forEach((id) => {\n            if (id == item.studentProfileId) {\n              parentFiltred.push(element);\n            }\n          });\n        });\n      });\n      this.setState({ parentFiltred });\n    }\n  };\n\n  handleChangeParentsIds = (event) => {\n    this.setState({\n      parentsIds: event.target.value,\n      receivers: event.target.value,\n    });\n  };\n\n  handleChangeFilterStudent = (name) => (event) => {\n    if (name === \"filterLevelStudentId\") {\n      let classStudentFilter = this.props.classes.filter(\n        (element) => element.fk_id_level_v4 === event.target.value\n      );\n      this.setState({\n        classStudentFilter,\n        studentsIds: [],\n        filterLevelStudentId: event.target.value,\n        filterClassStudentId: null,\n      });\n    }\n    if (name === \"filterClassStudentId\") {\n      let studentFiltred = [];\n      this.props.students.forEach((student) => {\n        if (\n          student.inforamtionsStudent.classInformation.classId ===\n          event.target.value\n        ) {\n          studentFiltred.push(student);\n        }\n      });\n      this.setState({\n        studentFiltred,\n        studentsIds: [],\n        filterClassStudentId: event.target.value,\n      });\n    }\n  };\n\n  deleteFile(filename) {\n    let nameFiles = this.state.nameFiles.filter(\n      (element) => element != filename\n    );\n\n    let mailFiles = this.state.mailFiles.filter(\n      (element) => element.name != filename\n    );\n\n    this.setState({ nameFiles, mailFiles });\n  }\n\n  attachFile(e) {\n    var oldFiles = this.state.mailFiles;\n    var files = Object.values(e.target.files);\n    var nameFiles = this.state.nameFiles;\n    if (files !== undefined && this.state.nameFiles.length + files.length < 6) {\n      files.map((element) => {\n        nameFiles.push(element.name);\n        oldFiles.push(element);\n      });\n      this.setState({ mailFiles: oldFiles, nameFiles });\n    } else {\n      this.setState({\n        messageAlerte: \"Vous avez dépasser 5 fichiers\",\n        alerteStatus: true,\n      });\n      setTimeout(() => {\n        this.setState({ messageAlerte: \"\", alerteStatus: false });\n      }, 4000);\n    }\n  }\n\n  MailSideBar = () => {\n    return (\n      <div className=\"module-side\">\n        <div className=\"module-side-header\">\n          <div className=\"module-logo\">\n            <i className=\"zmdi zmdi-email mr-3\" />\n            <span>\n              <IntlMessages id=\"mail.mailbox\" />\n            </span>\n          </div>\n        </div>\n\n        <div className=\"module-side-content\">\n          <CustomScrollbars\n            className=\"module-side-scroll scrollbar\"\n            style={{\n              height:\n                this.props.width >= 1200\n                  ? \"calc(100vh - 200px)\"\n                  : \"calc(100vh - 80px)\",\n            }}\n          >\n            <div className=\"module-add-task\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"btn-block\"\n                onClick={() => {\n                  this.setState({ composeMail: true });\n                }}\n              >\n                <i className=\"zmdi zmdi-edit zmdi-hc-fw\" />\n                <IntlMessages id=\"mail.compose\" />{\" \"}\n              </Button>\n            </div>\n\n            <ul className=\"module-nav\">\n              {this.getNavFolders()}\n\n              <li className=\"module-nav-label\">\n                <IntlMessages id=\"mail.filters\" />\n              </li>\n\n              {this.getNavFilters()}\n\n              <li className=\"module-nav-label\">\n                <IntlMessages id=\"mail.labels\" />\n              </li>\n\n              {this.getNavLabels()}\n            </ul>\n          </CustomScrollbars>\n        </div>\n      </div>\n    );\n  };\n\n  onDeleteMail = () => {\n    const mails = this.state.allMail.map((mail) =>\n      mail.selected && mail.folder === this.state.selectedFolder\n        ? { ...mail, folder: 4, selected: false }\n        : mail\n    );\n    this.setState({\n      alertMessage: \"Mail Deleted Successfully\",\n      showMessage: true,\n      selectedMails: 0,\n      allMail: mails,\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n  };\n  getNavFolders = () => {\n    return folders.map((folder, index) => (\n      <li\n        key={index}\n        onClick={() => {\n          const filterMails = this.state.allMail.filter(\n            (mail) => mail.folder === folder.id\n          );\n          this.setState({\n            selectedFolder: folder.id,\n            noContentFoundMessage: \"No mail found in selected folder\",\n            currentMail: null,\n            loader: true,\n            folderMails: filterMails,\n          });\n          setTimeout(() => {\n            this.setState({ loader: false });\n          }, 1500);\n        }}\n      >\n        <span\n          className={`jr-link ${\n            this.state.selectedFolder === folder.id ? \"active\" : \"\"\n          }`}\n        >\n          <i className={`zmdi zmdi-${folder.icon}`} />\n          <span>{folder.title}</span>\n        </span>\n      </li>\n    ));\n  };\n  onFolderMenuItemSelect = (folderId) => {\n    this.handleRequestClose();\n    const mails = this.state.allMail.map((mail) =>\n      mail.selected && mail.folder === this.state.selectedFolder\n        ? { ...mail, folder: folderId, selected: false }\n        : mail\n    );\n    this.setState({\n      selectedMails: 0,\n      allMail: mails,\n      noContentFoundMessage: \"No mail found in selected folder\",\n      alertMessage: \"Mail has been moved successfully\",\n      showMessage: true,\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n  };\n  onLabelMenuItemSelect = (label) => {\n    this.handleRequestClose();\n    const mails = this.state.allMail.map((mail) => {\n      if (mail.selected && mail.folder === this.state.selectedFolder) {\n        if (mail.labels.includes(label.id)) {\n          return { ...mail, labels: this.removeLabel(mail, label.id) };\n        } else {\n          return { ...mail, labels: this.addLabel(mail, label.id) };\n        }\n      } else {\n        return mail;\n      }\n    });\n    this.setState({\n      noContentFoundMessage: \"No mail found in selected label\",\n      alertMessage: \"Label Updated Successfully\",\n      showMessage: true,\n      allMail: mails,\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n  };\n  handleRequestClose = () => {\n    this.setState({\n      composeMail: false,\n      showMessage: false,\n      folderMenuState: false,\n      labelMenuState: false,\n      optionMenuState: false,\n\n      classes: [],\n      professorsIds: [],\n      subject: \"\",\n      roleId: null,\n      classId: null,\n      professorsFiltred: [],\n      adminsIds: [],\n      receivers: [],\n      mailFiles: [],\n      nameFiles: [],\n      users: [],\n      message: \"\",\n      classStudentFilter: [],\n      studentFiltred: [],\n      studentsIds: [],\n      filterLevelStudentId: null,\n      filterClassStudentId: null,\n      parentsIds: [],\n      parentFiltred: [],\n    });\n  };\n  getNavFilters = () => {\n    return filters.map((filter, index) => (\n      <li\n        key={index}\n        onClick={() => {\n          const filterMails = this.state.allMail.filter((mail) => {\n            if (filter.id === 0 && mail.starred) {\n              return mail;\n            } else if (filter.id === 1 && mail.important) {\n              return mail;\n            }\n            return null;\n          });\n          this.setState({\n            noContentFoundMessage: \"No mail found in selected filter\",\n            loader: true,\n            folderMails: filterMails,\n          });\n          setTimeout(() => {\n            this.setState({ loader: false });\n          }, 1500);\n        }}\n      >\n        <span className=\"jr-link\">\n          <i className={`zmdi zmdi-${filter.icon}`} />\n          <span>{filter.title}</span>\n        </span>\n      </li>\n    ));\n  };\n  onFolderSelect = (event) => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      folderMenuState: !this.state.folderMenuState,\n    });\n  };\n  onLabelSelect = (event) => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      labelMenuState: !this.state.labelMenuState,\n    });\n  };\n  onOptionMenuSelect = (event) => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      optionMenuState: !this.state.optionMenuState,\n    });\n  };\n  onOptionMenuItemSelect = (option) => {\n    switch (option.title) {\n      case \"All\":\n        this.handleRequestClose();\n        this.getAllMail();\n        break;\n      case \"None\":\n        this.handleRequestClose();\n        this.getUnselectedAllMail();\n        break;\n      case \"Read\":\n        this.handleRequestClose();\n        this.getReadMail();\n        break;\n      case \"Unread\":\n        this.handleRequestClose();\n        this.getUnreadMail();\n        break;\n      case \"Starred\":\n        this.handleRequestClose();\n        this.getStarredMail();\n        break;\n      case \"Unstarred\":\n        this.handleRequestClose();\n        this.getUnStarredMail();\n        break;\n      case \"Important\":\n        this.handleRequestClose();\n        this.getImportantMail();\n        break;\n      case \"Unimportant\":\n        this.handleRequestClose();\n        this.getUnimportantMail();\n        break;\n      default:\n        this.handleRequestClose();\n        this.getAllMail();\n    }\n  };\n  getAllMail = () => {\n    let mails = this.state.allMail.map((mail) =>\n      mail.folder === this.state.selectedFolder\n        ? {\n            ...mail,\n            selected: true,\n          }\n        : mail\n    );\n    this.setState({\n      selectedMails: mails.length,\n      allMail: mails,\n      optionName: \"All\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n  };\n  getUnselectedAllMail = () => {\n    let mails = this.state.allMail.map((mail) =>\n      mail.folder === this.state.selectedFolder\n        ? {\n            ...mail,\n            selected: false,\n          }\n        : mail\n    );\n    this.setState({\n      selectedMails: 0,\n      allMail: mails,\n      optionName: \"None\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n  };\n  getReadMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(\n      (mail) => mail.folder === this.state.selectedFolder\n    );\n    mails = mails.map((mail) => {\n      if (mail.read) {\n        selectedMail++;\n        return { ...mail, selected: true };\n      }\n      return { ...mail, selected: false };\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: \"Read\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n    return mails;\n  };\n  getUnreadMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(\n      (mail) => mail.folder === this.state.selectedFolder\n    );\n    mails = mails.map((mail) => {\n      if (!mail.read) {\n        selectedMail++;\n        return { ...mail, selected: true };\n      }\n      return { ...mail, selected: false };\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: \"Unread\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n    return mails;\n  };\n  getStarredMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(\n      (mail) => mail.folder === this.state.selectedFolder\n    );\n    mails = mails.map((mail) => {\n      if (mail.starred) {\n        selectedMail++;\n        return { ...mail, selected: true };\n      }\n      return { ...mail, selected: false };\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: \"Starred\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n    return mails;\n  };\n  getUnStarredMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(\n      (mail) => mail.folder === this.state.selectedFolder\n    );\n    mails = mails.map((mail) => {\n      if (!mail.starred) {\n        selectedMail++;\n        return { ...mail, selected: true };\n      }\n      return { ...mail, selected: false };\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: \"UnStarred\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n    return mails;\n  };\n  getImportantMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(\n      (mail) => mail.folder === this.state.selectedFolder\n    );\n    mails = mails.map((mail) => {\n      if (mail.important) {\n        selectedMail++;\n        return { ...mail, selected: true };\n      }\n      return { ...mail, selected: false };\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: \"Important\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n    return mails;\n  };\n  getUnimportantMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(\n      (mail) => mail.folder === this.state.selectedFolder\n    );\n    mails = mails.map((mail) => {\n      if (!mail.important) {\n        selectedMail++;\n        return { ...mail, selected: true };\n      }\n      return { ...mail, selected: false };\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      optionName: \"Unimportant\",\n      allMail: mails,\n      noContentFoundMessage: \"No Mail found in selected Label\",\n      folderMails: mails.filter(\n        (mail) => mail.folder === this.state.selectedFolder\n      ),\n    });\n    return mails;\n  };\n  getNavLabels = () => {\n    return labels.map((label, index) => (\n      <li\n        key={index}\n        onClick={() => {\n          const filterMails = this.state.allMail.filter((mail) =>\n            mail.labels.includes(label.id)\n          );\n          this.setState({\n            loader: true,\n            noContentFoundMessage: \"No mail found in selected label\",\n            folderMails: filterMails,\n          });\n          setTimeout(() => {\n            this.setState({ loader: false });\n          }, 1500);\n        }}\n      >\n        <span className=\"jr-link\">\n          <i className={`zmdi zmdi-circle text-${label.color}`} />\n          <span>{label.title}</span>\n        </span>\n      </li>\n    ));\n  };\n  searchMail = (searchText) => {\n    if (searchText === \"\") {\n      this.setState({\n        folderMails: this.state.allMail.filter((mail) => !mail.deleted),\n      });\n    } else {\n      const searchMails = this.state.allMail.filter(\n        (mail) =>\n          !mail.deleted &&\n          mail.subject.toLowerCase().indexOf(searchText.toLowerCase()) > -1\n      );\n      this.setState({\n        folderMails: searchMails,\n      });\n    }\n  };\n  displayMail = (currentMail, folderMails, noContentFoundMessage) => {\n    return (\n      <div className=\"module-box-column\">\n        {currentMail === null ? (\n          folderMails.length === 0 ? (\n            <div\n              className=\"d-flex align-items-center justify-content-center\"\n              style={{\n                height:\n                  this.props.width >= 1200\n                    ? \"calc(100vh - 265px)\"\n                    : \"calc(100vh - 245px)\",\n              }}\n            >\n              {noContentFoundMessage}\n            </div>\n          ) : (\n            <MailList\n              mails={folderMails}\n              onStartSelect={this.onStartSelect.bind(this)}\n              onMailSelect={this.onMailSelect.bind(this)}\n              width={this.props.width}\n              onMailChecked={this.onMailChecked.bind(this)}\n            />\n          )\n        ) : (\n          <MailDetail\n            mail={currentMail}\n            onStartSelect={this.onStartSelect.bind(this)}\n            width={this.props.width}\n            onImportantSelect={this.onImportantSelect.bind(this)}\n          />\n        )}\n      </div>\n    );\n  };\n  getMailActions = () => {\n    return (\n      <div>\n        <IconButton\n          onClick={this.onFolderSelect.bind(this)}\n          className=\"icon-btn\"\n        >\n          <i className=\"zmdi zmdi-folder\" />\n        </IconButton>\n\n        <IconButton onClick={this.onDeleteMail.bind(this)} className=\"icon-btn\">\n          <i className=\"zmdi zmdi-delete\" />\n        </IconButton>\n\n        <IconButton\n          onClick={this.onLabelSelect.bind(this)}\n          className=\"icon-btn\"\n        >\n          <i className=\"zmdi zmdi-label-alt\" />\n        </IconButton>\n      </div>\n    );\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ loader: false });\n    }, 1500);\n  }\n\n  onMailChecked(data) {\n    data.selected = !data.selected;\n    let selectedMail = 0;\n    const mails = this.state.folderMails.map((mail) => {\n      if (mail.selected) {\n        selectedMail++;\n      }\n      if (mail.id === data.id) {\n        if (mail.selected) {\n          selectedMail++;\n        }\n        return data;\n      } else {\n        return mail;\n      }\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      folderMails: mails,\n    });\n  }\n\n  onAllMailSelect() {\n    const selectAll = this.state.selectedMails <= this.state.folderMails.length;\n    if (selectAll) {\n      this.getAllMail();\n    } else {\n      this.getUnselectedAllMail();\n    }\n  }\n\n  removeLabel(mail, label) {\n    mail.labels.splice(mail.labels.indexOf(label), 1);\n    if (\n      this.state.currentMail !== null &&\n      mail.id === this.state.currentMail.id\n    ) {\n      this.setState({\n        currentMail: { ...mail, labels: mail.labels },\n      });\n    }\n    return mail.labels;\n  }\n\n  onStartSelect(data) {\n    data.starred = !data.starred;\n    this.setState({\n      alertMessage: data.starred ? \"Mail Mark as Star\" : \"Mail Remove as Star\",\n      showMessage: true,\n      folderMails: this.state.folderMails.map((mail) =>\n        mail.id === data.id ? data : mail\n      ),\n    });\n  }\n\n  onImportantSelect(data) {\n    data.important = !data.important;\n    this.setState({\n      alertMessage: data.important\n        ? \"Mail Mark as Important\"\n        : \"Mail Remove as Important\",\n      showMessage: true,\n      folderMails: this.state.folderMails.map((mail) =>\n        mail.id === data.id ? data : mail\n      ),\n    });\n  }\n\n  // onMailSend(data) {\n  //   this.setState({\n  //     alertMessage: \"Mail Sent Successfully\",\n  //     showMessage: true,\n  //     folderMails: this.state.allMail.concat(data),\n  //     allMail: this.state.allMail.concat(data),\n  //   });\n  // }\n\n  onMailSelect(mail) {\n    this.setState({\n      loader: true,\n      currentMail: mail,\n    });\n    setTimeout(() => {\n      this.setState({ loader: false });\n    }, 1500);\n  }\n\n  addLabel(mail, label) {\n    if (\n      this.state.currentMail !== null &&\n      mail.id === this.state.currentMail.id\n    ) {\n      this.setState({\n        currentMail: { ...mail, labels: mail.labels.concat(label) },\n      });\n    }\n    return mail.labels.concat(label);\n  }\n\n  updateSearch(evt) {\n    this.setState({\n      searchMail: evt.target.value,\n    });\n    this.searchMail(evt.target.value);\n  }\n\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState,\n    });\n  }\n\n  render() {\n    const {\n      selectedMails,\n      loader,\n      currentMail,\n      folderMails,\n      composeMail,\n      user,\n      alertMessage,\n      showMessage,\n      noContentFoundMessage,\n    } = this.state;\n\n    return (\n      <div className=\"app-wrapper\">\n        <div className=\"animated slideInUpTiny animation-duration-3\">\n          <div className=\"app-module\">\n            <div className=\"d-block d-xl-none\">\n              <Drawer\n                open={this.state.drawerState}\n                onClose={this.onToggleDrawer.bind(this)}\n              >\n                {this.MailSideBar()}\n              </Drawer>\n            </div>\n            <div className=\"app-module-sidenav d-none d-xl-flex\">\n              {this.MailSideBar()}\n            </div>\n\n            <div className=\"module-box\">\n              <div className=\"module-box-header\">\n                <IconButton\n                  className=\"drawer-btn d-block d-xl-none\"\n                  aria-label=\"Menu\"\n                  onClick={this.onToggleDrawer.bind(this)}\n                >\n                  <i className=\"zmdi zmdi-menu\" />\n                </IconButton>\n                <AppModuleHeader\n                  placeholder=\"Search mails\"\n                  user={this.state.user}\n                  onChange={this.updateSearch.bind(this)}\n                  value={this.state.searchMail}\n                />\n              </div>\n\n              <div className=\"module-box-content\">\n                <div className=\"module-box-topbar\">\n                  {this.state.currentMail === null ? (\n                    <div className=\"d-flex\">\n                      <Checkbox\n                        color=\"primary\"\n                        indeterminate={\n                          selectedMails > 0 &&\n                          selectedMails < folderMails.length\n                        }\n                        checked={selectedMails > 0}\n                        onChange={this.onAllMailSelect.bind(this)}\n                        value=\"SelectMail\"\n                      />\n                      <div\n                        className=\"d-flex align-items-center\"\n                        onClick={this.onOptionMenuSelect.bind(this)}\n                      >\n                        <span className=\"px-2\"> {this.state.optionName}</span>\n                        <IconButton className=\"icon-btn-sm\">\n                          <i className=\"zmdi zmdi-caret-down\" />\n                        </IconButton>\n                      </div>\n                    </div>\n                  ) : (\n                    <IconButton\n                      className=\"icon-btn\"\n                      onClick={() => {\n                        this.setState({\n                          currentMail: null,\n                        });\n                      }}\n                    >\n                      <i className=\"zmdi zmdi-arrow-back\" />\n                    </IconButton>\n                  )}\n\n                  {selectedMails > 0 && this.getMailActions()}\n\n                  <Menu\n                    id=\"option-menu\"\n                    anchorEl={this.state.anchorEl}\n                    open={this.state.optionMenuState}\n                    onClose={this.handleRequestClose}\n                    MenuListProps={{\n                      style: {\n                        width: 150,\n                      },\n                    }}\n                  >\n                    {options.map((option) => (\n                      <MenuItem\n                        key={option.title}\n                        onClick={this.onOptionMenuItemSelect.bind(this, option)}\n                      >\n                        {option.title}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n\n                  <Menu\n                    id=\"folder-menu\"\n                    anchorEl={this.state.anchorEl}\n                    open={this.state.folderMenuState}\n                    onClose={this.handleRequestClose}\n                    MenuListProps={{\n                      style: {\n                        width: 150,\n                      },\n                    }}\n                  >\n                    {folders.map((folder) => (\n                      <MenuItem\n                        key={folder.id}\n                        onClick={this.onFolderMenuItemSelect.bind(\n                          this,\n                          folder.id\n                        )}\n                      >\n                        {folder.title}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                  <Menu\n                    id=\"label-menu\"\n                    anchorEl={this.state.anchorEl}\n                    open={this.state.labelMenuState}\n                    onClose={this.handleRequestClose}\n                    MenuListProps={{\n                      style: {\n                        width: 150,\n                      },\n                    }}\n                  >\n                    {labels.map((label) => (\n                      <MenuItem\n                        key={label.id}\n                        onClick={this.onLabelMenuItemSelect.bind(this, label)}\n                      >\n                        {label.title}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                </div>\n\n                {loader ? (\n                  <div\n                    className=\"loader-view\"\n                    style={{\n                      height:\n                        this.props.width >= 1200\n                          ? \"calc(100vh - 265px)\"\n                          : \"calc(100vh - 245px)\",\n                    }}\n                  >\n                    <CircularProgress />\n                  </div>\n                ) : (\n                  this.displayMail(\n                    currentMail,\n                    folderMails,\n                    noContentFoundMessage\n                  )\n                )}\n\n                <ComposeMail\n                  open={composeMail}\n                  user={user}\n                  onClose={this.handleRequestClose.bind(this)}\n                  // onMailSend={this.onMailSend.bind(this)}\n                  handleChangeClass={this.handleChangeClass.bind(this)}\n                  handleChangeSubject={this.handleChangeSubject.bind(this)}\n                  handleChangeEditor={this.handleChangeEditor.bind(this)}\n                  handleChangeRole={this.handleChangeRole.bind(this)}\n                  handleChangeProfessorIds={this.handleChangeProfessorIds.bind(\n                    this\n                  )}\n                  handleChangeAdminsIds={this.handleChangeAdminsIds.bind(this)}\n                  sendMail={this.sendMail.bind(this)}\n                  attachFile={this.attachFile.bind(this)}\n                  deleteFile={this.deleteFile.bind(this)}\n                  values={this.state}\n                  professors={this.props.professors}\n                  admins={this.props.admins}\n                  classes={this.props.classes}\n                  levels={this.props.levels}\n                  handleChangeFilterStudent={this.handleChangeFilterStudent.bind(\n                    this\n                  )}\n                  handleChangeStudentsIds={this.handleChangeStudentsIds.bind(\n                    this\n                  )}\n                  handleChangeParentsIds={this.handleChangeParentsIds.bind(\n                    this\n                  )}\n                />\n              </div>\n            </div>\n          </div>\n          <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            open={this.props.showMessage}\n            autoHideDuration={3000}\n            onClose={this.handleRequestClose}\n            ContentProps={{\n              \"aria-describedby\": \"message-id\",\n            }}\n            message={<span id=\"message-id\">{this.props.alertMessage}</span>}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    professors: state.usersReducer.professors,\n    admins: state.usersReducer.admins,\n    supervisors: state.usersReducer.supervisors,\n    directors: state.usersReducer.directors,\n    classes: state.ClassSettingsReducer.classSettings,\n    students: state.usersReducer.students,\n    levels: state.levelsReducer.levels,\n    alertMessage: state.MailReducer.alertMessage,\n    showMessage: state.MailReducer.showMessage,\n    parents: state.usersReducer.parents,\n  };\n};\nexport default connect(mapStateToProps)(Mail);\n"]},"metadata":{},"sourceType":"module"}