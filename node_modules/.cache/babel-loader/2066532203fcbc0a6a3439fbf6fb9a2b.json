{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap-pro/educap-pro-front/src/components/mail/Compose/index.js\";\nimport React from 'react';\nimport { Modal, ModalHeader } from 'reactstrap';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport baseUrl from '../../../config/config';\nimport axios from 'axios';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport * as moment from 'moment';\nimport IntlMessages from '../../../util/IntlMessages';\nimport { connect } from 'react-redux';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nclass ComposeMail extends React.Component {\n  constructor() {\n    super();\n\n    this.onDrop = e => {\n      let file = e.target.files[0];\n      this.setState({\n        fileList: file,\n        inputText: file.name\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange = e => {\n      if (e.target.value != 'noMail') {\n        const found = this.state.usersData.find(element => element.email === e.target.value);\n        this.setState({\n          receiver_id: e.target.value\n        });\n        this.setState({\n          receiverID: found.id\n        });\n      }\n    };\n\n    this.state = {\n      to: '',\n      cc: '',\n      bcc: '',\n      subject: '',\n      receiver_id: '',\n      receiverID: 0,\n      message: '',\n      professorsList: [],\n      professorsListNew: [],\n      date_hour_mail: '2019-07-18T13:07:42.438Z',\n      sender_id: '',\n      usersData: [],\n      fileList: null,\n      inputText: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      subject: this.props.subjectReply\n    });\n    this.setState({\n      receiver_id: this.props.emailReplay\n    });\n    axios.get(`${baseUrl.baseUrl}/profiles/fetchMailReceivers/` + localStorage.profileId + `?access_token=${localStorage.token}`).then(res => {\n      const usersData = res.data.receiverData[0];\n      this.setState({\n        usersData\n      });\n      this.setState({\n        sender_id: localStorage.profileId\n      });\n    });\n  }\n\n  render() {\n    const {\n      onMailSend,\n      onClose,\n      user\n    } = this.props;\n    const {\n      receiver_id,\n      receiverID,\n      subject,\n      message,\n      date_hour_mail,\n      sender_id,\n      fileList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Modal, {\n      className: \"modal-box modal-box-mail\",\n      toggle: onClose,\n      isOpen: this.props.open,\n      style: {\n        zIndex: 2600\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      className: \"modal-box-header bg-primary text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"add.new.message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      className: \"text-white\",\n      onClick: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-box-content d-flex flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"receiver_id\",\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"reciver.message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 24\n        }\n      }),\n      onChange: this.handleChange,\n      select: true,\n      value: receiver_id,\n      SelectProps: {},\n      defaultValue: 'receiver_id',\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, this.state.usersData.map((userInfo, index) => /*#__PURE__*/React.createElement(MenuItem, {\n      key: index,\n      value: userInfo.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, userInfo.classeName, \" \", userInfo.name, \" \", userInfo.surname))))), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"subject\",\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"subject.message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 20\n        }\n      }),\n      onChange: event => this.setState({\n        subject: event.target.value\n      }),\n      value: subject,\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"required\",\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 20\n        }\n      }),\n      onChange: event => this.setState({\n        message: event.target.value,\n        date_hour_mail: moment()\n      }),\n      value: message,\n      multiline: true,\n      rowsMax: \"4\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-box-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"name-multiple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.establishments.formadd.task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 14\n      }\n    })), ' ', /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"files\",\n      className: \"btn\",\n      style: {\n        cursor: 'pointer',\n        color: 'white',\n        fontWeight: 'bold',\n        backgroundColor: '#4B58B9',\n        borderRadius: '4rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"Choisir un fichier\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 22\n      }\n    }))), ' ', /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"files\",\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, this.state.inputText), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"files\",\n      type: \"file\",\n      style: {\n        visibility: 'hidden'\n      },\n      onChange: e => this.onDrop(e),\n      accept: \"application/pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      disabled: !(receiver_id !== '' && subject !== ''),\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        onClose();\n        onMailSend({\n          id: '15453a06c08fb021776',\n          from: {\n            name: user.name,\n            avatar: user.avatar,\n            email: user.email\n          },\n          sender_id: sender_id,\n          receiver_id: receiverID,\n          subject: subject,\n          message: message,\n          date_hour_mail: date_hour_mail,\n          read: false,\n          starred: false,\n          important: false,\n          hasAttachments: false,\n          folder: 1,\n          selected: false,\n          labels: [],\n          establishmentId: this.props.userProfile.establishment_id,\n          file: fileList\n        });\n        this.setState({\n          to: '',\n          cc: '',\n          bcc: '',\n          subject: '',\n          receiver_id: '',\n          message: '',\n          professorsList: [],\n          professorsListNew: [],\n          date_hour_mail: '2019-07-18T13:07:42.438Z',\n          sender_id: sender_id,\n          fileList: null\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-mail-send mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"button.send.message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 14\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.auth.userProfile\n  };\n};\n\nexport default connect(mapStateToProps)(ComposeMail);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/components/mail/Compose/index.js"],"names":["React","Modal","ModalHeader","TextField","Button","IconButton","CloseIcon","baseUrl","axios","MenuItem","moment","IntlMessages","connect","InputLabel","ComposeMail","Component","constructor","onDrop","e","file","target","files","setState","fileList","inputText","name","handleChange","event","value","found","state","usersData","find","element","email","receiver_id","receiverID","id","to","cc","bcc","subject","message","professorsList","professorsListNew","date_hour_mail","sender_id","bind","componentDidMount","props","subjectReply","emailReplay","get","localStorage","profileId","token","then","res","data","receiverData","render","onMailSend","onClose","user","open","zIndex","map","userInfo","index","classeName","surname","cursor","color","fontWeight","backgroundColor","borderRadius","visibility","from","avatar","read","starred","important","hasAttachments","folder","selected","labels","establishmentId","userProfile","establishment_id","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Modal, ModalHeader } from 'reactstrap';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport baseUrl from '../../../config/config';\r\nimport axios from 'axios';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport * as moment from 'moment';\r\nimport IntlMessages from '../../../util/IntlMessages';\r\nimport { connect } from 'react-redux';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nclass ComposeMail extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      to: '',\r\n      cc: '',\r\n      bcc: '',\r\n      subject: '',\r\n      receiver_id: '',\r\n      receiverID: 0,\r\n      message: '',\r\n      professorsList: [],\r\n      professorsListNew: [],\r\n      date_hour_mail: '2019-07-18T13:07:42.438Z',\r\n      sender_id: '',\r\n      usersData: [],\r\n      fileList: null,\r\n      inputText: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onDrop = this.onDrop.bind(this);\r\n  }\r\n  onDrop = e => {\r\n    let file = e.target.files[0];\r\n    this.setState({\r\n      fileList: file,\r\n      inputText: file.name\r\n    });\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ subject: this.props.subjectReply });\r\n    this.setState({ receiver_id: this.props.emailReplay });\r\n    axios\r\n      .get(\r\n        `${baseUrl.baseUrl}/profiles/fetchMailReceivers/` +\r\n          localStorage.profileId +\r\n          `?access_token=${localStorage.token}`\r\n      )\r\n      .then(res => {\r\n        const usersData = res.data.receiverData[0];\r\n        this.setState({ usersData });\r\n        this.setState({ sender_id: localStorage.profileId });\r\n      });\r\n  }\r\n\r\n  handleChange = e => {\r\n    if (e.target.value != 'noMail') {\r\n      const found = this.state.usersData.find(\r\n        element => element.email === e.target.value\r\n      );\r\n      this.setState({ receiver_id: e.target.value });\r\n      this.setState({ receiverID: found.id });\r\n    }\r\n  };\r\n  render() {\r\n    const { onMailSend, onClose, user } = this.props;\r\n    const {\r\n      receiver_id,\r\n      receiverID,\r\n      subject,\r\n      message,\r\n      date_hour_mail,\r\n      sender_id,\r\n      fileList\r\n    } = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        className=\"modal-box modal-box-mail\"\r\n        toggle={onClose}\r\n        isOpen={this.props.open}\r\n        style={{ zIndex: 2600 }}\r\n      >\r\n        <ModalHeader className=\"modal-box-header bg-primary text-white\">\r\n          {<IntlMessages id=\"add.new.message\" />}\r\n          <IconButton className=\"text-white\" onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </ModalHeader>\r\n        <div className=\"modal-box-content d-flex flex-column\">\r\n          <div>\r\n            <div>\r\n              <TextField\r\n                required\r\n                id=\"receiver_id\"\r\n                label={<IntlMessages id=\"reciver.message\" />}\r\n                onChange={this.handleChange}\r\n                select\r\n                value={receiver_id}\r\n                SelectProps={{}}\r\n                defaultValue={'receiver_id'}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              >\r\n                {this.state.usersData.map((userInfo, index) => (\r\n                  <MenuItem key={index} value={userInfo.email}>\r\n                    {userInfo.classeName} {userInfo.name} {userInfo.surname}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </div>\r\n          </div>\r\n          <TextField\r\n            required\r\n            id=\"subject\"\r\n            label={<IntlMessages id=\"subject.message\" />}\r\n            onChange={event => this.setState({ subject: event.target.value })}\r\n            value={subject}\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            id=\"required\"\r\n            label={<IntlMessages id=\"message\" />}\r\n            onChange={event =>\r\n              this.setState({\r\n                message: event.target.value,\r\n                date_hour_mail: moment()\r\n              })\r\n            }\r\n            value={message}\r\n            multiline\r\n            rowsMax=\"4\"\r\n            margin=\"normal\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"modal-box-footer\">\r\n          <InputLabel htmlFor=\"name-multiple\">\r\n            {<IntlMessages id=\"components.establishments.formadd.task\" />}\r\n          </InputLabel>{' '}\r\n          <br />\r\n          <label\r\n            htmlFor=\"files\"\r\n            className=\"btn\"\r\n            style={{\r\n              cursor: 'pointer',\r\n              color: 'white',\r\n              fontWeight: 'bold',\r\n              backgroundColor: '#4B58B9',\r\n              borderRadius: '4rem'\r\n            }}\r\n          >\r\n            <strong>{<IntlMessages id=\"Choisir un fichier\" />}</strong>\r\n          </label>{' '}\r\n          <label htmlFor=\"files\" className=\"btn\">\r\n            {this.state.inputText}\r\n          </label>\r\n          <input\r\n            id=\"files\"\r\n            type=\"file\"\r\n            style={{ visibility: 'hidden' }}\r\n            onChange={e => this.onDrop(e)}\r\n            accept=\"application/pdf\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <Button\r\n            disabled={!(receiver_id !== '' && subject !== '')}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              onClose();\r\n              onMailSend({\r\n                id: '15453a06c08fb021776',\r\n                from: {\r\n                  name: user.name,\r\n                  avatar: user.avatar,\r\n                  email: user.email\r\n                },\r\n                sender_id: sender_id,\r\n                receiver_id: receiverID,\r\n                subject: subject,\r\n                message: message,\r\n                date_hour_mail: date_hour_mail,\r\n                read: false,\r\n                starred: false,\r\n                important: false,\r\n                hasAttachments: false,\r\n                folder: 1,\r\n                selected: false,\r\n                labels: [],\r\n                establishmentId: this.props.userProfile.establishment_id,\r\n                file: fileList\r\n              });\r\n              this.setState({\r\n                to: '',\r\n                cc: '',\r\n                bcc: '',\r\n                subject: '',\r\n                receiver_id: '',\r\n                message: '',\r\n                professorsList: [],\r\n                professorsListNew: [],\r\n                date_hour_mail: '2019-07-18T13:07:42.438Z',\r\n                sender_id: sender_id,\r\n                fileList: null\r\n              });\r\n            }}\r\n          >\r\n            <i className=\"zmdi zmdi-mail-send mr-2\" />\r\n            {<IntlMessages id=\"button.send.message\" />}\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userProfile: state.auth.userProfile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ComposeMail);\r\n"]},"metadata":{},"sourceType":"module"}