{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/PermissionSetting/PermissionList.js\";\nimport React, { Component } from 'react';\nimport CardBox from '../../../../../components/CardBox/index';\nimport { connect } from 'react-redux';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PermissionListItem from './PermissionListItem';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ResetPermission from './ResetPermission';\nimport PermissionConfirmation from './PermissionConfirmation';\nimport { applyPermissionSetting } from '../../../../../actions/PermissionAction';\nimport { roleIdProfessor, roleIdAdmin, roleIdParent, roleIdStudent, roleIdSupervisor, roleIdDirector } from '../../../../../config/config';\nconst listRole = [// { id: 0, label: <IntlMessages id={`permission.role.all`} /> },\n{\n  id: roleIdAdmin,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `role.admin`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  })\n}, {\n  id: roleIdDirector,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `component.etablishments.info.director`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 32\n    }\n  })\n}, {\n  id: roleIdSupervisor,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `role.supervisor`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 34\n    }\n  })\n}, {\n  id: roleIdProfessor,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `toDo.professor`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  })\n}, {\n  id: roleIdStudent,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `userStuppDisplay.Student`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 31\n    }\n  })\n}, {\n  id: roleIdParent,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `userStuppDisplay.Parent`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 30\n    }\n  })\n}];\nexport class PermissionList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listPermissions: [],\n      listPermissionsModified: [],\n      modalReset: false,\n      modalConfirmation: false\n    };\n    this.addPermission = this.addPermission.bind(this);\n    this.deletePermission = this.deletePermission.bind(this);\n    this.resetPermission = this.resetPermission.bind(this);\n    this.applyPermission = this.applyPermission.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      listPermissions: this.props.listPermissions\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.listPermissions !== this.props.listPermissions) {\n      this.setState({\n        listPermissions: this.props.listPermissions\n      });\n    }\n  }\n\n  handleCancel() {\n    this.setState({\n      modalReset: false,\n      modalConfirmation: false\n    });\n  }\n\n  applyPermission() {\n    let listPermissionsModified = this.state.listPermissions.filter(permission => permission.modified);\n    let data = listPermissionsModified.map(element => {\n      return {\n        permissionId: element.id,\n        estabId: this.props.userProfile.establishment_id,\n        rolesArray: element.roles\n      };\n    });\n    this.props.dispatch(applyPermissionSetting(data, this.props.userProfile.establishment_id, this.props.userProfile.role_id));\n    this.setState({\n      listPermissionsModified,\n      modalConfirmation: false\n    });\n  }\n\n  resetPermission() {\n    this.setState({\n      listPermissions: this.props.listPermissions,\n      listPermissionsModified: [],\n      modalReset: false\n    });\n  }\n\n  deletePermission(idPermission, idRole) {\n    let newListPermissions = this.state.listPermissions.map(permission => {\n      let newPermission = permission.id === parseInt(idPermission) ? { ...permission,\n        roles: permission.roles.filter(role => role != idRole),\n        modified: true\n      } : permission;\n      return newPermission;\n    });\n    this.setState({\n      listPermissions: newListPermissions\n    });\n  }\n\n  addPermission(idPermission, idRole) {\n    let newListPermissions = this.state.listPermissions.map(permission => {\n      let newPermission = permission.id === parseInt(idPermission) ? { ...permission,\n        roles: permission.roles.concat([idRole]),\n        modified: true\n      } : permission;\n      return newPermission;\n    });\n    this.setState({\n      listPermissions: newListPermissions\n    });\n  }\n\n  render() {\n    const {\n      values\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-lg-12 col-sm-12 d-flex flex-column bd-highlight mb-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ResetPermission, {\n      modal: this.state.modalReset,\n      handleCancelReset: this.handleCancel,\n      handleSubmit: this.resetPermission,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PermissionConfirmation, {\n      modal: this.state.modalConfirmation,\n      handleCancel: this.handleCancel,\n      handleSubmit: this.applyPermission,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-md-12 col-lg-12 col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-row bd-highlight  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-3 col-md-5 col-lg-5 col-sm-5  mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: '#0000CD',\n        fontFamily: 'Roboto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, ' ', /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"sidebar.components.permissionSetting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 col-md-2 col-lg-2 col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"subModuleId\",\n      name: \"subModuleId\",\n      select: true,\n      value: values.subModuleId // onChange={this.props.handleChange('subModuleId')}\n      ,\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `stuppUser.steps.role`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 24\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `permission.role.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    })), listRole.map(role => /*#__PURE__*/React.createElement(MenuItem, {\n      key: role.id,\n      value: role.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, role.label)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 col-md-2 col-lg-2 col-sm-2    \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"moduleId\",\n      name: \"moduleId\",\n      select: true,\n      value: values.moduleId,\n      onChange: this.props.handleChange('moduleId'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `sidebar.modules`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 24\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `userStuppDisplay.all`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    })), this.props.estabModule.map((element, index) => /*#__PURE__*/React.createElement(MenuItem, {\n      key: index,\n      value: element.module.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `sidebar.components.${element.module.path}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 col-md-2 col-lg-2 col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"subModuleId\",\n      name: \"subModuleId\",\n      select: true,\n      value: values.subModuleId,\n      onChange: this.props.handleChange('subModuleId'),\n      SelectProps: {},\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: `permission.sous.module`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 24\n        }\n      }),\n      InputProps: {\n        disableUnderline: true\n      },\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, values.subModuleList.map(subModule => /*#__PURE__*/React.createElement(MenuItem, {\n      key: subModule.id,\n      value: subModule.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `sidebar.components.${subModule.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }))))))), /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-md-12 col-lg-12 col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive-material\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      className: \"th-border-b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }, ' ', /*#__PURE__*/React.createElement(IntlMessages, {\n      id: `action.type.of.education`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    })), listRole.map(element => /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, element.label)))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }, this.state.listPermissions.map((element, index) => {\n      return /*#__PURE__*/React.createElement(PermissionListItem, {\n        key: index,\n        permission: element,\n        addPermission: this.addPermission,\n        deletePermission: this.deletePermission,\n        settings: this.props.settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }\n      });\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-row-reverse bd-highlight col-md-12 col-lg-12 col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" bd-highlight \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"bg-primary text-white \",\n      style: {\n        borderBottomLeftRadius: '10px',\n        borderBottomRightRadius: '10px',\n        borderTopLeftRadius: '10px',\n        borderTopRightRadius: '10px',\n        width: '100%',\n        height: '80%',\n        textTransform: 'capitalize'\n      },\n      onClick: () => this.setState({\n        modalConfirmation: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }, true ? /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"superadmin.apply.button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"button.modify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" bd-highlight mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      style: {\n        borderBottomLeftRadius: '10px',\n        borderBottomRightRadius: '10px',\n        borderTopLeftRadius: '10px',\n        borderTopRightRadius: '10px',\n        width: '100%',\n        height: '80%',\n        textTransform: 'capitalize'\n      },\n      className: \" bg-grey text-white \",\n      onClick: () => this.setState({\n        modalReset: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.classes.formadd.buttonCancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    settings: state.settings.locale\n  };\n}\n\nexport default connect(mapStateToProps)(PermissionList);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/PermissionSetting/PermissionList.js"],"names":["React","Component","CardBox","connect","IntlMessages","Button","Table","TableBody","TableCell","TableHead","TableRow","PermissionListItem","TextField","MenuItem","ResetPermission","PermissionConfirmation","applyPermissionSetting","roleIdProfessor","roleIdAdmin","roleIdParent","roleIdStudent","roleIdSupervisor","roleIdDirector","listRole","id","label","PermissionList","constructor","props","state","listPermissions","listPermissionsModified","modalReset","modalConfirmation","addPermission","bind","deletePermission","resetPermission","applyPermission","handleCancel","componentDidMount","setState","componentDidUpdate","prevProps","filter","permission","modified","data","map","element","permissionId","estabId","userProfile","establishment_id","rolesArray","roles","dispatch","role_id","idPermission","idRole","newListPermissions","newPermission","parseInt","role","concat","render","values","color","fontFamily","subModuleId","disableUnderline","moduleId","handleChange","estabModule","index","module","path","subModuleList","subModule","name","settings","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","width","height","textTransform","mapStateToProps","auth","locale"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,yCAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,SAASC,sBAAT,QAAuC,yCAAvC;AACA,SACEC,eADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,aAJF,EAKEC,gBALF,EAMEC,cANF,QAOO,8BAPP;AAQA,MAAMC,QAAQ,GAAG,CACf;AACA;AAAEC,EAAAA,EAAE,EAAEN,WAAN;AAAmBO,EAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAG,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1B,CAFe,EAGf;AAAED,EAAAA,EAAE,EAAEF,cAAN;AAAsBG,EAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAG,uCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA7B,CAHe,EAIf;AAAED,EAAAA,EAAE,EAAEH,gBAAN;AAAwBI,EAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAG,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/B,CAJe,EAKf;AAAED,EAAAA,EAAE,EAAEP,eAAN;AAAuBQ,EAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAG,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA9B,CALe,EAMf;AAAED,EAAAA,EAAE,EAAEJ,aAAN;AAAqBK,EAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAG,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5B,CANe,EAOf;AAAED,EAAAA,EAAE,EAAEL,YAAN;AAAoBM,EAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAG,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3B,CAPe,CAAjB;AASA,OAAO,MAAMC,cAAN,SAA6BzB,SAA7B,CAAuC;AAC5C0B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE,EADN;AAEXC,MAAAA,uBAAuB,EAAE,EAFd;AAGXC,MAAAA,UAAU,EAAE,KAHD;AAIXC,MAAAA,iBAAiB,EAAE;AAJR,KAAb;AAOA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,eAAL,GAAuB,KAAKA,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAAEX,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWE;AAA9B,KAAd;AACD;;AACDY,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACb,eAAV,KAA8B,KAAKF,KAAL,CAAWE,eAA7C,EAA8D;AAC5D,WAAKW,QAAL,CAAc;AAAEX,QAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWE;AAA9B,OAAd;AACD;AACF;;AACDS,EAAAA,YAAY,GAAG;AACb,SAAKE,QAAL,CAAc;AAAET,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,iBAAiB,EAAE;AAAxC,KAAd;AACD;;AACDK,EAAAA,eAAe,GAAG;AAChB,QAAIP,uBAAuB,GAAG,KAAKF,KAAL,CAAWC,eAAX,CAA2Bc,MAA3B,CAC3BC,UAAD,IAAgBA,UAAU,CAACC,QADC,CAA9B;AAGA,QAAIC,IAAI,GAAGhB,uBAAuB,CAACiB,GAAxB,CAA6BC,OAAD,IAAa;AAClD,aAAO;AACLC,QAAAA,YAAY,EAAED,OAAO,CAACzB,EADjB;AAEL2B,QAAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWwB,WAAX,CAAuBC,gBAF3B;AAGLC,QAAAA,UAAU,EAAEL,OAAO,CAACM;AAHf,OAAP;AAKD,KANU,CAAX;AAOA,SAAK3B,KAAL,CAAW4B,QAAX,CACExC,sBAAsB,CACpB+B,IADoB,EAEpB,KAAKnB,KAAL,CAAWwB,WAAX,CAAuBC,gBAFH,EAGpB,KAAKzB,KAAL,CAAWwB,WAAX,CAAuBK,OAHH,CADxB;AAOA,SAAKhB,QAAL,CAAc;AAAEV,MAAAA,uBAAF;AAA2BE,MAAAA,iBAAiB,EAAE;AAA9C,KAAd;AACD;;AACDI,EAAAA,eAAe,GAAG;AAChB,SAAKI,QAAL,CAAc;AACZX,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWE,eADhB;AAEZC,MAAAA,uBAAuB,EAAE,EAFb;AAGZC,MAAAA,UAAU,EAAE;AAHA,KAAd;AAKD;;AACDI,EAAAA,gBAAgB,CAACsB,YAAD,EAAeC,MAAf,EAAuB;AACrC,QAAIC,kBAAkB,GAAG,KAAK/B,KAAL,CAAWC,eAAX,CAA2BkB,GAA3B,CAAgCH,UAAD,IAAgB;AACtE,UAAIgB,aAAa,GACfhB,UAAU,CAACrB,EAAX,KAAkBsC,QAAQ,CAACJ,YAAD,CAA1B,GACI,EACE,GAAGb,UADL;AAEEU,QAAAA,KAAK,EAAEV,UAAU,CAACU,KAAX,CAAiBX,MAAjB,CAAyBmB,IAAD,IAAUA,IAAI,IAAIJ,MAA1C,CAFT;AAGEb,QAAAA,QAAQ,EAAE;AAHZ,OADJ,GAMID,UAPN;AAQA,aAAOgB,aAAP;AACD,KAVwB,CAAzB;AAWA,SAAKpB,QAAL,CAAc;AACZX,MAAAA,eAAe,EAAE8B;AADL,KAAd;AAGD;;AACD1B,EAAAA,aAAa,CAACwB,YAAD,EAAeC,MAAf,EAAuB;AAClC,QAAIC,kBAAkB,GAAG,KAAK/B,KAAL,CAAWC,eAAX,CAA2BkB,GAA3B,CAAgCH,UAAD,IAAgB;AACtE,UAAIgB,aAAa,GACfhB,UAAU,CAACrB,EAAX,KAAkBsC,QAAQ,CAACJ,YAAD,CAA1B,GACI,EACE,GAAGb,UADL;AAEEU,QAAAA,KAAK,EAAEV,UAAU,CAACU,KAAX,CAAiBS,MAAjB,CAAwB,CAACL,MAAD,CAAxB,CAFT;AAGEb,QAAAA,QAAQ,EAAE;AAHZ,OADJ,GAMID,UAPN;AAQA,aAAOgB,aAAP;AACD,KAVwB,CAAzB;AAWA,SAAKpB,QAAL,CAAc;AACZX,MAAAA,eAAe,EAAE8B;AADL,KAAd;AAGD;;AACDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKtC,KAAxB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,qEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWG,UADpB;AAEE,MAAA,iBAAiB,EAAE,KAAKO,YAF1B;AAGE,MAAA,YAAY,EAAE,KAAKF,eAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,sBAAD;AACE,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWI,iBADpB;AAEE,MAAA,YAAY,EAAE,KAAKM,YAFrB;AAGE,MAAA,YAAY,EAAE,KAAKD,eAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAWE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,+BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAE;AAAE6B,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,eAEE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,sCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,eAOE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,MAAM,MAHR;AAIE,MAAA,KAAK,EAAEF,MAAM,CAACG,WAJhB,CAKE;AALF;AAME,MAAA,WAAW,EAAE,EANf;AAOE,MAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAG,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPT;AAQE,MAAA,UAAU,EAAE;AAAEC,QAAAA,gBAAgB,EAAE;AAApB,OARd;AASE,MAAA,MAAM,EAAC,QATT;AAUE,MAAA,SAAS,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAAf;AAAkB,MAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAG,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAZF,EAeG/C,QAAQ,CAACyB,GAAT,CAAce,IAAD,iBACZ,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACvC,EAApB;AAAwB,MAAA,KAAK,EAAEuC,IAAI,CAACvC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGuC,IAAI,CAACtC,KADR,CADD,CAfH,CADF,CAPF,eA8BE;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,MAAM,MAHR;AAIE,MAAA,KAAK,EAAEyC,MAAM,CAACK,QAJhB;AAKE,MAAA,QAAQ,EAAE,KAAK3C,KAAL,CAAW4C,YAAX,CAAwB,UAAxB,CALZ;AAME,MAAA,WAAW,EAAE,EANf;AAOE,MAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAG,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPT;AAQE,MAAA,UAAU,EAAE;AAAEF,QAAAA,gBAAgB,EAAE;AAApB,OARd;AASE,MAAA,MAAM,EAAC,QATT;AAUE,MAAA,SAAS,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAAf;AAAkB,MAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAG,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAZF,EAeG,KAAK1C,KAAL,CAAW6C,WAAX,CAAuBzB,GAAvB,CAA2B,CAACC,OAAD,EAAUyB,KAAV,kBAC1B,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,KAAK,EAAEzB,OAAO,CAAC0B,MAAR,CAAenD,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAG,sBAAqByB,OAAO,CAAC0B,MAAR,CAAeC,IAAK,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD,CAfH,CADF,CA9BF,eAsDE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,MAAM,MAHR;AAIE,MAAA,KAAK,EAAEV,MAAM,CAACG,WAJhB;AAKE,MAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAW4C,YAAX,CAAwB,aAAxB,CALZ;AAME,MAAA,WAAW,EAAE,EANf;AAOE,MAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAG,wBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPT;AAQE,MAAA,UAAU,EAAE;AAAEF,QAAAA,gBAAgB,EAAE;AAApB,OARd;AASE,MAAA,MAAM,EAAC,QATT;AAUE,MAAA,SAAS,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYGJ,MAAM,CAACW,aAAP,CAAqB7B,GAArB,CAA0B8B,SAAD,iBACxB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,SAAS,CAACtD,EAAzB;AAA6B,MAAA,KAAK,EAAEsD,SAAS,CAACtD,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAG,sBAAqBsD,SAAS,CAACC,IAAK,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD,CAZH,CADF,CAtDF,CADF,CAXF,eAyFE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,+BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,eAEE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAG,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKGxD,QAAQ,CAACyB,GAAT,CAAcC,OAAD,iBACZ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYA,OAAO,CAACxB,KAApB,CADD,CALH,CADF,CADF,eAmCE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKI,KAAL,CAAWC,eAAX,CAA2BkB,GAA3B,CAA+B,CAACC,OAAD,EAAUyB,KAAV,KAAoB;AAClD,0BACE,oBAAC,kBAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,UAAU,EAAEzB,OAFd;AAGE,QAAA,aAAa,EAAE,KAAKf,aAHtB;AAIE,QAAA,gBAAgB,EAAE,KAAKE,gBAJzB;AAKE,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWoD,QALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAVA,CADH,CAnCF,CADF,CADF,CAzFF,eA8IE;AAAK,MAAA,SAAS,EAAC,oEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,EAAC,wBAFZ;AAGE,MAAA,KAAK,EAAE;AACLC,QAAAA,sBAAsB,EAAE,MADnB;AAELC,QAAAA,uBAAuB,EAAE,MAFpB;AAGLC,QAAAA,mBAAmB,EAAE,MAHhB;AAILC,QAAAA,oBAAoB,EAAE,MAJjB;AAKLC,QAAAA,KAAK,EAAE,MALF;AAMLC,QAAAA,MAAM,EAAE,KANH;AAOLC,QAAAA,aAAa,EAAE;AAPV,OAHT;AAYE,MAAA,OAAO,EAAE,MAAM,KAAK9C,QAAL,CAAc;AAAER,QAAAA,iBAAiB,EAAE;AAArB,OAAd,CAZjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcG,oBACC,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAGC,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,CADF,CADF,eAuBE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAE;AACLgD,QAAAA,sBAAsB,EAAE,MADnB;AAELC,QAAAA,uBAAuB,EAAE,MAFpB;AAGLC,QAAAA,mBAAmB,EAAE,MAHhB;AAILC,QAAAA,oBAAoB,EAAE,MAJjB;AAKLC,QAAAA,KAAK,EAAE,MALF;AAMLC,QAAAA,MAAM,EAAE,KANH;AAOLC,QAAAA,aAAa,EAAE;AAPV,OAFT;AAWE,MAAA,SAAS,EAAC,sBAXZ;AAYE,MAAA,OAAO,EAAE,MAAM,KAAK9C,QAAL,CAAc;AAAET,QAAAA,UAAU,EAAE;AAAd,OAAd,CAZjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAcE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,yCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADF,CAvBF,CA9IF,CADF;AA2LD;;AApR2C;;AAuR9C,SAASwD,eAAT,CAAyB3D,KAAzB,EAAgC;AAC9B,SAAO;AACLuB,IAAAA,WAAW,EAAEvB,KAAK,CAAC4D,IAAN,CAAWrC,WADnB;AAEL4B,IAAAA,QAAQ,EAAEnD,KAAK,CAACmD,QAAN,CAAeU;AAFpB,GAAP;AAID;;AAED,eAAevF,OAAO,CAACqF,eAAD,CAAP,CAAyB9D,cAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport CardBox from '../../../../../components/CardBox/index';\nimport { connect } from 'react-redux';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PermissionListItem from './PermissionListItem';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ResetPermission from './ResetPermission';\nimport PermissionConfirmation from './PermissionConfirmation';\nimport { applyPermissionSetting } from '../../../../../actions/PermissionAction';\nimport {\n  roleIdProfessor,\n  roleIdAdmin,\n  roleIdParent,\n  roleIdStudent,\n  roleIdSupervisor,\n  roleIdDirector,\n} from '../../../../../config/config';\nconst listRole = [\n  // { id: 0, label: <IntlMessages id={`permission.role.all`} /> },\n  { id: roleIdAdmin, label: <IntlMessages id={`role.admin`} /> },\n  { id: roleIdDirector, label: <IntlMessages id={`component.etablishments.info.director`} /> },\n  { id: roleIdSupervisor, label: <IntlMessages id={`role.supervisor`} /> },\n  { id: roleIdProfessor, label: <IntlMessages id={`toDo.professor`} /> },\n  { id: roleIdStudent, label: <IntlMessages id={`userStuppDisplay.Student`} /> },\n  { id: roleIdParent, label: <IntlMessages id={`userStuppDisplay.Parent`} /> },\n];\nexport class PermissionList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listPermissions: [],\n      listPermissionsModified: [],\n      modalReset: false,\n      modalConfirmation: false,\n    };\n\n    this.addPermission = this.addPermission.bind(this);\n    this.deletePermission = this.deletePermission.bind(this);\n    this.resetPermission = this.resetPermission.bind(this);\n    this.applyPermission = this.applyPermission.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n  componentDidMount() {\n    this.setState({ listPermissions: this.props.listPermissions });\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.listPermissions !== this.props.listPermissions) {\n      this.setState({ listPermissions: this.props.listPermissions });\n    }\n  }\n  handleCancel() {\n    this.setState({ modalReset: false, modalConfirmation: false });\n  }\n  applyPermission() {\n    let listPermissionsModified = this.state.listPermissions.filter(\n      (permission) => permission.modified\n    );\n    let data = listPermissionsModified.map((element) => {\n      return {\n        permissionId: element.id,\n        estabId: this.props.userProfile.establishment_id,\n        rolesArray: element.roles,\n      };\n    });\n    this.props.dispatch(\n      applyPermissionSetting(\n        data,\n        this.props.userProfile.establishment_id,\n        this.props.userProfile.role_id\n      )\n    );\n    this.setState({ listPermissionsModified, modalConfirmation: false });\n  }\n  resetPermission() {\n    this.setState({\n      listPermissions: this.props.listPermissions,\n      listPermissionsModified: [],\n      modalReset: false,\n    });\n  }\n  deletePermission(idPermission, idRole) {\n    let newListPermissions = this.state.listPermissions.map((permission) => {\n      let newPermission =\n        permission.id === parseInt(idPermission)\n          ? {\n              ...permission,\n              roles: permission.roles.filter((role) => role != idRole),\n              modified: true,\n            }\n          : permission;\n      return newPermission;\n    });\n    this.setState({\n      listPermissions: newListPermissions,\n    });\n  }\n  addPermission(idPermission, idRole) {\n    let newListPermissions = this.state.listPermissions.map((permission) => {\n      let newPermission =\n        permission.id === parseInt(idPermission)\n          ? {\n              ...permission,\n              roles: permission.roles.concat([idRole]),\n              modified: true,\n            }\n          : permission;\n      return newPermission;\n    });\n    this.setState({\n      listPermissions: newListPermissions,\n    });\n  }\n  render() {\n    const { values } = this.props;\n\n    return (\n      <div className=\"col-md-12 col-lg-12 col-sm-12 d-flex flex-column bd-highlight mb-3 \">\n        <ResetPermission\n          modal={this.state.modalReset}\n          handleCancelReset={this.handleCancel}\n          handleSubmit={this.resetPermission}\n        ></ResetPermission>\n        <PermissionConfirmation\n          modal={this.state.modalConfirmation}\n          handleCancel={this.handleCancel}\n          handleSubmit={this.applyPermission}\n        ></PermissionConfirmation>\n        <CardBox styleName=\"col-md-12 col-lg-12 col-sm-12\">\n          <div className=\"d-flex flex-row bd-highlight  \">\n            <div className=\"p-3 col-md-5 col-lg-5 col-sm-5  mt-4\">\n              <h1 style={{ color: '#0000CD', fontFamily: 'Roboto' }}>\n                {' '}\n                <IntlMessages id=\"sidebar.components.permissionSetting\" />\n              </h1>\n            </div>\n            <div className=\"p-2 col-md-2 col-lg-2 col-sm-2\">\n              <TextField\n                id=\"subModuleId\"\n                name=\"subModuleId\"\n                select\n                value={values.subModuleId}\n                // onChange={this.props.handleChange('subModuleId')}\n                SelectProps={{}}\n                label={<IntlMessages id={`stuppUser.steps.role`} />}\n                InputProps={{ disableUnderline: true }}\n                margin=\"normal\"\n                fullWidth\n              >\n                <MenuItem key={0} value={0}>\n                  <IntlMessages id={`permission.role.all`} />\n                </MenuItem>\n                {listRole.map((role) => (\n                  <MenuItem key={role.id} value={role.id}>\n                    {role.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n            <div className=\"p-2 col-md-2 col-lg-2 col-sm-2    \">\n              <TextField\n                id=\"moduleId\"\n                name=\"moduleId\"\n                select\n                value={values.moduleId}\n                onChange={this.props.handleChange('moduleId')}\n                SelectProps={{}}\n                label={<IntlMessages id={`sidebar.modules`} />}\n                InputProps={{ disableUnderline: true }}\n                margin=\"normal\"\n                fullWidth\n              >\n                <MenuItem key={0} value={0}>\n                  <IntlMessages id={`userStuppDisplay.all`} />\n                </MenuItem>\n                {this.props.estabModule.map((element, index) => (\n                  <MenuItem key={index} value={element.module.id}>\n                    {/* {element.module.name} */}\n                    <IntlMessages id={`sidebar.components.${element.module.path}`} />\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n            <div className=\"p-2 col-md-2 col-lg-2 col-sm-2\">\n              <TextField\n                id=\"subModuleId\"\n                name=\"subModuleId\"\n                select\n                value={values.subModuleId}\n                onChange={this.props.handleChange('subModuleId')}\n                SelectProps={{}}\n                label={<IntlMessages id={`permission.sous.module`} />}\n                InputProps={{ disableUnderline: true }}\n                margin=\"normal\"\n                fullWidth\n              >\n                {values.subModuleList.map((subModule) => (\n                  <MenuItem key={subModule.id} value={subModule.id}>\n                    {/* {subModule.name} */}\n                    <IntlMessages id={`sidebar.components.${subModule.name}`} />\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n          </div>\n        </CardBox>\n        <CardBox styleName=\"col-md-12 col-lg-12 col-sm-12\">\n          <div className=\"table-responsive-material\">\n            <Table>\n              <TableHead className=\"th-border-b\">\n                <TableRow>\n                  <TableCell>\n                    {' '}\n                    <IntlMessages id={`action.type.of.education`} />\n                  </TableCell>\n                  {listRole.map((element) => (\n                    <TableCell>{element.label}</TableCell>\n                  ))}\n                  {/* <TableCell>\n                    <IntlMessages id={`role.admin`} />\n                  </TableCell>\n                  <TableCell>\n                    {' '}\n                    <IntlMessages id={`component.etablishments.info.director`} />\n                  </TableCell>\n                  <TableCell>\n                    {' '}\n                    <IntlMessages id={`role.supervisor`} />\n                  </TableCell>\n                  <TableCell>\n                    {' '}\n                    <IntlMessages id={`toDo.professor`} />\n                  </TableCell>\n                  <TableCell>\n                    {' '}\n                    <IntlMessages id={`userStuppDisplay.Student`} />\n                  </TableCell>\n                  <TableCell>\n                    {' '}\n                    <IntlMessages id={`userStuppDisplay.Parent`} />\n                  </TableCell> */}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.listPermissions.map((element, index) => {\n                  return (\n                    <PermissionListItem\n                      key={index}\n                      permission={element}\n                      addPermission={this.addPermission}\n                      deletePermission={this.deletePermission}\n                      settings={this.props.settings}\n                    />\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </div>\n        </CardBox>\n        <div className=\"d-flex flex-row-reverse bd-highlight col-md-12 col-lg-12 col-sm-12\">\n          <div className=\" bd-highlight \">\n            <Button\n              variant=\"contained\"\n              className=\"bg-primary text-white \"\n              style={{\n                borderBottomLeftRadius: '10px',\n                borderBottomRightRadius: '10px',\n                borderTopLeftRadius: '10px',\n                borderTopRightRadius: '10px',\n                width: '100%',\n                height: '80%',\n                textTransform: 'capitalize',\n              }}\n              onClick={() => this.setState({ modalConfirmation: true })}\n            >\n              {true ? (\n                <IntlMessages id=\"superadmin.apply.button\" />\n              ) : (\n                <IntlMessages id=\"button.modify\" />\n              )}\n            </Button>\n          </div>\n          <div className=\" bd-highlight mr-2\">\n            <Button\n              variant=\"contained\"\n              style={{\n                borderBottomLeftRadius: '10px',\n                borderBottomRightRadius: '10px',\n                borderTopLeftRadius: '10px',\n                borderTopRightRadius: '10px',\n                width: '100%',\n                height: '80%',\n                textTransform: 'capitalize',\n              }}\n              className=\" bg-grey text-white \"\n              onClick={() => this.setState({ modalReset: true })}\n            >\n              <IntlMessages id=\"components.classes.formadd.buttonCancel\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    settings: state.settings.locale,\n  };\n}\n\nexport default connect(mapStateToProps)(PermissionList);\n"]},"metadata":{},"sourceType":"module"}