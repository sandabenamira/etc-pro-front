{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Calendar/routes/Emploi/index.js\";\nimport React from 'react';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport { classService } from '../../../../../_services/class.service';\nimport { getClasses } from \"../../../../../actions/classeAction\";\nimport { connect } from \"react-redux\";\nimport { getEstablishment } from \"../../../../../actions/establishmentAction\";\nimport { getSubject } from \"../../../../../actions/subjectAction\";\nimport { getRooms } from \"../../../../../actions/roomAction\";\nimport { getData } from \"../../../../../actions/professorAction\";\nimport TimeTable from './TimeTable';\nimport { getProfessorTimeTable, getStudentTimeTable, getClassTimeTable, getParentTimeTable } from \"../../../../../actions/planningActions\";\n\nclass ALMANACH extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeClasse = name => event => {\n      this.props.dispatch(getClassTimeTable(event.target.value));\n      this.setState({\n        classe: event.target.value\n      });\n    };\n\n    this.handleChange = name => event => {\n      let establishmentClasse = this.props.classes.filter(classe => classe.establishment_id === event.target.value);\n      this.setState({\n        [name]: event.target.value,\n        establishmentClass: establishmentClasse,\n        events: [],\n        classe: ''\n      });\n    };\n\n    this.state = {\n      establishment: '',\n      establishmentClass: [],\n      classe: '',\n      supplieModal: false,\n      eventId: '',\n      establishmentRooms: []\n    };\n    this.handleChangeClasse = this.handleChangeClasse.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  UNSAFE_componentWillMount() {\n    this.props.dispatch(getSubject());\n    this.props.dispatch(getRooms());\n    this.props.dispatch(getClasses());\n    this.props.dispatch(getData());\n    this.props.dispatch(getEstablishment());\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.subjects !== this.props.subjects) {\n      let apiEndpoint = '';\n\n      switch (this.props.userProfile.role_id) {\n        case 1:\n          this.setState({\n            establishmentRooms: this.props.rooms\n          });\n          break;\n\n        case 2:\n        case 7:\n          let filter = {\n            where: {\n              establishment_id: this.props.userProfile.establishment_id\n            }\n          };\n          apiEndpoint = `/classes?access_token=${localStorage.token}&filter=` + JSON.stringify(filter);\n          classService.get(apiEndpoint).then(response => {\n            let activeClass = response.data.filter(classInfo => classInfo.status);\n            this.setState({\n              establishmentClass: activeClass\n            });\n          }).catch(err => {});\n          break;\n\n        case 3:\n          apiEndpoint = `/professors?access_token=${localStorage.token}&filter[where][profile_id]=` + this.props.userProfile.id + `&filter[include][profClass][class]`;\n          classService.get(apiEndpoint).then(response => {\n            let classesProf = [];\n            response.data[0].profClass.forEach(element => {\n              classesProf.push(element.class);\n            });\n            this.setState({\n              establishmentClass: classesProf\n            });\n          }).catch(err => {});\n          this.props.dispatch(getProfessorTimeTable(this.props.userProfile.id));\n          break;\n\n        case 4:\n          this.props.dispatch(getParentTimeTable(this.props.userProfile.id));\n          break;\n\n        case 5:\n          this.props.dispatch(getStudentTimeTable(this.props.userProfile.id));\n          break;\n\n        default:\n          return null;\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TimeTable, {\n      match: this.props.match,\n      classes: this.props.classes,\n      establishments: this.props.establishments,\n      userProfile: this.props.userProfile,\n      subjects: this.props.subjects,\n      rooms: this.state.establishmentRooms,\n      professors: this.props.professors,\n      handleChange: this.handleChange,\n      handleChangeClasse: this.handleChangeClasse,\n      establishment: this.state.establishment,\n      classe: this.state.classe,\n      establishmentClass: this.state.establishmentClass,\n      events: this.props.events,\n      startTime: this.props.startTime,\n      endTime: this.props.endTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    classes: state.classes,\n    establishments: state.establishment.remoteEstablishments,\n    userProfile: state.auth.userProfile,\n    subjects: state.subject.remoteSubjects,\n    rooms: state.rooms,\n    events: state.planning.events,\n    startTime: state.settings.startTime,\n    endTime: state.settings.endTime\n  };\n};\n\nexport default connect(mapStateToProps)(ALMANACH);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Calendar/routes/Emploi/index.js"],"names":["React","classService","getClasses","connect","getEstablishment","getSubject","getRooms","getData","TimeTable","getProfessorTimeTable","getStudentTimeTable","getClassTimeTable","getParentTimeTable","ALMANACH","Component","constructor","props","handleChangeClasse","name","event","dispatch","target","value","setState","classe","handleChange","establishmentClasse","classes","filter","establishment_id","establishmentClass","events","state","establishment","supplieModal","eventId","establishmentRooms","bind","UNSAFE_componentWillMount","componentWillReceiveProps","nextProps","subjects","apiEndpoint","userProfile","role_id","rooms","where","localStorage","token","JSON","stringify","get","then","response","activeClass","data","classInfo","status","catch","err","id","classesProf","profClass","forEach","element","push","class","render","match","establishments","professors","startTime","endTime","mapStateToProps","remoteEstablishments","auth","subject","remoteSubjects","planning","settings"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport { classService } from '../../../../../_services/class.service';\nimport { getClasses } from \"../../../../../actions/classeAction\";\nimport { connect } from \"react-redux\";\nimport { getEstablishment } from \"../../../../../actions/establishmentAction\";\nimport { getSubject } from \"../../../../../actions/subjectAction\";\nimport { getRooms } from \"../../../../../actions/roomAction\";\nimport { getData } from \"../../../../../actions/professorAction\";\nimport TimeTable from './TimeTable';\nimport { getProfessorTimeTable, getStudentTimeTable, getClassTimeTable, getParentTimeTable } from \"../../../../../actions/planningActions\";\n\nclass ALMANACH extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      establishment: '',\n      establishmentClass: [],\n      classe: '',\n      supplieModal: false,\n      eventId: '',\n      establishmentRooms: []\n    };\n    this.handleChangeClasse = this.handleChangeClasse.bind(this)\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChangeClasse = name => event => {\n    this.props.dispatch(getClassTimeTable(event.target.value))\n    this.setState({ classe: event.target.value });\n  };\n  handleChange = name => event => {\n\n    let establishmentClasse = this.props.classes.filter(classe => classe.establishment_id === event.target.value)\n    this.setState({ [name]: event.target.value, establishmentClass: establishmentClasse, events: [], classe: '' });\n  };\n  UNSAFE_componentWillMount() {\n    this.props.dispatch(getSubject());\n    this.props.dispatch(getRooms());\n    this.props.dispatch(getClasses())\n    this.props.dispatch(getData())\n    this.props.dispatch(getEstablishment());\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.subjects !== this.props.subjects) {\n\n      let apiEndpoint = ''\n      switch (this.props.userProfile.role_id) {\n        case 1:\n          this.setState({\n            establishmentRooms: this.props.rooms\n          })\n          break\n        case 2:\n        case 7:\n\n          let filter = {\n            where: {\n              establishment_id: this.props.userProfile.establishment_id\n            }\n          };\n          apiEndpoint = `/classes?access_token=${localStorage.token}&filter=` + JSON.stringify(filter);\n          classService.get(apiEndpoint)\n            .then((response) => {\n              let activeClass = response.data.filter(classInfo => classInfo.status)\n              this.setState({\n                establishmentClass: activeClass\n              })\n            }).catch((err) => {\n            })\n          break;\n        case 3:\n          apiEndpoint = `/professors?access_token=${localStorage.token}&filter[where][profile_id]=` + this.props.userProfile.id + `&filter[include][profClass][class]`;\n          classService.get(apiEndpoint)\n            .then((response) => {\n              let classesProf = []\n              response.data[0].profClass.forEach(element => {\n                classesProf.push(element.class)\n              });\n              this.setState({\n                establishmentClass: classesProf\n              })\n\n            }).catch((err) => {\n            })\n          this.props.dispatch(getProfessorTimeTable(this.props.userProfile.id))\n\n          break\n        case 4:\n          this.props.dispatch(getParentTimeTable(this.props.userProfile.id))\n          break;\n        case 5:\n          this.props.dispatch(getStudentTimeTable(this.props.userProfile.id))\n          break;\n        default:\n          return null;\n      }\n    }\n\n  }\n\n  render() {\n    return (\n\n      <div className=\"app-wrapper\">\n        <TimeTable\n          match={this.props.match}\n          classes={this.props.classes}\n          establishments={this.props.establishments}\n          userProfile={this.props.userProfile}\n          subjects={this.props.subjects}\n          rooms={this.state.establishmentRooms}\n          professors={this.props.professors}\n          handleChange={this.handleChange}\n          handleChangeClasse={this.handleChangeClasse}\n          establishment={this.state.establishment}\n          classe={this.state.classe}\n          establishmentClass={this.state.establishmentClass}\n          events={this.props.events}\n          startTime={this.props.startTime}\n          endTime={this.props.endTime}\n        />\n      </div>)\n\n  }\n};\nconst mapStateToProps = (state) => {\n  return {\n    classes: state.classes,\n    establishments: state.establishment.remoteEstablishments,\n    userProfile: state.auth.userProfile,\n    subjects: state.subject.remoteSubjects,\n    rooms: state.rooms,\n    events: state.planning.events,\n    startTime:state.settings.startTime,\n    endTime:state.settings.endTime\n  }\n}\n\nexport default connect(mapStateToProps)(ALMANACH); "]},"metadata":{},"sourceType":"module"}