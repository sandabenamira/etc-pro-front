{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport axios from \"axios\";\nimport baseUrl from \"../config/config\";\nimport { GET_ALL_LESSON, ADD_LESSON, DELETE_LESSON, EDIT_LESSON, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_SUCCESS_MESSAGE } from \"../constants/ActionTypes\";\nexport const getLessons = establishmentId => {\n  return dispatch => {\n    let apiEndpoint = `/courses?access_token=${localStorage.token}&filter[include][classProfSubject][class]`;\n    classService.get(apiEndpoint).then(response => {\n      console.log('lesson ', response);\n      console.log(\"establishmentId\", establishmentId);\n      var filtredLessons = response.data.filter(element => element.status === true && element.classProfSubject.class.establishment_id == establishmentId);\n      console.log(\"filtredLessons\", filtredLessons);\n      dispatch({\n        type: GET_ALL_LESSON,\n        payload: filtredLessons\n      });\n    });\n  };\n};\nexport const getLessonByClassId = classId => {\n  return dispatch => {\n    let apiEndpoint = `/courses/getLessonsByClassId/${classId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      var filtredLessons = response.data.lessons.filter(element => element.status === true);\n      dispatch({\n        type: GET_ALL_LESSON,\n        payload: filtredLessons\n      });\n    });\n  };\n};\nexport const addLesson = (itemLesson, files, establishmentID) => {\n  //1\n  return dispatch => {\n    let apiEndpoint = `/courses?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, itemLesson).then(response => {\n      console.log(\"response\", response);\n\n      if (response) {\n        var course_id = response.data.id;\n        const courseObject = response.data;\n        let arrayItemCourseFiles = [];\n        var formadata = new FormData();\n\n        if (files.length > 0) {\n          console.log(\"files\", files);\n          var i = 0;\n\n          for (const key of Object.keys(files)) {\n            i++;\n            const fileExtension = files[key].name.replace(/^.*\\./, \"\");\n            const fileName = \"Course_\" + courseObject.id + \".\" + key + \".\" + fileExtension;\n            var itemCourseFiles = {};\n            itemCourseFiles.file_name = fileName;\n            itemCourseFiles.course_id = course_id;\n            var object = {};\n            object.file = files[key];\n            object.fileName = fileName;\n            object.courseObject = response.data;\n            const finalfileName = fileName;\n            console.log(\"finalfileName\", finalfileName);\n            console.log(\"files[key]\", files[key]);\n            const myNewFile = new File([files[key]], finalfileName, {\n              type: files[key].type\n            });\n            let formadata = new FormData();\n            formadata.append(\"image\", myNewFile);\n            const establishLogoUrl = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n            axios({\n              url: establishLogoUrl,\n              method: \"POST\",\n              data: formadata\n            }).then(response2 => {\n              console.log('Uploaddddddddddddddddd ', response2.data);\n              arrayItemCourseFiles.push(response2.data.result.files.image[0].providerResponse.location);\n            }).catch(err => {}); // dispatch(uploadCourseMedia(object)\n          }\n\n          if (i == files.length) {\n            console.log(\"arrayItemCourseFiles\", arrayItemCourseFiles, \"length\", arrayItemCourseFiles.length);\n            console.log('i ', i);\n            classService.post(`/course_files?access_token=${localStorage.token}`, arrayItemCourseFiles).then(response3 => {\n              console.log('response3 ', response3.data);\n              dispatch({\n                type: ADD_LESSON,\n                payload: courseObject\n              });\n              dispatch({\n                type: SHOW_SUCCESS_MESSAGE,\n                payload: \"La création est effectuée avec succès\"\n              });\n              setTimeout(() => {\n                dispatch({\n                  type: HIDE_SUCCESS_MESSAGE\n                });\n              }, 4000);\n            }).catch(err => {});\n          }\n        } else {\n          dispatch({\n            type: SHOW_ERROR_MESSAGE,\n            payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n          });\n          setTimeout(() => {\n            dispatch({\n              type: HIDE_ERROR_MESSAGE\n            });\n          }, 4000);\n\n          if (course_id) {\n            axios.delete(`${baseUrl.baseUrl}/courses/` + course_id + `?access_token=${localStorage.token}`);\n          }\n        }\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};\nexport function uploadCourseMedia(data) {\n  const fileName = data.fileName;\n  const myNewFile = new File([data.file], fileName, {\n    type: data.file.type\n  });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function (dispatch) {\n    const establishLogoUrl = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata\n    }).then(response => {// dispatch({ type: ADD_LESSON, payload: data.courseObject });\n      // dispatch({\n      //   type: SHOW_SUCCESS_MESSAGE,\n      //   payload: 'La création est effectuée avec succès',\n      // });\n      // setTimeout(() => {\n      //   dispatch({ type: HIDE_SUCCESS_MESSAGE });\n      // }, 4000);\n    }).catch(err => {});\n  };\n}\nexport function deleteLesson(itemId) {\n  return dispatch => {\n    axios.patch(`${baseUrl.baseUrl}/courses/` + itemId + `?access_token=${localStorage.token}`, {\n      status: false\n    }).then(response => {\n      dispatch({\n        type: DELETE_LESSON,\n        payload: response.data\n      });\n      dispatch({\n        type: SHOW_SUCCESS_MESSAGE,\n        payload: \"La suppression est effectuée avec succès\"\n      });\n      setTimeout(() => {\n        dispatch({\n          type: HIDE_SUCCESS_MESSAGE\n        });\n      }, 3000);\n    }).catch(function (error) {\n      dispatch({\n        type: SHOW_ERROR_MESSAGE,\n        payload: \"Une erreur est survenue lors de la suppression merci d'essayer à nouveau\"\n      });\n    });\n  };\n}\nexport function editLesson(dataLesson) {\n  return dispatch => {\n    let apiEndpoint = `/courses/` + dataLesson.id + `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, dataLesson).then(response => {\n      dispatch({\n        type: EDIT_LESSON,\n        payload: response.data\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/LessonAction.js"],"names":["classService","axios","baseUrl","GET_ALL_LESSON","ADD_LESSON","DELETE_LESSON","EDIT_LESSON","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_SUCCESS_MESSAGE","getLessons","establishmentId","dispatch","apiEndpoint","localStorage","token","get","then","response","console","log","filtredLessons","data","filter","element","status","classProfSubject","class","establishment_id","type","payload","getLessonByClassId","classId","lessons","addLesson","itemLesson","files","establishmentID","post","course_id","id","courseObject","arrayItemCourseFiles","formadata","FormData","length","i","key","Object","keys","fileExtension","name","replace","fileName","itemCourseFiles","file_name","object","file","finalfileName","myNewFile","File","append","establishLogoUrl","url","method","response2","push","result","image","providerResponse","location","catch","err","response3","setTimeout","delete","uploadCourseMedia","deleteLesson","itemId","patch","error","editLesson","dataLesson","put"],"mappings":"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","sourcesContent":["import { classService } from \"../_services/class.service\";\nimport axios from \"axios\";\nimport baseUrl from \"../config/config\";\n\nimport {\n  GET_ALL_LESSON,\n  ADD_LESSON,\n  DELETE_LESSON,\n  EDIT_LESSON,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_SUCCESS_MESSAGE,\n} from \"../constants/ActionTypes\";\n\nexport const getLessons = (establishmentId) => {\n  return (dispatch) => {\n    let apiEndpoint = `/courses?access_token=${localStorage.token}&filter[include][classProfSubject][class]`;\n    classService.get(apiEndpoint).then((response) => {\n      console.log('lesson ',response)\n      console.log(\"establishmentId\",establishmentId)\n      var filtredLessons = response.data.filter(\n        (element) =>\n          element.status === true &&\n          element.classProfSubject.class.establishment_id == establishmentId\n      );\n      console.log(\"filtredLessons\" ,filtredLessons)\n      dispatch({ type: GET_ALL_LESSON, payload: filtredLessons });\n    });\n  };\n};\n\nexport const getLessonByClassId = (classId) => {\n  return (dispatch) => {\n    let apiEndpoint = `/courses/getLessonsByClassId/${classId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then((response) => {\n      var filtredLessons = response.data.lessons.filter(\n        (element) => element.status === true\n      );\n\n      dispatch({ type: GET_ALL_LESSON, payload: filtredLessons });\n    });\n  };\n};\nexport const addLesson = (itemLesson, files, establishmentID) => {\n  //1\n  return (dispatch) => {\n    let apiEndpoint = `/courses?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, itemLesson).then((response) => {\n\n      console.log(\"response\",response)\n\n      if (response) {\n        var course_id = response.data.id;\n        const courseObject = response.data;\n      \n            let arrayItemCourseFiles = [];\n            var formadata = new FormData();\n            if (files.length > 0) {\n              console.log(\"files\",files)\n              var i=0;\n              for (const key of Object.keys(files)) {\n                i++\n                const fileExtension = files[key].name.replace(/^.*\\./, \"\");\n                const fileName =\n                  \"Course_\" + courseObject.id + \".\" + key + \".\" + fileExtension;\n\n                var itemCourseFiles = {};\n                itemCourseFiles.file_name = fileName;\n                itemCourseFiles.course_id = course_id;\n\n                var object = {};\n                object.file = files[key];\n                object.fileName = fileName;\n                object.courseObject = response.data;\n\n                const finalfileName = fileName;\n                console.log(\"finalfileName\",finalfileName)\n                console.log(\"files[key]\",files[key])\n\n                const myNewFile = new File([files[key]], finalfileName, { type: files[key].type });\n                let formadata = new FormData();\n                formadata.append(\"image\", myNewFile);\n\n                  const establishLogoUrl =\n                  `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n\n                  axios({\n                    url: establishLogoUrl,\n                    method: \"POST\",\n                    data: formadata,\n                  })\n                    .then((response2) => {\n                  console.log('Uploaddddddddddddddddd ',response2.data)\n                  arrayItemCourseFiles.push(response2.data.result.files.image[0].providerResponse.location);\n\n                    })\n                    .catch((err) => {\n                     });\n            \n\n              // dispatch(uploadCourseMedia(object)\n\n              \n              }\n              if(i==files.length) {\n              console.log(\"arrayItemCourseFiles\",arrayItemCourseFiles,\"length\",arrayItemCourseFiles.length)\n              console.log('i ',i)\n              classService.post(\n                `/course_files?access_token=${localStorage.token}`,\n                arrayItemCourseFiles\n              ).then((response3) => {\n                console.log('response3 ',response3.data)\n                dispatch({ type: ADD_LESSON, payload: courseObject });\n                dispatch({\n                  type: SHOW_SUCCESS_MESSAGE,\n                  payload: \"La création est effectuée avec succès\",\n                });\n                setTimeout(() => {\n                  dispatch({ type: HIDE_SUCCESS_MESSAGE });\n                }, 4000);\n                  })\n                  .catch((err) => {\n                   });\n                  }\n            } else {\n              dispatch({\n                type: SHOW_ERROR_MESSAGE,\n                payload:\n                  \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n              });\n              setTimeout(() => {\n                dispatch({ type: HIDE_ERROR_MESSAGE });\n              }, 4000);\n              if (course_id) {\n                axios.delete(\n                  `${baseUrl.baseUrl}/courses/` +\n                  course_id +\n                  `?access_token=${localStorage.token}`\n                );\n              }\n            }\n         \n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n\nexport function uploadCourseMedia(data) {\n  const fileName = data.fileName;\n  const myNewFile = new File([data.file], fileName, { type: data.file.type });\n  let formadata = new FormData();\n  formadata.append(\"image\", myNewFile);\n  return function(dispatch) {\n    const establishLogoUrl =\n      `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n    axios({\n      url: establishLogoUrl,\n      method: \"POST\",\n      data: formadata,\n    })\n      .then((response) => {\n        // dispatch({ type: ADD_LESSON, payload: data.courseObject });\n        // dispatch({\n        //   type: SHOW_SUCCESS_MESSAGE,\n        //   payload: 'La création est effectuée avec succès',\n        // });\n        // setTimeout(() => {\n        //   dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        // }, 4000);\n      })\n      .catch((err) => {\n       });\n  };\n}\n\nexport function deleteLesson(itemId) {\n  return (dispatch) => {\n    axios\n      .patch(\n        `${baseUrl.baseUrl}/courses/` +\n        itemId +\n        `?access_token=${localStorage.token}`,\n        {\n          status: false,\n        }\n      )\n      .then((response) => {\n         dispatch({ type: DELETE_LESSON, payload: response.data });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La suppression est effectuée avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 3000);\n      })\n      .catch(function(error) {\n         dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la suppression merci d'essayer à nouveau\",\n        });\n      });\n  };\n}\n\nexport function editLesson(dataLesson) {\n  return (dispatch) => {\n    let apiEndpoint =\n      `/courses/` + dataLesson.id + `?access_token=${localStorage.token}`;\n    classService.put(apiEndpoint, dataLesson).then((response) => {\n      dispatch({ type: EDIT_LESSON, payload: response.data });\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}