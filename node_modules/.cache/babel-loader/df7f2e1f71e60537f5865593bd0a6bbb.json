{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _dateArithmetic = _interopRequireDefault(require(\"date-arithmetic\"));\n/* eslint no-fallthrough: off */\n\n\nvar MILLI = {\n  seconds: 1000,\n  minutes: 1000 * 60,\n  hours: 1000 * 60 * 60,\n  day: 1000 * 60 * 60 * 24\n};\nvar MONTHS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nvar dates = (0, _extends2.default)({}, _dateArithmetic.default, {\n  monthsInYear: function monthsInYear(year) {\n    var date = new Date(year, 0, 1);\n    return MONTHS.map(function (i) {\n      return dates.month(date, i);\n    });\n  },\n  firstVisibleDay: function firstVisibleDay(date, localizer) {\n    var firstOfMonth = dates.startOf(date, 'month');\n    return dates.startOf(firstOfMonth, 'week', localizer.startOfWeek());\n  },\n  lastVisibleDay: function lastVisibleDay(date, localizer) {\n    var endOfMonth = dates.endOf(date, 'month');\n    return dates.endOf(endOfMonth, 'week', localizer.startOfWeek());\n  },\n  visibleDays: function visibleDays(date, localizer) {\n    var current = dates.firstVisibleDay(date, localizer),\n        last = dates.lastVisibleDay(date, localizer),\n        days = [];\n\n    while (dates.lte(current, last, 'day')) {\n      days.push(current);\n      current = dates.add(current, 1, 'day');\n    }\n\n    return days;\n  },\n  ceil: function ceil(date, unit) {\n    var floor = dates.startOf(date, unit);\n    return dates.eq(floor, date) ? floor : dates.add(floor, 1, unit);\n  },\n  range: function range(start, end, unit) {\n    if (unit === void 0) {\n      unit = 'day';\n    }\n\n    var current = start,\n        days = [];\n\n    while (dates.lte(current, end, unit)) {\n      days.push(current);\n      current = dates.add(current, 1, unit);\n    }\n\n    return days;\n  },\n  merge: function merge(date, time) {\n    if (time == null && date == null) return null;\n    if (time == null) time = new Date();\n    if (date == null) date = new Date();\n    date = dates.startOf(date, 'day');\n    date = dates.hours(date, dates.hours(time));\n    date = dates.minutes(date, dates.minutes(time));\n    date = dates.seconds(date, dates.seconds(time));\n    return dates.milliseconds(date, dates.milliseconds(time));\n  },\n  eqTime: function eqTime(dateA, dateB) {\n    return dates.hours(dateA) === dates.hours(dateB) && dates.minutes(dateA) === dates.minutes(dateB) && dates.seconds(dateA) === dates.seconds(dateB);\n  },\n  isJustDate: function isJustDate(date) {\n    return dates.hours(date) === 0 && dates.minutes(date) === 0 && dates.seconds(date) === 0 && dates.milliseconds(date) === 0;\n  },\n  duration: function duration(start, end, unit, firstOfWeek) {\n    if (unit === 'day') unit = 'date';\n    return Math.abs(dates[unit](start, undefined, firstOfWeek) - dates[unit](end, undefined, firstOfWeek));\n  },\n  diff: function diff(dateA, dateB, unit) {\n    if (!unit || unit === 'milliseconds') return Math.abs(+dateA - +dateB); // the .round() handles an edge case\n    // with DST where the total won't be exact\n    // since one day in the range may be shorter/longer by an hour\n\n    return Math.round(Math.abs(+dates.startOf(dateA, unit) / MILLI[unit] - +dates.startOf(dateB, unit) / MILLI[unit]));\n  },\n  total: function total(date, unit) {\n    var ms = date.getTime(),\n        div = 1;\n\n    switch (unit) {\n      case 'week':\n        div *= 7;\n\n      case 'day':\n        div *= 24;\n\n      case 'hours':\n        div *= 60;\n\n      case 'minutes':\n        div *= 60;\n\n      case 'seconds':\n        div *= 1000;\n    }\n\n    return ms / div;\n  },\n  week: function week(date) {\n    var d = new Date(date);\n    d.setHours(0, 0, 0);\n    d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n    return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7);\n  },\n  today: function today() {\n    return dates.startOf(new Date(), 'day');\n  },\n  yesterday: function yesterday() {\n    return dates.add(dates.startOf(new Date(), 'day'), -1, 'day');\n  },\n  tomorrow: function tomorrow() {\n    return dates.add(dates.startOf(new Date(), 'day'), 1, 'day');\n  }\n});\nvar _default = dates;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/node_modules/react-big-calendar/lib/utils/dates.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","_extends2","_dateArithmetic","MILLI","seconds","minutes","hours","day","MONTHS","dates","monthsInYear","year","date","Date","map","i","month","firstVisibleDay","localizer","firstOfMonth","startOf","startOfWeek","lastVisibleDay","endOfMonth","endOf","visibleDays","current","last","days","lte","push","add","ceil","unit","floor","eq","range","start","end","merge","time","milliseconds","eqTime","dateA","dateB","isJustDate","duration","firstOfWeek","Math","abs","undefined","diff","round","total","ms","getTime","div","week","d","setHours","setDate","getDate","getDay","getFullYear","today","yesterday","tomorrow","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _dateArithmetic = _interopRequireDefault(require(\"date-arithmetic\"));\n\n/* eslint no-fallthrough: off */\nvar MILLI = {\n  seconds: 1000,\n  minutes: 1000 * 60,\n  hours: 1000 * 60 * 60,\n  day: 1000 * 60 * 60 * 24\n};\nvar MONTHS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nvar dates = (0, _extends2.default)({}, _dateArithmetic.default, {\n  monthsInYear: function monthsInYear(year) {\n    var date = new Date(year, 0, 1);\n    return MONTHS.map(function (i) {\n      return dates.month(date, i);\n    });\n  },\n  firstVisibleDay: function firstVisibleDay(date, localizer) {\n    var firstOfMonth = dates.startOf(date, 'month');\n    return dates.startOf(firstOfMonth, 'week', localizer.startOfWeek());\n  },\n  lastVisibleDay: function lastVisibleDay(date, localizer) {\n    var endOfMonth = dates.endOf(date, 'month');\n    return dates.endOf(endOfMonth, 'week', localizer.startOfWeek());\n  },\n  visibleDays: function visibleDays(date, localizer) {\n    var current = dates.firstVisibleDay(date, localizer),\n        last = dates.lastVisibleDay(date, localizer),\n        days = [];\n\n    while (dates.lte(current, last, 'day')) {\n      days.push(current);\n      current = dates.add(current, 1, 'day');\n    }\n\n    return days;\n  },\n  ceil: function ceil(date, unit) {\n    var floor = dates.startOf(date, unit);\n    return dates.eq(floor, date) ? floor : dates.add(floor, 1, unit);\n  },\n  range: function range(start, end, unit) {\n    if (unit === void 0) {\n      unit = 'day';\n    }\n\n    var current = start,\n        days = [];\n\n    while (dates.lte(current, end, unit)) {\n      days.push(current);\n      current = dates.add(current, 1, unit);\n    }\n\n    return days;\n  },\n  merge: function merge(date, time) {\n    if (time == null && date == null) return null;\n    if (time == null) time = new Date();\n    if (date == null) date = new Date();\n    date = dates.startOf(date, 'day');\n    date = dates.hours(date, dates.hours(time));\n    date = dates.minutes(date, dates.minutes(time));\n    date = dates.seconds(date, dates.seconds(time));\n    return dates.milliseconds(date, dates.milliseconds(time));\n  },\n  eqTime: function eqTime(dateA, dateB) {\n    return dates.hours(dateA) === dates.hours(dateB) && dates.minutes(dateA) === dates.minutes(dateB) && dates.seconds(dateA) === dates.seconds(dateB);\n  },\n  isJustDate: function isJustDate(date) {\n    return dates.hours(date) === 0 && dates.minutes(date) === 0 && dates.seconds(date) === 0 && dates.milliseconds(date) === 0;\n  },\n  duration: function duration(start, end, unit, firstOfWeek) {\n    if (unit === 'day') unit = 'date';\n    return Math.abs(dates[unit](start, undefined, firstOfWeek) - dates[unit](end, undefined, firstOfWeek));\n  },\n  diff: function diff(dateA, dateB, unit) {\n    if (!unit || unit === 'milliseconds') return Math.abs(+dateA - +dateB); // the .round() handles an edge case\n    // with DST where the total won't be exact\n    // since one day in the range may be shorter/longer by an hour\n\n    return Math.round(Math.abs(+dates.startOf(dateA, unit) / MILLI[unit] - +dates.startOf(dateB, unit) / MILLI[unit]));\n  },\n  total: function total(date, unit) {\n    var ms = date.getTime(),\n        div = 1;\n\n    switch (unit) {\n      case 'week':\n        div *= 7;\n\n      case 'day':\n        div *= 24;\n\n      case 'hours':\n        div *= 60;\n\n      case 'minutes':\n        div *= 60;\n\n      case 'seconds':\n        div *= 1000;\n    }\n\n    return ms / div;\n  },\n  week: function week(date) {\n    var d = new Date(date);\n    d.setHours(0, 0, 0);\n    d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n    return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7);\n  },\n  today: function today() {\n    return dates.startOf(new Date(), 'day');\n  },\n  yesterday: function yesterday() {\n    return dates.add(dates.startOf(new Date(), 'day'), -1, 'day');\n  },\n  tomorrow: function tomorrow() {\n    return dates.add(dates.startOf(new Date(), 'day'), 1, 'day');\n  }\n});\nvar _default = dates;\nexports.default = _default;\nmodule.exports = exports[\"default\"];"]},"metadata":{},"sourceType":"script"}