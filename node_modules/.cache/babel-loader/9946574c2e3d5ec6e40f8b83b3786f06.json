{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/SubjectsSettings/AssignmentSubjectSetting.js\";\nimport React from \"react\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Auxiliary from \"../../../../../util/Auxiliary\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { connect } from \"react-redux\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { green } from '@material-ui/core/colors';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 15\n  }\n})));\n\nclass AssignmentSubjectSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      values,\n      levels,\n      addNewAssignment,\n      handleChangeListSubjects,\n      handleChangeListSubjectsSection,\n      handleChangeAssignment,\n      handleSubmitAssignment,\n      handleCancel\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: values.isOpenAssignment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      className: \"modal-box-header bg-primary text-white\",\n      toggle: handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"assignment.subjects.levels.sections\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"row\",\n      onSubmit: handleSubmitAssignment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, values.listOfAssignment.map((objSubject, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      id: `${index}`,\n      control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n        checked: objSubject.isChecked,\n        onChange: event => handleChangeAssignment(event, \"isChecked\", index),\n        name: \"isChecked\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 54\n        }\n      }),\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"userStuppDisplay.all\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 52\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: `${index}`,\n      name: \"levelId\",\n      required: !objSubject.isLevelDisabled,\n      disabled: objSubject.isLevelDisabled,\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"sidebar.components.levels\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 49\n        }\n      }),\n      value: objSubject.levelId,\n      onChange: event => handleChangeListSubjects(event, \"levelId\", index),\n      SelectProps: {},\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 41\n      }\n    }, levels.map(level => /*#__PURE__*/React.createElement(MenuItem, {\n      key: level.id,\n      value: level.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 49\n      }\n    }, level.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: `${index}`,\n      disabled: objSubject.sectionDisabled,\n      required: !objSubject.sectionDisabled,\n      name: \"sectionId\",\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"sidebar.components.sections\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 49\n        }\n      }),\n      value: objSubject.sectionId,\n      onChange: event => handleChangeListSubjectsSection(event, \"sectionId\", index),\n      SelectProps: {},\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 41\n      }\n    }, values.sections.map(section => /*#__PURE__*/React.createElement(MenuItem, {\n      key: section.id,\n      value: section.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 49\n      }\n    }, section.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      size: \"small\" // value={`${index}`}\n      ,\n      color: \"primary\",\n      \"aria-label\": \"Add\",\n      onClick: () => addNewAssignment(index + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 45\n      }\n    }))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 text-right \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"jr-btn bg-indigo text-white \",\n      style: {\n        borderBottomLeftRadius: \"18px\",\n        borderBottomRightRadius: \"18px\",\n        borderTopLeftRadius: \"18px\",\n        borderTopRightRadius: \"18px\",\n        width: \"20%\",\n        height: \"40%\"\n      },\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"button.save.registreAppel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"jr-btn bg-grey text-white \",\n      style: {\n        borderBottomLeftRadius: \"18px\",\n        borderBottomRightRadius: \"18px\",\n        borderTopLeftRadius: \"18px\",\n        borderTopRightRadius: \"18px\",\n        width: \"20%\",\n        height: \"40%\"\n      },\n      onClick: handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.establishments.formadd.buttonCancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 41\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {})(AssignmentSubjectSetting);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/SubjectsSettings/AssignmentSubjectSetting.js"],"names":["React","Modal","ModalBody","ModalHeader","IntlMessages","TextField","Button","Auxiliary","MenuItem","connect","FormControlLabel","green","Checkbox","withStyles","Fab","AddIcon","GreenCheckbox","root","color","checked","props","AssignmentSubjectSetting","Component","constructor","state","render","values","levels","addNewAssignment","handleChangeListSubjects","handleChangeListSubjectsSection","handleChangeAssignment","handleSubmitAssignment","handleCancel","isOpenAssignment","listOfAssignment","map","objSubject","index","isChecked","event","isLevelDisabled","levelId","level","id","name","sectionDisabled","sectionId","sections","section","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","width","height","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Auxiliary from \"../../../../../util/Auxiliary\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { connect } from \"react-redux\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { green } from '@material-ui/core/colors';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst GreenCheckbox = withStyles({\n    root: {\n        color: green[400],\n        '&$checked': {\n            color: green[600],\n        },\n    },\n    checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nclass AssignmentSubjectSetting extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n\n    }\n\n    render() {\n        const { values,\n            levels,\n            addNewAssignment,\n            handleChangeListSubjects,\n            handleChangeListSubjectsSection,\n            handleChangeAssignment,\n            handleSubmitAssignment,\n            handleCancel\n        } = this.props\n        return (\n            <Auxiliary>\n                <Modal\n                    isOpen={values.isOpenAssignment} >\n                    <ModalHeader className=\"modal-box-header bg-primary text-white\"\n                        toggle={handleCancel}\n                    >\n                        {<IntlMessages id=\"assignment.subjects.levels.sections\" />}\n                    </ModalHeader>\n                    <ModalBody>\n                        <form className=\"row\" onSubmit={handleSubmitAssignment}>\n                            {values.listOfAssignment.map((objSubject, index) => (\n                                <>\n                                    <div className=\"col-md-2 \">\n                                        <FormControlLabel\n                                            id={`${index}`}\n                                            control={<GreenCheckbox checked={objSubject.isChecked}\n                                            onChange={(event) =>\n                                                handleChangeAssignment(event, \"isChecked\", index)\n                                            }\n                                             name=\"isChecked\" />}\n                                            label={<IntlMessages id=\"userStuppDisplay.all\" />}\n                                        />\n                                    </div>\n\n                                    <div className=\"col-md-4 \">\n                                        <TextField\n                                            id={`${index}`}\n                                            name=\"levelId\"\n                                            required={!objSubject.isLevelDisabled}\n                                            disabled={objSubject.isLevelDisabled}\n                                            select\n                                            label={\n                                                <IntlMessages id=\"sidebar.components.levels\" />\n                                            }\n                                            value={objSubject.levelId}\n                                            onChange={(event) =>\n                                                handleChangeListSubjects(event, \"levelId\", index)\n                                            }\n                                            SelectProps={{}}\n                                            fullWidth\n                                        >\n                                            {levels.map((level) => (\n                                                <MenuItem\n                                                    key={level.id}\n                                                    value={level.id}>\n                                                    {level.name}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n\n                                    </div>\n\n\n                                    <div className=\"col-md-4 \">\n                                        <TextField\n                                            id={`${index}`}\n                                            disabled={objSubject.sectionDisabled}\n                                            required={!objSubject.sectionDisabled}\n                                            name=\"sectionId\"\n                                            select\n                                            label={\n                                                <IntlMessages id=\"sidebar.components.sections\" />\n                                            }\n                                            value={objSubject.sectionId}\n                                            onChange={(event) =>\n                                                handleChangeListSubjectsSection(event, \"sectionId\", index)\n                                            }\n                                            SelectProps={{}}\n                                            fullWidth\n                                        >\n                                            {values.sections.map((section) => (\n                                                <MenuItem\n                                                    key={section.id}\n                                                    value={section.id}>\n                                                    {section.name}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n\n                                    </div>\n                                    <div className=\"col-md-1\">\n                                        <Fab\n                                            size=\"small\"\n                                            // value={`${index}`}\n                                            color=\"primary\"\n                                            aria-label=\"Add\"\n                                            onClick={() => addNewAssignment(index + 1)}\n                                        >\n                                            <AddIcon />\n                                        </Fab>\n                                    </div>\n                                </>\n                            ))}\n                            <br />\n\n\n                            <div className=\"col-md-12 text-right \">\n                                <br />\n                                <br />\n                                <Button\n                                    variant=\"contained\"\n                                    className=\"jr-btn bg-indigo text-white \"\n                                    style={{\n                                        borderBottomLeftRadius: \"18px\",\n                                        borderBottomRightRadius: \"18px\",\n                                        borderTopLeftRadius: \"18px\",\n                                        borderTopRightRadius: \"18px\",\n                                        width: \"20%\",\n                                        height: \"40%\",\n                                    }}\n                                    type=\"submit\"\n                                >\n                                    {\n                                        <IntlMessages id=\"button.save.registreAppel\" />\n                                    }\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    className=\"jr-btn bg-grey text-white \"\n                                    style={{\n                                        borderBottomLeftRadius: \"18px\",\n                                        borderBottomRightRadius: \"18px\",\n                                        borderTopLeftRadius: \"18px\",\n                                        borderTopRightRadius: \"18px\",\n                                        width: \"20%\",\n                                        height: \"40%\",\n                                    }}\n                                    onClick={handleCancel}\n                                >\n                                    {\n                                        <IntlMessages id=\"components.establishments.formadd.buttonCancel\" />\n                                    }\n                                </Button>\n                            </div>\n                        </form>\n                    </ModalBody>\n                </Modal>\n            </Auxiliary>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, {})(AssignmentSubjectSetting);"]},"metadata":{},"sourceType":"module"}