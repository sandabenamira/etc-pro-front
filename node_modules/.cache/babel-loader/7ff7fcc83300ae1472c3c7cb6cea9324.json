{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/Subject/Subjects.js\";\nimport React from 'react';\nimport ContainerHeader from '../../../../../components/ContainerHeader/index';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport SubjectList from './SubjectList';\nimport { getSubject, subjectsByLevelBySection } from \"../../../../../actions/subjectAction\";\nimport { getEstablishment } from \"../../../../../actions/establishmentAction\";\nimport { getSections } from '../../../../../actions/sectionAction';\nimport { getLevels } from '../../../../../actions/classLevelAction';\nimport { getEstabTypes } from '../../../../../actions/estabTypeAction';\nimport { getSectionFromLevel } from '../../../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from \"../../../../../actions/classLevelAction\";\nimport { getCountries } from \"../../../../../actions/countriesAction\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport CardBox from '../../../../../components/CardBox/index';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction mapStateToProps(state) {\n  return {\n    subjects: state.subject.remoteSubjects,\n    establishments: state.establishment.remoteEstablishments,\n    levels: state.ClassLevels.remoteLevels,\n    sections: state.classSections.remoteSections,\n    EstabTypes: state.EstabTypes.remoteEstabTypes,\n    countries: state.countries.remoteCountries\n  };\n}\n\n;\n\nclass Subjects extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n\n      if (name === 'countrie') {\n        let idsOfEstabType = _.uniqBy(_.map(_.filter(this.props.establishments, {\n          countries_id: event.target.value\n        }), 'estab_type_id'));\n\n        let listOfEstabType = [];\n        idsOfEstabType.forEach(id => {\n          let filtredList = this.props.EstabTypes.filter(element => element.id === id);\n          listOfEstabType.push(filtredList[0]);\n        });\n        console.log(listOfEstabType);\n        this.setState({\n          listOfEstabType\n        });\n      }\n    };\n\n    this.handleChangeLevel = event => {\n      if (event.target.value == 26 || event.target.value == 27 || event.target.value == 28 || event.target.value == 29 || event.target.value < 11) {\n        this.setState({\n          level_id: event.target.value,\n          sectionDisabled: true,\n          section_id: 0\n        });\n      } else {\n        this.setState({\n          level_id: event.target.value,\n          sectionDisabled: false,\n          section_id: 0\n        });\n      }\n    };\n\n    this.state = {\n      addSubjectModal: false,\n      subjectsList: [],\n      subjectItem: [],\n      edit: false,\n      modalDelete: false,\n      itemId: 0,\n      estabType: '',\n      level_id: 0,\n      section_id: 0,\n      countrie: '',\n      sectionDisabled: true,\n      listOfEstabType: []\n    };\n    this.editItemSubject = this.editItemSubject.bind(this);\n    this.requestDeleteSubject = this.requestDeleteSubject.bind(this);\n    this.handleCancelModalDelete = this.handleCancelModalDelete.bind(this);\n    this.handleCancelModal = this.handleCancelModal.bind(this);\n    this.addSubject = this.addSubject.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeLevel = this.handleChangeLevel.bind(this);\n  }\n\n  requestDeleteSubject(id) {\n    this.setState({\n      modalDelete: true,\n      itemId: id\n    });\n  }\n\n  editItemSubject(id) {\n    const subjectItem = this.props.subjects.find(element => element.id === id);\n    this.setState({\n      subjectItem: subjectItem,\n      edit: true\n    });\n  }\n\n  componentDidMount() {\n    this.props.getSubject();\n    this.props.getEstablishment();\n    this.props.getSections();\n    this.props.getLevels();\n    this.props.getEstabTypes();\n    this.props.getCountries();\n  }\n\n  handleCancelModal() {\n    this.setState({\n      edit: false,\n      addSubjectModal: false\n    });\n  }\n\n  handleCancelModalDelete() {\n    this.setState({\n      modalDelete: false,\n      itemId: 0\n    });\n  }\n\n  addSubject() {\n    this.setState({\n      addSubjectModal: true\n    });\n  }\n\n  render() {\n    console.log(this.props.levels);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ContainerHeader, {\n      match: this.props.match,\n      title: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"sidebar.subjects\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 66\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"countrie\",\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"educational.system\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 40\n        }\n      }),\n      value: this.state.countrie,\n      onChange: this.handleChange('countrie'),\n      SelectProps: {},\n      margin: \"normal\",\n      defaultValue: \"\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, this.props.countries.map(countrie => /*#__PURE__*/React.createElement(MenuItem, {\n      key: countrie.id,\n      value: countrie.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, countrie.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"estabType\",\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.student.formadd.establishment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 40\n        }\n      }),\n      value: this.state.estabType,\n      onChange: this.handleChange('estabType'),\n      SelectProps: {},\n      margin: \"normal\",\n      defaultValue: \"\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, this.state.listOfEstabType.map(EstabType => /*#__PURE__*/React.createElement(MenuItem, {\n      key: EstabType.id,\n      value: EstabType.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, EstabType.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"level_id\",\n      select: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.note.niveau\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 40\n        }\n      }),\n      value: this.state.establishment_id,\n      onChange: this.handleChangeLevel,\n      SelectProps: {},\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, getLevelListFromEstabType(this.props.levels, this.state.estabType).map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 37\n      }\n    }, option.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"section_id\",\n      select: true,\n      disabled: this.state.sectionDisabled,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.class.level.input.label.section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 40\n        }\n      }),\n      value: this.state.establishment_id,\n      onChange: this.handleChange('section_id'),\n      SelectProps: {},\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 29\n      }\n    }, getSectionFromLevel(this.props.sections, this.state.level_id).map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.id,\n      value: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 37\n      }\n    }, option.name)))))), this.state.sectionDisabled || this.state.section_id || this.state.countrie !== 1 ? /*#__PURE__*/React.createElement(SubjectList, {\n      list: subjectsByLevelBySection(this.props.subjects, this.state.level_id, this.state.section_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  getSections,\n  getLevels,\n  getSubject,\n  getEstablishment,\n  getEstabTypes,\n  getSectionFromLevel,\n  getCountries\n})(Subjects);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/Subject/Subjects.js"],"names":["React","ContainerHeader","IntlMessages","SubjectList","getSubject","subjectsByLevelBySection","getEstablishment","getSections","getLevels","getEstabTypes","getSectionFromLevel","getLevelListFromEstabType","getCountries","_","connect","CardBox","TextField","MenuItem","mapStateToProps","state","subjects","subject","remoteSubjects","establishments","establishment","remoteEstablishments","levels","ClassLevels","remoteLevels","sections","classSections","remoteSections","EstabTypes","remoteEstabTypes","countries","remoteCountries","Subjects","Component","constructor","props","handleChange","name","event","setState","target","value","idsOfEstabType","uniqBy","map","filter","countries_id","listOfEstabType","forEach","id","filtredList","element","push","console","log","handleChangeLevel","level_id","sectionDisabled","section_id","addSubjectModal","subjectsList","subjectItem","edit","modalDelete","itemId","estabType","countrie","editItemSubject","bind","requestDeleteSubject","handleCancelModalDelete","handleCancelModal","addSubject","find","componentDidMount","render","match","EstabType","establishment_id","option"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport ContainerHeader from '../../../../../components/ContainerHeader/index';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport SubjectList from './SubjectList';\nimport { getSubject, subjectsByLevelBySection } from \"../../../../../actions/subjectAction\";\nimport { getEstablishment } from \"../../../../../actions/establishmentAction\";\nimport { getSections } from '../../../../../actions/sectionAction';\nimport { getLevels } from '../../../../../actions/classLevelAction';\nimport { getEstabTypes } from '../../../../../actions/estabTypeAction';\nimport { getSectionFromLevel } from '../../../../../actions/sectionAction';\nimport { getLevelListFromEstabType } from \"../../../../../actions/classLevelAction\";\nimport { getCountries } from \"../../../../../actions/countriesAction\";\nimport _ from \"lodash\";\n\n\nimport { connect } from \"react-redux\";\nimport CardBox from '../../../../../components/CardBox/index';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction mapStateToProps(state) {\n    return {\n        subjects: state.subject.remoteSubjects,\n        establishments: state.establishment.remoteEstablishments,\n        levels: state.ClassLevels.remoteLevels,\n        sections: state.classSections.remoteSections,\n        EstabTypes: state.EstabTypes.remoteEstabTypes,\n        countries: state.countries.remoteCountries,\n    };\n};\n\nclass Subjects extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addSubjectModal: false,\n            subjectsList: [],\n            subjectItem: [],\n            edit: false,\n            modalDelete: false,\n            itemId: 0,\n            estabType: '',\n            level_id: 0,\n            section_id: 0,\n            countrie: '',\n            sectionDisabled: true,\n            listOfEstabType: []\n        };\n        this.editItemSubject = this.editItemSubject.bind(this);\n        this.requestDeleteSubject = this.requestDeleteSubject.bind(this);\n        this.handleCancelModalDelete = this.handleCancelModalDelete.bind(this);\n        this.handleCancelModal = this.handleCancelModal.bind(this);\n        this.addSubject = this.addSubject.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeLevel = this.handleChangeLevel.bind(this);\n\n\n    }\n\n    requestDeleteSubject(id) {\n        this.setState({ modalDelete: true, itemId: id });\n    };\n\n    editItemSubject(id) {\n        const subjectItem = this.props.subjects.find(element => element.id === id);\n        this.setState({ subjectItem: subjectItem, edit: true });\n    };\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value });\n        if (name === 'countrie') {\n            let idsOfEstabType = _.uniqBy(_.map(_.filter(this.props.establishments, { countries_id: event.target.value }), 'estab_type_id'))\n            let listOfEstabType = []\n            idsOfEstabType.forEach(id => {\n                let filtredList = this.props.EstabTypes.filter(element => element.id === id)\n                listOfEstabType.push(filtredList[0])\n            });\n            console.log(listOfEstabType)\n            this.setState({ listOfEstabType })\n        }\n    };\n\n    handleChangeLevel = event => {\n\n        if (event.target.value == 26 || event.target.value == 27 || event.target.value == 28 || event.target.value == 29 || event.target.value < 11) {\n            this.setState({ level_id: event.target.value, sectionDisabled: true, section_id: 0 })\n\n        } else {\n            this.setState({ level_id: event.target.value, sectionDisabled: false, section_id: 0 })\n        }\n    };\n    componentDidMount() {\n        this.props.getSubject();\n        this.props.getEstablishment();\n        this.props.getSections();\n        this.props.getLevels();\n        this.props.getEstabTypes();\n        this.props.getCountries();\n    };\n\n    handleCancelModal() {\n        this.setState({ edit: false, addSubjectModal: false })\n    };\n\n    handleCancelModalDelete() {\n        this.setState({ modalDelete: false, itemId: 0 })\n    };\n    addSubject() {\n        this.setState({ addSubjectModal: true });\n    }\n\n    render() {\n        console.log(this.props.levels)\n\n        return (\n            <div className=\"app-wrapper\">\n                <ContainerHeader match={this.props.match} title={<IntlMessages id=\"sidebar.subjects\" />} />\n                {/* <div className=\"col-md-12 text-right \" style={{ marginBottom: 20 }}>\n                    <Fab size=\"small\" color=\"primary\" aria-label=\"Add\" onClick={this.addSubject}>\n                        <AddIcon />\n                    </Fab>\n                    &nbsp;&nbsp;&nbsp;\n                    <Fab size=\"small\" color=\"primary\" >\n                        <Input />\n                    </Fab>\n                </div>\n                {this.state.edit ?\n                    <EditSubject\n                        subjectItem={this.state.subjectItem}\n                        listEstablishment={this.props.establishments}\n                        cancelModal={this.handleCancelModal} /> : ''}\n                {this.state.modalDelete ?\n                    <DeleteSubject\n                        cancelModalDelete={this.handleCancelModalDelete}\n                        itemId={this.state.itemId} /> : ''} */}\n                <CardBox styleName=\"col-lg-12\" >\n                    <div className=\"row\">\n                        <div className=\"col-sm-3\">\n                            <TextField\n                                required\n                                id=\"countrie\"\n                                select\n                                label={<IntlMessages id=\"educational.system\" />}\n                                value={this.state.countrie}\n                                onChange={this.handleChange('countrie')}\n                                SelectProps={{}}\n                                margin=\"normal\"\n                                defaultValue=''\n                                fullWidth >\n                                {this.props.countries.map(countrie => (\n                                    <MenuItem key={countrie.id} value={countrie.id}>\n                                        {countrie.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </div>\n\n\n\n                        <div className=\"col-sm-3\">\n                            <TextField\n                                required\n                                id=\"estabType\"\n                                select\n                                label={<IntlMessages id=\"components.student.formadd.establishment\" />}\n                                value={this.state.estabType}\n                                onChange={this.handleChange('estabType')}\n                                SelectProps={{}}\n                                margin=\"normal\"\n                                defaultValue=''\n                                fullWidth >\n                                {this.state.listOfEstabType.map(EstabType => (\n                                    <MenuItem key={EstabType.id} value={EstabType.id}>\n                                        {EstabType.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </div>\n                        <div className=\"col-sm-3\">\n                            <TextField\n                                required\n                                id=\"level_id\"\n                                select\n                                label={<IntlMessages id=\"components.note.niveau\" />}\n                                value={this.state.establishment_id}\n                                onChange={this.handleChangeLevel}\n                                SelectProps={{}}\n                                margin=\"normal\"\n                                fullWidth >\n                                {getLevelListFromEstabType(this.props.levels, this.state.estabType).map(option => (\n                                    <MenuItem key={option.id} value={option.id}>\n                                        {option.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </div>\n                        <div className=\"col-sm-3\">\n                            <TextField\n                                required\n                                id=\"section_id\"\n                                select\n                                disabled={this.state.sectionDisabled}\n                                label={<IntlMessages id=\"components.class.level.input.label.section\" />}\n                                value={this.state.establishment_id}\n                                onChange={this.handleChange('section_id')}\n                                SelectProps={{}}\n                                margin=\"normal\"\n                                fullWidth >\n                                {getSectionFromLevel(this.props.sections, this.state.level_id).map(option => (\n                                    <MenuItem key={option.id} value={option.id}>\n                                        {option.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </div>\n                    </div>\n                </CardBox>\n\n                {((this.state.sectionDisabled) || (this.state.section_id) || (this.state.countrie !== 1)) ?\n                    <SubjectList\n                        list={subjectsByLevelBySection(this.props.subjects, this.state.level_id, this.state.section_id)}\n                    />\n                    : \"\"}\n            </div>\n\n        )\n    }\n}\nexport default connect(mapStateToProps, { getSections, getLevels, getSubject, getEstablishment, getEstabTypes, getSectionFromLevel, getCountries })(Subjects);"]},"metadata":{},"sourceType":"module"}