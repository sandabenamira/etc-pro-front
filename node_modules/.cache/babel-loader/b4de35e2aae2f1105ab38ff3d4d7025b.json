{"ast":null,"code":"import { classService } from '../_services/class.service';\nimport { SHOW_SUCCESS_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, GET_FOLDERS_ARCHITECTURE, ADD_MATERIAL_COURSE, GET_MATERIAL_COURSE, GET_MATERIAL_COURSE_ARCHIVED, DELETE_MATERIAL_COURSE } from '../constants/ActionTypes';\nimport baseUrl from '../config/config';\nimport axios from 'axios';\nexport function getLevelClassSubjectData(establishmentId, schoolYearId, roleId, roleUserId) {\n  return dispatch => {\n    let apiEndpoint = `/level_v4/getLevelClassSubjectData/${establishmentId}/${schoolYearId}/${roleId}/${roleUserId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      if (response) {\n        const list = response.data;\n        dispatch({\n          type: GET_FOLDERS_ARCHITECTURE,\n          payload: response.data.SupportInfo\n        });\n      }\n    });\n  };\n}\nexport function getMaterialCourse(establishmentId, schoolYearId, roleId, roleUserId, assignmentId, schoolSessionId) {\n  return dispatch => {\n    let apiEndpoint = `/course_materials/fetchCourseMaterialsByRole/${roleId}/${assignmentId}/${establishmentId}/${schoolYearId}/${roleUserId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      if (response) {\n        const list = response.data.courseMaterialsData.filter(element => element.schoolSessionId == schoolSessionId && element.status);\n        const listArchived = response.data.courseMaterialsData.filter(element => element.schoolSessionId == schoolSessionId && !element.status);\n        dispatch({\n          type: GET_MATERIAL_COURSE,\n          payload: list\n        });\n        dispatch({\n          type: GET_MATERIAL_COURSE_ARCHIVED,\n          payload: listArchived\n        });\n      }\n    });\n  };\n}\nexport const addMaterialCourse = (materialCourseItem, establishmentId, schoolYearId, roleId, roleUserId, assignmentId, schoolSessionId) => {\n  return dispatch => {\n    let dataCoursematerials = {\n      name: materialCourseItem.name,\n      // nom support de cours\n      urlCourse: materialCourseItem.url_course,\n      // url accordé\n      status: true,\n      creation_date: materialCourseItem.creation_date,\n      // date\n      comment: materialCourseItem.comment,\n      // comment\n      fk_id_assign_class_subject: materialCourseItem.fk_id_assign_class_subject,\n      // 'array des id des assignment class subject'\n      fk_id_creator_profile: materialCourseItem.fk_id_creator_profile,\n      // id profile creator\n      homeworkAttached: [],\n      // 'array des id des homework'\n      virtualClassAttached: materialCourseItem.virtuelClassAttached,\n      // 'array des id des classe virtuelles'\n      moocsAttached: materialCourseItem.moocsAttached,\n      // 'array des id des moocs'\n      fk_id_professor: materialCourseItem.fk_id_professor,\n      // id prof\n      fk_id_school_session: materialCourseItem.fk_id_school_session // id session scolaire\n\n    };\n    let apiEndpoint = `/course_materials/create-course-materials?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, dataCoursematerials).then(response => {\n      if (response && materialCourseItem.files.length > 0) {\n        let materialCourseId = response.data.courseMaterialsData.id; //  dispatch({ type: ADD_MATERIAL_COURSE, payload: response.data });\n\n        let formadata = new FormData();\n        materialCourseItem.files.map((element, index) => {\n          let materailCourseFile = element;\n          const fileExtension = materailCourseFile.name.replace(/^.*\\./, '');\n          const fileName = 'materialCourse' + materialCourseId + index + String(Date.now()).slice(-2) + '.' + fileExtension;\n          var object = {};\n          object.file = materailCourseFile;\n          object.fileName = fileName;\n          const myNewFile = new File([object.file], fileName, {\n            type: object.file.type\n          });\n          formadata.append('file', myNewFile);\n        });\n        let filesURL = [];\n        const URLMaterailCourse = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n        axios({\n          url: URLMaterailCourse,\n          method: 'POST',\n          data: formadata\n        }).then(response => {\n          if (response) {\n            filesURL = response.data.result.files.file.map((urlFile, index) => {\n              return {\n                url_course_materials_files: urlFile.providerResponse.location,\n                status: true,\n                creation_date: materialCourseItem.creation_date,\n                fk_id_course_materials: materialCourseId\n              };\n            });\n            let apiEndpointFiles = `/course_materials_files?access_token=${localStorage.token}`;\n            classService.post(apiEndpointFiles, filesURL).then(response => {\n              if (response) {\n                dispatch(getMaterialCourse(establishmentId, schoolYearId, roleId, roleUserId, assignmentId, schoolSessionId));\n                dispatch({\n                  type: SHOW_SUCCESS_MESSAGE,\n                  payload: 'La création est effectuée avec succès'\n                });\n                setTimeout(() => {\n                  dispatch({\n                    type: HIDE_SUCCESS_MESSAGE\n                  });\n                }, 4000);\n              } else {\n                console.log(response.data, 'course_materials_files errerur');\n              }\n            });\n          }\n        }).catch(err => {});\n      } else if (!response) {\n        console.log('ereeeu', response);\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      } else if (response && materialCourseItem.files.length == 0) {\n        dispatch(getMaterialCourse(establishmentId, schoolYearId, roleId, roleUserId, assignmentId, schoolSessionId));\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'La création est effectuée avec succès'\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};\nexport const editMaterialCourse = (materialCourseItem, establishmentId, schoolYearId, roleId, roleUserId, assignmentId, schoolSessionId) => {\n  return dispatch => {\n    let dataCoursematerials = {\n      id: materialCourseItem.id,\n      name: materialCourseItem.name,\n      // nom support de cours\n      urlCourse: materialCourseItem.url_course,\n      // url accordé\n      status: true,\n      creation_date: materialCourseItem.creation_date,\n      // date\n      comment: materialCourseItem.comment,\n      // comment\n      fk_id_assign_class_subject: materialCourseItem.fk_id_assign_class_subject,\n      // 'array des id des assignment class subject'\n      fk_id_creator_profile: materialCourseItem.fk_id_creator_profile,\n      // id profile creator\n      homeworkAttached: [],\n      // 'array des id des homework'\n      virtualClassAttached: materialCourseItem.virtuelClassAttached,\n      // 'array des id des classe virtuelles'\n      moocsAttached: materialCourseItem.moocsAttached,\n      // 'array des id des moocs'\n      fk_id_professor: materialCourseItem.fk_id_professor,\n      // id prof\n      fk_id_school_session: materialCourseItem.fk_id_school_session,\n      // id session scolaire\n      files_deleted: materialCourseItem.filesDeleted\n    };\n    axios.put(`${baseUrl.baseUrl}/course_materials/edit-course-materials?access_token=${localStorage.token}`, dataCoursematerials).then(response => {\n      if (response && materialCourseItem.files.length > 0) {\n        let materialCourseId = response.data.courseMaterialsData.id; //  dispatch({ type: ADD_MATERIAL_COURSE, payload: response.data });\n\n        let formadata = new FormData();\n        materialCourseItem.files.map((element, index) => {\n          let materailCourseFile = element;\n          const fileExtension = materailCourseFile.name.replace(/^.*\\./, '');\n          const fileName = 'materialCourseEdit' + materialCourseId + index + String(Date.now()).slice(-2) + '.' + fileExtension;\n          var object = {};\n          object.file = materailCourseFile;\n          object.fileName = fileName;\n          const myNewFile = new File([object.file], fileName, {\n            type: object.file.type\n          });\n          formadata.append('file', myNewFile);\n        });\n        let filesURL = [];\n        const URLMaterailCourse = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n        axios({\n          url: URLMaterailCourse,\n          method: 'POST',\n          data: formadata\n        }).then(response => {\n          if (response) {\n            filesURL = response.data.result.files.file.map((urlFile, index) => {\n              return {\n                url_course_materials_files: urlFile.providerResponse.location,\n                status: true,\n                creation_date: materialCourseItem.creation_date,\n                fk_id_course_materials: materialCourseId\n              };\n            });\n            let apiEndpointFiles = `/course_materials_files?access_token=${localStorage.token}`;\n            classService.post(apiEndpointFiles, filesURL).then(response => {\n              if (response) {\n                dispatch(getMaterialCourse(establishmentId, schoolYearId, roleId, roleUserId, assignmentId, schoolSessionId));\n                dispatch({\n                  type: SHOW_SUCCESS_MESSAGE,\n                  payload: 'La modification est effectuée avec succès'\n                });\n                setTimeout(() => {\n                  dispatch({\n                    type: HIDE_SUCCESS_MESSAGE\n                  });\n                }, 4000);\n              } else {\n                console.log(response.data, 'course_materials_files errerur');\n              }\n            });\n          }\n        }).catch(err => {});\n      } else if (!response) {\n        console.log('ereeeu', response);\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la modification merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      } else if (response && materialCourseItem.files.length == 0) {\n        dispatch(getMaterialCourse(establishmentId, schoolYearId, roleId, roleUserId, assignmentId, schoolSessionId));\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'La modification est effectuée avec succès'\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n};\nexport function deleteMaterialCourse(item) {\n  return dispatch => {\n    axios.patch(`${baseUrl.baseUrl}/course_materials/` + item.id + `?access_token=${localStorage.token}`, {\n      status: false\n    }).then(response => {\n      if (response) {\n        dispatch({\n          type: DELETE_MATERIAL_COURSE,\n          payload: response.data.id\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"L'archivage est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    }).catch(function (error) {});\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/MaterialCourseAction.js"],"names":["classService","SHOW_SUCCESS_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","GET_FOLDERS_ARCHITECTURE","ADD_MATERIAL_COURSE","GET_MATERIAL_COURSE","GET_MATERIAL_COURSE_ARCHIVED","DELETE_MATERIAL_COURSE","baseUrl","axios","getLevelClassSubjectData","establishmentId","schoolYearId","roleId","roleUserId","dispatch","apiEndpoint","localStorage","token","get","then","response","list","data","type","payload","SupportInfo","getMaterialCourse","assignmentId","schoolSessionId","courseMaterialsData","filter","element","status","listArchived","addMaterialCourse","materialCourseItem","dataCoursematerials","name","urlCourse","url_course","creation_date","comment","fk_id_assign_class_subject","fk_id_creator_profile","homeworkAttached","virtualClassAttached","virtuelClassAttached","moocsAttached","fk_id_professor","fk_id_school_session","post","files","length","materialCourseId","id","formadata","FormData","map","index","materailCourseFile","fileExtension","replace","fileName","String","Date","now","slice","object","file","myNewFile","File","append","filesURL","URLMaterailCourse","url","method","result","urlFile","url_course_materials_files","providerResponse","location","fk_id_course_materials","apiEndpointFiles","setTimeout","console","log","catch","err","editMaterialCourse","files_deleted","filesDeleted","put","deleteMaterialCourse","item","patch","error"],"mappings":"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","sourcesContent":["import { classService } from '../_services/class.service';\nimport {\n  SHOW_SUCCESS_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  GET_FOLDERS_ARCHITECTURE,\n  ADD_MATERIAL_COURSE,\n  GET_MATERIAL_COURSE,\n  GET_MATERIAL_COURSE_ARCHIVED,\n  DELETE_MATERIAL_COURSE\n} from '../constants/ActionTypes';\nimport baseUrl from '../config/config';\nimport axios from 'axios';\nexport function getLevelClassSubjectData(establishmentId, schoolYearId, roleId, roleUserId) {\n  return (dispatch) => {\n    let apiEndpoint = `/level_v4/getLevelClassSubjectData/${establishmentId}/${schoolYearId}/${roleId}/${roleUserId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then((response) => {\n      if (response) {\n        const list = response.data;\n\n        dispatch({\n          type: GET_FOLDERS_ARCHITECTURE,\n          payload: response.data.SupportInfo,\n        });\n      }\n    });\n  };\n}\nexport function getMaterialCourse(\n  establishmentId,\n  schoolYearId,\n  roleId,\n  roleUserId,\n  assignmentId,\n  schoolSessionId\n) {\n  return (dispatch) => {\n    let apiEndpoint = `/course_materials/fetchCourseMaterialsByRole/${roleId}/${assignmentId}/${establishmentId}/${schoolYearId}/${roleUserId}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then((response) => {\n      if (response) {\n        const list = response.data.courseMaterialsData.filter(\n          (element) => element.schoolSessionId == schoolSessionId && element.status\n        );\n        const listArchived = response.data.courseMaterialsData.filter(\n          (element) => element.schoolSessionId == schoolSessionId && !element.status\n        );\n         dispatch({\n          type: GET_MATERIAL_COURSE,\n          payload: list,\n        });\n        dispatch({\n          type: GET_MATERIAL_COURSE_ARCHIVED,\n          payload: listArchived,\n        });\n      }\n    });\n  };\n}\n\nexport const addMaterialCourse = (\n  materialCourseItem,\n  establishmentId,\n  schoolYearId,\n  roleId,\n  roleUserId,\n  assignmentId,\n  schoolSessionId\n) => {\n  return (dispatch) => {\n    let dataCoursematerials = {\n      name: materialCourseItem.name, // nom support de cours\n      urlCourse: materialCourseItem.url_course, // url accordé\n      status: true,\n      creation_date: materialCourseItem.creation_date, // date\n      comment: materialCourseItem.comment, // comment\n      fk_id_assign_class_subject: materialCourseItem.fk_id_assign_class_subject, // 'array des id des assignment class subject'\n      fk_id_creator_profile: materialCourseItem.fk_id_creator_profile, // id profile creator\n      homeworkAttached: [], // 'array des id des homework'\n      virtualClassAttached: materialCourseItem.virtuelClassAttached, // 'array des id des classe virtuelles'\n      moocsAttached: materialCourseItem.moocsAttached, // 'array des id des moocs'\n      fk_id_professor: materialCourseItem.fk_id_professor, // id prof\n      fk_id_school_session: materialCourseItem.fk_id_school_session, // id session scolaire\n    };\n    let apiEndpoint = `/course_materials/create-course-materials?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, dataCoursematerials).then((response) => {\n      if (response && materialCourseItem.files.length > 0) {\n        let materialCourseId = response.data.courseMaterialsData.id;\n\n        //  dispatch({ type: ADD_MATERIAL_COURSE, payload: response.data });\n        let formadata = new FormData();\n        materialCourseItem.files.map((element, index) => {\n          let materailCourseFile = element;\n          const fileExtension = materailCourseFile.name.replace(/^.*\\./, '');\n          const fileName =\n            'materialCourse' +\n            materialCourseId +\n            index +\n            String(Date.now()).slice(-2) +\n            '.' +\n            fileExtension;\n          var object = {};\n          object.file = materailCourseFile;\n          object.fileName = fileName;\n          const myNewFile = new File([object.file], fileName, {\n            type: object.file.type,\n          });\n          formadata.append('file', myNewFile);\n        });\n\n        let filesURL = [];\n\n        const URLMaterailCourse = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n        axios({\n          url: URLMaterailCourse,\n          method: 'POST',\n          data: formadata,\n        })\n          .then((response) => {\n            if (response) {\n              filesURL = response.data.result.files.file.map((urlFile, index) => {\n                return {\n                  url_course_materials_files: urlFile.providerResponse.location,\n                  status: true,\n                  creation_date: materialCourseItem.creation_date,\n                  fk_id_course_materials: materialCourseId,\n                };\n              });\n              let apiEndpointFiles = `/course_materials_files?access_token=${localStorage.token}`;\n              classService.post(apiEndpointFiles, filesURL).then((response) => {\n                if (response) {\n                  dispatch(\n                    getMaterialCourse(\n                      establishmentId,\n                      schoolYearId,\n                      roleId,\n                      roleUserId,\n                      assignmentId,\n                      schoolSessionId\n                    )\n                  );\n\n                  dispatch({\n                    type: SHOW_SUCCESS_MESSAGE,\n                    payload: 'La création est effectuée avec succès',\n                  });\n\n                  setTimeout(() => {\n                    dispatch({ type: HIDE_SUCCESS_MESSAGE });\n                  }, 4000);\n                } else {\n                  console.log(response.data, 'course_materials_files errerur');\n                }\n              });\n            }\n          })\n          .catch((err) => {});\n      } else if (!response) {\n        console.log('ereeeu', response);\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      } else if (response && materialCourseItem.files.length == 0) {\n        dispatch(\n          getMaterialCourse(\n            establishmentId,\n            schoolYearId,\n            roleId,\n            roleUserId,\n            assignmentId,\n            schoolSessionId\n          )\n        );\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: 'La création est effectuée avec succès',\n        });\n\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n};\n\nexport const editMaterialCourse = (\n  materialCourseItem,\n  establishmentId,\n  schoolYearId,\n  roleId,\n  roleUserId,\n  assignmentId,\n  schoolSessionId\n) => {\n  return (dispatch) => {\n    let dataCoursematerials = {\n      id: materialCourseItem.id,\n      name: materialCourseItem.name, // nom support de cours\n      urlCourse: materialCourseItem.url_course, // url accordé\n      status: true,\n      creation_date: materialCourseItem.creation_date, // date\n      comment: materialCourseItem.comment, // comment\n      fk_id_assign_class_subject: materialCourseItem.fk_id_assign_class_subject, // 'array des id des assignment class subject'\n      fk_id_creator_profile: materialCourseItem.fk_id_creator_profile, // id profile creator\n      homeworkAttached: [], // 'array des id des homework'\n      virtualClassAttached: materialCourseItem.virtuelClassAttached, // 'array des id des classe virtuelles'\n      moocsAttached: materialCourseItem.moocsAttached, // 'array des id des moocs'\n      fk_id_professor: materialCourseItem.fk_id_professor, // id prof\n      fk_id_school_session: materialCourseItem.fk_id_school_session, // id session scolaire\n      files_deleted: materialCourseItem.filesDeleted,\n    };\n    axios\n      .put(\n        `${baseUrl.baseUrl}/course_materials/edit-course-materials?access_token=${localStorage.token}`,\n        dataCoursematerials\n      )\n      .then((response) => {\n        if (response && materialCourseItem.files.length > 0) {\n          let materialCourseId = response.data.courseMaterialsData.id;\n\n          //  dispatch({ type: ADD_MATERIAL_COURSE, payload: response.data });\n          let formadata = new FormData();\n          materialCourseItem.files.map((element, index) => {\n            let materailCourseFile = element;\n            const fileExtension = materailCourseFile.name.replace(/^.*\\./, '');\n            const fileName =\n              'materialCourseEdit' +\n              materialCourseId +\n              index +\n              String(Date.now()).slice(-2) +\n              '.' +\n              fileExtension;\n            var object = {};\n            object.file = materailCourseFile;\n            object.fileName = fileName;\n            const myNewFile = new File([object.file], fileName, {\n              type: object.file.type,\n            });\n            formadata.append('file', myNewFile);\n          });\n\n          let filesURL = [];\n\n          const URLMaterailCourse = `${baseUrl.baseUrl}/containers/classebook.data.storage/upload?access_token=${localStorage.token}`;\n          axios({\n            url: URLMaterailCourse,\n            method: 'POST',\n            data: formadata,\n          })\n            .then((response) => {\n              if (response) {\n                filesURL = response.data.result.files.file.map((urlFile, index) => {\n                  return {\n                    url_course_materials_files: urlFile.providerResponse.location,\n                    status: true,\n                    creation_date: materialCourseItem.creation_date,\n                    fk_id_course_materials: materialCourseId,\n                  };\n                });\n                let apiEndpointFiles = `/course_materials_files?access_token=${localStorage.token}`;\n                classService.post(apiEndpointFiles, filesURL).then((response) => {\n                  if (response) {\n                    dispatch(\n                      getMaterialCourse(\n                        establishmentId,\n                        schoolYearId,\n                        roleId,\n                        roleUserId,\n                        assignmentId,\n                        schoolSessionId\n                      )\n                    );\n\n                    dispatch({\n                      type: SHOW_SUCCESS_MESSAGE,\n                      payload: 'La modification est effectuée avec succès',\n                    });\n\n                    setTimeout(() => {\n                      dispatch({ type: HIDE_SUCCESS_MESSAGE });\n                    }, 4000);\n                  } else {\n                    console.log(response.data, 'course_materials_files errerur');\n                  }\n                });\n              }\n            })\n            .catch((err) => {});\n        } else if (!response) {\n          console.log('ereeeu', response);\n          dispatch({\n            type: SHOW_ERROR_MESSAGE,\n            payload: \"Une erreur est survenue lors de la modification merci d'essayer à nouveau\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_ERROR_MESSAGE });\n          }, 4000);\n        } else if (response && materialCourseItem.files.length == 0) {\n          dispatch(\n            getMaterialCourse(\n              establishmentId,\n              schoolYearId,\n              roleId,\n              roleUserId,\n              assignmentId,\n              schoolSessionId\n            )\n          );\n          dispatch({\n            type: SHOW_SUCCESS_MESSAGE,\n            payload: 'La modification est effectuée avec succès',\n          });\n\n          setTimeout(() => {\n            dispatch({ type: HIDE_SUCCESS_MESSAGE });\n          }, 4000);\n        }\n      });\n  };\n};\nexport function deleteMaterialCourse(item) {\n  return (dispatch) => {\n    axios\n      .patch(\n        `${baseUrl.baseUrl}/course_materials/` +\n          item.id +\n          `?access_token=${localStorage.token}`,\n        {\n          status: false,\n        }\n      )\n      .then((response) => {\n        if (response) {\n          dispatch({ type: DELETE_MATERIAL_COURSE, payload: response.data.id });\n\n          dispatch({\n            type: SHOW_SUCCESS_MESSAGE,\n            payload: \"L'archivage est effectuée avec succès\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_SUCCESS_MESSAGE });\n          }, 4000);\n        } else {\n          dispatch({\n            type: SHOW_ERROR_MESSAGE,\n            payload:\n              \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n          });\n          setTimeout(() => {\n            dispatch({ type: HIDE_ERROR_MESSAGE });\n          }, 4000);\n        }\n      })\n      .catch(function(error) {});\n  };\n}"]},"metadata":{},"sourceType":"module"}