{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/LevelTest/Tests/AddLevelTest.js\";\nimport React, { Component } from \"react\";\nimport Auxiliary from \"../../../../util/Auxiliary\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CardBox from \"../../../../components/CardBox/index\";\nimport Button from \"@material-ui/core/Button\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { connect } from \"react-redux\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { addLevelTest } from \"../../../../actions/levelTestAction\";\n\nclass AddLevelTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.class_id.length === 0) {\n        this.setState({\n          alerteClass: true\n        });\n        setTimeout(() => {\n          this.setState({\n            alerteClass: false\n          });\n        }, 2000);\n      } else if (this.state.question_id.length === 0) {\n        this.setState({\n          alerteQuestion: true\n        });\n        setTimeout(() => {\n          this.setState({\n            alerteQuestion: false\n          });\n        }, 2000);\n      } else {\n        const test_desc = this.state.test_desc;\n        const limit_date = this.state.limit_date;\n        const test_duration = this.state.duration_test;\n        const test_name = this.state.test_name;\n        const id_profile_creator = this.props.userProfile.id;\n        const status = true;\n        const id_level = this.state.level_id;\n        const id_subject = this.state.subject_id;\n        let test = {\n          test_desc,\n          limit_date,\n          test_duration,\n          test_name,\n          id_profile_creator,\n          status,\n          id_level,\n          id_subject\n        };\n        let questions = this.state.question_id;\n        let classes = this.state.class_id;\n        this.props.addLevelTest(test, questions, classes);\n        this.props.handleCancel();\n      }\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n\n      if (name == \"level_id\") {\n        this.setState({\n          class_id: [],\n          subject_id: \"\"\n        });\n      }\n    };\n\n    this.handleChangeDate = date => {\n      this.setState({\n        limit_date: date\n      });\n    };\n\n    this.state = {\n      level_id: \"\",\n      subject_id: \"\",\n      class_id: [],\n      question_id: [],\n      test_name: \"\",\n      limit_date: new Date(),\n      duration_test: 5,\n      test_desc: \"\",\n      alerteClass: false,\n      alerteQuestion: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    console.log(this.state.class_id.length === 0, \"this.state.class_id.length\");\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.props.addIsopen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.props.handleCancel,\n      className: \"modal-box-header bg-primary text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"new.level.test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 14\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      heading: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"component.etablishments.info.general\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }),\n      styleName: \"col-lg-12 text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      select: true,\n      name: \"level\",\n      id: \"level\",\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.note.niveau\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 34\n        }\n      }),\n      onChange: this.handleChange(\"level_id\"),\n      value: this.state.level_id,\n      margin: \"normal\",\n      fullWidth: true,\n      SelectProps: {\n        native: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 27\n      }\n    }), this.props.classLevels.map(level => {\n      if (this.props.profLevels.indexOf(level.id) >= 0) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: level.id,\n          value: level.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 33\n          }\n        }, level.name);\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      select: true,\n      name: \"subject\",\n      id: \"subject\",\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"components.note.subject\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 34\n        }\n      }),\n      onChange: this.handleChange(\"subject_id\"),\n      value: this.state.subject_id,\n      margin: \"normal\",\n      fullWidth: true,\n      SelectProps: {\n        native: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 27\n      }\n    }), this.props.profSubjectList.map(subject => {\n      if (subject.level_id == this.state.level_id) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: subject.id,\n          value: subject.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }\n        }, this.props.settings.languageId == \"tunisia\" ? subject.name_AR : this.props.settings.languageId == \"french\" ? subject.name_FR : subject.name_EN);\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      style: {\n        paddingTop: \"2.5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: \"w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"name-multiple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.note.class\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 28\n      }\n    })), /*#__PURE__*/React.createElement(Select, {\n      required: true,\n      name: \"suite\",\n      id: \"suite\",\n      multiple: true,\n      input: /*#__PURE__*/React.createElement(Input, {\n        id: \"components.note.class\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 34\n        }\n      }),\n      onChange: this.handleChange(\"class_id\"),\n      value: this.state.class_id,\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, this.props.professorClassesList.map(classe => {\n      if (classe.level_id == this.state.level_id) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: classe.id,\n          value: classe.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }\n        }, classe.name);\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"manage-margin d-flex flex-wrap\",\n      style: {\n        paddingTop: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 23\n      }\n    }, this.state.class_id.map(data => {\n      return /*#__PURE__*/React.createElement(Chip, {\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          src: require(\"../classVitual.jpg\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }\n        }),\n        label: this.props.professorClassesList.map(classItem => {\n          if (classItem.id === data) {\n            return classItem.name;\n          } else {\n            return null;\n          }\n        }),\n        key: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      style: {\n        marginTop: \"2.5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      required: true,\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"level.test.date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 34\n        }\n      }),\n      fullWidth: true,\n      id: \"limit_date\",\n      name: \"limit_date\",\n      value: this.state.limit_date,\n      onChange: this.handleChangeDate,\n      format: \"DD-MM-YYYY\",\n      autoOk: true,\n      minDate: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"test_name\",\n      id: \"test_name\",\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"level.test.name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 34\n        }\n      }),\n      onChange: this.handleChange(\"test_name\"),\n      value: this.state.test_name,\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      type: \"number\",\n      name: \"duration_test\",\n      id: \"duration_test\",\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"level.test.duration\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 34\n        }\n      }),\n      error: this.state.duration_test < 1 || this.state.duration_test > 60,\n      min: 1,\n      max: 60,\n      onChange: this.handleChange(\"duration_test\"),\n      value: this.state.duration_test,\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"test_desc\",\n      id: \"test_desc\",\n      label: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"room.description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 34\n        }\n      }),\n      onChange: this.handleChange(\"test_desc\"),\n      value: this.state.test_desc,\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 25\n      }\n    }))))), /*#__PURE__*/React.createElement(CardBox, {\n      heading: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"level.test.question.list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 28\n        }\n      }),\n      styleName: \"col-lg-12 text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: \"w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"name-multiple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"Add.level.test.question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 28\n      }\n    })), /*#__PURE__*/React.createElement(Select, {\n      required: true,\n      name: \"suite\",\n      id: \"suite\",\n      multiple: true,\n      input: /*#__PURE__*/React.createElement(Input, {\n        id: \"Add.level.test.question\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 34\n        }\n      }),\n      onChange: this.handleChange(\"question_id\"),\n      value: this.state.question_id,\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 25\n      }\n    }, this.props.questions.map((item, index) => {\n      if (item.subject_id == this.state.subject_id) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: item.id,\n          value: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 33\n          }\n        }, \"(\" + item.id + \") \" + item.question_subject);\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"manage-margin d-flex flex-wrap\",\n      style: {\n        paddingTop: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 23\n      }\n    }, this.state.question_id.map(data => {\n      return /*#__PURE__*/React.createElement(Chip, {\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          src: require(\"../classVitual.jpg\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 33\n          }\n        }),\n        label: this.props.questions.map(item => {\n          if (item.id === data) {\n            return item.question_subject;\n          } else {\n            return null;\n          }\n        }),\n        key: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 29\n        }\n      });\n    })))))), this.state.alerteClass ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 19\n      }\n    }, \"Veuillez vous choisir une Classe\")) : \"\", this.state.alerteQuestion ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 19\n      }\n    }, \"Veuillez vous choisir les Questions\")) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 text-left \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"jr-btn bg-indigo text-white \",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"level.test.button.confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"jr-btn bg-grey text-white \",\n      onClick: this.props.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"components.establishments.formadd.buttonCancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 21\n      }\n    })))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    classSections: state.classSections.remoteSections,\n    classes: state.classes,\n    settings: state.settings.locale\n  };\n}\n\nexport default connect(mapStateToProps, {\n  addLevelTest\n})(AddLevelTest);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/LevelTest/Tests/AddLevelTest.js"],"names":["React","Component","Auxiliary","Modal","ModalBody","ModalHeader","TextField","CardBox","Button","UncontrolledAlert","IntlMessages","MenuItem","Select","FormControl","Chip","Avatar","KeyboardDatePicker","connect","Input","InputLabel","addLevelTest","AddLevelTest","constructor","props","handleSubmit","e","preventDefault","state","class_id","length","setState","alerteClass","setTimeout","question_id","alerteQuestion","test_desc","limit_date","test_duration","duration_test","test_name","id_profile_creator","userProfile","id","status","id_level","level_id","id_subject","subject_id","test","questions","classes","handleCancel","handleChange","name","event","target","value","handleChangeDate","date","Date","bind","render","console","log","addIsopen","native","classLevels","map","level","profLevels","indexOf","profSubjectList","subject","settings","languageId","name_AR","name_FR","name_EN","paddingTop","professorClassesList","classe","data","require","classItem","marginTop","item","index","question_subject","mapStateToProps","auth","ClassLevels","remoteLevels","classSections","remoteSections","locale"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Auxiliary from \"../../../../util/Auxiliary\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CardBox from \"../../../../components/CardBox/index\";\nimport Button from \"@material-ui/core/Button\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { connect } from \"react-redux\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { addLevelTest } from \"../../../../actions/levelTestAction\";\n\nclass AddLevelTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      level_id: \"\",\n      subject_id: \"\",\n      class_id: [],\n      question_id: [],\n      test_name: \"\",\n      limit_date: new Date(),\n      duration_test: 5,\n      test_desc: \"\",\n      alerteClass: false,\n      alerteQuestion: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.class_id.length === 0) {\n      this.setState({ alerteClass: true });\n      setTimeout(() => {\n        this.setState({ alerteClass: false });\n      }, 2000);\n    } else if (this.state.question_id.length === 0) {\n      this.setState({ alerteQuestion: true });\n      setTimeout(() => {\n        this.setState({ alerteQuestion: false });\n      }, 2000);\n    } else {\n      const test_desc = this.state.test_desc;\n      const limit_date = this.state.limit_date;\n      const test_duration = this.state.duration_test;\n      const test_name = this.state.test_name;\n      const id_profile_creator = this.props.userProfile.id;\n      const status = true;\n      const id_level = this.state.level_id;\n      const id_subject = this.state.subject_id;\n\n      let test = {\n        test_desc,\n        limit_date,\n        test_duration,\n        test_name,\n        id_profile_creator,\n        status,\n        id_level,\n        id_subject,\n      };\n      let questions = this.state.question_id;\n      let classes = this.state.class_id;\n\n      this.props.addLevelTest(test, questions, classes);\n      this.props.handleCancel();\n    }\n  };\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    if (name == \"level_id\") {\n      this.setState({\n        class_id: [],\n        subject_id: \"\",\n      });\n    }\n  };\n  handleChangeDate = (date) => {\n    this.setState({ limit_date: date });\n  };\n  render() {\n    console.log(this.state.class_id.length === 0, \"this.state.class_id.length\");\n\n    return (\n      <Auxiliary>\n        <Modal isOpen={this.props.addIsopen}>\n          <ModalHeader\n            toggle={this.props.handleCancel}\n            className=\"modal-box-header bg-primary text-white\"\n          >\n            {<IntlMessages id=\"new.level.test\" />}\n          </ModalHeader>\n          <br />\n          <ModalBody>\n            <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n              <div className=\"row\">\n                <CardBox\n                  heading={\n                    <IntlMessages id=\"component.etablishments.info.general\" />\n                  }\n                  styleName=\"col-lg-12 text-primary\"\n                >\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <div className=\"form-group\">\n                        <TextField\n                          required\n                          select\n                          name=\"level\"\n                          id=\"level\"\n                          label={<IntlMessages id=\"components.note.niveau\" />}\n                          onChange={this.handleChange(\"level_id\")}\n                          value={this.state.level_id}\n                          margin=\"normal\"\n                          fullWidth\n                          SelectProps={{\n                            native: true,\n                          }}\n                        >\n                          <option></option>\n                          {this.props.classLevels.map((level) => {\n                            if (this.props.profLevels.indexOf(level.id) >= 0) {\n                              return (\n                                <option key={level.id} value={level.id}>\n                                  {level.name}\n                                </option>\n                              );\n                            }\n                          })}\n                        </TextField>\n                      </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <div className=\"form-group\">\n                        <TextField\n                          required\n                          select\n                          name=\"subject\"\n                          id=\"subject\"\n                          label={<IntlMessages id=\"components.note.subject\" />}\n                          onChange={this.handleChange(\"subject_id\")}\n                          value={this.state.subject_id}\n                          margin=\"normal\"\n                          fullWidth\n                          SelectProps={{\n                            native: true,\n                          }}\n                        >\n                          <option></option>\n                          {this.props.profSubjectList.map((subject) => {\n                            if (subject.level_id == this.state.level_id) {\n                              return (\n                                <option key={subject.id} value={subject.id}>\n                                  {this.props.settings.languageId == \"tunisia\"\n                                    ? subject.name_AR\n                                    : this.props.settings.languageId == \"french\"\n                                    ? subject.name_FR\n                                    : subject.name_EN}\n                                </option>\n                              );\n                            }\n                          })}\n                        </TextField>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-4\" style={{ paddingTop: \"2.5%\" }}>\n                      <FormControl className=\"w-100\">\n                        <InputLabel htmlFor=\"name-multiple\">\n                          {<IntlMessages id=\"components.note.class\" />}\n                        </InputLabel>\n                        <Select\n                          required\n                          name=\"suite\"\n                          id=\"suite\"\n                          multiple\n                          input={<Input id=\"components.note.class\" />}\n                          onChange={this.handleChange(\"class_id\")}\n                          value={this.state.class_id}\n                          margin=\"normal\"\n                          fullWidth\n                        >\n                          {this.props.professorClassesList.map((classe) => {\n                            if (classe.level_id == this.state.level_id) {\n                              return (\n                                <MenuItem key={classe.id} value={classe.id}>\n                                  {classe.name}\n                                </MenuItem>\n                              );\n                            }\n                          })}\n                        </Select>\n                      </FormControl>\n                    </div>\n                    <div className=\"d-flex justify-content-between col-md-12\">\n                      <div\n                        className=\"manage-margin d-flex flex-wrap\"\n                        style={{ paddingTop: \"3%\" }}\n                      >\n                        {this.state.class_id.map((data) => {\n                          return (\n                            <Chip\n                              avatar={\n                                <Avatar src={require(\"../classVitual.jpg\")} />\n                              }\n                              label={this.props.professorClassesList.map(\n                                (classItem) => {\n                                  if (classItem.id === data) {\n                                    return classItem.name;\n                                  } else {\n                                    return null;\n                                  }\n                                }\n                              )}\n                              key={data}\n                            />\n                          );\n                        })}\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-4\" style={{ marginTop: \"2.5%\" }}>\n                      <div className=\"form-group\">\n                        <KeyboardDatePicker\n                          required\n                          label={<IntlMessages id=\"level.test.date\" />}\n                          fullWidth\n                          id=\"limit_date\"\n                          name=\"limit_date\"\n                          value={this.state.limit_date}\n                          onChange={this.handleChangeDate}\n                          format=\"DD-MM-YYYY\"\n                          autoOk\n                          minDate={new Date()}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <div className=\"form-group\">\n                        <TextField\n                          required\n                          name=\"test_name\"\n                          id=\"test_name\"\n                          label={<IntlMessages id=\"level.test.name\" />}\n                          onChange={this.handleChange(\"test_name\")}\n                          value={this.state.test_name}\n                          margin=\"normal\"\n                          fullWidth\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <div className=\"form-group\">\n                        <TextField\n                          required\n                          type=\"number\"\n                          name=\"duration_test\"\n                          id=\"duration_test\"\n                          label={<IntlMessages id=\"level.test.duration\" />}\n                          error={\n                            this.state.duration_test < 1 ||\n                            this.state.duration_test > 60\n                          }\n                          min={1}\n                          max={60}\n                          onChange={this.handleChange(\"duration_test\")}\n                          value={this.state.duration_test}\n                          margin=\"normal\"\n                          fullWidth\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-md-12\">\n                      <div className=\"form-group\">\n                        <TextField\n                          required\n                          name=\"test_desc\"\n                          id=\"test_desc\"\n                          label={<IntlMessages id=\"room.description\" />}\n                          onChange={this.handleChange(\"test_desc\")}\n                          value={this.state.test_desc}\n                          margin=\"normal\"\n                          fullWidth\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </CardBox>\n\n                <CardBox\n                  heading={<IntlMessages id=\"level.test.question.list\" />}\n                  styleName=\"col-lg-12 text-primary\"\n                >\n                  <div className=\"row\">\n                    <div className=\"col-md-9\">\n                      <FormControl className=\"w-100\">\n                        <InputLabel htmlFor=\"name-multiple\">\n                          {<IntlMessages id=\"Add.level.test.question\" />}\n                        </InputLabel>\n                        <Select\n                          required\n                          name=\"suite\"\n                          id=\"suite\"\n                          multiple\n                          input={<Input id=\"Add.level.test.question\" />}\n                          onChange={this.handleChange(\"question_id\")}\n                          value={this.state.question_id}\n                          margin=\"normal\"\n                          fullWidth\n                        >\n                          {this.props.questions.map((item, index) => {\n                            if (item.subject_id == this.state.subject_id) {\n                              return (\n                                <MenuItem key={item.id} value={item.id}>\n                                  {\"(\" + item.id + \") \" + item.question_subject}\n                                </MenuItem>\n                              );\n                            }\n                          })}\n                        </Select>\n                      </FormControl>\n                    </div>\n\n                    <div className=\"col-md-12\">\n                      <div\n                        className=\"manage-margin d-flex flex-wrap\"\n                        style={{ paddingTop: \"3%\" }}\n                      >\n                        {this.state.question_id.map((data) => {\n                          return (\n                            <Chip\n                              avatar={\n                                <Avatar src={require(\"../classVitual.jpg\")} />\n                              }\n                              label={this.props.questions.map((item) => {\n                                if (item.id === data) {\n                                  return item.question_subject;\n                                } else {\n                                  return null;\n                                }\n                              })}\n                              key={data}\n                            />\n                          );\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                </CardBox>\n              </div>\n              {this.state.alerteClass ? (\n                <UncontrolledAlert className=\"alert-addon-card bg-danger bg-danger text-white shadow-lg\">\n                  <span className=\"icon-addon alert-addon\">\n                    <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                  </span>\n                  <span className=\"d-inline-block\">\n                    Veuillez vous choisir une Classe\n                  </span>\n                </UncontrolledAlert>\n              ) : (\n                \"\"\n              )}\n              {this.state.alerteQuestion ? (\n                <UncontrolledAlert className=\"alert-addon-card bg-danger bg-danger text-white shadow-lg\">\n                  <span className=\"icon-addon alert-addon\">\n                    <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n                  </span>\n                  <span className=\"d-inline-block\">\n                    Veuillez vous choisir les Questions\n                  </span>\n                </UncontrolledAlert>\n              ) : (\n                \"\"\n              )}\n              <div className=\"col-md-12 text-left \">\n                <br />\n                <br />\n                <Button\n                  variant=\"contained\"\n                  className=\"jr-btn bg-indigo text-white \"\n                  type=\"submit\"\n                >\n                  {<IntlMessages id=\"level.test.button.confirm\" />}\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  className=\"jr-btn bg-grey text-white \"\n                  onClick={this.props.handleCancel}\n                >\n                  {\n                    <IntlMessages id=\"components.establishments.formadd.buttonCancel\" />\n                  }\n                </Button>\n              </div>\n            </form>\n          </ModalBody>\n        </Modal>\n      </Auxiliary>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    classSections: state.classSections.remoteSections,\n    classes: state.classes,\n    settings: state.settings.locale,\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { addLevelTest }\n)(AddLevelTest);\n"]},"metadata":{},"sourceType":"module"}