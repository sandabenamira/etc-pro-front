{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/PermissionSetting/PermissionSetting.js\";\nimport React, { Component } from \"react\";\nimport { PermissionList } from \"./PermissionList\";\nimport { getEducationType } from \"../../../../../actions/estabTypeAction\";\nimport { connect } from \"react-redux\";\nimport { addCallRegisterSetting, getObservationList, getEncouragementList, getSanctionList, getCallRegisterSetting, editCallRegisterSetting } from \"../../../../../actions/RegistreAction\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport _ from \"lodash\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nexport class PermissionSetting extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onConfirm = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [event.target.name]: event.target.checked\n      });\n    };\n\n    this.handleChangeEducationType = selectedOption => {\n      this.props.dispatch(getCallRegisterSetting(selectedOption.value));\n      this.setState({\n        optionEducationType: selectedOption,\n        educationTypesId: selectedOption.value,\n        educationTypesError: false\n      });\n    };\n\n    this.state = {\n      educationTypes: [],\n      educationTypesId: null,\n      optionEducationType: [],\n      isPresenceChecked: true,\n      isRetardChecked: true,\n      isEncouragementsChecked: false,\n      isSanctionsChecked: true,\n      isObservationsChecked: false,\n      show: false,\n      isOpen: false,\n      educationTypesError: false,\n      isTheFirstInit: true,\n      idSetting: null\n    };\n    this.handleChangeEducationType = this.handleChangeEducationType.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel() {\n    this.setState({\n      educationTypesId: null,\n      isPresenceChecked: true,\n      isRetardChecked: true,\n      isEncouragementsChecked: false,\n      isSanctionsChecked: true,\n      isObservationsChecked: false,\n      optionEducationType: []\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.educationTypesId !== null) {\n      let callRegisterSetting = {\n        status: true,\n        presence: this.state.isPresenceChecked,\n        delay: this.state.isRetardChecked,\n        encouragement: this.state.isEncouragementsChecked,\n        sanction: this.state.isSanctionsChecked,\n        observation: this.state.isObservationsChecked,\n        fk_id_education_type: this.state.educationTypesId\n      };\n\n      if (this.state.isTheFirstInit) {\n        this.props.dispatch(addCallRegisterSetting(callRegisterSetting));\n      } else {\n        callRegisterSetting.id = this.state.idSetting;\n        this.props.dispatch(editCallRegisterSetting(callRegisterSetting));\n      }\n    } else {\n      this.setState({\n        educationTypesError: true\n      });\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    this.props.dispatch(getEducationType());\n    this.props.dispatch(getObservationList());\n    this.props.dispatch(getEncouragementList());\n    this.props.dispatch(getSanctionList());\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.educationTypes !== this.props.educationTypes) {\n      if (!_.isEmpty(this.props.educationTypes)) {\n        if (this.props.educationTypes.length > 1) {\n          let options = [];\n          this.props.educationTypes.forEach((element, index) => {\n            let option = {\n              label: element.name,\n              value: element.id,\n              key: index\n            };\n            options.push(option);\n          });\n          this.setState({\n            educationTypes: options,\n            show: true\n          });\n        } else {\n          this.setState({\n            educationTypesId: this.props.educationTypes[0].id\n          });\n          this.props.dispatch(getCallRegisterSetting(this.props.educationTypes[0].id));\n        }\n      } else {\n        this.setState({\n          isOpen: true\n        });\n      }\n    }\n\n    if (prevProps.settingCallRegister !== this.props.settingCallRegister) {\n      if (!_.isEmpty(this.props.settingCallRegister)) {\n        let settingData = this.props.settingCallRegister[0];\n        this.setState({\n          isPresenceChecked: settingData.presence,\n          isRetardChecked: settingData.delay,\n          isEncouragementsChecked: settingData.encouragement,\n          isSanctionsChecked: settingData.sanction,\n          isObservationsChecked: settingData.observation,\n          isTheFirstInit: false,\n          idSetting: settingData.id\n        });\n      } else {\n        this.setState({\n          isPresenceChecked: true,\n          isRetardChecked: true,\n          isEncouragementsChecked: false,\n          isSanctionsChecked: true,\n          isObservationsChecked: false\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, this.props.successStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \" \", this.props.message, \" \")) : \"\", this.props.errorStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-danger bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, \" \", this.props.message, \" \")) : \"\", /*#__PURE__*/React.createElement(PermissionList, {\n      values: this.state,\n      handleChangeEducationType: this.handleChangeEducationType,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      handleCancel: this.handleCancel,\n      observations: this.props.observations,\n      encouragements: this.props.encouragements,\n      sanctions: this.props.sanctions,\n      settings: this.props.settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SweetAlert, {\n      show: this.state.isOpen,\n      title: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"alert.types.education\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 18\n        }\n      }),\n      onConfirm: this.onConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    educationTypes: state.EstabTypes.educationTypes,\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    observations: state.callRegister.observations,\n    encouragements: state.callRegister.encouragements,\n    sanctions: state.callRegister.sanctions,\n    settings: state.settings.locale,\n    settingCallRegister: state.callRegister.settingCallRegister\n  };\n};\n\nexport default connect(mapStateToProps)(PermissionSetting);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/PermissionSetting/PermissionSetting.js"],"names":["React","Component","PermissionList","getEducationType","connect","addCallRegisterSetting","getObservationList","getEncouragementList","getSanctionList","getCallRegisterSetting","editCallRegisterSetting","UncontrolledAlert","_","SweetAlert","IntlMessages","PermissionSetting","constructor","props","onConfirm","setState","isOpen","handleChange","name","event","target","checked","handleChangeEducationType","selectedOption","dispatch","value","optionEducationType","educationTypesId","educationTypesError","state","educationTypes","isPresenceChecked","isRetardChecked","isEncouragementsChecked","isSanctionsChecked","isObservationsChecked","show","isTheFirstInit","idSetting","bind","handleSubmit","handleCancel","e","preventDefault","callRegisterSetting","status","presence","delay","encouragement","sanction","observation","fk_id_education_type","id","UNSAFE_componentWillMount","componentDidUpdate","prevProps","isEmpty","length","options","forEach","element","index","option","label","key","push","settingCallRegister","settingData","render","successStatus","message","errorStatus","observations","encouragements","sanctions","settings","mapStateToProps","EstabTypes","userProfile","auth","alert","success","error","callRegister","locale"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { PermissionList } from \"./PermissionList\";\nimport { getEducationType } from \"../../../../../actions/estabTypeAction\";\nimport { connect } from \"react-redux\";\nimport {\n  addCallRegisterSetting,\n  getObservationList,\n  getEncouragementList,\n  getSanctionList,\n  getCallRegisterSetting,\n  editCallRegisterSetting\n} from \"../../../../../actions/RegistreAction\";\nimport { UncontrolledAlert } from \"reactstrap\";\nimport _ from \"lodash\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\n\nexport class PermissionSetting extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      educationTypes: [],\n      educationTypesId: null,\n      optionEducationType: [],\n      isPresenceChecked: true,\n      isRetardChecked: true,\n      isEncouragementsChecked: false,\n      isSanctionsChecked: true,\n      isObservationsChecked: false,\n      show: false,\n      isOpen: false,\n      educationTypesError: false,\n      isTheFirstInit: true,\n      idSetting:null\n    };\n    this.handleChangeEducationType = this.handleChangeEducationType.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  onConfirm = () => {\n    this.setState({\n      isOpen: false,\n    });\n  };\n\n  handleCancel() {\n    this.setState({\n      educationTypesId: null,\n      isPresenceChecked: true,\n      isRetardChecked: true,\n      isEncouragementsChecked: false,\n      isSanctionsChecked: true,\n      isObservationsChecked: false,\n      optionEducationType: [],\n    });\n  }\n\n  handleChange = (name) => (event) => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n  handleChangeEducationType = (selectedOption) => {\n    this.props.dispatch(getCallRegisterSetting(selectedOption.value));\n\n    this.setState({\n      optionEducationType: selectedOption,\n      educationTypesId: selectedOption.value,\n      educationTypesError: false,\n    });\n  };\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.educationTypesId !== null) {\n      let callRegisterSetting = {\n        status: true,\n        presence: this.state.isPresenceChecked,\n        delay: this.state.isRetardChecked,\n        encouragement: this.state.isEncouragementsChecked,\n        sanction: this.state.isSanctionsChecked,\n        observation: this.state.isObservationsChecked,\n        fk_id_education_type: this.state.educationTypesId,\n      };\n      if (this.state.isTheFirstInit) {\n        this.props.dispatch(addCallRegisterSetting(callRegisterSetting));\n      } else {\n        callRegisterSetting.id = this.state.idSetting;\n        this.props.dispatch(editCallRegisterSetting(callRegisterSetting));\n      }\n    } else {\n      this.setState({ educationTypesError: true });\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    this.props.dispatch(getEducationType());\n    this.props.dispatch(getObservationList());\n    this.props.dispatch(getEncouragementList());\n    this.props.dispatch(getSanctionList());\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.educationTypes !== this.props.educationTypes) {\n      if (!_.isEmpty(this.props.educationTypes)) {\n        if (this.props.educationTypes.length > 1) {\n          let options = [];\n          this.props.educationTypes.forEach((element, index) => {\n            let option = {\n              label: element.name,\n              value: element.id,\n              key: index,\n            };\n            options.push(option);\n          });\n          this.setState({ educationTypes: options, show: true });\n        } else {\n          this.setState({ educationTypesId: this.props.educationTypes[0].id });\n          this.props.dispatch(\n            getCallRegisterSetting(this.props.educationTypes[0].id)\n          );\n        }\n      } else {\n        this.setState({ isOpen: true });\n      }\n    }\n    if (prevProps.settingCallRegister !== this.props.settingCallRegister) {\n      if (!_.isEmpty(this.props.settingCallRegister)) {\n        let settingData = this.props.settingCallRegister[0];\n        this.setState({\n          isPresenceChecked: settingData.presence,\n          isRetardChecked: settingData.delay,\n          isEncouragementsChecked: settingData.encouragement,\n          isSanctionsChecked: settingData.sanction,\n          isObservationsChecked: settingData.observation,\n          isTheFirstInit: false,\n          idSetting:settingData.id\n        });\n      } else {\n        this.setState({\n          isPresenceChecked: true,\n          isRetardChecked: true,\n          isEncouragementsChecked: false,\n          isSanctionsChecked: true,\n          isObservationsChecked: false,\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.successStatus ? (\n          <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\"> {this.props.message} </span>\n          </UncontrolledAlert>\n        ) : (\n          \"\"\n        )}\n        {this.props.errorStatus ? (\n          <UncontrolledAlert className=\"alert-addon-card bg-danger bg-danger text-white shadow-lg\">\n            <span className=\"icon-addon alert-addon\">\n              <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n            </span>\n            <span className=\"d-inline-block\"> {this.props.message} </span>\n          </UncontrolledAlert>\n        ) : (\n          \"\"\n        )}\n        <PermissionList\n          values={this.state}\n          handleChangeEducationType={this.handleChangeEducationType}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          handleCancel={this.handleCancel}\n          observations={this.props.observations}\n          encouragements={this.props.encouragements}\n          sanctions={this.props.sanctions}\n          settings={this.props.settings}\n        />\n        <SweetAlert\n          show={this.state.isOpen}\n          title={<IntlMessages id=\"alert.types.education\" />}\n          onConfirm={this.onConfirm}\n        ></SweetAlert>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    educationTypes: state.EstabTypes.educationTypes,\n    userProfile: state.auth.userProfile,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    observations: state.callRegister.observations,\n    encouragements: state.callRegister.encouragements,\n    sanctions: state.callRegister.sanctions,\n    settings: state.settings.locale,\n    settingCallRegister: state.callRegister.settingCallRegister,\n  };\n};\n\nexport default connect(mapStateToProps)(PermissionSetting);\n"]},"metadata":{},"sourceType":"module"}