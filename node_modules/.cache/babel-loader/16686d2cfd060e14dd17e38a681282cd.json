{"ast":null,"code":"import { SHOW_LOADER, HIDE_LOADER, GET_FOLDERS_ARCHITECTURE, GET_MATERIAL_COURSE, GET_MATERIAL_COURSE_ARCHIVED, DELETE_MATERIAL_COURSE } from '../constants/ActionTypes';\nconst initialState = {\n  remoteFolderCourse: [],\n  remoteMaterialCourse: [],\n  archivedMaterialCourse: [],\n  materialCourseLoading: false,\n  remoteMaterialCourseArchived: []\n};\nexport default function (state = initialState, action) {\n  if (action.type === GET_FOLDERS_ARCHITECTURE) {\n    return Object.assign({}, state, {\n      remoteFolderCourse: action.payload\n    });\n  }\n\n  if (action.type === GET_MATERIAL_COURSE) {\n    return Object.assign({}, state, {\n      remoteMaterialCourse: action.payload\n    });\n  }\n\n  if (action.type === GET_MATERIAL_COURSE_ARCHIVED) {\n    return Object.assign({}, state, {\n      remoteMaterialCourseArchived: action.payload\n    });\n  }\n\n  if (action.type === DELETE_MATERIAL_COURSE) {\n    let itemDeleted = state.remoteMaterialCourse.find(element => element.id == action.payload);\n    return Object.assign({}, state, {\n      remoteMaterialCourse: [...state.remoteMaterialCourse.filter(element => element.id !== action.payload)],\n      remoteMaterialCourseArchived: state.remoteMaterialCourseArchived.concat(itemDeleted)\n    });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/reducers/MaterialCourseReducer.js"],"names":["SHOW_LOADER","HIDE_LOADER","GET_FOLDERS_ARCHITECTURE","GET_MATERIAL_COURSE","GET_MATERIAL_COURSE_ARCHIVED","DELETE_MATERIAL_COURSE","initialState","remoteFolderCourse","remoteMaterialCourse","archivedMaterialCourse","materialCourseLoading","remoteMaterialCourseArchived","state","action","type","Object","assign","payload","itemDeleted","find","element","id","filter","concat"],"mappings":"AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,wBAHF,EAIEC,mBAJF,EAKEC,4BALF,EAMEC,sBANF,QAOO,0BAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,kBAAkB,EAAE,EADD;AAGnBC,EAAAA,oBAAoB,EAAE,EAHH;AAInBC,EAAAA,sBAAsB,EAAE,EAJL;AAKnBC,EAAAA,qBAAqB,EAAE,KALJ;AAMnBC,EAAAA,4BAA4B,EAAC;AANV,CAArB;AASA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAuC;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgBZ,wBAApB,EAA8C;AAC5C,WAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BL,MAAAA,kBAAkB,EAAEM,MAAM,CAACI;AADG,KAAzB,CAAP;AAGD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBX,mBAApB,EAAyC;AACvC,WAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BJ,MAAAA,oBAAoB,EAAEK,MAAM,CAACI;AADC,KAAzB,CAAP;AAGD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBV,4BAApB,EAAkD;AAChD,WAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BD,MAAAA,4BAA4B,EAAEE,MAAM,CAACI;AADP,KAAzB,CAAP;AAGD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBT,sBAApB,EAA4C;AAC1C,QAAIa,WAAW,GAAGN,KAAK,CAACJ,oBAAN,CAA2BW,IAA3B,CACfC,OAAD,IAAaA,OAAO,CAACC,EAAR,IAAcR,MAAM,CAACI,OADlB,CAAlB;AAIA,WAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BJ,MAAAA,oBAAoB,EAAE,CACpB,GAAGI,KAAK,CAACJ,oBAAN,CAA2Bc,MAA3B,CAAmCF,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAArE,CADiB,CADQ;AAI9BN,MAAAA,4BAA4B,EAAEC,KAAK,CAACD,4BAAN,CAAmCY,MAAnC,CAA0CL,WAA1C;AAJA,KAAzB,CAAP;AAMD;;AACD,SAAON,KAAP;AACD","sourcesContent":["import {\n  SHOW_LOADER,\n  HIDE_LOADER,\n  GET_FOLDERS_ARCHITECTURE,\n  GET_MATERIAL_COURSE,\n  GET_MATERIAL_COURSE_ARCHIVED,\n  DELETE_MATERIAL_COURSE\n} from '../constants/ActionTypes';\n\nconst initialState = {\n  remoteFolderCourse: [],\n\n  remoteMaterialCourse: [],\n  archivedMaterialCourse: [],\n  materialCourseLoading: false,\n  remoteMaterialCourseArchived:[]\n};\n\nexport default function(state = initialState, action) {\n  if (action.type === GET_FOLDERS_ARCHITECTURE) {\n    return Object.assign({}, state, {\n      remoteFolderCourse: action.payload,\n    });\n  }\n  if (action.type === GET_MATERIAL_COURSE) {\n    return Object.assign({}, state, {\n      remoteMaterialCourse: action.payload,\n    });\n  }\n  if (action.type === GET_MATERIAL_COURSE_ARCHIVED) {\n    return Object.assign({}, state, {\n      remoteMaterialCourseArchived: action.payload,\n    });\n  }\n  if (action.type === DELETE_MATERIAL_COURSE) {\n    let itemDeleted = state.remoteMaterialCourse.find(\n      (element) => element.id == action.payload\n    );\n \n    return Object.assign({}, state, {\n      remoteMaterialCourse: [\n        ...state.remoteMaterialCourse.filter((element) => element.id !== action.payload),\n      ],\n      remoteMaterialCourseArchived: state.remoteMaterialCourseArchived.concat(itemDeleted),\n    });\n  }\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}