{"ast":null,"code":"import axios from 'axios';\nimport config from '../config/config';\nimport { userSignOut } from \"../actions/Auth\";\nimport configureStore from \"../store\";\nimport { getError } from \"../Error/Error\";\nexport const moduleService = {\n  post,\n  get,\n  put,\n  archive\n};\nconst store = configureStore();\n\nfunction post(apiEndpoint, payload) {\n  return axios.post(config.baseUrl + apiEndpoint, payload).then(response => {\n    return response;\n  }).catch(err => {\n    if (err.response.status === 401) {\n      store.dispatch(userSignOut());\n    } else {\n      let errorMessage = getError(err.response.status);\n      alert(errorMessage);\n    }\n  });\n}\n\n;\n\nfunction get(apiEndpoint) {\n  return axios.get(config.baseUrl + apiEndpoint).then(response => {\n    return response;\n  }).catch(err => {\n    if (err.response.status === 401) {\n      store.dispatch(userSignOut());\n    } else {\n      let errorMessage = getError(err.response.status);\n      alert(errorMessage);\n    }\n  });\n}\n\n;\n\nfunction put(apiEndpoint, data) {\n  return axios.put(config.baseUrl + apiEndpoint, {\n    name: data.name,\n    description: data.description,\n    status: true,\n    id: data.id\n  }).then(response => {\n    return response;\n  }).catch(err => {\n    if (err.response.status === 401) {\n      store.dispatch(userSignOut());\n    } else {\n      let errorMessage = getError(err.response.status);\n      alert(errorMessage);\n    }\n  });\n}\n\n;\n\nfunction archive(apiEndpoint, data) {\n  return axios.put(config.baseUrl + apiEndpoint, {\n    name: data.name,\n    description: data.description,\n    status: false,\n    id: data.id\n  }).then(response => {\n    return response;\n  }).catch(err => {\n    if (err.response.status === 401) {\n      store.dispatch(userSignOut());\n    } else {\n      let errorMessage = getError(err.response.status);\n      alert(errorMessage);\n    }\n  });\n}\n\n;","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/_services/module.service.js"],"names":["axios","config","userSignOut","configureStore","getError","moduleService","post","get","put","archive","store","apiEndpoint","payload","baseUrl","then","response","catch","err","status","dispatch","errorMessage","alert","data","name","description","id"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport config from '../config/config';\nimport { userSignOut } from \"../actions/Auth\";\nimport configureStore from \"../store\";\nimport { getError } from \"../Error/Error\";\n\nexport const moduleService = {\n    post,\n    get,\n    put,\n    archive\n};\n\n\nconst store = configureStore();\nfunction post(apiEndpoint, payload) {\n    return axios.post(config.baseUrl + apiEndpoint, payload).then((response) => {\n        return response;\n    }).catch(err => {\n        if (err.response.status === 401) {\n          store.dispatch(userSignOut());\n        } else {\n          let errorMessage = getError(err.response.status);\n          alert(errorMessage);\n        }\n      });\n};\n\nfunction get(apiEndpoint) {\n    return axios.get(config.baseUrl + apiEndpoint).then((response) => {\n        return response;\n    }).catch(err => {\n        if (err.response.status === 401) {\n          store.dispatch(userSignOut());\n        } else {\n          let errorMessage = getError(err.response.status);\n          alert(errorMessage);\n        }\n      });\n};\n\nfunction put(apiEndpoint, data) {\n    return axios.put(config.baseUrl + apiEndpoint, {\n        name: data.name,\n        description: data.description,\n        status: true,\n        id: data.id,\n    })\n        .then((response) => {\n            return response;\n        }).catch(err => {\n            if (err.response.status === 401) {\n              store.dispatch(userSignOut());\n            } else {\n              let errorMessage = getError(err.response.status);\n              alert(errorMessage);\n            }\n          });\n};\n\nfunction archive (apiEndpoint, data) {\n    return axios.put(config.baseUrl + apiEndpoint, {\n        name: data.name,\n        description: data.description,\n        status: false,\n        id: data.id,\n    })\n        .then((response) => {\n            return response;\n        }).catch(err => {\n            if (err.response.status === 401) {\n              store.dispatch(userSignOut());\n            } else {\n              let errorMessage = getError(err.response.status);\n              alert(errorMessage);\n            }\n          });\n};\n"]},"metadata":{},"sourceType":"module"}