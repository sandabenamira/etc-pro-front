{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport { GET_STUDENT_BY_ESTABLISHMENT, GET_STUDENT } from '../constants/ActionTypes';\nexport function getStudents() {\n  return dispatch => {\n    let apiEndpoint = `/students?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(response => {\n      dispatch({\n        type: \"GET_ALL_STUDENT\",\n        payload: response.data\n      });\n    }).catch(error => {});\n  };\n}\n;\nexport function fetchStudentByEstablishmentId(idEstablishment, idSchoolYear) {\n  return dispatch => {\n    let apiEndpoint = `/students/fetchStudentByEstablishmentId/${idEstablishment}/${idSchoolYear}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then(res => {\n      if (res) {\n        dispatch({\n          type: GET_STUDENT_BY_ESTABLISHMENT,\n          payload: res.data.students\n        });\n      }\n    });\n  };\n}\nexport function getStudentsCallRegister(idClass, idSchoolYear) {\n  return dispatch => {\n    let apiEndpoint = `/inscription_v4?access_token=${localStorage.token}&filter[where][and][0][fk_id_class_v4]=${idClass}&filter[where][and][1][fk_id_school_year]=${idSchoolYear}&filter[include][student][profile][user]`;\n    classService.get(apiEndpoint).then(res => {\n      if (res) {\n        let callRegister = [];\n        let item = {};\n        res.data.forEach(element => {\n          item = {\n            \"name\": element.student.profile.user.name,\n            \"surname\": element.student.profile.user.surname,\n            \"presence\": true,\n            \"delay\": false,\n            \"sanction\": \"\",\n            \"description_sanction\": \"\",\n            \"observation\": \"\",\n            \"description_observation\": \"\",\n            \"encouragement\": \"\",\n            \"description_encouragement\": \"\",\n            \"studentId\": element.student.id,\n            \"photo\": element.student.profile.user.photo\n          };\n          callRegister.push(item);\n        });\n        dispatch({\n          type: GET_STUDENT,\n          payload: callRegister\n        });\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/studentAction.js"],"names":["classService","GET_STUDENT_BY_ESTABLISHMENT","GET_STUDENT","getStudents","dispatch","apiEndpoint","localStorage","token","get","then","response","type","payload","data","catch","error","fetchStudentByEstablishmentId","idEstablishment","idSchoolYear","res","students","getStudentsCallRegister","idClass","callRegister","item","forEach","element","student","profile","user","name","surname","id","photo","push"],"mappings":"AACA,SAASA,YAAT,QAA6B,4BAA7B;AACA,SAASC,4BAAT,EAAuCC,WAAvC,QAA0D,0BAA1D;AACA,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAOC,QAAQ,IAAI;AACjB,QAAIC,WAAW,GAAI,0BAAyBC,YAAY,CAACC,KAAM,EAA/D;AACAP,IAAAA,YAAY,CAACQ,GAAb,CAAiBH,WAAjB,EACGI,IADH,CACQC,QAAQ,IAAI;AAChBN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,iBAAR;AAA2BC,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA7C,OAAD,CAAR;AACD,KAHH,EAGKC,KAHL,CAGWC,KAAK,IAAI,CACjB,CAJH;AAKD,GAPD;AAQD;AAAA;AAED,OAAO,SAASC,6BAAT,CAAuCC,eAAvC,EAAwDC,YAAxD,EAAsE;AAC3E,SAAOd,QAAQ,IAAI;AACjB,QAAIC,WAAW,GAAI,2CAA0CY,eAAgB,IAAGC,YAAa,iBAAgBZ,YAAY,CAACC,KAAM,EAAhI;AACAP,IAAAA,YAAY,CAACQ,GAAb,CAAiBH,WAAjB,EAA8BI,IAA9B,CAAoCU,GAAD,IAAS;AAC1C,UAAIA,GAAJ,EAAS;AACPf,QAAAA,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAEV,4BAAR;AAAsCW,UAAAA,OAAO,EAAEO,GAAG,CAACN,IAAJ,CAASO;AAAxD,SAAD,CAAR;AACD;AACF,KAJD;AAKD,GAPD;AAQD;AAED,OAAO,SAASC,uBAAT,CAAiCC,OAAjC,EAA0CJ,YAA1C,EAAwD;AAC7D,SAAOd,QAAQ,IAAI;AACjB,QAAIC,WAAW,GAAI,gCAA+BC,YAAY,CAACC,KAAM,0CAAyCe,OAAQ,6CAA4CJ,YAAa,0CAA/K;AACAlB,IAAAA,YAAY,CAACQ,GAAb,CAAiBH,WAAjB,EAA8BI,IAA9B,CAAoCU,GAAD,IAAS;AAC1C,UAAIA,GAAJ,EAAS;AACP,YAAII,YAAY,GAAG,EAAnB;AACA,YAAIC,IAAI,GAAG,EAAX;AACAL,QAAAA,GAAG,CAACN,IAAJ,CAASY,OAAT,CAAiBC,OAAO,IAAI;AAC1BF,UAAAA,IAAI,GAAG;AACL,oBAAQE,OAAO,CAACC,OAAR,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BC,IADhC;AAEL,uBAAWJ,OAAO,CAACC,OAAR,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BE,OAFnC;AAGL,wBAAY,IAHP;AAIL,qBAAS,KAJJ;AAKL,wBAAY,EALP;AAML,oCAAwB,EANnB;AAOL,2BAAc,EAPT;AAQL,uCAA0B,EARrB;AASL,6BAAgB,EATX;AAUL,yCAA4B,EAVvB;AAWL,yBAAaL,OAAO,CAACC,OAAR,CAAgBK,EAXxB;AAYL,qBAAQN,OAAO,CAACC,OAAR,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BI;AAZhC,WAAP;AAcAV,UAAAA,YAAY,CAACW,IAAb,CAAkBV,IAAlB;AACD,SAhBD;AAkBApB,QAAAA,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAET,WAAR;AAAqBU,UAAAA,OAAO,EAAEW;AAA9B,SAAD,CAAR;AACD;AACF,KAxBD;AAyBD,GA3BD;AA4BD","sourcesContent":["\nimport { classService } from \"../_services/class.service\";\nimport { GET_STUDENT_BY_ESTABLISHMENT, GET_STUDENT } from '../constants/ActionTypes';\nexport function getStudents() {\n  return dispatch => {\n    let apiEndpoint = `/students?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint)\n      .then(response => {\n        dispatch({ type: \"GET_ALL_STUDENT\", payload: response.data });\n      }).catch(error => {\n      });\n  };\n};\n\nexport function fetchStudentByEstablishmentId(idEstablishment, idSchoolYear) {\n  return dispatch => {\n    let apiEndpoint = `/students/fetchStudentByEstablishmentId/${idEstablishment}/${idSchoolYear}?access_token=${localStorage.token}`;\n    classService.get(apiEndpoint).then((res) => {\n      if (res) {\n        dispatch({ type: GET_STUDENT_BY_ESTABLISHMENT, payload: res.data.students });\n      }\n    });\n  };\n}\n\nexport function getStudentsCallRegister(idClass, idSchoolYear) {\n  return dispatch => {\n    let apiEndpoint = `/inscription_v4?access_token=${localStorage.token}&filter[where][and][0][fk_id_class_v4]=${idClass}&filter[where][and][1][fk_id_school_year]=${idSchoolYear}&filter[include][student][profile][user]`;\n    classService.get(apiEndpoint).then((res) => {\n      if (res) {\n        let callRegister = [];\n        let item = {};\n        res.data.forEach(element => {\n          item = {\n            \"name\": element.student.profile.user.name,\n            \"surname\": element.student.profile.user.surname,\n            \"presence\": true,\n            \"delay\": false,\n            \"sanction\": \"\",\n            \"description_sanction\": \"\",\n            \"observation\":\"\",\n            \"description_observation\":\"\",\n            \"encouragement\":\"\",\n            \"description_encouragement\":\"\",\n            \"studentId\": element.student.id,\n            \"photo\":element.student.profile.user.photo\n          }\n          callRegister.push(item)\n        });\n\n        dispatch({ type: GET_STUDENT, payload: callRegister });\n      }\n    });\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}