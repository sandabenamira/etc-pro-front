{"ast":null,"code":"import { EDIT_PAYMENT, GET_PAYMENTS, CLEAR_LIST_PAYMENTS } from \"../constants/ActionTypes\";\nconst initialState = {\n  remotePayments: [],\n  listPayments: []\n};\nexport default function (state = initialState, action) {\n  if (action.type === EDIT_PAYMENT) {\n    return Object.assign({}, state, {\n      listPayments: [...state.listPayments.filter(element => element.linesPayments[0].id !== action.payload.linesPayments[0].id), action.payload]\n    });\n  }\n\n  if (action.type === GET_PAYMENTS) {\n    return Object.assign({}, state, {\n      listPayments: action.payload\n    });\n  }\n\n  if (action.type === CLEAR_LIST_PAYMENTS) {\n    return Object.assign({}, state, {\n      listPayments: []\n    });\n  }\n\n  return state;\n}\n;","map":{"version":3,"sources":["/home/oem/Documents/projects/educap-pro/educap-pro-front/src/reducers/PaymentReducer.js"],"names":["EDIT_PAYMENT","GET_PAYMENTS","CLEAR_LIST_PAYMENTS","initialState","remotePayments","listPayments","state","action","type","Object","assign","filter","element","linesPayments","id","payload"],"mappings":"AACA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,mBAArC,QAAgE,0BAAhE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,EADC;AAEjBC,EAAAA,YAAY,EAAE;AAFG,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AAEnD,MAAIA,MAAM,CAACC,IAAP,KAAgBR,YAApB,EAAkC;AAC9B,WAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BD,MAAAA,YAAY,EAAE,CAAC,GAAGC,KAAK,CAACD,YAAN,CAAmBM,MAAnB,CAA0BC,OAAO,IAAIA,OAAO,CAACC,aAAR,CAAsB,CAAtB,EAAyBC,EAAzB,KAAgCP,MAAM,CAACQ,OAAP,CAAeF,aAAf,CAA6B,CAA7B,EAAgCC,EAArG,CAAJ,EAA8GP,MAAM,CAACQ,OAArH;AADc,KAAzB,CAAP;AAGH;;AAED,MAAIR,MAAM,CAACC,IAAP,KAAgBP,YAApB,EAAkC;AAC9B,WAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BD,MAAAA,YAAY,EAAEE,MAAM,CAACQ;AADO,KAAzB,CAAP;AAGH;;AACD,MAAIR,MAAM,CAACC,IAAP,KAAgBN,mBAApB,EAAyC;AACrC,WAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BD,MAAAA,YAAY,EAAE;AADc,KAAzB,CAAP;AAGH;;AAED,SAAOC,KAAP;AAEH;AAAA","sourcesContent":["\nimport { EDIT_PAYMENT, GET_PAYMENTS, CLEAR_LIST_PAYMENTS } from \"../constants/ActionTypes\";\n\nconst initialState = {\n    remotePayments: [],\n    listPayments: [],\n};\n\nexport default function (state = initialState, action) {\n\n    if (action.type === EDIT_PAYMENT) {\n        return Object.assign({}, state, {\n            listPayments: [...state.listPayments.filter(element => element.linesPayments[0].id !== action.payload.linesPayments[0].id), action.payload]\n        })\n    }\n\n    if (action.type === GET_PAYMENTS) {\n        return Object.assign({}, state, {\n            listPayments: action.payload\n        })\n    }\n    if (action.type === CLEAR_LIST_PAYMENTS) {\n        return Object.assign({}, state, {\n            listPayments: []\n        })\n    }\n\n    return state;\n\n};\n"]},"metadata":{},"sourceType":"module"}