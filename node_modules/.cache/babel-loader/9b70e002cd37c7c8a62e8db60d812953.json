{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/ServiceAllocation/DeleteAllocation.js\";\nimport React from \"react\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { // addAllocationService,\n// editAllocationService,\n// getAllocationServiceByEstablishment,\ndeleteAllocationService, deleteFailed } from \"../../../../../actions/AllocationServiceAction\";\n\nclass DeleteAllocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = e => {\n      var deleteOption = true;\n      var month = new Date();\n      let currentMonth = month.getMonth() + 1;\n      const item = this.props.item;\n      var allocationMonth = item.services;\n      allocationMonth.map(element => {\n        var id;\n        id = element.allocation_month.indexOf(currentMonth);\n\n        if (id > 0) {\n          deleteOption = false;\n        }\n      });\n\n      if (deleteOption) {\n        allocationMonth.map(element => {\n          var allocationData = {};\n          allocationData.id = element.id;\n          allocationData.status = false;\n          this.props.deleteAllocationService(allocationData, this.props.userProfile.establishment_id);\n        });\n      } else {\n        this.props.deleteFailed();\n      }\n\n      this.props.cancelModalDelete();\n    };\n\n    this.handleRequestClose = () => {\n      this.props.cancelModalDelete();\n    };\n\n    this.state = {\n      open: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.open,\n      TransitionComponent: Slide,\n      onClose: this.handleRequestClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"message.confirm.modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 16\n      }\n    }))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleRequestClose,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"button.no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleDelete,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"button.yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile\n  };\n}\n\nexport default connect(mapStateToProps, {\n  // addAllocationService,\n  // editAllocationService,\n  // getAllocationServiceByEstablishment,\n  deleteAllocationService,\n  deleteFailed\n})(DeleteAllocation);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/FinancialManagement/routes/ServiceAllocation/DeleteAllocation.js"],"names":["React","IntlMessages","Dialog","DialogActions","DialogContent","DialogContentText","Slide","Button","connect","deleteAllocationService","deleteFailed","DeleteAllocation","Component","constructor","props","handleDelete","e","deleteOption","month","Date","currentMonth","getMonth","item","allocationMonth","services","map","element","id","allocation_month","indexOf","allocationData","status","userProfile","establishment_id","cancelModalDelete","handleRequestClose","state","open","render","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport {\n  // addAllocationService,\n  // editAllocationService,\n  // getAllocationServiceByEstablishment,\n  deleteAllocationService,\n  deleteFailed,\n} from \"../../../../../actions/AllocationServiceAction\";\nclass DeleteAllocation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n    };\n  }\n\n  handleDelete = (e) => {\n    var deleteOption = true;\n    var month = new Date();\n    let currentMonth = month.getMonth() + 1;\n\n    const item = this.props.item;\n    var allocationMonth = item.services;\n\n    allocationMonth.map((element) => {\n      var id;\n      id = element.allocation_month.indexOf(currentMonth);\n      if (id > 0) {\n        deleteOption = false;\n      }\n    });\n\n    if (deleteOption) {\n      allocationMonth.map((element) => {\n        var allocationData = {};\n        allocationData.id = element.id;\n        allocationData.status = false;\n        this.props.deleteAllocationService(\n          allocationData,\n          this.props.userProfile.establishment_id\n        );\n      });\n    } else {\n      this.props.deleteFailed();\n    }\n\n    this.props.cancelModalDelete();\n  };\n\n  handleRequestClose = () => {\n    this.props.cancelModalDelete();\n  };\n\n  render() {\n    return (\n      <div>\n        <Dialog\n          open={this.state.open}\n          TransitionComponent={Slide}\n          onClose={this.handleRequestClose}\n        >\n          <DialogContent>\n            <DialogContentText>\n              {<IntlMessages id=\"message.confirm.modal\" />}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleRequestClose} color=\"secondary\">\n              {<IntlMessages id=\"button.no\" />}\n            </Button>\n            <Button onClick={this.handleDelete} color=\"primary\">\n              {<IntlMessages id=\"button.yes\" />}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    // addAllocationService,\n    // editAllocationService,\n    // getAllocationServiceByEstablishment,\n    deleteAllocationService,\n    deleteFailed,\n  }\n)(DeleteAllocation);\n"]},"metadata":{},"sourceType":"module"}