{"ast":null,"code":"import { classService } from \"../_services/class.service\";\nimport { ADD_SECTION, SHOW_SUCCESS_MESSAGE, HIDE_SUCCESS_MESSAGE, SHOW_ERROR_MESSAGE, HIDE_ERROR_MESSAGE, GET_SECTIONS, EDIT_SECTION, DELETE_SECTIONS, ARCHIVED_GET_SECTIONS, PUBLISH_SECTIONS } from \"../constants/ActionTypes\";\nexport function addSection(data) {\n  return dispatch => {\n    let apiEndpoint = `/sections_v3?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then(response => {\n      if (response) {\n        dispatch({\n          type: ADD_SECTION,\n          payload: response.data\n        });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectuée avec succès\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_SUCCESS_MESSAGE\n          });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload: \"Une erreur est survenue lors de la création merci d'essayer à nouveau\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: HIDE_ERROR_MESSAGE\n          });\n        }, 4000);\n      }\n    });\n  };\n}\nexport function editSection(data) {\n  return dispatch => {\n    let apiEndpoint = `/sections_v3/${data.id}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, data).then(response => {\n      if (response) {\n        dispatch({\n          type: EDIT_SECTION,\n          payload: response.data\n        });\n      }\n    });\n  };\n}\nexport function getSection(establishment_id, schoolYearId) {\n  return dispatch => {\n    let apiEndpoint = `/sections_v3?access_token=${localStorage.token}&filter[include][level]=educationType`;\n    classService.get(apiEndpoint).then(response => {\n      if (response) {\n        const list = response.data;\n        const SectionList = list.filter(element => {\n          return element.status && element.fk_id_school_year == schoolYearId && element.level.educationType.fk_id_establishment == establishment_id;\n        });\n        const ArchivedSectionList = list.filter(element => element.status == false && element.fk_id_school_year == schoolYearId && element.level.educationType.fk_id_establishment == establishment_id);\n        dispatch({\n          type: GET_SECTIONS,\n          payload: SectionList\n        });\n        dispatch({\n          type: ARCHIVED_GET_SECTIONS,\n          payload: ArchivedSectionList\n        });\n      }\n    });\n  };\n}\nexport function deleteSection(itemId) {\n  return dispatch => {\n    let apiEndpoint = `/sections_v3/` + itemId.id;\n    classService.patch(apiEndpoint, {\n      status: false\n    }).then(response => {\n      dispatch({\n        type: DELETE_SECTIONS,\n        payload: response.data\n      });\n    }).catch(function (error) {});\n  };\n}\nexport function publishSection(item) {\n  return dispatch => {\n    let apiEndpoint = `/sections_v3/` + item.id;\n    classService.patch(apiEndpoint, {\n      status: true\n    }).then(response => {\n      dispatch({\n        type: PUBLISH_SECTIONS,\n        payload: response.data\n      });\n    }).catch(function (error) {});\n  };\n}\n\nfunction getSectionsByLevel(sections, levelId) {\n  let sectionList = [];\n  sectionList = Array.from(sections).filter(element => element.fk_id_level_v3 === levelId);\n  return sectionList;\n}\n\nexport { getSectionsByLevel };","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/actions/SectionsAction.js"],"names":["classService","ADD_SECTION","SHOW_SUCCESS_MESSAGE","HIDE_SUCCESS_MESSAGE","SHOW_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","GET_SECTIONS","EDIT_SECTION","DELETE_SECTIONS","ARCHIVED_GET_SECTIONS","PUBLISH_SECTIONS","addSection","data","dispatch","apiEndpoint","localStorage","token","post","then","response","type","payload","setTimeout","editSection","id","patch","getSection","establishment_id","schoolYearId","get","list","SectionList","filter","element","status","fk_id_school_year","level","educationType","fk_id_establishment","ArchivedSectionList","deleteSection","itemId","catch","error","publishSection","item","getSectionsByLevel","sections","levelId","sectionList","Array","from","fk_id_level_v3"],"mappings":"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","sourcesContent":["import { classService } from \"../_services/class.service\";\nimport {\n  ADD_SECTION,\n  SHOW_SUCCESS_MESSAGE,\n  HIDE_SUCCESS_MESSAGE,\n  SHOW_ERROR_MESSAGE,\n  HIDE_ERROR_MESSAGE,\n  GET_SECTIONS,\n  EDIT_SECTION,\n  DELETE_SECTIONS,\n  ARCHIVED_GET_SECTIONS,\n  PUBLISH_SECTIONS,\n} from \"../constants/ActionTypes\";\n\nexport function addSection(data) {\n  return (dispatch) => {\n    let apiEndpoint = `/sections_v3?access_token=${localStorage.token}`;\n    classService.post(apiEndpoint, data).then((response) => {\n      if (response) {\n        dispatch({ type: ADD_SECTION, payload: response.data });\n        dispatch({\n          type: SHOW_SUCCESS_MESSAGE,\n          payload: \"La création est effectuée avec succès\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_SUCCESS_MESSAGE });\n        }, 4000);\n      } else {\n        dispatch({\n          type: SHOW_ERROR_MESSAGE,\n          payload:\n            \"Une erreur est survenue lors de la création merci d'essayer à nouveau\",\n        });\n        setTimeout(() => {\n          dispatch({ type: HIDE_ERROR_MESSAGE });\n        }, 4000);\n      }\n    });\n  };\n}\n\nexport function editSection(data) {\n  return (dispatch) => {\n    let apiEndpoint = `/sections_v3/${data.id}?access_token=${localStorage.token}`;\n    classService.patch(apiEndpoint, data).then((response) => {\n      if (response) {\n        dispatch({ type: EDIT_SECTION, payload: response.data });\n      }\n    });\n  };\n}\n\nexport function getSection(establishment_id, schoolYearId) {\n  return (dispatch) => {\n    let apiEndpoint = `/sections_v3?access_token=${localStorage.token}&filter[include][level]=educationType`;\n    classService.get(apiEndpoint).then((response) => {\n      if (response) {\n        const list = response.data;\n\n        const SectionList = list.filter((element) => {\n          return (\n            element.status &&\n            element.fk_id_school_year == schoolYearId &&\n            element.level.educationType.fk_id_establishment == establishment_id\n          );\n        });\n        const ArchivedSectionList = list.filter(\n          (element) =>\n            element.status == false &&\n            element.fk_id_school_year == schoolYearId &&\n            element.level.educationType.fk_id_establishment == establishment_id\n        );\n        dispatch({ type: GET_SECTIONS, payload: SectionList });\n        dispatch({\n          type: ARCHIVED_GET_SECTIONS,\n          payload: ArchivedSectionList,\n        });\n      }\n    });\n  };\n}\n\nexport function deleteSection(itemId) {\n  return (dispatch) => {\n    let apiEndpoint = `/sections_v3/` + itemId.id;\n    classService\n      .patch(apiEndpoint, {\n        status: false,\n      })\n      .then((response) => {\n        dispatch({ type: DELETE_SECTIONS, payload: response.data });\n      })\n      .catch(function(error) {});\n  };\n}\nexport function publishSection(item) {\n  return (dispatch) => {\n    let apiEndpoint = `/sections_v3/` + item.id;\n    classService\n      .patch(apiEndpoint, {\n        status: true,\n      })\n      .then((response) => {\n        dispatch({ type: PUBLISH_SECTIONS, payload: response.data });\n      })\n      .catch(function(error) {});\n  };\n}\n\nfunction getSectionsByLevel(sections, levelId) {\n  let sectionList = [];\n  sectionList = Array.from(sections).filter(\n    (element) => element.fk_id_level_v3 === levelId\n  );\n  return sectionList;\n}\nexport { getSectionsByLevel };\n"]},"metadata":{},"sourceType":"module"}