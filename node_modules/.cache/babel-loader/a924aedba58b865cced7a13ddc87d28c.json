{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/VirtualClasses/VirtualClassList.js\";\nimport React, { Component } from \"react\";\nimport VitualClassListItems from \"./VitualClassListItems\";\nimport EditVitualClass from \"./EditVitualClass\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { editClassVirtual } from \"../../../../../actions/VirtualClassAction\";\nimport { getClassesVirtual } from \"../../../../../actions/VirtualClassAction\";\nimport { connect } from \"react-redux\";\nimport { getSectionFromLevel } from \"../../../../../actions/sectionAction\";\nimport { getLevelListFromEstabType } from \"../../../../../actions/classLevelAction\";\nimport axios from \"axios\";\nimport baseUrl from \"../../../../../config/config\";\nimport { getSections } from \"../../../../../actions/sectionAction\";\nimport { getLevels } from \"../../../../../actions/classLevelAction\";\nimport { getClassesByEstablishmentId } from \"../../../../../actions/classeAction\";\nimport { element } from \"prop-types\";\n\nclass VirtualClassList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editVirtualClass = () => {\n      var data = {};\n      data.id = this.state.id;\n      data.object = this.state.class_object;\n      data.class_id = this.state.class_id;\n      data.subject_id = this.state.subject_id;\n      data.class_url = this.state.class_url;\n      data.password = this.state.class_password;\n      data.date_virtual_class = this.state.class_date;\n      data.start_time_class = this.state.startTime;\n      data.end_time_class = this.state.endTime;\n      data.professor_id = this.state.professor_id;\n      data.status = true;\n      data.establishment_id = this.props.userProfile.establishment_id;\n      data.virtual_class_status = \"programÃ©e\";\n      this.props.editClassVirtual(data);\n      this.setState({\n        addIsopen: false,\n        editIsopen: false,\n        deleteIsopen: false,\n        showIsopen: false,\n        class_object: \"\",\n        level_id: \"\",\n        section_id: \"\",\n        professor_id: \"\",\n        class_id: \"\",\n        subject_id: \"\",\n        class_url: \"\",\n        class_password: \"\",\n        class_date: \"\",\n        selectedStartTime: new Date(),\n        selectedEndTime: new Date(),\n        startTime: \"\",\n        endTime: \"\",\n        studentsectionByLevels: [],\n        Disable_studentsection: true,\n        levelsbyestablishment: [],\n        studentClassesByLevelSectionID: [],\n        subjectList: [],\n        establishmentProfessor: []\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeProfessor = name => event => {\n      this.setState({\n        professor_id: event.target.value\n      });\n    };\n\n    this.handleChangeDate = date => {\n      this.setState({\n        class_date: date\n      });\n    };\n\n    this.handleStartTimeChange = time => {\n      this.setState({\n        selectedStartTime: time,\n        startTime: time.format(\"LT\")\n      });\n    };\n\n    this.handleEndTimeChange = time => {\n      this.setState({\n        selectedEndTime: time,\n        endTime: time.format(\"LT\")\n      });\n    };\n\n    this.addClassShowModal = () => {\n      this.setState({\n        addIsopen: true\n      });\n    };\n\n    this.editClassShowModal = ClassObjectEdit => {\n      this.setState({\n        editIsopen: true,\n        id: ClassObjectEdit.id,\n        class_object: ClassObjectEdit.object,\n        class_id: ClassObjectEdit.class_id,\n        subject_id: ClassObjectEdit.subject_id,\n        class_url: ClassObjectEdit.class_url,\n        class_password: ClassObjectEdit.password,\n        class_date: ClassObjectEdit.date_virtual_class,\n        startTime: ClassObjectEdit.start_time_class,\n        endTime: ClassObjectEdit.end_time_class,\n        professor_id: ClassObjectEdit.professor_id,\n        status: ClassObjectEdit.status,\n        establishment_id: ClassObjectEdit.establishment_id,\n        virtual_class_status: ClassObjectEdit.virtual_class_status,\n        level_id: ClassObjectEdit.level_id,\n        section_id: ClassObjectEdit.section_id\n      });\n\n      if (ClassObjectEdit.level_id > 10) {\n        this.setState({\n          Disable_studentsection: false\n        });\n        var studentSectionbyLevel = getSectionFromLevel(this.props.classSections, ClassObjectEdit.level_id);\n        this.setState({\n          studentsectionByLevels: studentSectionbyLevel\n        });\n      } else {\n        this.setState({\n          Disable_studentsection: true,\n          section_id: 0\n        });\n        const levelID = ClassObjectEdit.level_id;\n        var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.status);\n        this.setState({\n          studentClassesByLevelSectionID: studentfiltredClasses\n        });\n      }\n\n      const levelID = ClassObjectEdit.level_id;\n      const sectionID = ClassObjectEdit.section_id;\n      var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.section_id === sectionID && classe.status);\n      this.setState({\n        studentClassesByLevelSectionID: studentfiltredClasses\n      });\n      let apiEndpoint = `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][subject_id]=` + ClassObjectEdit.subject_id + `&filter[include][professor][profile][user]`;\n      axios.get(apiEndpoint).then(res => {\n        this.setState({\n          establishmentProfessor: res.data\n        });\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        addIsopen: false,\n        editIsopen: false,\n        deleteIsopen: false,\n        showIsopen: false\n      });\n    };\n\n    this.handleChangeSubject = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      let apiEndpoint = `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][subject_id]=` + event.target.value + `&filter[include][professor][profile][user]`;\n      axios.get(apiEndpoint).then(res => {\n        this.setState({\n          establishmentProfessor: res.data\n        });\n      });\n    };\n\n    this.handleChangestudentSection = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      const levelID = this.state.level_id;\n      const sectionID = event.target.value;\n      var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.section_id === sectionID && classe.status);\n      this.setState({\n        studentClassesByLevelSectionID: studentfiltredClasses\n      });\n    };\n\n    this.handleChangestudentLevel = name => event => {\n      this.setState({\n        section_id: 0,\n        class_id: 0\n      });\n\n      if (event.target.value > 10) {\n        this.setState({\n          [name]: event.target.value\n        });\n        this.setState({\n          Disable_studentsection: false\n        });\n        var studentSectionbyLevel = getSectionFromLevel(this.props.classSections, event.target.value);\n        this.setState({\n          studentsectionByLevels: studentSectionbyLevel\n        });\n      } else {\n        this.setState({\n          level_id: event.target.value,\n          Disable_studentsection: true,\n          section_id: 0\n        });\n        const levelID = event.target.value;\n        var studentfiltredClasses = this.props.classes.filter(classe => classe.level_id === levelID && classe.status);\n        this.setState({\n          studentClassesByLevelSectionID: studentfiltredClasses\n        });\n      }\n    };\n\n    this.handleChangeClass = name => event => {\n      if (this.props.userProfile.role_id === 2) {\n        this.setState({\n          establishment_id: this.props.userProfile.establishment_id\n        });\n      }\n\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      professorIdFilter: \"\",\n      studentClassIdFilter: \"\",\n      id: \"\",\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: true,\n      class_object: \"\",\n      level_id: \"\",\n      section_id: \"\",\n      professor_id: \"\",\n      class_id: \"\",\n      subject_id: \"\",\n      class_url: \"\",\n      class_password: \"\",\n      class_date: \"\",\n      selectedStartTime: new Date(),\n      selectedEndTime: new Date(),\n      startTime: \"\",\n      endTime: \"\",\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: []\n    };\n    this.addClassShowModal = this.addClassShowModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStartTimeChange = this.handleStartTimeChange.bind(this);\n    this.handleEndTimeChange = this.handleEndTimeChange.bind(this);\n    this.editVirtualClass = this.editVirtualClass.bind(this);\n    this.handleChangestudentSection = this.handleChangestudentSection.bind(this);\n    this.handleChangestudentLevel = this.handleChangestudentLevel.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeProfessor = this.handleChangeProfessor.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.getClassesVirtual();\n    this.props.getSections();\n    this.props.getLevels();\n    this.props.getClassesByEstablishmentId(this.props.userProfile.establishment_id);\n    axios.get(`${baseUrl.baseUrl}/establishments/` + this.props.userProfile.establishment_id + `?access_token=${localStorage.token}`).then(res => {\n      var levelsbyestablishment = getLevelListFromEstabType(this.props.classLevels, res.data.estab_type_id);\n      this.setState({\n        estabType: res.data.estab_type_id,\n        levelsbyestablishment: levelsbyestablishment\n      });\n      axios.get(`${baseUrl.baseUrl}/subjects?access_token=${localStorage.token}`).then(res => {\n        const subjectList = res.data;\n        this.setState({\n          subjectList\n        });\n      });\n    });\n\n    if (this.props.userProfile.role_id === 3) {\n      axios.get(`${baseUrl.baseUrl}/profiles/` + this.props.userProfile.id + `/professors?access_token=${localStorage.token}`).then(res => {\n        this.setState({\n          professorIdFilter: res.data[0].id\n        });\n      });\n    }\n\n    if (this.props.userProfile.role_id === 5) {\n      axios.get(`${baseUrl.baseUrl}/students/findOne?access_token=?access_token=${localStorage.token}&filter={\"where\":{\"profile_id\":` + this.props.userProfile.id + `}}`).then(res => {\n        this.setState({\n          studentClassIdFilter: res.data.class_id\n        });\n      });\n    }\n  }\n\n  render() {\n    var VirtualClassListByRole = [];\n\n    if (this.props.userProfile.role_id === 3) {\n      VirtualClassListByRole = this.props.classVirtual.filter(element => element.professor_id === this.state.professorIdFilter);\n    } else if (this.props.userProfile.role_id === 5 || this.props.userProfile.role_id === 4) {\n      VirtualClassListByRole = this.props.classVirtual.filter(element => element.class_id === this.state.studentClassIdFilter);\n    } else {\n      VirtualClassListByRole = this.props.classVirtual;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row animated slideInUpTiny animation-duration-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }\n    }, VirtualClassListByRole.map((element, index) => {\n      return /*#__PURE__*/React.createElement(VitualClassListItems, {\n        key: index,\n        classVirtualElement: element,\n        subjectList: this.props.subjectList,\n        editClassShowModal: this.editClassShowModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 15\n        }\n      });\n    })), this.state.editIsopen === true ? /*#__PURE__*/React.createElement(EditVitualClass, {\n      values: this.state,\n      editIsopen: this.state.editIsopen,\n      handleCancel: this.handleCancel,\n      handleChangeDate: this.handleChangeDate,\n      handleChange: this.handleChange,\n      handleStartTimeChange: this.handleStartTimeChange,\n      handleEndTimeChange: this.handleEndTimeChange,\n      editVirtualClass: this.editVirtualClass,\n      handleChangestudentSection: this.handleChangestudentSection,\n      handleChangestudentLevel: this.handleChangestudentLevel,\n      handleChangeClass: this.handleChangeClass,\n      handleChangeSubject: this.handleChangeSubject,\n      handleChangeProfessor: this.handleChangeProfessor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    classSections: state.classSections.remoteSections,\n    classes: state.classes,\n    classVirtual: state.classVirtualReducer.remoteClassVirtual\n  };\n}\n\nexport default connect(mapStateToProps, {\n  editClassVirtual,\n  getSections,\n  getLevels,\n  getClassesByEstablishmentId,\n  getClassesVirtual\n})(VirtualClassList);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Learning/routes/VirtualClasses/VirtualClassList.js"],"names":["React","Component","VitualClassListItems","EditVitualClass","IntlMessages","CardBox","Table","TableBody","TableCell","TableHead","TableRow","editClassVirtual","getClassesVirtual","connect","getSectionFromLevel","getLevelListFromEstabType","axios","baseUrl","getSections","getLevels","getClassesByEstablishmentId","element","VirtualClassList","constructor","props","editVirtualClass","data","id","state","object","class_object","class_id","subject_id","class_url","password","class_password","date_virtual_class","class_date","start_time_class","startTime","end_time_class","endTime","professor_id","status","establishment_id","userProfile","virtual_class_status","setState","addIsopen","editIsopen","deleteIsopen","showIsopen","level_id","section_id","selectedStartTime","Date","selectedEndTime","studentsectionByLevels","Disable_studentsection","levelsbyestablishment","studentClassesByLevelSectionID","subjectList","establishmentProfessor","handleChange","name","event","target","value","handleChangeProfessor","handleChangeDate","date","handleStartTimeChange","time","format","handleEndTimeChange","addClassShowModal","editClassShowModal","ClassObjectEdit","studentSectionbyLevel","classSections","levelID","studentfiltredClasses","classes","filter","classe","sectionID","apiEndpoint","localStorage","token","get","then","res","handleCancel","handleChangeSubject","handleChangestudentSection","handleChangestudentLevel","handleChangeClass","role_id","professorIdFilter","studentClassIdFilter","bind","componentWillMount","classLevels","estab_type_id","estabType","render","VirtualClassListByRole","classVirtual","map","index","mapStateToProps","auth","ClassLevels","remoteLevels","remoteSections","classVirtualReducer","remoteClassVirtual"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport VitualClassListItems from \"./VitualClassListItems\";\nimport EditVitualClass from \"./EditVitualClass\";\nimport IntlMessages from \"../../../../../util/IntlMessages\";\nimport CardBox from \"../../../../../components/CardBox/index\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { editClassVirtual } from \"../../../../../actions/VirtualClassAction\";\nimport { getClassesVirtual } from \"../../../../../actions/VirtualClassAction\";\nimport { connect } from \"react-redux\";\nimport { getSectionFromLevel } from \"../../../../../actions/sectionAction\";\nimport { getLevelListFromEstabType } from \"../../../../../actions/classLevelAction\";\nimport axios from \"axios\";\nimport baseUrl from \"../../../../../config/config\";\nimport { getSections } from \"../../../../../actions/sectionAction\";\nimport { getLevels } from \"../../../../../actions/classLevelAction\";\nimport { getClassesByEstablishmentId } from \"../../../../../actions/classeAction\";\nimport { element } from \"prop-types\";\nclass VirtualClassList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      professorIdFilter: \"\",\n      studentClassIdFilter: \"\",\n      id: \"\",\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: true,\n      class_object: \"\",\n      level_id: \"\",\n      section_id: \"\",\n      professor_id: \"\",\n      class_id: \"\",\n      subject_id: \"\",\n      class_url: \"\",\n      class_password: \"\",\n      class_date: \"\",\n      selectedStartTime: new Date(),\n      selectedEndTime: new Date(),\n      startTime: \"\",\n      endTime: \"\",\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: [],\n    };\n    this.addClassShowModal = this.addClassShowModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStartTimeChange = this.handleStartTimeChange.bind(this);\n    this.handleEndTimeChange = this.handleEndTimeChange.bind(this);\n    this.editVirtualClass = this.editVirtualClass.bind(this);\n    this.handleChangestudentSection = this.handleChangestudentSection.bind(\n      this\n    );\n    this.handleChangestudentLevel = this.handleChangestudentLevel.bind(this);\n    this.handleChangeClass = this.handleChangeClass.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeProfessor = this.handleChangeProfessor.bind(this);\n  }\n\n  editVirtualClass = () => {\n    var data = {};\n    data.id = this.state.id;\n    data.object = this.state.class_object;\n    data.class_id = this.state.class_id;\n    data.subject_id = this.state.subject_id;\n    data.class_url = this.state.class_url;\n    data.password = this.state.class_password;\n    data.date_virtual_class = this.state.class_date;\n    data.start_time_class = this.state.startTime;\n    data.end_time_class = this.state.endTime;\n    data.professor_id = this.state.professor_id;\n    data.status = true;\n    data.establishment_id = this.props.userProfile.establishment_id;\n    data.virtual_class_status = \"programÃ©e\";\n\n    this.props.editClassVirtual(data);\n    this.setState({\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: false,\n      class_object: \"\",\n      level_id: \"\",\n      section_id: \"\",\n      professor_id: \"\",\n      class_id: \"\",\n      subject_id: \"\",\n      class_url: \"\",\n      class_password: \"\",\n      class_date: \"\",\n      selectedStartTime: new Date(),\n      selectedEndTime: new Date(),\n      startTime: \"\",\n      endTime: \"\",\n      studentsectionByLevels: [],\n      Disable_studentsection: true,\n      levelsbyestablishment: [],\n      studentClassesByLevelSectionID: [],\n      subjectList: [],\n      establishmentProfessor: [],\n    });\n  };\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n  handleChangeProfessor = (name) => (event) => {\n    this.setState({ professor_id: event.target.value });\n  };\n\n  handleChangeDate = (date) => {\n    this.setState({ class_date: date });\n  };\n  handleStartTimeChange = (time) => {\n    this.setState({ selectedStartTime: time, startTime: time.format(\"LT\") });\n  };\n\n  handleEndTimeChange = (time) => {\n    this.setState({ selectedEndTime: time, endTime: time.format(\"LT\") });\n  };\n\n  addClassShowModal = () => {\n    this.setState({ addIsopen: true });\n  };\n  editClassShowModal = (ClassObjectEdit) => {\n    this.setState({\n      editIsopen: true,\n      id: ClassObjectEdit.id,\n      class_object: ClassObjectEdit.object,\n      class_id: ClassObjectEdit.class_id,\n      subject_id: ClassObjectEdit.subject_id,\n      class_url: ClassObjectEdit.class_url,\n      class_password: ClassObjectEdit.password,\n      class_date: ClassObjectEdit.date_virtual_class,\n      startTime: ClassObjectEdit.start_time_class,\n      endTime: ClassObjectEdit.end_time_class,\n      professor_id: ClassObjectEdit.professor_id,\n      status: ClassObjectEdit.status,\n      establishment_id: ClassObjectEdit.establishment_id,\n      virtual_class_status: ClassObjectEdit.virtual_class_status,\n      level_id: ClassObjectEdit.level_id,\n      section_id: ClassObjectEdit.section_id,\n    });\n\n    if (ClassObjectEdit.level_id > 10) {\n      this.setState({ Disable_studentsection: false });\n      var studentSectionbyLevel = getSectionFromLevel(\n        this.props.classSections,\n        ClassObjectEdit.level_id\n      );\n      this.setState({ studentsectionByLevels: studentSectionbyLevel });\n    } else {\n      this.setState({\n        Disable_studentsection: true,\n        section_id: 0,\n      });\n      const levelID = ClassObjectEdit.level_id;\n      var studentfiltredClasses = this.props.classes.filter(\n        (classe) => classe.level_id === levelID && classe.status\n      );\n      this.setState({ studentClassesByLevelSectionID: studentfiltredClasses });\n    }\n\n    const levelID = ClassObjectEdit.level_id;\n    const sectionID = ClassObjectEdit.section_id;\n    var studentfiltredClasses = this.props.classes.filter(\n      (classe) =>\n        classe.level_id === levelID &&\n        classe.section_id === sectionID &&\n        classe.status\n    );\n    this.setState({ studentClassesByLevelSectionID: studentfiltredClasses });\n\n    let apiEndpoint =\n      `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][subject_id]=` +\n      ClassObjectEdit.subject_id +\n      `&filter[include][professor][profile][user]`;\n    axios.get(apiEndpoint).then((res) => {\n      this.setState({ establishmentProfessor: res.data });\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      addIsopen: false,\n      editIsopen: false,\n      deleteIsopen: false,\n      showIsopen: false,\n    });\n  };\n\n  handleChangeSubject = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n\n    let apiEndpoint =\n      `${baseUrl.baseUrl}/classes_professors?access_token=${localStorage.token}&filter[where][subject_id]=` +\n      event.target.value +\n      `&filter[include][professor][profile][user]`;\n    axios.get(apiEndpoint).then((res) => {\n      this.setState({ establishmentProfessor: res.data });\n    });\n  };\n\n  handleChangestudentSection = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    const levelID = this.state.level_id;\n    const sectionID = event.target.value;\n    var studentfiltredClasses = this.props.classes.filter(\n      (classe) =>\n        classe.level_id === levelID &&\n        classe.section_id === sectionID &&\n        classe.status\n    );\n    this.setState({ studentClassesByLevelSectionID: studentfiltredClasses });\n  };\n  handleChangestudentLevel = (name) => (event) => {\n    this.setState({ section_id: 0, class_id: 0 });\n    if (event.target.value > 10) {\n      this.setState({ [name]: event.target.value });\n      this.setState({ Disable_studentsection: false });\n      var studentSectionbyLevel = getSectionFromLevel(\n        this.props.classSections,\n        event.target.value\n      );\n      this.setState({ studentsectionByLevels: studentSectionbyLevel });\n    } else {\n      this.setState({\n        level_id: event.target.value,\n        Disable_studentsection: true,\n        section_id: 0,\n      });\n      const levelID = event.target.value;\n      var studentfiltredClasses = this.props.classes.filter(\n        (classe) => classe.level_id === levelID && classe.status\n      );\n      this.setState({ studentClassesByLevelSectionID: studentfiltredClasses });\n    }\n  };\n\n  handleChangeClass = (name) => (event) => {\n    if (this.props.userProfile.role_id === 2) {\n      this.setState({\n        establishment_id: this.props.userProfile.establishment_id,\n      });\n    }\n    this.setState({ [name]: event.target.value });\n  };\n\n  componentWillMount() {\n    this.props.getClassesVirtual();\n    this.props.getSections();\n    this.props.getLevels();\n    this.props.getClassesByEstablishmentId(\n      this.props.userProfile.establishment_id\n    );\n\n    axios\n      .get(\n        `${baseUrl.baseUrl}/establishments/` +\n          this.props.userProfile.establishment_id +\n          `?access_token=${localStorage.token}`\n      )\n      .then((res) => {\n        var levelsbyestablishment = getLevelListFromEstabType(\n          this.props.classLevels,\n          res.data.estab_type_id\n        );\n        this.setState({\n          estabType: res.data.estab_type_id,\n          levelsbyestablishment: levelsbyestablishment,\n        });\n\n        axios\n          .get(`${baseUrl.baseUrl}/subjects?access_token=${localStorage.token}`)\n          .then((res) => {\n            const subjectList = res.data;\n            this.setState({ subjectList });\n          });\n      });\n\n    if (this.props.userProfile.role_id === 3) {\n      axios\n        .get(\n          `${baseUrl.baseUrl}/profiles/` +\n            this.props.userProfile.id +\n            `/professors?access_token=${localStorage.token}`\n        )\n        .then((res) => {\n          this.setState({\n            professorIdFilter: res.data[0].id,\n          });\n        });\n    }\n    if (this.props.userProfile.role_id === 5) {\n      axios\n        .get(\n          `${baseUrl.baseUrl}/students/findOne?access_token=?access_token=${localStorage.token}&filter={\"where\":{\"profile_id\":` +\n            this.props.userProfile.id +\n            `}}`\n        )\n        .then((res) => {\n          this.setState({\n            studentClassIdFilter: res.data.class_id,\n          });\n        });\n    }\n  }\n\n  render() {\n    var VirtualClassListByRole = [];\n    if (this.props.userProfile.role_id === 3) {\n      VirtualClassListByRole = this.props.classVirtual.filter(\n        (element) => element.professor_id === this.state.professorIdFilter\n      );\n    } else if (\n      this.props.userProfile.role_id === 5 ||\n      this.props.userProfile.role_id === 4\n    ) {\n      VirtualClassListByRole = this.props.classVirtual.filter(\n        (element) => element.class_id === this.state.studentClassIdFilter\n      );\n    } else {\n      VirtualClassListByRole = this.props.classVirtual;\n    }\n    return (\n      <div>\n        <div className=\"row animated slideInUpTiny animation-duration-3\">\n          {VirtualClassListByRole.map((element, index) => {\n            return (\n              <VitualClassListItems\n                key={index}\n                classVirtualElement={element}\n                subjectList={this.props.subjectList}\n                editClassShowModal={this.editClassShowModal}\n              />\n            );\n          })}\n        </div>\n        {this.state.editIsopen === true ? (\n          <EditVitualClass\n            values={this.state}\n            editIsopen={this.state.editIsopen}\n            handleCancel={this.handleCancel}\n            handleChangeDate={this.handleChangeDate}\n            handleChange={this.handleChange}\n            handleStartTimeChange={this.handleStartTimeChange}\n            handleEndTimeChange={this.handleEndTimeChange}\n            editVirtualClass={this.editVirtualClass}\n            handleChangestudentSection={this.handleChangestudentSection}\n            handleChangestudentLevel={this.handleChangestudentLevel}\n            handleChangeClass={this.handleChangeClass}\n            handleChangeSubject={this.handleChangeSubject}\n            handleChangeProfessor={this.handleChangeProfessor}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userProfile: state.auth.userProfile,\n    classLevels: state.ClassLevels.remoteLevels,\n    classSections: state.classSections.remoteSections,\n    classes: state.classes,\n    classVirtual: state.classVirtualReducer.remoteClassVirtual,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    editClassVirtual,\n    getSections,\n    getLevels,\n    getClassesByEstablishmentId,\n    getClassesVirtual,\n  }\n)(VirtualClassList);\n"]},"metadata":{},"sourceType":"module"}