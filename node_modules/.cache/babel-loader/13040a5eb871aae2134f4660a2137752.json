{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/UsersManagement/Users.js\";\nimport React from 'react';\nimport CardBox from '../../../../../components/CardBox/index';\nimport { connect } from 'react-redux';\nimport ArchiveUsers from './ArchiveUsers';\nimport UsersList from './UsersList';\nimport { UncontrolledAlert } from 'reactstrap';\nimport AddUsers from './AddUsers';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { getAllRole } from '../../../../../actions/usersAction';\nimport { getSchoolYearEtabs } from '../../../../../actions/SchoolYearEtabAction';\nimport countriesList from '../../../../../constants/const';\nimport { addUsers, getAllUsersForAdmin // getAllUsersForSuperAdministrator,\n} from '../../../../../actions/usersAction';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { roleIdSuperAdmin, roleIdAdmin, roleIdProfessor, roleIdStudent, roleIdDirector, roleIdParent, roleIdSupervisor } from '../../../../../config/config';\nimport { toUpperCaseFirst, toLowerCaseFirst } from '../../../../../constants/ReactConst';\nimport { addUserPermitted } from '../../../../../constants/validationFunctions';\nimport LoaderModal from './LoaderModal';\nimport { getAssignementCourse } from '../../../../../actions/AssignementAction';\nconst listRolesUsers = [{\n  id: roleIdAdmin,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `role.admin`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }),\n  value: roleIdAdmin,\n  labelBackEnd: 'Admin'\n}, {\n  id: roleIdDirector,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `component.etablishments.info.director`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }),\n  value: roleIdDirector,\n  labelBackEnd: 'Director'\n}, {\n  id: roleIdSupervisor,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `role.supervisor`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }\n  }),\n  value: roleIdSupervisor,\n  labelBackEnd: 'Vie scolaire'\n}, {\n  id: roleIdProfessor,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `toDo.professor`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }\n  }),\n  value: roleIdProfessor,\n  labelBackEnd: 'Professor'\n}, {\n  id: roleIdStudent,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `userStuppDisplay.Student`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }\n  }),\n  value: roleIdStudent,\n  labelBackEnd: 'Student'\n}, {\n  id: roleIdParent,\n  label: /*#__PURE__*/React.createElement(IntlMessages, {\n    id: `userStuppDisplay.Parent`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }\n  }),\n  value: roleIdParent,\n  labelBackEnd: 'Parent'\n}];\n\nclass Users extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeSubjectModules = selectedOption => {\n      let classForStudentFiltred = [];\n      classForStudentFiltred = this.state.classForStudent.filter(element => element.levelId == selectedOption.id);\n      this.setState({\n        classForStudentFiltred\n      });\n    };\n\n    this.handleChangeLevelParticipant = selectedOption => {\n      let classForStudentFiltred = [];\n      classForStudentFiltred = this.state.classForStudent.filter(element => element.levelId == selectedOption.id);\n      this.setState({\n        classForStudentFiltred\n      });\n    };\n\n    this.handleChangeStudentClass = selectedOption => {\n      let listGroupClass = [];\n      selectedOption.groups.map(element => {\n        if (element.status) {\n          var object = {};\n          object.label = element.name;\n          object.id = element.id;\n          object.value = element.id;\n          listGroupClass.push(object);\n        }\n      });\n      this.setState({\n        studentClass: selectedOption.id,\n        levelId: selectedOption.levelId,\n        sectionId: selectedOption.sectionId,\n        listGroupClass\n      });\n    };\n\n    this.handleChangeAlerte = name => {\n      this.setState({\n        sessionExist: true,\n        messageAlerte: 'Il existe dÃ©ja une licence pour cet etablissement'\n      });\n      setTimeout(() => {\n        this.setState({\n          sessionExist: false,\n          messageAlerte: ''\n        });\n      }, 4000);\n    };\n\n    this.handleChangeEducationType = name => event => {\n      let obj = JSON.parse(event.target.value);\n      this.setState({\n        educationItem: obj,\n        educationTypeId: obj.id\n      });\n    };\n\n    this.handleChangePhone = value => {\n      this.setState({\n        userPhoneNumber: value\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeBirthdayDate = date => {\n      this.setState({\n        birthdayDate: date,\n        birthdayDateCheck: true\n      });\n    };\n\n    this.handleChangeRole = selectedOption => {\n      if (selectedOption.id == roleIdStudent) {\n        this.setState({\n          birthdayDate: moment().year() - 6 + '-01-01'\n        });\n      }\n\n      this.setState({\n        roleId: selectedOption.id,\n        roleName: selectedOption.label\n      });\n    };\n\n    this.handleChangeGroupClassRoom = selectedOption => {\n      this.setState({\n        groupId: selectedOption.id\n      });\n    };\n\n    this.handleChangeSchoolYear = selectedOption => {\n      this.setState({\n        schoolyearId: selectedOption.id\n      });\n    };\n\n    this.handleChangeClassRoom = (selectedOption, name, index) => {\n      if (name === 'classId') {\n        // let subjectsList = [];\n        // this.props.courseAssignment.map((element) => {\n        //   if (element.fk_id_class_v4 === selectedOption.id) {\n        //     var object = {};\n        //     object.label = element.subject.name;\n        //     object.id = element.id;\n        //     object.value = element.id;\n        //     object.fk_id_subjects_module_v4 =\n        //       element.subject.fk_id_subjects_module_v4;\n        //     subjectsList.push(object);\n        //   }\n        // });\n        // let newListSubjects = this.state.listOfSubjects.map((objSubject, i) =>\n        //   i === index\n        //     ? {\n        //         ...objSubject,\n        //         [name]: selectedOption.value,\n        //         subjects: subjectsList,\n        //       }\n        //     : objSubject\n        // );\n        // this.setState({ listOfSubjects: newListSubjects });\n        let newListSubjects = this.state.listOfSubjects.map((objSubject, i) => i === index ? { ...objSubject,\n          [name]: selectedOption.value\n        } : objSubject);\n        this.setState({\n          listOfSubjects: newListSubjects\n        });\n      } else if (name === 'subjectId') {\n        let newListSubjects = this.state.listOfSubjects.map((objSubject, i) => i === index ? { ...objSubject,\n          [name]: selectedOption.value\n        } : objSubject);\n        this.setState({\n          listOfSubjects: newListSubjects\n        });\n      } else if (name === 'subjectModuleId') {\n        let classId = this.state.listOfSubjects[index].classId;\n        let subjectsList = [];\n        this.props.courseAssignment.map(element => {\n          if (element.fk_id_class_v4 === classId && element.subject.fk_id_subjects_module_v4 == selectedOption.value) {\n            var object = {};\n            object.label = element.subject.name;\n            object.id = element.id;\n            object.value = element.id;\n            object.fk_id_subjects_module_v4 = element.subject.fk_id_subjects_module_v4;\n            subjectsList.push(object);\n          }\n        });\n        let newListSubjects = this.state.listOfSubjects.map((objSubject, i) => i === index ? { ...objSubject,\n          subjects: subjectsList\n        } : objSubject);\n        this.setState({\n          listOfSubjects: newListSubjects\n        });\n      }\n    };\n\n    this.addNewSubject = index => {\n      let listOfSubjects = [];\n      this.state.listOfSubjects.map(element => {\n        listOfSubjects.push({\n          id: element.id,\n          classId: element.classId,\n          subjectId: element.subjectId,\n          subjects: element.subjects,\n          isAdded: true\n        });\n      });\n      listOfSubjects.push({\n        id: index,\n        classId: 0,\n        subjectId: 0,\n        subjects: [],\n        isAdded: false\n      });\n      this.setState({\n        listOfSubjects\n      });\n    };\n\n    this.deleteChoice = index => {\n      let listOfSubjectsClasses = this.state.listOfSubjects.filter(element => element.id !== index);\n      this.setState({\n        listOfSubjects: listOfSubjectsClasses\n      });\n    };\n\n    this.handleChangeSubject = selectedOption => {\n      this.setState({\n        subjectId: selectedOption.id,\n        subjectItem: selectedOption\n      });\n    };\n\n    this.handleChangeParent = selectedOption => {\n      this.setState({\n        parentId: selectedOption.id\n      });\n    };\n\n    this.handleChangeStudent = selectedOption => {\n      this.setState({\n        studentId: selectedOption.id\n      });\n    };\n\n    this.handleChangeCountries = selectedOption => {\n      this.setState({\n        userCountry: selectedOption.label\n      });\n    };\n\n    this.handleChangeEstablishments = selectedOption => {\n      this.setState({\n        establishmentId: selectedOption.id\n      });\n    };\n\n    this.handleChangeFunctions = selectedOption => {\n      this.setState({\n        functionName: selectedOption.label\n      });\n    };\n\n    this.uploadPhoto = e => {\n      if (e.target.files[0] !== undefined) {\n        let file = e.target.files[0];\n        this.setState({\n          userPhoto: file,\n          photoText: file.name\n        });\n      } else {\n        this.setState({\n          messageAlerte: \"Vous n'avez pas choisir une photo\",\n          alerteFiltre: true\n        });\n        setTimeout(() => {\n          this.setState({\n            messageAlerte: '',\n            alerteFiltre: false\n          });\n        }, 4000);\n      }\n    };\n\n    this.openArchive = () => {\n      this.setState(previousState => ({\n        openArchive: !previousState.openArchive\n      }));\n    };\n\n    this.handleChangeFilterLevel = name => event => {\n      if (name === 'filterLevelId') {\n        let filterLevel = [];\n\n        if (this.props.userProfile.role_id === roleIdSuperAdmin) {\n          filterLevel = this.props.usersReducer.users.filter(element => element.roleId == event.target.value);\n        } //  else {\n        //   filterClasses = this.props.ClassSettings.filter(\n        //     (element) => element.fk_id_level_v4 == event.target.value\n        //   );\n        // }\n\n\n        this.setState({\n          [name]: event.target.value,\n          filterLevel\n        });\n      }\n    };\n\n    this.state = {\n      listRoles: [],\n      listSchoolYears: [],\n      roleId: '',\n      roleName: '',\n      schoolyearId: null,\n      classRoomId: null,\n      subjectId: null,\n      parentId: null,\n      studentId: null,\n      userName: '',\n      userLastName: '',\n      userNationnality: '',\n      userCIN: '',\n      userIdentifier: '',\n      userMail: '',\n      userPhoneNumber: '',\n      userAdress: '',\n      userCountry: '',\n      userZipCode: '',\n      userPhoto: '',\n      userGender: '',\n      birthdayDate: moment().year() - 18 + '-01-01',\n      birthdayPlace: '',\n      countriesList: [],\n      usefulInformation: '',\n      userPapiersFiles: [],\n      nameUserPapiersFiles: [],\n      isOpen: true,\n      openArchive: false,\n      isOpenArchive: false,\n      messageAlerte: '',\n      photoText: '',\n      nameFiles: [],\n      establishmentsList: [],\n      establishmentId: '',\n      classRoomList: [],\n      subjectsList: [],\n      classForStudent: [],\n      studentClass: null,\n      functionName: '',\n      missingValue: false,\n      alertMessage: '',\n      subjectItem: {},\n      listOfSubjects: [{\n        id: 0,\n        classId: 0,\n        subjectId: 0,\n        subjects: []\n      }],\n      parentsList: [],\n      studentsList: [],\n      levelId: null,\n      sectionId: null,\n      userList: {\n        users: [],\n        students: [],\n        parents: [],\n        professors: [],\n        admins: [],\n        directors: [],\n        supervisors: []\n      },\n      permissionList: [],\n      birthdayDateCheck: false,\n      listGroupClass: [],\n      groupId: null,\n      levelListParticipant: [],\n      classForStudentFiltred: [],\n      subjectModulesList: []\n    };\n    this.openAddModal = this.openAddModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleArchive = this.handleArchive.bind(this);\n    this.handleChangeBirthdayDate = this.handleChangeBirthdayDate.bind(this);\n    this.openArchiveModal = this.openArchiveModal.bind(this);\n    this.handleChangeAlerte = this.handleChangeAlerte.bind(this);\n    this.handleChangeRole = this.handleChangeRole.bind(this);\n    this.handleChangeSchoolYear = this.handleChangeSchoolYear.bind(this);\n    this.handleChangeClassRoom = this.handleChangeClassRoom.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeParent = this.handleChangeParent.bind(this);\n    this.handleChangeStudent = this.handleChangeStudent.bind(this);\n    this.handleChangeCountries = this.handleChangeCountries.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.uploadPhoto = this.uploadPhoto.bind(this);\n    this.openArchive = this.openArchive.bind(this);\n    this.handleChangeEstablishments = this.handleChangeEstablishments.bind(this);\n    this.handleChangeStudentClass = this.handleChangeStudentClass.bind(this);\n    this.handleChangeFunctions = this.handleChangeFunctions.bind(this);\n    this.handleChangePhone = this.handleChangePhone.bind(this);\n    this.handleChangeFilterLevel = this.handleChangeFilterLevel.bind(this);\n    this.addNewSubject = this.addNewSubject.bind(this);\n    this.deleteChoice = this.deleteChoice.bind(this);\n    this.handleChangeGroupClassRoom = this.handleChangeGroupClassRoom.bind(this);\n    this.handleChangeLevelParticipant = this.handleChangeLevelParticipant.bind(this);\n    this.handleChangeSubjectModules = this.handleChangeSubjectModules.bind(this);\n  }\n\n  openArchiveModal() {\n    this.setState(previousState => ({\n      isOpenArchive: !previousState.isOpenArchive\n    }));\n  }\n\n  handleCancel() {\n    this.setState({\n      isOpen: false\n    });\n  } // openAddModal() {\n  //   this.setState({ isOpen: true });\n  // }\n\n\n  openAddModal() {\n    this.setState(previousState => ({\n      isOpen: !previousState.isOpen\n    }));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let AssignementIdProf = [];\n    this.state.listOfSubjects.map(element => {\n      if (element.subjectId != 0) {\n        AssignementIdProf.push(element.subjectId);\n      }\n    });\n\n    if (this.state.roleId === '' || this.state.schoolyearId === '' || this.state.birthdayDateCheck === false && this.state.roleId === roleIdStudent) {\n      this.setState({\n        missingValue: true,\n        alertMessage: 'Il faut remplir les champs obligatoires '\n      });\n      setTimeout(() => {\n        this.setState({\n          alertMessage: '',\n          missingValue: false\n        });\n      }, 4000);\n    } else {\n      if (this.state.roleId === roleIdProfessor && AssignementIdProf.length === 0) {\n        this.setState({\n          missingValue: true,\n          alertMessage: 'Il faut affecter une classe et une matiÃ©re pour le professeur '\n        });\n        setTimeout(() => {\n          this.setState({\n            alertMessage: '',\n            missingValue: false\n          });\n        }, 4000);\n      } else {\n        this.openAddModal();\n        let data = {\n          name: this.state.userName.toUpperCase(),\n          surname: toUpperCaseFirst(this.state.userLastName),\n          gender: this.state.userGender,\n          dateOfBirth: this.state.birthdayDate,\n          placeOfBirth: this.state.birthdayPlace,\n          address: this.state.userAdress,\n          nationality: this.state.userNationnality,\n          phone: this.state.userPhoneNumber,\n          status: true,\n          cin: this.state.userCIN,\n          userIdentifier: this.state.userIdentifier,\n          zipCode: this.state.userZipCode,\n          userCountry: this.state.userCountry,\n          userPhoto: this.state.userPhoto,\n          userPapiersFiles: this.state.userPapiersFiles,\n          name_ar: 'string',\n          surname_ar: 'string',\n          email: this.state.userMail,\n          roleId: this.state.roleId,\n          establishmentId: this.state.establishmentId,\n          assignClassSubject: AssignementIdProf,\n          studentClass: this.state.studentClass,\n          schoolyearId: this.state.schoolyearId,\n          functionName: this.state.functionName,\n          password: '123456',\n          login: 'login1',\n          levelId: this.state.levelId,\n          sectionId: this.state.sectionId,\n          usefulInformation: this.state.usefulInformation,\n          parentId: this.state.parentId,\n          studentId: this.state.studentId,\n          groupId: this.state.groupId\n        };\n        console.log(data, 'data avant action');\n        this.props.addUsers(data);\n        this.setState({\n          roleId: '',\n          roleName: '',\n          schoolyearId: '',\n          classRoomId: '',\n          subjectId: '',\n          parentId: null,\n          studentId: null,\n          userName: '',\n          userLastName: '',\n          userNationnality: '',\n          userCIN: '',\n          userIdentifier: '',\n          userMail: '',\n          userPhoneNumber: '',\n          userAdress: '',\n          userCountry: '',\n          userZipCode: '',\n          userPhoto: '',\n          userGender: '',\n          birthdayDate: moment().year() - 18 + '-01-01',\n          birthdayPlace: '',\n          usefulInformation: '',\n          userPapiersFiles: [],\n          nameUserPapiersFiles: [],\n          isOpen: false,\n          photoText: '',\n          nameFiles: [],\n          establishmentId: this.props.userProfile.establishment_id,\n          subjectsList: [],\n          studentClass: null,\n          functionName: '',\n          missingValue: false,\n          subjectItem: {},\n          listOfSubjects: [{\n            id: 0,\n            classId: 0,\n            subjectId: 0,\n            subjects: []\n          }],\n          levelId: null,\n          sectionId: null,\n          birthdayDateCheck: false,\n          groupId: null\n        });\n      }\n    }\n  }\n\n  handleArchive(event) {\n    event.preventDefault();\n    this.openAddModal();\n    this.setState({});\n  }\n\n  attachFile(e) {\n    console.log('eeeeeee');\n    var oldFiles = this.state.userPapiersFiles;\n    var nameFiles = this.state.nameUserPapiersFiles;\n\n    if (e.target.files !== undefined) {\n      var files = Object.values(e.target.files);\n\n      if (this.state.nameUserPapiersFiles.length + files.length < 6) {\n        files.map(element => {\n          nameFiles.push(element.name);\n          oldFiles.push(element);\n        });\n        this.setState({\n          userPapiersfiles: oldFiles,\n          nameFiles\n        });\n      }\n    } else {\n      this.setState({\n        messageAlerte: 'vous avez dÃ©passer 5 fichiers',\n        alerteStatus: true\n      });\n      setTimeout(() => {\n        this.setState({\n          messageAlerte: '',\n          alerteStatus: false\n        });\n      }, 4000);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.ClassSettings !== this.props.ClassSettings) {\n      let classForStudent = [];\n      classForStudent = this.props.ClassSettings.map(element => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        object.sectionId = element.fk_id_section_v4;\n        object.levelId = element.fk_id_level_v4;\n        object.groups = element.group;\n        return object;\n      });\n      this.setState({\n        classForStudent\n      });\n    }\n\n    if (prevProps.subjectModules !== this.props.subjectModules) {\n      let subjectModulesList = [];\n      subjectModulesList = this.props.subjectModules.map(element => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        return object;\n      });\n      this.setState({\n        subjectModulesList\n      });\n    }\n\n    if (prevProps.levels !== this.props.levels) {\n      let levelListParticipant = [];\n      levelListParticipant = this.props.levels.map(element => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        return object;\n      });\n      this.setState({\n        levelListParticipant\n      });\n    }\n\n    if (prevProps.courseAssignment !== this.props.courseAssignment) {\n      let classRoomList = [];\n      classRoomList = this.props.courseAssignment.map(element => {\n        var object = {};\n        object.label = element.class.name;\n        object.id = element.class.id;\n        object.value = element.class.id;\n        return object;\n      });\n\n      let classRoomListFiltredByID = _.uniqBy(classRoomList, 'id');\n\n      this.setState({\n        classRoomList: classRoomListFiltredByID\n      });\n    }\n\n    if (prevProps.usersReducer.roles !== this.props.usersReducer.roles || prevProps.userPermission !== this.props.userPermission) {\n      let listRoles = [];\n      listRolesUsers.roles.map(element => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n\n        if (this.props.userProfile.role_id == roleIdSuperAdmin) {\n          listRoles.push(object);\n        } else {\n          let permitted = false;\n          permitted = addUserPermitted(element.labelBackEnd, this.props.userPermission);\n\n          if (permitted) {\n            listRoles.push(object);\n          }\n        }\n      });\n      this.setState({\n        listRoles: listRoles\n      });\n    }\n\n    if (prevProps.userProfile.establishment_id !== this.props.userProfile.establishment_id) {\n      this.setState({\n        establishmentId: this.props.userProfile.establishment_id\n      });\n    }\n\n    if (prevProps.establishments !== this.props.establishments) {\n      let establishmentsList = [];\n      establishmentsList = this.props.establishments.map(element => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        return object;\n      });\n      this.setState({\n        establishmentsList\n      });\n    }\n\n    if (prevProps.schoolYearEtabs !== this.props.schoolYearEtabs) {\n      let listSchoolYears = [];\n      listSchoolYears = this.props.schoolYearEtabs.map(element => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        object.startDate = element.start_date;\n        object.endtDate = element.end_date;\n        return object;\n      });\n      let countriesListUser = [];\n      countriesListUser = countriesList.countriesList.map(element => {\n        var object = {};\n        object.label = element.name_fr;\n        object.id = element.code;\n        object.value = element.code;\n        return object;\n      });\n      this.setState({\n        listSchoolYears: listSchoolYears,\n        countriesList: countriesListUser\n      });\n    }\n\n    if (prevProps.usersReducer !== this.props.usersReducer) {\n      let parentsList = [];\n      parentsList = this.props.usersReducer.parents.map(element => {\n        var object = {};\n        object.label = element.name + ' ' + element.surname;\n        object.id = element.parentId[0];\n        object.value = element.parentId[0];\n        return object;\n      });\n      let studentsList = [];\n      studentsList = this.props.usersReducer.students.map(element => {\n        var object = {};\n        object.label = element.name + ' ' + element.surname;\n        object.id = element.studentId[0];\n        object.value = element.studentId[0];\n        return object;\n      });\n      this.setState({\n        parentsList,\n        studentsList\n      });\n    }\n\n    if (prevProps.usersReducer.users !== this.props.usersReducer.users) {\n      this.setState({\n        userList: this.props.usersReducer\n      });\n    }\n\n    if (prevProps.userPermission !== this.props.userPermission) {\n      this.setState({\n        permissionList: this.props.userPermission\n      });\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    this.props.getAllRole();\n    this.props.getSchoolYearEtabs();\n    this.props.getAllUsersForAdmin(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id); // this.props.getAllUsersForSuperAdministrator();\n\n    this.props.getAssignementCourse(this.props.userProfile.establishment_id, this.props.userProfile.school_year_id);\n  }\n\n  componentDidMount() {\n    if (this.props.subjectModules != undefined) {\n      let subjectModulesList = [];\n      subjectModulesList = this.props.subjectModules.map(element => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        return object;\n      });\n      this.setState({\n        subjectModulesList\n      });\n    }\n\n    if (this.props.levels != undefined) {\n      let levelListParticipant = [];\n      levelListParticipant = this.props.levels.map(element => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        return object;\n      });\n      this.setState({\n        levelListParticipant\n      });\n    }\n\n    if (this.props.userPermission != undefined) {\n      this.setState({\n        permissionList: this.props.userPermission\n      });\n    }\n\n    if (this.props.establishments != undefined) {\n      let establishmentsList = [];\n      establishmentsList = this.props.establishments.map(element => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        return object;\n      });\n      this.setState({\n        establishmentsList,\n        establishmentId: this.props.userProfile.establishment_id\n      });\n    }\n\n    if (this.props.ClassSettings != undefined) {\n      let classForStudent = [];\n      classForStudent = this.props.ClassSettings.map(element => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        object.sectionId = element.fk_id_section_v4;\n        object.levelId = element.fk_id_level_v4;\n        object.groups = element.group;\n        return object;\n      });\n      this.setState({\n        classForStudent\n      });\n    }\n\n    if (this.props.courseAssignment != undefined) {\n      let classRoomList = [];\n      classRoomList = this.props.courseAssignment.map(element => {\n        var object = {};\n        object.label = element.class.name;\n        object.id = element.class.id;\n        object.value = element.class.id;\n        return object;\n      });\n\n      let classRoomListFiltredByID = _.uniqBy(classRoomList, 'id');\n\n      this.setState({\n        classRoomList: classRoomListFiltredByID\n      });\n    }\n\n    if (typeof this.props.usersReducer.parents != 'undefined') {\n      let parentsList = [];\n      parentsList = this.props.usersReducer.parents.map(element => {\n        var object = {};\n        object.label = element.name + ' ' + element.surname;\n        object.id = element.id;\n        object.value = element.id;\n        return object;\n      });\n      this.setState({\n        parentsList\n      });\n    }\n\n    if (this.props.usersReducer.students != undefined) {\n      let studentsList = [];\n      studentsList = this.props.usersReducer.students.map(element => {\n        var object = {};\n        object.label = element.name + ' ' + element.surname;\n        object.id = element.studentId[0];\n        object.value = element.studentId[0];\n        return object;\n      });\n      this.setState({\n        studentsList\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state, 'staaaate');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      style: {\n        marginLeft: '5%',\n        marginRight: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"  d-flex flex-column mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 9\n      }\n    }, this.state.missingValue ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 15\n      }\n    }, \" \", this.state.alertMessage, \" \")) : '', this.props.errorStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-danger text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 15\n      }\n    }, this.props.message, \" \")) : '', this.props.successStatus ? /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      className: \"alert-addon-card bg-success bg-success text-white shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-addon alert-addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 15\n      }\n    }, \" \", this.props.message, \" \")) : '', this.state.listRoles.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \" bd-highlight\",\n      style: {\n        width: '90%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12 col-sm-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AddUsers, {\n      openAddModal: this.openAddModal,\n      handleCancel: this.handleCancel,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      handleArchive: this.handleArchive,\n      handleChangeRole: this.handleChangeRole,\n      handleChangeSchoolYear: this.handleChangeSchoolYear,\n      handleChangeClassRoom: this.handleChangeClassRoom,\n      handleChangeBirthdayDate: this.handleChangeBirthdayDate,\n      handleChangeSubject: this.handleChangeSubject,\n      handleChangeParent: this.handleChangeParent,\n      handleChangeStudent: this.handleChangeStudent,\n      handleChangeCountries: this.handleChangeCountries,\n      handleChangeStudentClass: this.handleChangeStudentClass,\n      attachFile: this.attachFile,\n      uploadPhoto: this.uploadPhoto,\n      openArchive: this.openArchive,\n      handleChangeEstablishments: this.handleChangeEstablishments,\n      handleChangeFunctions: this.handleChangeFunctions,\n      handleChangePhone: this.handleChangePhone,\n      addNewSubject: this.addNewSubject,\n      deleteChoice: this.deleteChoice,\n      parentsList: this.state.parentsList,\n      studentsList: this.state.studentsList,\n      handleChangeGroupClassRoom: this.handleChangeGroupClassRoom,\n      values: this.state,\n      handleChangeLevelParticipant: this.handleChangeLevelParticipant,\n      handleChangeSubjectModules: this.handleChangeSubjectModules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 17\n      }\n    }))) : '', !this.state.openArchive ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \" bd-highlight\",\n      style: {\n        width: '90%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBox, {\n      styleName: \"col-lg-12 col-sm-12 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(UsersList, {\n      usersList: this.state.userList,\n      permissionList: this.state.permissionList,\n      listClassFilter: this.state.classForStudent,\n      usefulData: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 17\n      }\n    }))) : ''), this.props.userLoading ? /*#__PURE__*/React.createElement(LoaderModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 35\n      }\n    }) : '');\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    usersReducer: state.usersReducer,\n    userProfile: state.auth.userProfile,\n    establishments: state.establishment.remoteEstablishments,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    schoolYearEtabs: state.schoolYearEtab.remoteSchoolYearEtab,\n    courseAssignment: state.AssignementReducer.courseAssignment,\n    ClassSettings: state.ClassSettingsReducer.classSettings,\n    userPermission: state.PermissionReducer.userPermission,\n    userLoading: state.usersReducer.userLoading,\n    groupsList: state.GroupsReducer.groupsList,\n    levels: state.levelsReducer.levels,\n    subjectModules: state.subjectModuleReducer.subjectModules\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllRole,\n  getSchoolYearEtabs,\n  addUsers,\n  getAllUsersForAdmin,\n  getAssignementCourse // getAllUsersForSuperAdministrator,\n\n})(Users);","map":{"version":3,"sources":["/home/oem/Documents/projects/educap/classebook-front-web/src/app/routes/Administration/routes/UsersManagement/Users.js"],"names":["React","CardBox","connect","ArchiveUsers","UsersList","UncontrolledAlert","AddUsers","IntlMessages","getAllRole","getSchoolYearEtabs","countriesList","addUsers","getAllUsersForAdmin","Can","RoleContext","_","moment","roleIdSuperAdmin","roleIdAdmin","roleIdProfessor","roleIdStudent","roleIdDirector","roleIdParent","roleIdSupervisor","toUpperCaseFirst","toLowerCaseFirst","addUserPermitted","LoaderModal","getAssignementCourse","listRolesUsers","id","label","value","labelBackEnd","Users","Component","constructor","props","handleChangeSubjectModules","selectedOption","classForStudentFiltred","state","classForStudent","filter","element","levelId","setState","handleChangeLevelParticipant","handleChangeStudentClass","listGroupClass","groups","map","status","object","name","push","studentClass","sectionId","handleChangeAlerte","sessionExist","messageAlerte","setTimeout","handleChangeEducationType","event","obj","JSON","parse","target","educationItem","educationTypeId","handleChangePhone","userPhoneNumber","handleChange","handleChangeBirthdayDate","date","birthdayDate","birthdayDateCheck","handleChangeRole","year","roleId","roleName","handleChangeGroupClassRoom","groupId","handleChangeSchoolYear","schoolyearId","handleChangeClassRoom","index","newListSubjects","listOfSubjects","objSubject","i","classId","subjectsList","courseAssignment","fk_id_class_v4","subject","fk_id_subjects_module_v4","subjects","addNewSubject","subjectId","isAdded","deleteChoice","listOfSubjectsClasses","handleChangeSubject","subjectItem","handleChangeParent","parentId","handleChangeStudent","studentId","handleChangeCountries","userCountry","handleChangeEstablishments","establishmentId","handleChangeFunctions","functionName","uploadPhoto","e","files","undefined","file","userPhoto","photoText","alerteFiltre","openArchive","previousState","handleChangeFilterLevel","filterLevel","userProfile","role_id","usersReducer","users","listRoles","listSchoolYears","classRoomId","userName","userLastName","userNationnality","userCIN","userIdentifier","userMail","userAdress","userZipCode","userGender","birthdayPlace","usefulInformation","userPapiersFiles","nameUserPapiersFiles","isOpen","isOpenArchive","nameFiles","establishmentsList","classRoomList","missingValue","alertMessage","parentsList","studentsList","userList","students","parents","professors","admins","directors","supervisors","permissionList","levelListParticipant","subjectModulesList","openAddModal","bind","handleCancel","handleSubmit","handleArchive","openArchiveModal","attachFile","preventDefault","AssignementIdProf","length","data","toUpperCase","surname","gender","dateOfBirth","placeOfBirth","address","nationality","phone","cin","zipCode","name_ar","surname_ar","email","assignClassSubject","password","login","console","log","establishment_id","oldFiles","Object","values","userPapiersfiles","alerteStatus","componentDidUpdate","prevProps","ClassSettings","fk_id_section_v4","fk_id_level_v4","group","subjectModules","levels","class","classRoomListFiltredByID","uniqBy","roles","userPermission","permitted","establishments","schoolYearEtabs","startDate","start_date","endtDate","end_date","countriesListUser","name_fr","code","UNSAFE_componentWillMount","school_year_id","componentDidMount","render","marginLeft","marginRight","errorStatus","message","successStatus","width","userLoading","mapStateToProps","auth","establishment","remoteEstablishments","alert","success","error","schoolYearEtab","remoteSchoolYearEtab","AssignementReducer","ClassSettingsReducer","classSettings","PermissionReducer","groupsList","GroupsReducer","levelsReducer","subjectModuleReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yCAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,YAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SAASC,kBAAT,QAAmC,6CAAnC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SACEC,QADF,EAEEC,mBAFF,CAGE;AAHF,OAIO,oCAJP;AAKA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SACEC,gBADF,EAEEC,WAFF,EAGEC,eAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,YANF,EAOEC,gBAPF,QAQO,8BARP;AASA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,qCAAnD;AACA,SAASC,gBAAT,QAAiC,8CAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,oBAAT,QAAqC,0CAArC;AACA,MAAMC,cAAc,GAAG,CACrB;AACEC,EAAAA,EAAE,EAAEZ,WADN;AAEEa,EAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAG,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFT;AAGEC,EAAAA,KAAK,EAAEd,WAHT;AAIEe,EAAAA,YAAY,EAAE;AAJhB,CADqB,EAOrB;AACEH,EAAAA,EAAE,EAAET,cADN;AAEEU,EAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAG,uCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFT;AAGEC,EAAAA,KAAK,EAAEX,cAHT;AAIEY,EAAAA,YAAY,EAAE;AAJhB,CAPqB,EAarB;AACEH,EAAAA,EAAE,EAAEP,gBADN;AAEEQ,EAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAG,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFT;AAGEC,EAAAA,KAAK,EAAET,gBAHT;AAIEU,EAAAA,YAAY,EAAE;AAJhB,CAbqB,EAmBrB;AACEH,EAAAA,EAAE,EAAEX,eADN;AAEEY,EAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAG,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFT;AAGEC,EAAAA,KAAK,EAAEb,eAHT;AAIEc,EAAAA,YAAY,EAAE;AAJhB,CAnBqB,EAyBrB;AACEH,EAAAA,EAAE,EAAEV,aADN;AAEEW,EAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAG,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFT;AAGEC,EAAAA,KAAK,EAAEZ,aAHT;AAIEa,EAAAA,YAAY,EAAE;AAJhB,CAzBqB,EA+BrB;AACEH,EAAAA,EAAE,EAAER,YADN;AAEES,EAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAG,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFT;AAGEC,EAAAA,KAAK,EAAEV,YAHT;AAIEW,EAAAA,YAAY,EAAE;AAJhB,CA/BqB,CAAvB;;AAuCA,MAAMC,KAAN,SAAoBlC,KAAK,CAACmC,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyGnBC,0BAzGmB,GAyGWC,cAAD,IAAoB;AAC/C,UAAIC,sBAAsB,GAAG,EAA7B;AAEAA,MAAAA,sBAAsB,GAAG,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,MAA3B,CACtBC,OAAD,IAAaA,OAAO,CAACC,OAAR,IAAmBN,cAAc,CAACT,EADxB,CAAzB;AAGA,WAAKgB,QAAL,CAAc;AACZN,QAAAA;AADY,OAAd;AAGD,KAlHkB;;AAAA,SAmHnBO,4BAnHmB,GAmHaR,cAAD,IAAoB;AACjD,UAAIC,sBAAsB,GAAG,EAA7B;AAEAA,MAAAA,sBAAsB,GAAG,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,MAA3B,CACtBC,OAAD,IAAaA,OAAO,CAACC,OAAR,IAAmBN,cAAc,CAACT,EADxB,CAAzB;AAGA,WAAKgB,QAAL,CAAc;AACZN,QAAAA;AADY,OAAd;AAGD,KA5HkB;;AAAA,SA6HnBQ,wBA7HmB,GA6HST,cAAD,IAAoB;AAC7C,UAAIU,cAAc,GAAG,EAArB;AACAV,MAAAA,cAAc,CAACW,MAAf,CAAsBC,GAAtB,CAA2BP,OAAD,IAAa;AACrC,YAAIA,OAAO,CAACQ,MAAZ,EAAoB;AAClB,cAAIC,MAAM,GAAG,EAAb;AACAA,UAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAvB;AACAD,UAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACd,EAApB;AACAuB,UAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACd,EAAvB;AACAmB,UAAAA,cAAc,CAACM,IAAf,CAAoBF,MAApB;AACD;AACF,OARD;AASA,WAAKP,QAAL,CAAc;AACZU,QAAAA,YAAY,EAAEjB,cAAc,CAACT,EADjB;AAEZe,QAAAA,OAAO,EAAEN,cAAc,CAACM,OAFZ;AAGZY,QAAAA,SAAS,EAAElB,cAAc,CAACkB,SAHd;AAIZR,QAAAA;AAJY,OAAd;AAMD,KA9IkB;;AAAA,SA+InBS,kBA/ImB,GA+IGJ,IAAD,IAAU;AAC7B,WAAKR,QAAL,CAAc;AACZa,QAAAA,YAAY,EAAE,IADF;AAEZC,QAAAA,aAAa,EAAE;AAFH,OAAd;AAIAC,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKf,QAAL,CAAc;AAAEa,UAAAA,YAAY,EAAE,KAAhB;AAAuBC,UAAAA,aAAa,EAAE;AAAtC,SAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAvJkB;;AAAA,SAwJnBE,yBAxJmB,GAwJUR,IAAD,IAAWS,KAAD,IAAW;AAC/C,UAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,MAAN,CAAanC,KAAxB,CAAV;AAEA,WAAKc,QAAL,CAAc;AAAEsB,QAAAA,aAAa,EAAEJ,GAAjB;AAAsBK,QAAAA,eAAe,EAAEL,GAAG,CAAClC;AAA3C,OAAd;AACD,KA5JkB;;AAAA,SAkSnBwC,iBAlSmB,GAkSEtC,KAAD,IAAW;AAC7B,WAAKc,QAAL,CAAc;AAAEyB,QAAAA,eAAe,EAAEvC;AAAnB,OAAd;AACD,KApSkB;;AAAA,SA0SnBwC,YA1SmB,GA0SHlB,IAAD,IAAWS,KAAD,IAAW;AAClC,WAAKjB,QAAL,CAAc;AAAE,SAACQ,IAAD,GAAQS,KAAK,CAACI,MAAN,CAAanC;AAAvB,OAAd;AACD,KA5SkB;;AAAA,SA6SnByC,wBA7SmB,GA6SSC,IAAD,IAAU;AACnC,WAAK5B,QAAL,CAAc;AAAE6B,QAAAA,YAAY,EAAED,IAAhB;AAAsBE,QAAAA,iBAAiB,EAAE;AAAzC,OAAd;AACD,KA/SkB;;AAAA,SAgTnBC,gBAhTmB,GAgTCtC,cAAD,IAAoB;AACrC,UAAIA,cAAc,CAACT,EAAf,IAAqBV,aAAzB,EAAwC;AACtC,aAAK0B,QAAL,CAAc;AACZ6B,UAAAA,YAAY,EAAE3D,MAAM,GAAG8D,IAAT,KAAkB,CAAlB,GAAsB;AADxB,SAAd;AAGD;;AACD,WAAKhC,QAAL,CAAc;AACZiC,QAAAA,MAAM,EAAExC,cAAc,CAACT,EADX;AAEZkD,QAAAA,QAAQ,EAAEzC,cAAc,CAACR;AAFb,OAAd;AAID,KA1TkB;;AAAA,SA2TnBkD,0BA3TmB,GA2TW1C,cAAD,IAAoB;AAC/C,WAAKO,QAAL,CAAc;AAAEoC,QAAAA,OAAO,EAAE3C,cAAc,CAACT;AAA1B,OAAd;AACD,KA7TkB;;AAAA,SA8TnBqD,sBA9TmB,GA8TO5C,cAAD,IAAoB;AAC3C,WAAKO,QAAL,CAAc;AAAEsC,QAAAA,YAAY,EAAE7C,cAAc,CAACT;AAA/B,OAAd;AACD,KAhUkB;;AAAA,SAiUnBuD,qBAjUmB,GAiUK,CAAC9C,cAAD,EAAiBe,IAAjB,EAAuBgC,KAAvB,KAAiC;AACvD,UAAIhC,IAAI,KAAK,SAAb,EAAwB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAIiC,eAAe,GAAG,KAAK9C,KAAL,CAAW+C,cAAX,CAA0BrC,GAA1B,CAA8B,CAACsC,UAAD,EAAaC,CAAb,KAClDA,CAAC,KAAKJ,KAAN,GAAc,EAAE,GAAGG,UAAL;AAAiB,WAACnC,IAAD,GAAQf,cAAc,CAACP;AAAxC,SAAd,GAAgEyD,UAD5C,CAAtB;AAGA,aAAK3C,QAAL,CAAc;AAAE0C,UAAAA,cAAc,EAAED;AAAlB,SAAd;AACD,OA5BD,MA4BO,IAAIjC,IAAI,KAAK,WAAb,EAA0B;AAC/B,YAAIiC,eAAe,GAAG,KAAK9C,KAAL,CAAW+C,cAAX,CAA0BrC,GAA1B,CAA8B,CAACsC,UAAD,EAAaC,CAAb,KAClDA,CAAC,KAAKJ,KAAN,GAAc,EAAE,GAAGG,UAAL;AAAiB,WAACnC,IAAD,GAAQf,cAAc,CAACP;AAAxC,SAAd,GAAgEyD,UAD5C,CAAtB;AAGA,aAAK3C,QAAL,CAAc;AAAE0C,UAAAA,cAAc,EAAED;AAAlB,SAAd;AACD,OALM,MAKA,IAAIjC,IAAI,KAAK,iBAAb,EAAgC;AACrC,YAAIqC,OAAO,GAAG,KAAKlD,KAAL,CAAW+C,cAAX,CAA0BF,KAA1B,EAAiCK,OAA/C;AACA,YAAIC,YAAY,GAAG,EAAnB;AACA,aAAKvD,KAAL,CAAWwD,gBAAX,CAA4B1C,GAA5B,CAAiCP,OAAD,IAAa;AAC3C,cACEA,OAAO,CAACkD,cAAR,KAA2BH,OAA3B,IACA/C,OAAO,CAACmD,OAAR,CAAgBC,wBAAhB,IAA4CzD,cAAc,CAACP,KAF7D,EAGE;AACA,gBAAIqB,MAAM,GAAG,EAAb;AACAA,YAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACmD,OAAR,CAAgBzC,IAA/B;AACAD,YAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACd,EAApB;AACAuB,YAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACd,EAAvB;AACAuB,YAAAA,MAAM,CAAC2C,wBAAP,GAAkCpD,OAAO,CAACmD,OAAR,CAAgBC,wBAAlD;AAEAJ,YAAAA,YAAY,CAACrC,IAAb,CAAkBF,MAAlB;AACD;AACF,SAbD;AAcA,YAAIkC,eAAe,GAAG,KAAK9C,KAAL,CAAW+C,cAAX,CAA0BrC,GAA1B,CAA8B,CAACsC,UAAD,EAAaC,CAAb,KAClDA,CAAC,KAAKJ,KAAN,GACI,EACE,GAAGG,UADL;AAEEQ,UAAAA,QAAQ,EAAEL;AAFZ,SADJ,GAKIH,UANgB,CAAtB;AAQA,aAAK3C,QAAL,CAAc;AAAE0C,UAAAA,cAAc,EAAED;AAAlB,SAAd;AACD;AACF,KA9XkB;;AAAA,SA+XnBW,aA/XmB,GA+XFZ,KAAD,IAAW;AACzB,UAAIE,cAAc,GAAG,EAArB;AACA,WAAK/C,KAAL,CAAW+C,cAAX,CAA0BrC,GAA1B,CAA+BP,OAAD,IAAa;AACzC4C,QAAAA,cAAc,CAACjC,IAAf,CAAoB;AAClBzB,UAAAA,EAAE,EAAEc,OAAO,CAACd,EADM;AAElB6D,UAAAA,OAAO,EAAE/C,OAAO,CAAC+C,OAFC;AAGlBQ,UAAAA,SAAS,EAAEvD,OAAO,CAACuD,SAHD;AAIlBF,UAAAA,QAAQ,EAAErD,OAAO,CAACqD,QAJA;AAKlBG,UAAAA,OAAO,EAAE;AALS,SAApB;AAOD,OARD;AASAZ,MAAAA,cAAc,CAACjC,IAAf,CAAoB;AAClBzB,QAAAA,EAAE,EAAEwD,KADc;AAElBK,QAAAA,OAAO,EAAE,CAFS;AAGlBQ,QAAAA,SAAS,EAAE,CAHO;AAIlBF,QAAAA,QAAQ,EAAE,EAJQ;AAKlBG,QAAAA,OAAO,EAAE;AALS,OAApB;AAQA,WAAKtD,QAAL,CAAc;AAAE0C,QAAAA;AAAF,OAAd;AACD,KAnZkB;;AAAA,SAoZnBa,YApZmB,GAoZHf,KAAD,IAAW;AACxB,UAAIgB,qBAAqB,GAAG,KAAK7D,KAAL,CAAW+C,cAAX,CAA0B7C,MAA1B,CAAkCC,OAAD,IAAaA,OAAO,CAACd,EAAR,KAAewD,KAA7D,CAA5B;AACA,WAAKxC,QAAL,CAAc;AAAE0C,QAAAA,cAAc,EAAEc;AAAlB,OAAd;AACD,KAvZkB;;AAAA,SAyZnBC,mBAzZmB,GAyZIhE,cAAD,IAAoB;AACxC,WAAKO,QAAL,CAAc;AACZqD,QAAAA,SAAS,EAAE5D,cAAc,CAACT,EADd;AAEZ0E,QAAAA,WAAW,EAAEjE;AAFD,OAAd;AAID,KA9ZkB;;AAAA,SA+ZnBkE,kBA/ZmB,GA+ZGlE,cAAD,IAAoB;AACvC,WAAKO,QAAL,CAAc;AAAE4D,QAAAA,QAAQ,EAAEnE,cAAc,CAACT;AAA3B,OAAd;AACD,KAjakB;;AAAA,SAkanB6E,mBAlamB,GAkaIpE,cAAD,IAAoB;AACxC,WAAKO,QAAL,CAAc;AAAE8D,QAAAA,SAAS,EAAErE,cAAc,CAACT;AAA5B,OAAd;AACD,KApakB;;AAAA,SAqanB+E,qBAramB,GAqaMtE,cAAD,IAAoB;AAC1C,WAAKO,QAAL,CAAc;AAAEgE,QAAAA,WAAW,EAAEvE,cAAc,CAACR;AAA9B,OAAd;AACD,KAvakB;;AAAA,SAwanBgF,0BAxamB,GAwaWxE,cAAD,IAAoB;AAC/C,WAAKO,QAAL,CAAc;AAAEkE,QAAAA,eAAe,EAAEzE,cAAc,CAACT;AAAlC,OAAd;AACD,KA1akB;;AAAA,SA2anBmF,qBA3amB,GA2aM1E,cAAD,IAAoB;AAC1C,WAAKO,QAAL,CAAc;AAAEoE,QAAAA,YAAY,EAAE3E,cAAc,CAACR;AAA/B,OAAd;AACD,KA7akB;;AAAA,SAscnBoF,WAtcmB,GAscJC,CAAD,IAAO;AACnB,UAAIA,CAAC,CAACjD,MAAF,CAASkD,KAAT,CAAe,CAAf,MAAsBC,SAA1B,EAAqC;AACnC,YAAIC,IAAI,GAAGH,CAAC,CAACjD,MAAF,CAASkD,KAAT,CAAe,CAAf,CAAX;AACA,aAAKvE,QAAL,CAAc;AAAE0E,UAAAA,SAAS,EAAED,IAAb;AAAmBE,UAAAA,SAAS,EAAEF,IAAI,CAACjE;AAAnC,SAAd;AACD,OAHD,MAGO;AACL,aAAKR,QAAL,CAAc;AACZc,UAAAA,aAAa,EAAE,mCADH;AAEZ8D,UAAAA,YAAY,EAAE;AAFF,SAAd;AAIA7D,QAAAA,UAAU,CAAC,MAAM;AACf,eAAKf,QAAL,CAAc;AAAEc,YAAAA,aAAa,EAAE,EAAjB;AAAqB8D,YAAAA,YAAY,EAAE;AAAnC,WAAd;AACD,SAFS,EAEP,IAFO,CAAV;AAGD;AACF,KAndkB;;AAAA,SAodnBC,WApdmB,GAodL,MAAM;AAClB,WAAK7E,QAAL,CAAe8E,aAAD,KAAoB;AAChCD,QAAAA,WAAW,EAAE,CAACC,aAAa,CAACD;AADI,OAApB,CAAd;AAGD,KAxdkB;;AAAA,SA0dnBE,uBA1dmB,GA0dQvE,IAAD,IAAWS,KAAD,IAAW;AAC7C,UAAIT,IAAI,KAAK,eAAb,EAA8B;AAC5B,YAAIwE,WAAW,GAAG,EAAlB;;AACA,YAAI,KAAKzF,KAAL,CAAW0F,WAAX,CAAuBC,OAAvB,KAAmC/G,gBAAvC,EAAyD;AACvD6G,UAAAA,WAAW,GAAG,KAAKzF,KAAL,CAAW4F,YAAX,CAAwBC,KAAxB,CAA8BvF,MAA9B,CACXC,OAAD,IAAaA,OAAO,CAACmC,MAAR,IAAkBhB,KAAK,CAACI,MAAN,CAAanC,KADhC,CAAd;AAGD,SAN2B,CAO5B;AACA;AACA;AACA;AACA;;;AAEA,aAAKc,QAAL,CAAc;AACZ,WAACQ,IAAD,GAAQS,KAAK,CAACI,MAAN,CAAanC,KADT;AAEZ8F,UAAAA;AAFY,SAAd;AAID;AACF,KA7ekB;;AAEjB,SAAKrF,KAAL,GAAa;AACX0F,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,eAAe,EAAE,EAFN;AAGXrD,MAAAA,MAAM,EAAE,EAHG;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXI,MAAAA,YAAY,EAAE,IALH;AAMXiD,MAAAA,WAAW,EAAE,IANF;AAOXlC,MAAAA,SAAS,EAAE,IAPA;AAQXO,MAAAA,QAAQ,EAAE,IARC;AASXE,MAAAA,SAAS,EAAE,IATA;AAUX0B,MAAAA,QAAQ,EAAE,EAVC;AAWXC,MAAAA,YAAY,EAAE,EAXH;AAYXC,MAAAA,gBAAgB,EAAE,EAZP;AAaXC,MAAAA,OAAO,EAAE,EAbE;AAcXC,MAAAA,cAAc,EAAE,EAdL;AAeXC,MAAAA,QAAQ,EAAE,EAfC;AAgBXpE,MAAAA,eAAe,EAAE,EAhBN;AAiBXqE,MAAAA,UAAU,EAAE,EAjBD;AAkBX9B,MAAAA,WAAW,EAAE,EAlBF;AAmBX+B,MAAAA,WAAW,EAAE,EAnBF;AAoBXrB,MAAAA,SAAS,EAAE,EApBA;AAqBXsB,MAAAA,UAAU,EAAE,EArBD;AAsBXnE,MAAAA,YAAY,EAAE3D,MAAM,GAAG8D,IAAT,KAAkB,EAAlB,GAAuB,QAtB1B;AAuBXiE,MAAAA,aAAa,EAAE,EAvBJ;AAwBXrI,MAAAA,aAAa,EAAE,EAxBJ;AAyBXsI,MAAAA,iBAAiB,EAAE,EAzBR;AA0BXC,MAAAA,gBAAgB,EAAE,EA1BP;AA2BXC,MAAAA,oBAAoB,EAAE,EA3BX;AA4BXC,MAAAA,MAAM,EAAE,IA5BG;AA6BXxB,MAAAA,WAAW,EAAE,KA7BF;AA8BXyB,MAAAA,aAAa,EAAE,KA9BJ;AA+BXxF,MAAAA,aAAa,EAAE,EA/BJ;AAgCX6D,MAAAA,SAAS,EAAE,EAhCA;AAiCX4B,MAAAA,SAAS,EAAE,EAjCA;AAkCXC,MAAAA,kBAAkB,EAAE,EAlCT;AAmCXtC,MAAAA,eAAe,EAAE,EAnCN;AAoCXuC,MAAAA,aAAa,EAAE,EApCJ;AAqCX3D,MAAAA,YAAY,EAAE,EArCH;AAsCXlD,MAAAA,eAAe,EAAE,EAtCN;AAuCXc,MAAAA,YAAY,EAAE,IAvCH;AAwCX0D,MAAAA,YAAY,EAAE,EAxCH;AAyCXsC,MAAAA,YAAY,EAAE,KAzCH;AA0CXC,MAAAA,YAAY,EAAE,EA1CH;AA2CXjD,MAAAA,WAAW,EAAE,EA3CF;AA4CXhB,MAAAA,cAAc,EAAE,CACd;AACE1D,QAAAA,EAAE,EAAE,CADN;AAEE6D,QAAAA,OAAO,EAAE,CAFX;AAGEQ,QAAAA,SAAS,EAAE,CAHb;AAIEF,QAAAA,QAAQ,EAAE;AAJZ,OADc,CA5CL;AAoDXyD,MAAAA,WAAW,EAAE,EApDF;AAqDXC,MAAAA,YAAY,EAAE,EArDH;AAsDX9G,MAAAA,OAAO,EAAE,IAtDE;AAuDXY,MAAAA,SAAS,EAAE,IAvDA;AAwDXmG,MAAAA,QAAQ,EAAE;AACR1B,QAAAA,KAAK,EAAE,EADC;AAER2B,QAAAA,QAAQ,EAAE,EAFF;AAGRC,QAAAA,OAAO,EAAE,EAHD;AAIRC,QAAAA,UAAU,EAAE,EAJJ;AAKRC,QAAAA,MAAM,EAAE,EALA;AAMRC,QAAAA,SAAS,EAAE,EANH;AAORC,QAAAA,WAAW,EAAE;AAPL,OAxDC;AAiEXC,MAAAA,cAAc,EAAE,EAjEL;AAkEXvF,MAAAA,iBAAiB,EAAE,KAlER;AAmEX3B,MAAAA,cAAc,EAAE,EAnEL;AAoEXiC,MAAAA,OAAO,EAAE,IApEE;AAqEXkF,MAAAA,oBAAoB,EAAE,EArEX;AAsEX5H,MAAAA,sBAAsB,EAAE,EAtEb;AAuEX6H,MAAAA,kBAAkB,EAAE;AAvET,KAAb;AAyEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK/F,YAAL,GAAoB,KAAKA,YAAL,CAAkB+F,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAK9F,wBAAL,GAAgC,KAAKA,wBAAL,CAA8B8F,IAA9B,CAAmC,IAAnC,CAAhC;AACA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBJ,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAK7G,kBAAL,GAA0B,KAAKA,kBAAL,CAAwB6G,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAK1F,gBAAL,GAAwB,KAAKA,gBAAL,CAAsB0F,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKpF,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BoF,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKlF,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BkF,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKhE,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBgE,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAK9D,kBAAL,GAA0B,KAAKA,kBAAL,CAAwB8D,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAK5D,mBAAL,GAA2B,KAAKA,mBAAL,CAAyB4D,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAK1D,qBAAL,GAA6B,KAAKA,qBAAL,CAA2B0D,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKK,UAAL,GAAkB,KAAKA,UAAL,CAAgBL,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKpD,WAAL,GAAmB,KAAKA,WAAL,CAAiBoD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAK5C,WAAL,GAAmB,KAAKA,WAAL,CAAiB4C,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKxD,0BAAL,GAAkC,KAAKA,0BAAL,CAAgCwD,IAAhC,CAAqC,IAArC,CAAlC;AACA,SAAKvH,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BuH,IAA9B,CAAmC,IAAnC,CAAhC;AACA,SAAKtD,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BsD,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKjG,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBiG,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAK1C,uBAAL,GAA+B,KAAKA,uBAAL,CAA6B0C,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKrE,aAAL,GAAqB,KAAKA,aAAL,CAAmBqE,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKlE,YAAL,GAAoB,KAAKA,YAAL,CAAkBkE,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKtF,0BAAL,GAAkC,KAAKA,0BAAL,CAAgCsF,IAAhC,CAAqC,IAArC,CAAlC;AACA,SAAKxH,4BAAL,GAAoC,KAAKA,4BAAL,CAAkCwH,IAAlC,CAAuC,IAAvC,CAApC;AAEA,SAAKjI,0BAAL,GAAkC,KAAKA,0BAAL,CAAgCiI,IAAhC,CAAqC,IAArC,CAAlC;AACD;;AAqDDI,EAAAA,gBAAgB,GAAG;AACjB,SAAK7H,QAAL,CAAe8E,aAAD,KAAoB;AAChCwB,MAAAA,aAAa,EAAE,CAACxB,aAAa,CAACwB;AADE,KAApB,CAAd;AAGD;;AACDoB,EAAAA,YAAY,GAAG;AACb,SAAK1H,QAAL,CAAc;AAAEqG,MAAAA,MAAM,EAAE;AAAV,KAAd;AACD,GArKiC,CAsKlC;AACA;AACA;;;AACAmB,EAAAA,YAAY,GAAG;AACb,SAAKxH,QAAL,CAAe8E,aAAD,KAAoB;AAChCuB,MAAAA,MAAM,EAAE,CAACvB,aAAa,CAACuB;AADS,KAApB,CAAd;AAGD;;AACDsB,EAAAA,YAAY,CAAC1G,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAAC8G,cAAN;AACA,QAAIC,iBAAiB,GAAG,EAAxB;AACA,SAAKrI,KAAL,CAAW+C,cAAX,CAA0BrC,GAA1B,CAA+BP,OAAD,IAAa;AACzC,UAAIA,OAAO,CAACuD,SAAR,IAAqB,CAAzB,EAA4B;AAC1B2E,QAAAA,iBAAiB,CAACvH,IAAlB,CAAuBX,OAAO,CAACuD,SAA/B;AACD;AACF,KAJD;;AAKA,QACE,KAAK1D,KAAL,CAAWsC,MAAX,KAAsB,EAAtB,IACA,KAAKtC,KAAL,CAAW2C,YAAX,KAA4B,EAD5B,IAEC,KAAK3C,KAAL,CAAWmC,iBAAX,KAAiC,KAAjC,IAA0C,KAAKnC,KAAL,CAAWsC,MAAX,KAAsB3D,aAHnE,EAIE;AACA,WAAK0B,QAAL,CAAc;AACZ0G,QAAAA,YAAY,EAAE,IADF;AAEZC,QAAAA,YAAY,EAAE;AAFF,OAAd;AAIA5F,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKf,QAAL,CAAc;AAAE2G,UAAAA,YAAY,EAAE,EAAhB;AAAoBD,UAAAA,YAAY,EAAE;AAAlC,SAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAZD,MAYO;AACL,UAAI,KAAK/G,KAAL,CAAWsC,MAAX,KAAsB5D,eAAtB,IAAyC2J,iBAAiB,CAACC,MAAlB,KAA6B,CAA1E,EAA6E;AAC3E,aAAKjI,QAAL,CAAc;AACZ0G,UAAAA,YAAY,EAAE,IADF;AAEZC,UAAAA,YAAY,EAAE;AAFF,SAAd;AAIA5F,QAAAA,UAAU,CAAC,MAAM;AACf,eAAKf,QAAL,CAAc;AAAE2G,YAAAA,YAAY,EAAE,EAAhB;AAAoBD,YAAAA,YAAY,EAAE;AAAlC,WAAd;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OARD,MAQO;AACL,aAAKc,YAAL;AACA,YAAIU,IAAI,GAAG;AACT1H,UAAAA,IAAI,EAAE,KAAKb,KAAL,CAAW6F,QAAX,CAAoB2C,WAApB,EADG;AAETC,UAAAA,OAAO,EAAE1J,gBAAgB,CAAC,KAAKiB,KAAL,CAAW8F,YAAZ,CAFhB;AAGT4C,UAAAA,MAAM,EAAE,KAAK1I,KAAL,CAAWqG,UAHV;AAITsC,UAAAA,WAAW,EAAE,KAAK3I,KAAL,CAAWkC,YAJf;AAKT0G,UAAAA,YAAY,EAAE,KAAK5I,KAAL,CAAWsG,aALhB;AAMTuC,UAAAA,OAAO,EAAE,KAAK7I,KAAL,CAAWmG,UANX;AAOT2C,UAAAA,WAAW,EAAE,KAAK9I,KAAL,CAAW+F,gBAPf;AAQTgD,UAAAA,KAAK,EAAE,KAAK/I,KAAL,CAAW8B,eART;AASTnB,UAAAA,MAAM,EAAE,IATC;AAUTqI,UAAAA,GAAG,EAAE,KAAKhJ,KAAL,CAAWgG,OAVP;AAWTC,UAAAA,cAAc,EAAE,KAAKjG,KAAL,CAAWiG,cAXlB;AAYTgD,UAAAA,OAAO,EAAE,KAAKjJ,KAAL,CAAWoG,WAZX;AAaT/B,UAAAA,WAAW,EAAE,KAAKrE,KAAL,CAAWqE,WAbf;AAcTU,UAAAA,SAAS,EAAE,KAAK/E,KAAL,CAAW+E,SAdb;AAeTyB,UAAAA,gBAAgB,EAAE,KAAKxG,KAAL,CAAWwG,gBAfpB;AAgBT0C,UAAAA,OAAO,EAAE,QAhBA;AAiBTC,UAAAA,UAAU,EAAE,QAjBH;AAkBTC,UAAAA,KAAK,EAAE,KAAKpJ,KAAL,CAAWkG,QAlBT;AAmBT5D,UAAAA,MAAM,EAAE,KAAKtC,KAAL,CAAWsC,MAnBV;AAoBTiC,UAAAA,eAAe,EAAE,KAAKvE,KAAL,CAAWuE,eApBnB;AAqBT8E,UAAAA,kBAAkB,EAAEhB,iBArBX;AAsBTtH,UAAAA,YAAY,EAAE,KAAKf,KAAL,CAAWe,YAtBhB;AAuBT4B,UAAAA,YAAY,EAAE,KAAK3C,KAAL,CAAW2C,YAvBhB;AAwBT8B,UAAAA,YAAY,EAAE,KAAKzE,KAAL,CAAWyE,YAxBhB;AAyBT6E,UAAAA,QAAQ,EAAE,QAzBD;AA0BTC,UAAAA,KAAK,EAAE,QA1BE;AA2BTnJ,UAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWI,OA3BX;AA4BTY,UAAAA,SAAS,EAAE,KAAKhB,KAAL,CAAWgB,SA5Bb;AA6BTuF,UAAAA,iBAAiB,EAAE,KAAKvG,KAAL,CAAWuG,iBA7BrB;AA8BTtC,UAAAA,QAAQ,EAAE,KAAKjE,KAAL,CAAWiE,QA9BZ;AA+BTE,UAAAA,SAAS,EAAE,KAAKnE,KAAL,CAAWmE,SA/Bb;AAgCT1B,UAAAA,OAAO,EAAE,KAAKzC,KAAL,CAAWyC;AAhCX,SAAX;AAkCA+G,QAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ,EAAkB,mBAAlB;AACA,aAAK3I,KAAL,CAAW1B,QAAX,CAAoBqK,IAApB;AACA,aAAKlI,QAAL,CAAc;AACZiC,UAAAA,MAAM,EAAE,EADI;AAEZC,UAAAA,QAAQ,EAAE,EAFE;AAGZI,UAAAA,YAAY,EAAE,EAHF;AAIZiD,UAAAA,WAAW,EAAE,EAJD;AAKZlC,UAAAA,SAAS,EAAE,EALC;AAMZO,UAAAA,QAAQ,EAAE,IANE;AAOZE,UAAAA,SAAS,EAAE,IAPC;AAQZ0B,UAAAA,QAAQ,EAAE,EARE;AASZC,UAAAA,YAAY,EAAE,EATF;AAUZC,UAAAA,gBAAgB,EAAE,EAVN;AAWZC,UAAAA,OAAO,EAAE,EAXG;AAYZC,UAAAA,cAAc,EAAE,EAZJ;AAaZC,UAAAA,QAAQ,EAAE,EAbE;AAcZpE,UAAAA,eAAe,EAAE,EAdL;AAeZqE,UAAAA,UAAU,EAAE,EAfA;AAgBZ9B,UAAAA,WAAW,EAAE,EAhBD;AAiBZ+B,UAAAA,WAAW,EAAE,EAjBD;AAkBZrB,UAAAA,SAAS,EAAE,EAlBC;AAmBZsB,UAAAA,UAAU,EAAE,EAnBA;AAoBZnE,UAAAA,YAAY,EAAE3D,MAAM,GAAG8D,IAAT,KAAkB,EAAlB,GAAuB,QApBzB;AAqBZiE,UAAAA,aAAa,EAAE,EArBH;AAsBZC,UAAAA,iBAAiB,EAAE,EAtBP;AAuBZC,UAAAA,gBAAgB,EAAE,EAvBN;AAwBZC,UAAAA,oBAAoB,EAAE,EAxBV;AAyBZC,UAAAA,MAAM,EAAE,KAzBI;AA0BZ1B,UAAAA,SAAS,EAAE,EA1BC;AA2BZ4B,UAAAA,SAAS,EAAE,EA3BC;AA4BZrC,UAAAA,eAAe,EAAE,KAAK3E,KAAL,CAAW0F,WAAX,CAAuBoE,gBA5B5B;AA6BZvG,UAAAA,YAAY,EAAE,EA7BF;AA8BZpC,UAAAA,YAAY,EAAE,IA9BF;AA+BZ0D,UAAAA,YAAY,EAAE,EA/BF;AAgCZsC,UAAAA,YAAY,EAAE,KAhCF;AAiCZhD,UAAAA,WAAW,EAAE,EAjCD;AAkCZhB,UAAAA,cAAc,EAAE,CACd;AACE1D,YAAAA,EAAE,EAAE,CADN;AAEE6D,YAAAA,OAAO,EAAE,CAFX;AAGEQ,YAAAA,SAAS,EAAE,CAHb;AAIEF,YAAAA,QAAQ,EAAE;AAJZ,WADc,CAlCJ;AA0CZpD,UAAAA,OAAO,EAAE,IA1CG;AA2CZY,UAAAA,SAAS,EAAE,IA3CC;AA4CZmB,UAAAA,iBAAiB,EAAE,KA5CP;AA6CZM,UAAAA,OAAO,EAAE;AA7CG,SAAd;AA+CD;AACF;AACF;;AAIDwF,EAAAA,aAAa,CAAC3G,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAAC8G,cAAN;AACA,SAAKP,YAAL;AACA,SAAKxH,QAAL,CAAc,EAAd;AACD;;AAqID8H,EAAAA,UAAU,CAACxD,CAAD,EAAI;AACZ6E,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,QAAIE,QAAQ,GAAG,KAAK3J,KAAL,CAAWwG,gBAA1B;AAEA,QAAII,SAAS,GAAG,KAAK5G,KAAL,CAAWyG,oBAA3B;;AACA,QAAI9B,CAAC,CAACjD,MAAF,CAASkD,KAAT,KAAmBC,SAAvB,EAAkC;AAChC,UAAID,KAAK,GAAGgF,MAAM,CAACC,MAAP,CAAclF,CAAC,CAACjD,MAAF,CAASkD,KAAvB,CAAZ;;AACA,UAAI,KAAK5E,KAAL,CAAWyG,oBAAX,CAAgC6B,MAAhC,GAAyC1D,KAAK,CAAC0D,MAA/C,GAAwD,CAA5D,EAA+D;AAC7D1D,QAAAA,KAAK,CAAClE,GAAN,CAAWP,OAAD,IAAa;AACrByG,UAAAA,SAAS,CAAC9F,IAAV,CAAeX,OAAO,CAACU,IAAvB;AACA8I,UAAAA,QAAQ,CAAC7I,IAAT,CAAcX,OAAd;AACD,SAHD;AAIA,aAAKE,QAAL,CAAc;AAAEyJ,UAAAA,gBAAgB,EAAEH,QAApB;AAA8B/C,UAAAA;AAA9B,SAAd;AACD;AACF,KATD,MASO;AACL,WAAKvG,QAAL,CAAc;AACZc,QAAAA,aAAa,EAAE,+BADH;AAEZ4I,QAAAA,YAAY,EAAE;AAFF,OAAd;AAIA3I,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKf,QAAL,CAAc;AAAEc,UAAAA,aAAa,EAAE,EAAjB;AAAqB4I,UAAAA,YAAY,EAAE;AAAnC,SAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF;;AAyCDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACC,aAAV,KAA4B,KAAKtK,KAAL,CAAWsK,aAA3C,EAA0D;AACxD,UAAIjK,eAAe,GAAG,EAAtB;AACAA,MAAAA,eAAe,GAAG,KAAKL,KAAL,CAAWsK,aAAX,CAAyBxJ,GAAzB,CAA8BP,OAAD,IAAa;AAC1D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAvB;AACAD,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACd,EAApB;AACAuB,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACd,EAAvB;AACAuB,QAAAA,MAAM,CAACI,SAAP,GAAmBb,OAAO,CAACgK,gBAA3B;AACAvJ,QAAAA,MAAM,CAACR,OAAP,GAAiBD,OAAO,CAACiK,cAAzB;AACAxJ,QAAAA,MAAM,CAACH,MAAP,GAAgBN,OAAO,CAACkK,KAAxB;AACA,eAAOzJ,MAAP;AACD,OATiB,CAAlB;AAUA,WAAKP,QAAL,CAAc;AAAEJ,QAAAA;AAAF,OAAd;AACD;;AACD,QAAIgK,SAAS,CAACK,cAAV,KAA6B,KAAK1K,KAAL,CAAW0K,cAA5C,EAA4D;AAC1D,UAAI1C,kBAAkB,GAAG,EAAzB;AACAA,MAAAA,kBAAkB,GAAG,KAAKhI,KAAL,CAAW0K,cAAX,CAA0B5J,GAA1B,CAA+BP,OAAD,IAAa;AAC9D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAvB;AACAD,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACd,EAApB;AACAuB,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACd,EAAvB;AACA,eAAOuB,MAAP;AACD,OANoB,CAArB;AAOA,WAAKP,QAAL,CAAc;AAAEuH,QAAAA;AAAF,OAAd;AACD;;AACD,QAAIqC,SAAS,CAACM,MAAV,KAAqB,KAAK3K,KAAL,CAAW2K,MAApC,EAA4C;AAC1C,UAAI5C,oBAAoB,GAAG,EAA3B;AACAA,MAAAA,oBAAoB,GAAG,KAAK/H,KAAL,CAAW2K,MAAX,CAAkB7J,GAAlB,CAAuBP,OAAD,IAAa;AACxD,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAvB;AACAD,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACd,EAApB;AACAuB,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACd,EAAvB;AAEA,eAAOuB,MAAP;AACD,OAPsB,CAAvB;AAQA,WAAKP,QAAL,CAAc;AAAEsH,QAAAA;AAAF,OAAd;AACD;;AACD,QAAIsC,SAAS,CAAC7G,gBAAV,KAA+B,KAAKxD,KAAL,CAAWwD,gBAA9C,EAAgE;AAC9D,UAAI0D,aAAa,GAAG,EAApB;AACAA,MAAAA,aAAa,GAAG,KAAKlH,KAAL,CAAWwD,gBAAX,CAA4B1C,GAA5B,CAAiCP,OAAD,IAAa;AAC3D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACqK,KAAR,CAAc3J,IAA7B;AACAD,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACqK,KAAR,CAAcnL,EAA1B;AACAuB,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACqK,KAAR,CAAcnL,EAA7B;AACA,eAAOuB,MAAP;AACD,OANe,CAAhB;;AAOA,UAAI6J,wBAAwB,GAAGnM,CAAC,CAACoM,MAAF,CAAS5D,aAAT,EAAwB,IAAxB,CAA/B;;AACA,WAAKzG,QAAL,CAAc;AAAEyG,QAAAA,aAAa,EAAE2D;AAAjB,OAAd;AACD;;AAED,QACER,SAAS,CAACzE,YAAV,CAAuBmF,KAAvB,KAAiC,KAAK/K,KAAL,CAAW4F,YAAX,CAAwBmF,KAAzD,IACAV,SAAS,CAACW,cAAV,KAA6B,KAAKhL,KAAL,CAAWgL,cAF1C,EAGE;AACA,UAAIlF,SAAS,GAAG,EAAhB;AAEAtG,MAAAA,cAAc,CAACuL,KAAf,CAAqBjK,GAArB,CAA0BP,OAAD,IAAa;AACpC,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAvB;AACAD,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACd,EAApB;AACAuB,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACd,EAAvB;;AACA,YAAI,KAAKO,KAAL,CAAW0F,WAAX,CAAuBC,OAAvB,IAAkC/G,gBAAtC,EAAwD;AACtDkH,UAAAA,SAAS,CAAC5E,IAAV,CAAeF,MAAf;AACD,SAFD,MAEO;AACL,cAAIiK,SAAS,GAAG,KAAhB;AACAA,UAAAA,SAAS,GAAG5L,gBAAgB,CAACkB,OAAO,CAACX,YAAT,EAAuB,KAAKI,KAAL,CAAWgL,cAAlC,CAA5B;;AACA,cAAIC,SAAJ,EAAe;AACbnF,YAAAA,SAAS,CAAC5E,IAAV,CAAeF,MAAf;AACD;AACF;AACF,OAdD;AAeA,WAAKP,QAAL,CAAc;AAAEqF,QAAAA,SAAS,EAAEA;AAAb,OAAd;AACD;;AAED,QAAIuE,SAAS,CAAC3E,WAAV,CAAsBoE,gBAAtB,KAA2C,KAAK9J,KAAL,CAAW0F,WAAX,CAAuBoE,gBAAtE,EAAwF;AACtF,WAAKrJ,QAAL,CAAc;AACZkE,QAAAA,eAAe,EAAE,KAAK3E,KAAL,CAAW0F,WAAX,CAAuBoE;AAD5B,OAAd;AAGD;;AAED,QAAIO,SAAS,CAACa,cAAV,KAA6B,KAAKlL,KAAL,CAAWkL,cAA5C,EAA4D;AAC1D,UAAIjE,kBAAkB,GAAG,EAAzB;AACAA,MAAAA,kBAAkB,GAAG,KAAKjH,KAAL,CAAWkL,cAAX,CAA0BpK,GAA1B,CAA+BP,OAAD,IAAa;AAC9D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAvB;AACAD,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACd,EAApB;AACAuB,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACd,EAAvB;AACA,eAAOuB,MAAP;AACD,OANoB,CAArB;AAOA,WAAKP,QAAL,CAAc;AAAEwG,QAAAA;AAAF,OAAd;AACD;;AAED,QAAIoD,SAAS,CAACc,eAAV,KAA8B,KAAKnL,KAAL,CAAWmL,eAA7C,EAA8D;AAC5D,UAAIpF,eAAe,GAAG,EAAtB;AACAA,MAAAA,eAAe,GAAG,KAAK/F,KAAL,CAAWmL,eAAX,CAA2BrK,GAA3B,CAAgCP,OAAD,IAAa;AAC5D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAvB;AACAD,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACd,EAApB;AACAuB,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACd,EAAvB;AACAuB,QAAAA,MAAM,CAACoK,SAAP,GAAmB7K,OAAO,CAAC8K,UAA3B;AACArK,QAAAA,MAAM,CAACsK,QAAP,GAAkB/K,OAAO,CAACgL,QAA1B;AACA,eAAOvK,MAAP;AACD,OARiB,CAAlB;AASA,UAAIwK,iBAAiB,GAAG,EAAxB;AACAA,MAAAA,iBAAiB,GAAGnN,aAAa,CAACA,aAAd,CAA4ByC,GAA5B,CAAiCP,OAAD,IAAa;AAC/D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACkL,OAAvB;AACAzK,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACmL,IAApB;AACA1K,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACmL,IAAvB;AACA,eAAO1K,MAAP;AACD,OANmB,CAApB;AAOA,WAAKP,QAAL,CAAc;AACZsF,QAAAA,eAAe,EAAEA,eADL;AAEZ1H,QAAAA,aAAa,EAAEmN;AAFH,OAAd;AAID;;AACD,QAAInB,SAAS,CAACzE,YAAV,KAA2B,KAAK5F,KAAL,CAAW4F,YAA1C,EAAwD;AACtD,UAAIyB,WAAW,GAAG,EAAlB;AACAA,MAAAA,WAAW,GAAG,KAAKrH,KAAL,CAAW4F,YAAX,CAAwB6B,OAAxB,CAAgC3G,GAAhC,CAAqCP,OAAD,IAAa;AAC7D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAR,GAAe,GAAf,GAAqBV,OAAO,CAACsI,OAA5C;AACA7H,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAAC8D,QAAR,CAAiB,CAAjB,CAAZ;AACArD,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAAC8D,QAAR,CAAiB,CAAjB,CAAf;AACA,eAAOrD,MAAP;AACD,OANa,CAAd;AAOA,UAAIsG,YAAY,GAAG,EAAnB;AACAA,MAAAA,YAAY,GAAG,KAAKtH,KAAL,CAAW4F,YAAX,CAAwB4B,QAAxB,CAAiC1G,GAAjC,CAAsCP,OAAD,IAAa;AAC/D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAR,GAAe,GAAf,GAAqBV,OAAO,CAACsI,OAA5C;AACA7H,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACgE,SAAR,CAAkB,CAAlB,CAAZ;AACAvD,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACgE,SAAR,CAAkB,CAAlB,CAAf;AACA,eAAOvD,MAAP;AACD,OANc,CAAf;AAOA,WAAKP,QAAL,CAAc;AAAE4G,QAAAA,WAAF;AAAeC,QAAAA;AAAf,OAAd;AACD;;AACD,QAAI+C,SAAS,CAACzE,YAAV,CAAuBC,KAAvB,KAAiC,KAAK7F,KAAL,CAAW4F,YAAX,CAAwBC,KAA7D,EAAoE;AAClE,WAAKpF,QAAL,CAAc;AAAE8G,QAAAA,QAAQ,EAAE,KAAKvH,KAAL,CAAW4F;AAAvB,OAAd;AACD;;AACD,QAAIyE,SAAS,CAACW,cAAV,KAA6B,KAAKhL,KAAL,CAAWgL,cAA5C,EAA4D;AAC1D,WAAKvK,QAAL,CAAc;AAAEqH,QAAAA,cAAc,EAAE,KAAK9H,KAAL,CAAWgL;AAA7B,OAAd;AACD;AACF;;AACDW,EAAAA,yBAAyB,GAAG;AAC1B,SAAK3L,KAAL,CAAW7B,UAAX;AACA,SAAK6B,KAAL,CAAW5B,kBAAX;AACA,SAAK4B,KAAL,CAAWzB,mBAAX,CACE,KAAKyB,KAAL,CAAW0F,WAAX,CAAuBoE,gBADzB,EAEE,KAAK9J,KAAL,CAAW0F,WAAX,CAAuBkG,cAFzB,EAH0B,CAO1B;;AACA,SAAK5L,KAAL,CAAWT,oBAAX,CACE,KAAKS,KAAL,CAAW0F,WAAX,CAAuBoE,gBADzB,EAEE,KAAK9J,KAAL,CAAW0F,WAAX,CAAuBkG,cAFzB;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAK7L,KAAL,CAAW0K,cAAX,IAA6BzF,SAAjC,EAA4C;AAC1C,UAAI+C,kBAAkB,GAAG,EAAzB;AACAA,MAAAA,kBAAkB,GAAG,KAAKhI,KAAL,CAAW0K,cAAX,CAA0B5J,GAA1B,CAA+BP,OAAD,IAAa;AAC9D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAvB;AACAD,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACd,EAApB;AACAuB,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACd,EAAvB;AACA,eAAOuB,MAAP;AACD,OANoB,CAArB;AAOA,WAAKP,QAAL,CAAc;AAAEuH,QAAAA;AAAF,OAAd;AACD;;AACD,QAAI,KAAKhI,KAAL,CAAW2K,MAAX,IAAqB1F,SAAzB,EAAoC;AAClC,UAAI8C,oBAAoB,GAAG,EAA3B;AACAA,MAAAA,oBAAoB,GAAG,KAAK/H,KAAL,CAAW2K,MAAX,CAAkB7J,GAAlB,CAAuBP,OAAD,IAAa;AACxD,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAvB;AACAD,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACd,EAApB;AACAuB,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACd,EAAvB;AAEA,eAAOuB,MAAP;AACD,OAPsB,CAAvB;AAQA,WAAKP,QAAL,CAAc;AAAEsH,QAAAA;AAAF,OAAd;AACD;;AACD,QAAI,KAAK/H,KAAL,CAAWgL,cAAX,IAA6B/F,SAAjC,EAA4C;AAC1C,WAAKxE,QAAL,CAAc;AAAEqH,QAAAA,cAAc,EAAE,KAAK9H,KAAL,CAAWgL;AAA7B,OAAd;AACD;;AACD,QAAI,KAAKhL,KAAL,CAAWkL,cAAX,IAA6BjG,SAAjC,EAA4C;AAC1C,UAAIgC,kBAAkB,GAAG,EAAzB;AACAA,MAAAA,kBAAkB,GAAG,KAAKjH,KAAL,CAAWkL,cAAX,CAA0BpK,GAA1B,CAA+BP,OAAD,IAAa;AAC9D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAvB;AACAD,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACd,EAApB;AACAuB,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACd,EAAvB;AACA,eAAOuB,MAAP;AACD,OANoB,CAArB;AAOA,WAAKP,QAAL,CAAc;AACZwG,QAAAA,kBADY;AAEZtC,QAAAA,eAAe,EAAE,KAAK3E,KAAL,CAAW0F,WAAX,CAAuBoE;AAF5B,OAAd;AAID;;AACD,QAAI,KAAK9J,KAAL,CAAWsK,aAAX,IAA4BrF,SAAhC,EAA2C;AACzC,UAAI5E,eAAe,GAAG,EAAtB;AACAA,MAAAA,eAAe,GAAG,KAAKL,KAAL,CAAWsK,aAAX,CAAyBxJ,GAAzB,CAA8BP,OAAD,IAAa;AAC1D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAvB;AACAD,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACd,EAApB;AACAuB,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACd,EAAvB;AACAuB,QAAAA,MAAM,CAACI,SAAP,GAAmBb,OAAO,CAACgK,gBAA3B;AACAvJ,QAAAA,MAAM,CAACR,OAAP,GAAiBD,OAAO,CAACiK,cAAzB;AACAxJ,QAAAA,MAAM,CAACH,MAAP,GAAgBN,OAAO,CAACkK,KAAxB;AACA,eAAOzJ,MAAP;AACD,OATiB,CAAlB;AAUA,WAAKP,QAAL,CAAc;AAAEJ,QAAAA;AAAF,OAAd;AACD;;AACD,QAAI,KAAKL,KAAL,CAAWwD,gBAAX,IAA+ByB,SAAnC,EAA8C;AAC5C,UAAIiC,aAAa,GAAG,EAApB;AACAA,MAAAA,aAAa,GAAG,KAAKlH,KAAL,CAAWwD,gBAAX,CAA4B1C,GAA5B,CAAiCP,OAAD,IAAa;AAC3D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACqK,KAAR,CAAc3J,IAA7B;AACAD,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACqK,KAAR,CAAcnL,EAA1B;AACAuB,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACqK,KAAR,CAAcnL,EAA7B;AACA,eAAOuB,MAAP;AACD,OANe,CAAhB;;AAOA,UAAI6J,wBAAwB,GAAGnM,CAAC,CAACoM,MAAF,CAAS5D,aAAT,EAAwB,IAAxB,CAA/B;;AACA,WAAKzG,QAAL,CAAc;AAAEyG,QAAAA,aAAa,EAAE2D;AAAjB,OAAd;AACD;;AACD,QAAI,OAAO,KAAK7K,KAAL,CAAW4F,YAAX,CAAwB6B,OAA/B,IAA0C,WAA9C,EAA2D;AACzD,UAAIJ,WAAW,GAAG,EAAlB;AACAA,MAAAA,WAAW,GAAG,KAAKrH,KAAL,CAAW4F,YAAX,CAAwB6B,OAAxB,CAAgC3G,GAAhC,CAAqCP,OAAD,IAAa;AAC7D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAR,GAAe,GAAf,GAAqBV,OAAO,CAACsI,OAA5C;AACA7H,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACd,EAApB;AACAuB,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACd,EAAvB;AACA,eAAOuB,MAAP;AACD,OANa,CAAd;AAOA,WAAKP,QAAL,CAAc;AAAE4G,QAAAA;AAAF,OAAd;AACD;;AACD,QAAI,KAAKrH,KAAL,CAAW4F,YAAX,CAAwB4B,QAAxB,IAAoCvC,SAAxC,EAAmD;AACjD,UAAIqC,YAAY,GAAG,EAAnB;AACAA,MAAAA,YAAY,GAAG,KAAKtH,KAAL,CAAW4F,YAAX,CAAwB4B,QAAxB,CAAiC1G,GAAjC,CAAsCP,OAAD,IAAa;AAC/D,YAAIS,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACtB,KAAP,GAAea,OAAO,CAACU,IAAR,GAAe,GAAf,GAAqBV,OAAO,CAACsI,OAA5C;AACA7H,QAAAA,MAAM,CAACvB,EAAP,GAAYc,OAAO,CAACgE,SAAR,CAAkB,CAAlB,CAAZ;AACAvD,QAAAA,MAAM,CAACrB,KAAP,GAAeY,OAAO,CAACgE,SAAR,CAAkB,CAAlB,CAAf;AACA,eAAOvD,MAAP;AACD,OANc,CAAf;AAOA,WAAKP,QAAL,CAAc;AAAE6G,QAAAA;AAAF,OAAd;AACD;AACF;;AAEDwE,EAAAA,MAAM,GAAG;AACPlC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzJ,KAAjB,EAAwB,UAAxB;AACA,wBACE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,KAAK,EAAE;AACL2L,QAAAA,UAAU,EAAE,IADP;AAELC,QAAAA,WAAW,EAAE;AAFR,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK5L,KAAL,CAAW+G,YAAX,gBACC,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC,4DAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,4CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmC,KAAK/G,KAAL,CAAWgH,YAA9C,MAJF,CADD,GAQC,EATJ,EAWG,KAAKpH,KAAL,CAAWiM,WAAX,gBACC,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC,4DAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,4CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKjM,KAAL,CAAWkM,OAA7C,MAJF,CADD,GAQC,EAnBJ,EAqBG,KAAKlM,KAAL,CAAWmM,aAAX,gBACC,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC,6DAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,4CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmC,KAAKnM,KAAL,CAAWkM,OAA9C,MAJF,CADD,GAQC,EA7BJ,EA+BG,KAAK9L,KAAL,CAAW0F,SAAX,CAAqB4C,MAArB,GAA8B,CAA9B,gBACC;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAE;AAAE0D,QAAAA,KAAK,EAAE;AAAT,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,+BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE,KAAKnE,YADrB;AAEE,MAAA,YAAY,EAAE,KAAKE,YAFrB;AAGE,MAAA,YAAY,EAAE,KAAKhG,YAHrB;AAIE,MAAA,YAAY,EAAE,KAAKiG,YAJrB;AAKE,MAAA,aAAa,EAAE,KAAKC,aALtB;AAME,MAAA,gBAAgB,EAAE,KAAK7F,gBANzB;AAOE,MAAA,sBAAsB,EAAE,KAAKM,sBAP/B;AAQE,MAAA,qBAAqB,EAAE,KAAKE,qBAR9B;AASE,MAAA,wBAAwB,EAAE,KAAKZ,wBATjC;AAUE,MAAA,mBAAmB,EAAE,KAAK8B,mBAV5B;AAWE,MAAA,kBAAkB,EAAE,KAAKE,kBAX3B;AAYE,MAAA,mBAAmB,EAAE,KAAKE,mBAZ5B;AAaE,MAAA,qBAAqB,EAAE,KAAKE,qBAb9B;AAcE,MAAA,wBAAwB,EAAE,KAAK7D,wBAdjC;AAeE,MAAA,UAAU,EAAE,KAAK4H,UAfnB;AAgBE,MAAA,WAAW,EAAE,KAAKzD,WAhBpB;AAiBE,MAAA,WAAW,EAAE,KAAKQ,WAjBpB;AAkBE,MAAA,0BAA0B,EAAE,KAAKZ,0BAlBnC;AAmBE,MAAA,qBAAqB,EAAE,KAAKE,qBAnB9B;AAoBE,MAAA,iBAAiB,EAAE,KAAK3C,iBApB1B;AAqBE,MAAA,aAAa,EAAE,KAAK4B,aArBtB;AAsBE,MAAA,YAAY,EAAE,KAAKG,YAtBrB;AAuBE,MAAA,WAAW,EAAE,KAAK5D,KAAL,CAAWiH,WAvB1B;AAwBE,MAAA,YAAY,EAAE,KAAKjH,KAAL,CAAWkH,YAxB3B;AAyBE,MAAA,0BAA0B,EAAE,KAAK1E,0BAzBnC;AA0BE,MAAA,MAAM,EAAE,KAAKxC,KA1Bf;AA2BE,MAAA,4BAA4B,EAAE,KAAKM,4BA3BrC;AA4BE,MAAA,0BAA0B,EAAE,KAAKT,0BA5BnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADD,GAoCC,EAnEJ,EA0FG,CAAC,KAAKG,KAAL,CAAWkF,WAAZ,gBACC;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAE;AAAE8G,QAAAA,KAAK,EAAE;AAAT,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,+BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAE,KAAKhM,KAAL,CAAWmH,QADxB;AAEE,MAAA,cAAc,EAAE,KAAKnH,KAAL,CAAW0H,cAF7B;AAGE,MAAA,eAAe,EAAE,KAAK1H,KAAL,CAAWC,eAH9B;AAIE,MAAA,UAAU,EAAE,KAAKD,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADD,GAaC,EAvGJ,CAPF,EAyHG,KAAKJ,KAAL,CAAWqM,WAAX,gBAAyB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,GAA2C,EAzH9C,CADF;AA6HD;;AAr2BiC;;AAw2BpC,MAAMC,eAAe,GAAIlM,KAAD,IAAW;AACjC,SAAO;AACLwF,IAAAA,YAAY,EAAExF,KAAK,CAACwF,YADf;AAELF,IAAAA,WAAW,EAAEtF,KAAK,CAACmM,IAAN,CAAW7G,WAFnB;AAGLwF,IAAAA,cAAc,EAAE9K,KAAK,CAACoM,aAAN,CAAoBC,oBAH/B;AAILN,IAAAA,aAAa,EAAE/L,KAAK,CAACsM,KAAN,CAAYC,OAJtB;AAKLV,IAAAA,WAAW,EAAE7L,KAAK,CAACsM,KAAN,CAAYE,KALpB;AAMLV,IAAAA,OAAO,EAAE9L,KAAK,CAACsM,KAAN,CAAYR,OANhB;AAOLf,IAAAA,eAAe,EAAE/K,KAAK,CAACyM,cAAN,CAAqBC,oBAPjC;AAQLtJ,IAAAA,gBAAgB,EAAEpD,KAAK,CAAC2M,kBAAN,CAAyBvJ,gBARtC;AASL8G,IAAAA,aAAa,EAAElK,KAAK,CAAC4M,oBAAN,CAA2BC,aATrC;AAULjC,IAAAA,cAAc,EAAE5K,KAAK,CAAC8M,iBAAN,CAAwBlC,cAVnC;AAWLqB,IAAAA,WAAW,EAAEjM,KAAK,CAACwF,YAAN,CAAmByG,WAX3B;AAYLc,IAAAA,UAAU,EAAE/M,KAAK,CAACgN,aAAN,CAAoBD,UAZ3B;AAaLxC,IAAAA,MAAM,EAAEvK,KAAK,CAACiN,aAAN,CAAoB1C,MAbvB;AAcLD,IAAAA,cAAc,EAAEtK,KAAK,CAACkN,oBAAN,CAA2B5C;AAdtC,GAAP;AAgBD,CAjBD;;AAmBA,eAAe7M,OAAO,CAACyO,eAAD,EAAkB;AACtCnO,EAAAA,UADsC;AAEtCC,EAAAA,kBAFsC;AAGtCE,EAAAA,QAHsC;AAItCC,EAAAA,mBAJsC;AAKtCgB,EAAAA,oBALsC,CAMtC;;AANsC,CAAlB,CAAP,CAOZM,KAPY,CAAf","sourcesContent":["import React from 'react';\nimport CardBox from '../../../../../components/CardBox/index';\nimport { connect } from 'react-redux';\nimport ArchiveUsers from './ArchiveUsers';\nimport UsersList from './UsersList';\nimport { UncontrolledAlert } from 'reactstrap';\nimport AddUsers from './AddUsers';\nimport IntlMessages from '../../../../../util/IntlMessages';\nimport { getAllRole } from '../../../../../actions/usersAction';\nimport { getSchoolYearEtabs } from '../../../../../actions/SchoolYearEtabAction';\nimport countriesList from '../../../../../constants/const';\nimport {\n  addUsers,\n  getAllUsersForAdmin,\n  // getAllUsersForSuperAdministrator,\n} from '../../../../../actions/usersAction';\nimport Can from '../../../../../can';\nimport { RoleContext } from '../../../../../Context';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport {\n  roleIdSuperAdmin,\n  roleIdAdmin,\n  roleIdProfessor,\n  roleIdStudent,\n  roleIdDirector,\n  roleIdParent,\n  roleIdSupervisor,\n} from '../../../../../config/config';\nimport { toUpperCaseFirst, toLowerCaseFirst } from '../../../../../constants/ReactConst';\nimport { addUserPermitted } from '../../../../../constants/validationFunctions';\nimport LoaderModal from './LoaderModal';\nimport { getAssignementCourse } from '../../../../../actions/AssignementAction';\nconst listRolesUsers = [\n  {\n    id: roleIdAdmin,\n    label: <IntlMessages id={`role.admin`} />,\n    value: roleIdAdmin,\n    labelBackEnd: 'Admin',\n  },\n  {\n    id: roleIdDirector,\n    label: <IntlMessages id={`component.etablishments.info.director`} />,\n    value: roleIdDirector,\n    labelBackEnd: 'Director',\n  },\n  {\n    id: roleIdSupervisor,\n    label: <IntlMessages id={`role.supervisor`} />,\n    value: roleIdSupervisor,\n    labelBackEnd: 'Vie scolaire',\n  },\n  {\n    id: roleIdProfessor,\n    label: <IntlMessages id={`toDo.professor`} />,\n    value: roleIdProfessor,\n    labelBackEnd: 'Professor',\n  },\n  {\n    id: roleIdStudent,\n    label: <IntlMessages id={`userStuppDisplay.Student`} />,\n    value: roleIdStudent,\n    labelBackEnd: 'Student',\n  },\n  {\n    id: roleIdParent,\n    label: <IntlMessages id={`userStuppDisplay.Parent`} />,\n    value: roleIdParent,\n    labelBackEnd: 'Parent',\n  },\n];\n\nclass Users extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listRoles: [],\n      listSchoolYears: [],\n      roleId: '',\n      roleName: '',\n      schoolyearId: null,\n      classRoomId: null,\n      subjectId: null,\n      parentId: null,\n      studentId: null,\n      userName: '',\n      userLastName: '',\n      userNationnality: '',\n      userCIN: '',\n      userIdentifier: '',\n      userMail: '',\n      userPhoneNumber: '',\n      userAdress: '',\n      userCountry: '',\n      userZipCode: '',\n      userPhoto: '',\n      userGender: '',\n      birthdayDate: moment().year() - 18 + '-01-01',\n      birthdayPlace: '',\n      countriesList: [],\n      usefulInformation: '',\n      userPapiersFiles: [],\n      nameUserPapiersFiles: [],\n      isOpen: true,\n      openArchive: false,\n      isOpenArchive: false,\n      messageAlerte: '',\n      photoText: '',\n      nameFiles: [],\n      establishmentsList: [],\n      establishmentId: '',\n      classRoomList: [],\n      subjectsList: [],\n      classForStudent: [],\n      studentClass: null,\n      functionName: '',\n      missingValue: false,\n      alertMessage: '',\n      subjectItem: {},\n      listOfSubjects: [\n        {\n          id: 0,\n          classId: 0,\n          subjectId: 0,\n          subjects: [],\n        },\n      ],\n      parentsList: [],\n      studentsList: [],\n      levelId: null,\n      sectionId: null,\n      userList: {\n        users: [],\n        students: [],\n        parents: [],\n        professors: [],\n        admins: [],\n        directors: [],\n        supervisors: [],\n      },\n      permissionList: [],\n      birthdayDateCheck: false,\n      listGroupClass: [],\n      groupId: null,\n      levelListParticipant: [],\n      classForStudentFiltred: [],\n      subjectModulesList: [],\n    };\n    this.openAddModal = this.openAddModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleArchive = this.handleArchive.bind(this);\n    this.handleChangeBirthdayDate = this.handleChangeBirthdayDate.bind(this);\n    this.openArchiveModal = this.openArchiveModal.bind(this);\n    this.handleChangeAlerte = this.handleChangeAlerte.bind(this);\n    this.handleChangeRole = this.handleChangeRole.bind(this);\n    this.handleChangeSchoolYear = this.handleChangeSchoolYear.bind(this);\n    this.handleChangeClassRoom = this.handleChangeClassRoom.bind(this);\n    this.handleChangeSubject = this.handleChangeSubject.bind(this);\n    this.handleChangeParent = this.handleChangeParent.bind(this);\n    this.handleChangeStudent = this.handleChangeStudent.bind(this);\n    this.handleChangeCountries = this.handleChangeCountries.bind(this);\n    this.attachFile = this.attachFile.bind(this);\n    this.uploadPhoto = this.uploadPhoto.bind(this);\n    this.openArchive = this.openArchive.bind(this);\n    this.handleChangeEstablishments = this.handleChangeEstablishments.bind(this);\n    this.handleChangeStudentClass = this.handleChangeStudentClass.bind(this);\n    this.handleChangeFunctions = this.handleChangeFunctions.bind(this);\n    this.handleChangePhone = this.handleChangePhone.bind(this);\n    this.handleChangeFilterLevel = this.handleChangeFilterLevel.bind(this);\n    this.addNewSubject = this.addNewSubject.bind(this);\n    this.deleteChoice = this.deleteChoice.bind(this);\n    this.handleChangeGroupClassRoom = this.handleChangeGroupClassRoom.bind(this);\n    this.handleChangeLevelParticipant = this.handleChangeLevelParticipant.bind(this);\n\n    this.handleChangeSubjectModules = this.handleChangeSubjectModules.bind(this);\n  }\n  handleChangeSubjectModules = (selectedOption) => {\n    let classForStudentFiltred = [];\n\n    classForStudentFiltred = this.state.classForStudent.filter(\n      (element) => element.levelId == selectedOption.id\n    );\n    this.setState({\n      classForStudentFiltred,\n    });\n  };\n  handleChangeLevelParticipant = (selectedOption) => {\n    let classForStudentFiltred = [];\n\n    classForStudentFiltred = this.state.classForStudent.filter(\n      (element) => element.levelId == selectedOption.id\n    );\n    this.setState({\n      classForStudentFiltred,\n    });\n  };\n  handleChangeStudentClass = (selectedOption) => {\n    let listGroupClass = [];\n    selectedOption.groups.map((element) => {\n      if (element.status) {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        listGroupClass.push(object);\n      }\n    });\n    this.setState({\n      studentClass: selectedOption.id,\n      levelId: selectedOption.levelId,\n      sectionId: selectedOption.sectionId,\n      listGroupClass,\n    });\n  };\n  handleChangeAlerte = (name) => {\n    this.setState({\n      sessionExist: true,\n      messageAlerte: 'Il existe dÃ©ja une licence pour cet etablissement',\n    });\n    setTimeout(() => {\n      this.setState({ sessionExist: false, messageAlerte: '' });\n    }, 4000);\n  };\n  handleChangeEducationType = (name) => (event) => {\n    let obj = JSON.parse(event.target.value);\n\n    this.setState({ educationItem: obj, educationTypeId: obj.id });\n  };\n  openArchiveModal() {\n    this.setState((previousState) => ({\n      isOpenArchive: !previousState.isOpenArchive,\n    }));\n  }\n  handleCancel() {\n    this.setState({ isOpen: false });\n  }\n  // openAddModal() {\n  //   this.setState({ isOpen: true });\n  // }\n  openAddModal() {\n    this.setState((previousState) => ({\n      isOpen: !previousState.isOpen,\n    }));\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    let AssignementIdProf = [];\n    this.state.listOfSubjects.map((element) => {\n      if (element.subjectId != 0) {\n        AssignementIdProf.push(element.subjectId);\n      }\n    });\n    if (\n      this.state.roleId === '' ||\n      this.state.schoolyearId === '' ||\n      (this.state.birthdayDateCheck === false && this.state.roleId === roleIdStudent)\n    ) {\n      this.setState({\n        missingValue: true,\n        alertMessage: 'Il faut remplir les champs obligatoires ',\n      });\n      setTimeout(() => {\n        this.setState({ alertMessage: '', missingValue: false });\n      }, 4000);\n    } else {\n      if (this.state.roleId === roleIdProfessor && AssignementIdProf.length === 0) {\n        this.setState({\n          missingValue: true,\n          alertMessage: 'Il faut affecter une classe et une matiÃ©re pour le professeur ',\n        });\n        setTimeout(() => {\n          this.setState({ alertMessage: '', missingValue: false });\n        }, 4000);\n      } else {\n        this.openAddModal();\n        let data = {\n          name: this.state.userName.toUpperCase(),\n          surname: toUpperCaseFirst(this.state.userLastName),\n          gender: this.state.userGender,\n          dateOfBirth: this.state.birthdayDate,\n          placeOfBirth: this.state.birthdayPlace,\n          address: this.state.userAdress,\n          nationality: this.state.userNationnality,\n          phone: this.state.userPhoneNumber,\n          status: true,\n          cin: this.state.userCIN,\n          userIdentifier: this.state.userIdentifier,\n          zipCode: this.state.userZipCode,\n          userCountry: this.state.userCountry,\n          userPhoto: this.state.userPhoto,\n          userPapiersFiles: this.state.userPapiersFiles,\n          name_ar: 'string',\n          surname_ar: 'string',\n          email: this.state.userMail,\n          roleId: this.state.roleId,\n          establishmentId: this.state.establishmentId,\n          assignClassSubject: AssignementIdProf,\n          studentClass: this.state.studentClass,\n          schoolyearId: this.state.schoolyearId,\n          functionName: this.state.functionName,\n          password: '123456',\n          login: 'login1',\n          levelId: this.state.levelId,\n          sectionId: this.state.sectionId,\n          usefulInformation: this.state.usefulInformation,\n          parentId: this.state.parentId,\n          studentId: this.state.studentId,\n          groupId: this.state.groupId,\n        };\n        console.log(data, 'data avant action');\n        this.props.addUsers(data);\n        this.setState({\n          roleId: '',\n          roleName: '',\n          schoolyearId: '',\n          classRoomId: '',\n          subjectId: '',\n          parentId: null,\n          studentId: null,\n          userName: '',\n          userLastName: '',\n          userNationnality: '',\n          userCIN: '',\n          userIdentifier: '',\n          userMail: '',\n          userPhoneNumber: '',\n          userAdress: '',\n          userCountry: '',\n          userZipCode: '',\n          userPhoto: '',\n          userGender: '',\n          birthdayDate: moment().year() - 18 + '-01-01',\n          birthdayPlace: '',\n          usefulInformation: '',\n          userPapiersFiles: [],\n          nameUserPapiersFiles: [],\n          isOpen: false,\n          photoText: '',\n          nameFiles: [],\n          establishmentId: this.props.userProfile.establishment_id,\n          subjectsList: [],\n          studentClass: null,\n          functionName: '',\n          missingValue: false,\n          subjectItem: {},\n          listOfSubjects: [\n            {\n              id: 0,\n              classId: 0,\n              subjectId: 0,\n              subjects: [],\n            },\n          ],\n          levelId: null,\n          sectionId: null,\n          birthdayDateCheck: false,\n          groupId: null,\n        });\n      }\n    }\n  }\n  handleChangePhone = (value) => {\n    this.setState({ userPhoneNumber: value });\n  };\n  handleArchive(event) {\n    event.preventDefault();\n    this.openAddModal();\n    this.setState({});\n  }\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n  handleChangeBirthdayDate = (date) => {\n    this.setState({ birthdayDate: date, birthdayDateCheck: true });\n  };\n  handleChangeRole = (selectedOption) => {\n    if (selectedOption.id == roleIdStudent) {\n      this.setState({\n        birthdayDate: moment().year() - 6 + '-01-01',\n      });\n    }\n    this.setState({\n      roleId: selectedOption.id,\n      roleName: selectedOption.label,\n    });\n  };\n  handleChangeGroupClassRoom = (selectedOption) => {\n    this.setState({ groupId: selectedOption.id });\n  };\n  handleChangeSchoolYear = (selectedOption) => {\n    this.setState({ schoolyearId: selectedOption.id });\n  };\n  handleChangeClassRoom = (selectedOption, name, index) => {\n    if (name === 'classId') {\n      // let subjectsList = [];\n      // this.props.courseAssignment.map((element) => {\n      //   if (element.fk_id_class_v4 === selectedOption.id) {\n      //     var object = {};\n      //     object.label = element.subject.name;\n      //     object.id = element.id;\n      //     object.value = element.id;\n      //     object.fk_id_subjects_module_v4 =\n      //       element.subject.fk_id_subjects_module_v4;\n\n      //     subjectsList.push(object);\n      //   }\n      // });\n      // let newListSubjects = this.state.listOfSubjects.map((objSubject, i) =>\n      //   i === index\n      //     ? {\n      //         ...objSubject,\n      //         [name]: selectedOption.value,\n      //         subjects: subjectsList,\n      //       }\n      //     : objSubject\n      // );\n      // this.setState({ listOfSubjects: newListSubjects });\n      let newListSubjects = this.state.listOfSubjects.map((objSubject, i) =>\n        i === index ? { ...objSubject, [name]: selectedOption.value } : objSubject\n      );\n      this.setState({ listOfSubjects: newListSubjects });\n    } else if (name === 'subjectId') {\n      let newListSubjects = this.state.listOfSubjects.map((objSubject, i) =>\n        i === index ? { ...objSubject, [name]: selectedOption.value } : objSubject\n      );\n      this.setState({ listOfSubjects: newListSubjects });\n    } else if (name === 'subjectModuleId') {\n      let classId = this.state.listOfSubjects[index].classId;\n      let subjectsList = [];\n      this.props.courseAssignment.map((element) => {\n        if (\n          element.fk_id_class_v4 === classId &&\n          element.subject.fk_id_subjects_module_v4 == selectedOption.value\n        ) {\n          var object = {};\n          object.label = element.subject.name;\n          object.id = element.id;\n          object.value = element.id;\n          object.fk_id_subjects_module_v4 = element.subject.fk_id_subjects_module_v4;\n\n          subjectsList.push(object);\n        }\n      });\n      let newListSubjects = this.state.listOfSubjects.map((objSubject, i) =>\n        i === index\n          ? {\n              ...objSubject,\n              subjects: subjectsList,\n            }\n          : objSubject\n      );\n      this.setState({ listOfSubjects: newListSubjects });\n    }\n  };\n  addNewSubject = (index) => {\n    let listOfSubjects = [];\n    this.state.listOfSubjects.map((element) => {\n      listOfSubjects.push({\n        id: element.id,\n        classId: element.classId,\n        subjectId: element.subjectId,\n        subjects: element.subjects,\n        isAdded: true,\n      });\n    });\n    listOfSubjects.push({\n      id: index,\n      classId: 0,\n      subjectId: 0,\n      subjects: [],\n      isAdded: false,\n    });\n\n    this.setState({ listOfSubjects });\n  };\n  deleteChoice = (index) => {\n    let listOfSubjectsClasses = this.state.listOfSubjects.filter((element) => element.id !== index);\n    this.setState({ listOfSubjects: listOfSubjectsClasses });\n  };\n\n  handleChangeSubject = (selectedOption) => {\n    this.setState({\n      subjectId: selectedOption.id,\n      subjectItem: selectedOption,\n    });\n  };\n  handleChangeParent = (selectedOption) => {\n    this.setState({ parentId: selectedOption.id });\n  };\n  handleChangeStudent = (selectedOption) => {\n    this.setState({ studentId: selectedOption.id });\n  };\n  handleChangeCountries = (selectedOption) => {\n    this.setState({ userCountry: selectedOption.label });\n  };\n  handleChangeEstablishments = (selectedOption) => {\n    this.setState({ establishmentId: selectedOption.id });\n  };\n  handleChangeFunctions = (selectedOption) => {\n    this.setState({ functionName: selectedOption.label });\n  };\n  attachFile(e) {\n    console.log('eeeeeee');\n    var oldFiles = this.state.userPapiersFiles;\n\n    var nameFiles = this.state.nameUserPapiersFiles;\n    if (e.target.files !== undefined) {\n      var files = Object.values(e.target.files);\n      if (this.state.nameUserPapiersFiles.length + files.length < 6) {\n        files.map((element) => {\n          nameFiles.push(element.name);\n          oldFiles.push(element);\n        });\n        this.setState({ userPapiersfiles: oldFiles, nameFiles });\n      }\n    } else {\n      this.setState({\n        messageAlerte: 'vous avez dÃ©passer 5 fichiers',\n        alerteStatus: true,\n      });\n      setTimeout(() => {\n        this.setState({ messageAlerte: '', alerteStatus: false });\n      }, 4000);\n    }\n  }\n  uploadPhoto = (e) => {\n    if (e.target.files[0] !== undefined) {\n      let file = e.target.files[0];\n      this.setState({ userPhoto: file, photoText: file.name });\n    } else {\n      this.setState({\n        messageAlerte: \"Vous n'avez pas choisir une photo\",\n        alerteFiltre: true,\n      });\n      setTimeout(() => {\n        this.setState({ messageAlerte: '', alerteFiltre: false });\n      }, 4000);\n    }\n  };\n  openArchive = () => {\n    this.setState((previousState) => ({\n      openArchive: !previousState.openArchive,\n    }));\n  };\n\n  handleChangeFilterLevel = (name) => (event) => {\n    if (name === 'filterLevelId') {\n      let filterLevel = [];\n      if (this.props.userProfile.role_id === roleIdSuperAdmin) {\n        filterLevel = this.props.usersReducer.users.filter(\n          (element) => element.roleId == event.target.value\n        );\n      }\n      //  else {\n      //   filterClasses = this.props.ClassSettings.filter(\n      //     (element) => element.fk_id_level_v4 == event.target.value\n      //   );\n      // }\n\n      this.setState({\n        [name]: event.target.value,\n        filterLevel,\n      });\n    }\n  };\n  componentDidUpdate(prevProps) {\n    if (prevProps.ClassSettings !== this.props.ClassSettings) {\n      let classForStudent = [];\n      classForStudent = this.props.ClassSettings.map((element) => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        object.sectionId = element.fk_id_section_v4;\n        object.levelId = element.fk_id_level_v4;\n        object.groups = element.group;\n        return object;\n      });\n      this.setState({ classForStudent });\n    }\n    if (prevProps.subjectModules !== this.props.subjectModules) {\n      let subjectModulesList = [];\n      subjectModulesList = this.props.subjectModules.map((element) => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        return object;\n      });\n      this.setState({ subjectModulesList });\n    }\n    if (prevProps.levels !== this.props.levels) {\n      let levelListParticipant = [];\n      levelListParticipant = this.props.levels.map((element) => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n\n        return object;\n      });\n      this.setState({ levelListParticipant });\n    }\n    if (prevProps.courseAssignment !== this.props.courseAssignment) {\n      let classRoomList = [];\n      classRoomList = this.props.courseAssignment.map((element) => {\n        var object = {};\n        object.label = element.class.name;\n        object.id = element.class.id;\n        object.value = element.class.id;\n        return object;\n      });\n      let classRoomListFiltredByID = _.uniqBy(classRoomList, 'id');\n      this.setState({ classRoomList: classRoomListFiltredByID });\n    }\n\n    if (\n      prevProps.usersReducer.roles !== this.props.usersReducer.roles ||\n      prevProps.userPermission !== this.props.userPermission\n    ) {\n      let listRoles = [];\n\n      listRolesUsers.roles.map((element) => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        if (this.props.userProfile.role_id == roleIdSuperAdmin) {\n          listRoles.push(object);\n        } else {\n          let permitted = false;\n          permitted = addUserPermitted(element.labelBackEnd, this.props.userPermission);\n          if (permitted) {\n            listRoles.push(object);\n          }\n        }\n      });\n      this.setState({ listRoles: listRoles });\n    }\n\n    if (prevProps.userProfile.establishment_id !== this.props.userProfile.establishment_id) {\n      this.setState({\n        establishmentId: this.props.userProfile.establishment_id,\n      });\n    }\n\n    if (prevProps.establishments !== this.props.establishments) {\n      let establishmentsList = [];\n      establishmentsList = this.props.establishments.map((element) => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        return object;\n      });\n      this.setState({ establishmentsList });\n    }\n\n    if (prevProps.schoolYearEtabs !== this.props.schoolYearEtabs) {\n      let listSchoolYears = [];\n      listSchoolYears = this.props.schoolYearEtabs.map((element) => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        object.startDate = element.start_date;\n        object.endtDate = element.end_date;\n        return object;\n      });\n      let countriesListUser = [];\n      countriesListUser = countriesList.countriesList.map((element) => {\n        var object = {};\n        object.label = element.name_fr;\n        object.id = element.code;\n        object.value = element.code;\n        return object;\n      });\n      this.setState({\n        listSchoolYears: listSchoolYears,\n        countriesList: countriesListUser,\n      });\n    }\n    if (prevProps.usersReducer !== this.props.usersReducer) {\n      let parentsList = [];\n      parentsList = this.props.usersReducer.parents.map((element) => {\n        var object = {};\n        object.label = element.name + ' ' + element.surname;\n        object.id = element.parentId[0];\n        object.value = element.parentId[0];\n        return object;\n      });\n      let studentsList = [];\n      studentsList = this.props.usersReducer.students.map((element) => {\n        var object = {};\n        object.label = element.name + ' ' + element.surname;\n        object.id = element.studentId[0];\n        object.value = element.studentId[0];\n        return object;\n      });\n      this.setState({ parentsList, studentsList });\n    }\n    if (prevProps.usersReducer.users !== this.props.usersReducer.users) {\n      this.setState({ userList: this.props.usersReducer });\n    }\n    if (prevProps.userPermission !== this.props.userPermission) {\n      this.setState({ permissionList: this.props.userPermission });\n    }\n  }\n  UNSAFE_componentWillMount() {\n    this.props.getAllRole();\n    this.props.getSchoolYearEtabs();\n    this.props.getAllUsersForAdmin(\n      this.props.userProfile.establishment_id,\n      this.props.userProfile.school_year_id\n    );\n    // this.props.getAllUsersForSuperAdministrator();\n    this.props.getAssignementCourse(\n      this.props.userProfile.establishment_id,\n      this.props.userProfile.school_year_id\n    );\n  }\n  componentDidMount() {\n    if (this.props.subjectModules != undefined) {\n      let subjectModulesList = [];\n      subjectModulesList = this.props.subjectModules.map((element) => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        return object;\n      });\n      this.setState({ subjectModulesList });\n    }\n    if (this.props.levels != undefined) {\n      let levelListParticipant = [];\n      levelListParticipant = this.props.levels.map((element) => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n\n        return object;\n      });\n      this.setState({ levelListParticipant });\n    }\n    if (this.props.userPermission != undefined) {\n      this.setState({ permissionList: this.props.userPermission });\n    }\n    if (this.props.establishments != undefined) {\n      let establishmentsList = [];\n      establishmentsList = this.props.establishments.map((element) => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        return object;\n      });\n      this.setState({\n        establishmentsList,\n        establishmentId: this.props.userProfile.establishment_id,\n      });\n    }\n    if (this.props.ClassSettings != undefined) {\n      let classForStudent = [];\n      classForStudent = this.props.ClassSettings.map((element) => {\n        var object = {};\n        object.label = element.name;\n        object.id = element.id;\n        object.value = element.id;\n        object.sectionId = element.fk_id_section_v4;\n        object.levelId = element.fk_id_level_v4;\n        object.groups = element.group;\n        return object;\n      });\n      this.setState({ classForStudent });\n    }\n    if (this.props.courseAssignment != undefined) {\n      let classRoomList = [];\n      classRoomList = this.props.courseAssignment.map((element) => {\n        var object = {};\n        object.label = element.class.name;\n        object.id = element.class.id;\n        object.value = element.class.id;\n        return object;\n      });\n      let classRoomListFiltredByID = _.uniqBy(classRoomList, 'id');\n      this.setState({ classRoomList: classRoomListFiltredByID });\n    }\n    if (typeof this.props.usersReducer.parents != 'undefined') {\n      let parentsList = [];\n      parentsList = this.props.usersReducer.parents.map((element) => {\n        var object = {};\n        object.label = element.name + ' ' + element.surname;\n        object.id = element.id;\n        object.value = element.id;\n        return object;\n      });\n      this.setState({ parentsList });\n    }\n    if (this.props.usersReducer.students != undefined) {\n      let studentsList = [];\n      studentsList = this.props.usersReducer.students.map((element) => {\n        var object = {};\n        object.label = element.name + ' ' + element.surname;\n        object.id = element.studentId[0];\n        object.value = element.studentId[0];\n        return object;\n      });\n      this.setState({ studentsList });\n    }\n  }\n\n  render() {\n    console.log(this.state, 'staaaate');\n    return (\n      <div\n        className=\"app-wrapper\"\n        style={{\n          marginLeft: '5%',\n          marginRight: '10%',\n        }}\n      >\n        <div className=\"  d-flex flex-column mb-3\">\n          {this.state.missingValue ? (\n            <UncontrolledAlert className=\"alert-addon-card bg-success bg-danger text-white shadow-lg\">\n              <span className=\"icon-addon alert-addon\">\n                <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n              </span>\n              <span className=\"d-inline-block\"> {this.state.alertMessage} </span>\n            </UncontrolledAlert>\n          ) : (\n            ''\n          )}\n          {this.props.errorStatus ? (\n            <UncontrolledAlert className=\"alert-addon-card bg-success bg-danger text-white shadow-lg\">\n              <span className=\"icon-addon alert-addon\">\n                <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n              </span>\n              <span className=\"d-inline-block\">{this.props.message} </span>\n            </UncontrolledAlert>\n          ) : (\n            ''\n          )}\n          {this.props.successStatus ? (\n            <UncontrolledAlert className=\"alert-addon-card bg-success bg-success text-white shadow-lg\">\n              <span className=\"icon-addon alert-addon\">\n                <i className=\"zmdi zmdi-cloud-done zmdi-hc-fw zmdi-hc-lg\" />\n              </span>\n              <span className=\"d-inline-block\"> {this.props.message} </span>\n            </UncontrolledAlert>\n          ) : (\n            ''\n          )}\n          {this.state.listRoles.length > 0 ? (\n            <div className=\" bd-highlight\" style={{ width: '90%' }}>\n              <CardBox styleName=\"col-lg-12 col-sm-12 col-md-12\">\n                <AddUsers\n                  openAddModal={this.openAddModal}\n                  handleCancel={this.handleCancel}\n                  handleChange={this.handleChange}\n                  handleSubmit={this.handleSubmit}\n                  handleArchive={this.handleArchive}\n                  handleChangeRole={this.handleChangeRole}\n                  handleChangeSchoolYear={this.handleChangeSchoolYear}\n                  handleChangeClassRoom={this.handleChangeClassRoom}\n                  handleChangeBirthdayDate={this.handleChangeBirthdayDate}\n                  handleChangeSubject={this.handleChangeSubject}\n                  handleChangeParent={this.handleChangeParent}\n                  handleChangeStudent={this.handleChangeStudent}\n                  handleChangeCountries={this.handleChangeCountries}\n                  handleChangeStudentClass={this.handleChangeStudentClass}\n                  attachFile={this.attachFile}\n                  uploadPhoto={this.uploadPhoto}\n                  openArchive={this.openArchive}\n                  handleChangeEstablishments={this.handleChangeEstablishments}\n                  handleChangeFunctions={this.handleChangeFunctions}\n                  handleChangePhone={this.handleChangePhone}\n                  addNewSubject={this.addNewSubject}\n                  deleteChoice={this.deleteChoice}\n                  parentsList={this.state.parentsList}\n                  studentsList={this.state.studentsList}\n                  handleChangeGroupClassRoom={this.handleChangeGroupClassRoom}\n                  values={this.state}\n                  handleChangeLevelParticipant={this.handleChangeLevelParticipant}\n                  handleChangeSubjectModules={this.handleChangeSubjectModules}\n                />\n              </CardBox>\n            </div>\n          ) : (\n            ''\n          )}\n\n          {/* <RoleContext.Consumer>\n            {({ role }) => (\n              <Can\n                role={role}\n                perform=\"add-service\"\n                yes={() => (\n                  <>\n                    {this.state.openArchive ? (\n                      <div>\n                        <ArchiveUsers openArchive={this.openArchive} />\n                      </div>\n                    ) : (\n                      ''\n                    )}\n                  </>\n                )}\n                establishements\n              />\n            )}\n          </RoleContext.Consumer> */}\n          {!this.state.openArchive ? (\n            <div className=\" bd-highlight\" style={{ width: '90%' }}>\n              <CardBox styleName=\"col-lg-12 col-sm-12 col-md-12\">\n                {/* <UsersList usersList={this.props.usersReducer} /> */}\n                <UsersList\n                  usersList={this.state.userList}\n                  permissionList={this.state.permissionList}\n                  listClassFilter={this.state.classForStudent}\n                  usefulData={this.state}\n                />\n              </CardBox>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n        {/* <div className=\" bd-highlight\" style={{ width: '90%' }}>\n          <CardBox styleName=\"col-lg-12 col-sm-12 col-md-12\">\n            <ArchiveUsers\n              isOpenArchive={this.state.isOpenArchive}\n              openArchiveModal={this.openArchiveModal}\n            />\n          </CardBox>\n        </div> */}\n        {this.props.userLoading ? <LoaderModal /> : ''}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    usersReducer: state.usersReducer,\n    userProfile: state.auth.userProfile,\n    establishments: state.establishment.remoteEstablishments,\n    successStatus: state.alert.success,\n    errorStatus: state.alert.error,\n    message: state.alert.message,\n    schoolYearEtabs: state.schoolYearEtab.remoteSchoolYearEtab,\n    courseAssignment: state.AssignementReducer.courseAssignment,\n    ClassSettings: state.ClassSettingsReducer.classSettings,\n    userPermission: state.PermissionReducer.userPermission,\n    userLoading: state.usersReducer.userLoading,\n    groupsList: state.GroupsReducer.groupsList,\n    levels: state.levelsReducer.levels,\n    subjectModules: state.subjectModuleReducer.subjectModules,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllRole,\n  getSchoolYearEtabs,\n  addUsers,\n  getAllUsersForAdmin,\n  getAssignementCourse,\n  // getAllUsersForSuperAdministrator,\n})(Users);\n"]},"metadata":{},"sourceType":"module"}